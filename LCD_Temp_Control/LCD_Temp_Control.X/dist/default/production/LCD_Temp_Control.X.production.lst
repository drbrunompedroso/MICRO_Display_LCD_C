

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Fri Jun 03 21:37:33 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text45,global,reloc=2,class=CODE,delta=1
    58                           	psect	text46,global,reloc=2,class=CODE,delta=1
    59                           	psect	text47,global,reloc=2,class=CODE,delta=1
    60                           	psect	text48,global,reloc=2,class=CODE,delta=1
    61                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    62                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    63                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    64                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    65  0000                     
    66                           ; Version 2.40
    67                           ; Generated 17/11/2021 GMT
    68                           ; 
    69                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    70                           ; All rights reserved.
    71                           ; 
    72                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    73                           ; 
    74                           ; Redistribution and use in source and binary forms, with or without modification, are
    75                           ; permitted provided that the following conditions are met:
    76                           ; 
    77                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    78                           ;        conditions and the following disclaimer.
    79                           ; 
    80                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    81                           ;        of conditions and the following disclaimer in the documentation and/or other
    82                           ;        materials provided with the distribution. Publication is not required when
    83                           ;        this file is used in an embedded application.
    84                           ; 
    85                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    86                           ;        software without specific prior written permission.
    87                           ; 
    88                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    89                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    90                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    91                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    92                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    93                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    94                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    95                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    96                           ; 
    97                           ; 
    98                           ; Code-generator required, PIC18F4520 Definitions
    99                           ; 
   100                           ; SFR Addresses
   101  0000                     _ADRESL	set	4035
   102  0000                     _ADRESH	set	4036
   103  0000                     _PORTDbits	set	3971
   104  0000                     _PORTCbits	set	3970
   105  0000                     _ADCON0bits	set	4034
   106  0000                     _PORTBbits	set	3969
   107  0000                     _PORTC	set	3970
   108  0000                     _TRISB	set	3987
   109  0000                     _OSCTUNE	set	3995
   110  0000                     _OSCCON	set	4051
   111  0000                     _ADCON2	set	4032
   112  0000                     _ADCON1	set	4033
   113  0000                     _ADCON0	set	4034
   114  0000                     _TRISEbits	set	3990
   115  0000                     _TRISD	set	3989
   116  0000                     _TRISC	set	3988
   117  0000                     _PORTEbits	set	3972
   118  0000                     _PORTD	set	3971
   119                           
   120                           	psect	smallconst
   121  000600                     __psmallconst:
   122                           	callstack 0
   123  000600  00                 	db	0
   124  000601                     STR_13:
   125  000601  20                 	db	32
   126  000602  20                 	db	32
   127  000603  20                 	db	32
   128  000604  20                 	db	32
   129  000605  20                 	db	32
   130  000606  20                 	db	32
   131  000607  20                 	db	32
   132  000608  20                 	db	32
   133  000609  20                 	db	32
   134  00060A  20                 	db	32
   135  00060B  20                 	db	32
   136  00060C  20                 	db	32
   137  00060D  20                 	db	32
   138  00060E  20                 	db	32
   139  00060F  20                 	db	32
   140  000610  00                 	db	0
   141  000611                     STR_1:
   142  000611  25                 	db	37
   143  000612  30                 	db	48	;'0'
   144  000613  2E                 	db	46
   145  000614  31                 	db	49	;'1'
   146  000615  66                 	db	102	;'f'
   147  000616  25                 	db	37
   148  000617  63                 	db	99	;'c'
   149  000618  43                 	db	67	;'C'
   150  000619  20                 	db	32
   151  00061A  20                 	db	32
   152  00061B  20                 	db	32
   153  00061C  20                 	db	32
   154  00061D  20                 	db	32
   155  00061E  20                 	db	32
   156  00061F  00                 	db	0
   157  000620                     STR_2:
   158  000620  25                 	db	37
   159  000621  30                 	db	48	;'0'
   160  000622  2E                 	db	46
   161  000623  31                 	db	49	;'1'
   162  000624  66                 	db	102	;'f'
   163  000625  25                 	db	37
   164  000626  63                 	db	99	;'c'
   165  000627  20                 	db	32
   166  000628  20                 	db	32
   167  000629  20                 	db	32
   168  00062A  20                 	db	32
   169  00062B  20                 	db	32
   170  00062C  20                 	db	32
   171  00062D  00                 	db	0
   172  00062E                     STR_3:
   173  00062E  54                 	db	84	;'T'
   174  00062F  65                 	db	101	;'e'
   175  000630  6D                 	db	109	;'m'
   176  000631  70                 	db	112	;'p'
   177  000632  3A                 	db	58	;':'
   178  000633  20                 	db	32
   179  000634  20                 	db	32
   180  000635  20                 	db	32
   181  000636  20                 	db	32
   182  000637  00                 	db	0
   183  000638                     STR_4:
   184  000638  50                 	db	80	;'P'
   185  000639  65                 	db	101	;'e'
   186  00063A  72                 	db	114	;'r'
   187  00063B  63                 	db	99	;'c'
   188  00063C  65                 	db	101	;'e'
   189  00063D  6E                 	db	110	;'n'
   190  00063E  74                 	db	116	;'t'
   191  00063F  3A                 	db	58	;':'
   192  000640  00                 	db	0
   193  000641                     STR_9:
   194  000641  20                 	db	32
   195  000642  46                 	db	70	;'F'
   196  000643  41                 	db	65	;'A'
   197  000644  4E                 	db	78	;'N'
   198  000645  20                 	db	32
   199  000646  32                 	db	50	;'2'
   200  000647  3A                 	db	58	;':'
   201  000648  00                 	db	0
   202  000649                     STR_8:
   203  000649  46                 	db	70	;'F'
   204  00064A  41                 	db	65	;'A'
   205  00064B  4E                 	db	78	;'N'
   206  00064C  20                 	db	32
   207  00064D  31                 	db	49	;'1'
   208  00064E  3A                 	db	58	;':'
   209  00064F  00                 	db	0
   210  000650                     STR_7:
   211  000650  25                 	db	37
   212  000651  30                 	db	48	;'0'
   213  000652  31                 	db	49	;'1'
   214  000653  64                 	db	100	;'d'
   215  000654  20                 	db	32
   216  000655  00                 	db	0
   217  000656                     STR_11:
   218  000656  52                 	db	82	;'R'
   219  000657  45                 	db	69	;'E'
   220  000658  53                 	db	83	;'S'
   221  000659  3A                 	db	58	;':'
   222  00065A  00                 	db	0
   223  00065B                     STR_5:
   224  00065B  25                 	db	37
   225  00065C  30                 	db	48	;'0'
   226  00065D  31                 	db	49	;'1'
   227  00065E  64                 	db	100	;'d'
   228  00065F  00                 	db	0
   229  000660                     STR_15:
   230  000660  49                 	db	73	;'I'
   231  000661  4E                 	db	78	;'N'
   232  000662  46                 	db	70	;'F'
   233  000663  00                 	db	0
   234  000664                     STR_19:
   235  000664  4E                 	db	78	;'N'
   236  000665  41                 	db	65	;'A'
   237  000666  4E                 	db	78	;'N'
   238  000667  00                 	db	0
   239  000668                     STR_16:
   240  000668  69                 	db	105	;'i'
   241  000669  6E                 	db	110	;'n'
   242  00066A  66                 	db	102	;'f'
   243  00066B  00                 	db	0
   244  00066C                     STR_20:
   245  00066C  6E                 	db	110	;'n'
   246  00066D  61                 	db	97	;'a'
   247  00066E  6E                 	db	110	;'n'
   248  00066F  00                 	db	0
   249  000670                     STR_23:
   250  000670  6C                 	db	108	;'l'
   251  000671  66                 	db	102	;'f'
   252  000672  00                 	db	0
   253  000673  00                 	db	0	; dummy byte at the end
   254  0000                     
   255                           ; #config settings
   256                           
   257                           	psect	cinit
   258  00435E                     __pcinit:
   259                           	callstack 0
   260  00435E                     start_initialization:
   261                           	callstack 0
   262  00435E                     __initialization:
   263                           	callstack 0
   264                           
   265                           ; Clear objects allocated to BANK1 (128 bytes)
   266  00435E  EE01  F000         	lfsr	0,__pbssBANK1
   267  004362  0E80               	movlw	128
   268  004364                     clear_0:
   269  004364  6AEE               	clrf	postinc0,c
   270  004366  06E8               	decf	wreg,f,c
   271  004368  E1FD               	bnz	clear_0
   272                           
   273                           ; Clear objects allocated to BANK0 (38 bytes)
   274  00436A  EE00  F0D5         	lfsr	0,__pbssBANK0
   275  00436E  0E26               	movlw	38
   276  004370                     clear_1:
   277  004370  6AEE               	clrf	postinc0,c
   278  004372  06E8               	decf	wreg,f,c
   279  004374  E1FD               	bnz	clear_1
   280                           
   281                           ; Clear objects allocated to COMRAM (6 bytes)
   282  004376  6A7E               	clrf	(__pbssCOMRAM+5)& (0+255),c
   283  004378  6A7D               	clrf	(__pbssCOMRAM+4)& (0+255),c
   284  00437A  6A7C               	clrf	(__pbssCOMRAM+3)& (0+255),c
   285  00437C  6A7B               	clrf	(__pbssCOMRAM+2)& (0+255),c
   286  00437E  6A7A               	clrf	(__pbssCOMRAM+1)& (0+255),c
   287  004380  6A79               	clrf	__pbssCOMRAM& (0+255),c
   288  004382                     end_of_initialization:
   289                           	callstack 0
   290  004382                     __end_of__initialization:
   291                           	callstack 0
   292  004382  0E00               	movlw	low (__Lmediumconst shr (0+16))
   293  004384  6EF8               	movwf	tblptru,c
   294  004386  0100               	movlb	0
   295  004388  EF07  F021         	goto	_main	;jump to C main() function
   296                           
   297                           	psect	bssCOMRAM
   298  000079                     __pbssCOMRAM:
   299                           	callstack 0
   300  000079                     _width:
   301                           	callstack 0
   302  000079                     	ds	2
   303  00007B                     _prec:
   304                           	callstack 0
   305  00007B                     	ds	2
   306  00007D                     _flags:
   307                           	callstack 0
   308  00007D                     	ds	2
   309                           
   310                           	psect	bssBANK0
   311  0000D5                     __pbssBANK0:
   312                           	callstack 0
   313  0000D5                     floorf@F526:
   314                           	callstack 0
   315  0000D5                     	ds	4
   316  0000D9                     ___fpclassifyf@F465:
   317                           	callstack 0
   318  0000D9                     	ds	4
   319  0000DD                     _VoltageSensor:
   320                           	callstack 0
   321  0000DD                     	ds	4
   322  0000E1                     _TempPercent:
   323                           	callstack 0
   324  0000E1                     	ds	4
   325  0000E5                     _TempSensor:
   326                           	callstack 0
   327  0000E5                     	ds	4
   328  0000E9                     _nout:
   329                           	callstack 0
   330  0000E9                     	ds	2
   331  0000EB                     _RES:
   332                           	callstack 0
   333  0000EB                     	ds	2
   334  0000ED                     _FAN2:
   335                           	callstack 0
   336  0000ED                     	ds	2
   337  0000EF                     _FAN1:
   338                           	callstack 0
   339  0000EF                     	ds	2
   340  0000F1                     _BufferFAN1:
   341                           	callstack 0
   342  0000F1                     	ds	8
   343  0000F9                     _VdigADC_AN0:
   344                           	callstack 0
   345  0000F9                     	ds	2
   346                           
   347                           	psect	bssBANK1
   348  000100                     __pbssBANK1:
   349                           	callstack 0
   350  000100                     _dbuf:
   351                           	callstack 0
   352  000100                     	ds	80
   353  000150                     _BufferLCD_Percent:
   354                           	callstack 0
   355  000150                     	ds	16
   356  000160                     _BufferLCD_Temp:
   357                           	callstack 0
   358  000160                     	ds	16
   359  000170                     _BufferRES:
   360                           	callstack 0
   361  000170                     	ds	8
   362  000178                     _BufferFAN2:
   363                           	callstack 0
   364  000178                     	ds	8
   365                           
   366                           	psect	cstackBANK0
   367  000080                     __pcstackBANK0:
   368                           	callstack 0
   369  000080                     _efgtoa$1165:
   370                           	callstack 0
   371                           
   372                           ; 2 bytes @ 0x0
   373  000080                     	ds	2
   374  000082                     _efgtoa$1172:
   375                           	callstack 0
   376                           
   377                           ; 2 bytes @ 0x2
   378  000082                     	ds	2
   379  000084                     _efgtoa$1173:
   380                           	callstack 0
   381                           
   382                           ; 2 bytes @ 0x4
   383  000084                     	ds	2
   384  000086                     efgtoa@t:
   385                           	callstack 0
   386                           
   387                           ; 2 bytes @ 0x6
   388  000086                     	ds	2
   389  000088                     efgtoa@pp:
   390                           	callstack 0
   391                           
   392                           ; 2 bytes @ 0x8
   393  000088                     	ds	2
   394  00008A                     efgtoa@ne:
   395                           	callstack 0
   396                           
   397                           ; 2 bytes @ 0xA
   398  00008A                     	ds	2
   399  00008C                     efgtoa@m:
   400                           	callstack 0
   401                           
   402                           ; 2 bytes @ 0xC
   403  00008C                     	ds	2
   404  00008E                     efgtoa@ou:
   405                           	callstack 0
   406                           
   407                           ; 4 bytes @ 0xE
   408  00008E                     	ds	4
   409  000092                     efgtoa@d:
   410                           	callstack 0
   411                           
   412                           ; 2 bytes @ 0x12
   413  000092                     	ds	2
   414  000094                     efgtoa@sign:
   415                           	callstack 0
   416                           
   417                           ; 2 bytes @ 0x14
   418  000094                     	ds	2
   419  000096                     efgtoa@p:
   420                           	callstack 0
   421                           
   422                           ; 2 bytes @ 0x16
   423  000096                     	ds	2
   424  000098                     efgtoa@w:
   425                           	callstack 0
   426                           
   427                           ; 2 bytes @ 0x18
   428  000098                     	ds	2
   429  00009A                     efgtoa@nmode:
   430                           	callstack 0
   431                           
   432                           ; 1 bytes @ 0x1A
   433  00009A                     	ds	1
   434  00009B                     efgtoa@mode:
   435                           	callstack 0
   436                           
   437                           ; 1 bytes @ 0x1B
   438  00009B                     	ds	1
   439  00009C                     efgtoa@h:
   440                           	callstack 0
   441                           
   442                           ; 4 bytes @ 0x1C
   443  00009C                     	ds	4
   444  0000A0                     efgtoa@l:
   445                           	callstack 0
   446                           
   447                           ; 4 bytes @ 0x20
   448  0000A0                     	ds	4
   449  0000A4                     efgtoa@i:
   450                           	callstack 0
   451                           
   452                           ; 2 bytes @ 0x24
   453  0000A4                     	ds	2
   454  0000A6                     efgtoa@g:
   455                           	callstack 0
   456                           
   457                           ; 4 bytes @ 0x26
   458  0000A6                     	ds	4
   459  0000AA                     efgtoa@e:
   460                           	callstack 0
   461                           
   462                           ; 2 bytes @ 0x2A
   463  0000AA                     	ds	2
   464  0000AC                     efgtoa@n:
   465                           	callstack 0
   466                           
   467                           ; 2 bytes @ 0x2C
   468  0000AC                     	ds	2
   469  0000AE                     efgtoa@u:
   470                           	callstack 0
   471                           
   472                           ; 4 bytes @ 0x2E
   473  0000AE                     	ds	4
   474  0000B2                     ?_vfpfcnvrt:
   475                           	callstack 0
   476  0000B2                     vfpfcnvrt@fp:
   477                           	callstack 0
   478                           
   479                           ; 2 bytes @ 0x32
   480  0000B2                     	ds	2
   481  0000B4                     vfpfcnvrt@fmt:
   482                           	callstack 0
   483                           
   484                           ; 2 bytes @ 0x34
   485  0000B4                     	ds	2
   486  0000B6                     vfpfcnvrt@ap:
   487                           	callstack 0
   488                           
   489                           ; 2 bytes @ 0x36
   490  0000B6                     	ds	2
   491  0000B8                     ?_vfprintf:
   492                           	callstack 0
   493  0000B8                     vfprintf@fp:
   494                           	callstack 0
   495                           
   496                           ; 2 bytes @ 0x38
   497  0000B8                     	ds	2
   498  0000BA                     vfprintf@fmt:
   499                           	callstack 0
   500                           
   501                           ; 2 bytes @ 0x3A
   502  0000BA                     	ds	2
   503  0000BC                     vfprintf@ap:
   504                           	callstack 0
   505                           
   506                           ; 2 bytes @ 0x3C
   507  0000BC                     	ds	2
   508  0000BE                     ?_sprintf:
   509                           	callstack 0
   510  0000BE                     sprintf@s:
   511                           	callstack 0
   512                           
   513                           ; 2 bytes @ 0x3E
   514  0000BE                     	ds	2
   515  0000C0                     sprintf@fmt:
   516                           	callstack 0
   517                           
   518                           ; 2 bytes @ 0x40
   519  0000C0                     	ds	8
   520  0000C8                     sprintf@ap:
   521                           	callstack 0
   522                           
   523                           ; 2 bytes @ 0x48
   524  0000C8                     	ds	2
   525  0000CA                     sprintf@f:
   526                           	callstack 0
   527                           
   528                           ; 11 bytes @ 0x4A
   529  0000CA                     	ds	11
   530                           
   531                           	psect	cstackCOMRAM
   532  000001                     __pcstackCOMRAM:
   533                           	callstack 0
   534  000001                     ??_conv_AN0:
   535  000001                     ?_strlen:
   536                           	callstack 0
   537  000001                     ?___fpclassifyf:
   538                           	callstack 0
   539  000001                     ?_isupper:
   540                           	callstack 0
   541  000001                     ?_isdigit:
   542                           	callstack 0
   543  000001                     ?_strncmp:
   544                           	callstack 0
   545  000001                     ?_isspace:
   546                           	callstack 0
   547  000001                     ?___wmul:
   548                           	callstack 0
   549  000001                     ?___awdiv:
   550                           	callstack 0
   551  000001                     ?___awmod:
   552                           	callstack 0
   553  000001                     ?___fladd:
   554                           	callstack 0
   555  000001                     ?___flneg:
   556                           	callstack 0
   557  000001                     ?___fltol:
   558                           	callstack 0
   559  000001                     ?___xxtofl:
   560                           	callstack 0
   561  000001                     ?___aodiv:
   562                           	callstack 0
   563  000001                     ?___aomod:
   564                           	callstack 0
   565  000001                     set_bit@comp:
   566                           	callstack 0
   567  000001                     ___wmul@multiplier:
   568                           	callstack 0
   569  000001                     ___awdiv@dividend:
   570                           	callstack 0
   571  000001                     ___awmod@dividend:
   572                           	callstack 0
   573  000001                     isdigit@c:
   574                           	callstack 0
   575  000001                     isspace@c:
   576                           	callstack 0
   577  000001                     isupper@c:
   578                           	callstack 0
   579  000001                     fputc@c:
   580                           	callstack 0
   581  000001                     strcpy@dest:
   582                           	callstack 0
   583  000001                     strlen@s:
   584                           	callstack 0
   585  000001                     strncmp@_l:
   586                           	callstack 0
   587  000001                     ___fleq@ff1:
   588                           	callstack 0
   589  000001                     ___flneg@f1:
   590                           	callstack 0
   591  000001                     ___fltol@f1:
   592                           	callstack 0
   593  000001                     ___fladd@b:
   594                           	callstack 0
   595  000001                     ___xxtofl@val:
   596                           	callstack 0
   597  000001                     ___fpclassifyf@x:
   598                           	callstack 0
   599  000001                     ___aodiv@dividend:
   600                           	callstack 0
   601  000001                     ___aomod@dividend:
   602                           	callstack 0
   603                           
   604                           ; 8 bytes @ 0x0
   605  000001                     	ds	1
   606  000002                     set_bit@cmd:
   607                           	callstack 0
   608                           
   609                           ; 1 bytes @ 0x1
   610  000002                     	ds	1
   611  000003                     ??_lcd_cmd:
   612  000003                     ??_isupper:
   613  000003                     ??_isdigit:
   614  000003                     ??_isspace:
   615  000003                     ___wmul@multiplicand:
   616                           	callstack 0
   617  000003                     ___awdiv@divisor:
   618                           	callstack 0
   619  000003                     ___awmod@divisor:
   620                           	callstack 0
   621  000003                     fputc@fp:
   622                           	callstack 0
   623  000003                     strcpy@src:
   624                           	callstack 0
   625  000003                     strlen@a:
   626                           	callstack 0
   627  000003                     strncmp@_r:
   628                           	callstack 0
   629                           
   630                           ; 2 bytes @ 0x2
   631  000003                     	ds	1
   632  000004                     lcd_cmd@cmd:
   633                           	callstack 0
   634                           
   635                           ; 1 bytes @ 0x3
   636  000004                     	ds	1
   637  000005                     ??_lcd_init:
   638  000005                     ??_fputc:
   639  000005                     ??___fpclassifyf:
   640  000005                     ??_strcpy:
   641  000005                     ??___fltol:
   642  000005                     ??___xxtofl:
   643  000005                     lcd_send_byte@data:
   644                           	callstack 0
   645  000005                     ___awdiv@counter:
   646                           	callstack 0
   647  000005                     ___awmod@counter:
   648                           	callstack 0
   649  000005                     ___wmul@product:
   650                           	callstack 0
   651  000005                     strncmp@n:
   652                           	callstack 0
   653  000005                     ___fleq@ff2:
   654                           	callstack 0
   655  000005                     ___fladd@a:
   656                           	callstack 0
   657                           
   658                           ; 4 bytes @ 0x4
   659  000005                     	ds	1
   660  000006                     lcd_init@i:
   661                           	callstack 0
   662  000006                     lcd_send_byte@level:
   663                           	callstack 0
   664  000006                     ___awdiv@sign:
   665                           	callstack 0
   666  000006                     ___awmod@sign:
   667                           	callstack 0
   668                           
   669                           ; 1 bytes @ 0x5
   670  000006                     	ds	1
   671  000007                     ??_strncmp:
   672  000007                     ?_tolower:
   673                           	callstack 0
   674  000007                     lcd_write@col:
   675                           	callstack 0
   676  000007                     _isspace$1255:
   677                           	callstack 0
   678  000007                     ___awdiv@quotient:
   679                           	callstack 0
   680  000007                     strcpy@s:
   681                           	callstack 0
   682  000007                     tolower@c:
   683                           	callstack 0
   684                           
   685                           ; 2 bytes @ 0x6
   686  000007                     	ds	1
   687  000008                     ?_atoi:
   688                           	callstack 0
   689  000008                     lcd_write@str:
   690                           	callstack 0
   691  000008                     atoi@s:
   692                           	callstack 0
   693  000008                     strncmp@l:
   694                           	callstack 0
   695                           
   696                           ; 2 bytes @ 0x7
   697  000008                     	ds	1
   698  000009                     ??___fladd:
   699  000009                     ??_tolower:
   700  000009                     ??___fleq:
   701  000009                     ___fltol@sign1:
   702                           	callstack 0
   703  000009                     ___xxtofl@sign:
   704                           	callstack 0
   705  000009                     ___fpclassifyf@e:
   706                           	callstack 0
   707  000009                     strcpy@d:
   708                           	callstack 0
   709  000009                     ___aodiv@divisor:
   710                           	callstack 0
   711  000009                     ___aomod@divisor:
   712                           	callstack 0
   713                           
   714                           ; 8 bytes @ 0x8
   715  000009                     	ds	1
   716  00000A                     ??_atoi:
   717  00000A                     ?_ctoa:
   718                           	callstack 0
   719  00000A                     lcd_write@end:
   720                           	callstack 0
   721  00000A                     ___fltol@exp1:
   722                           	callstack 0
   723  00000A                     ___xxtofl@exp:
   724                           	callstack 0
   725  00000A                     ctoa@fp:
   726                           	callstack 0
   727  00000A                     fputs@s:
   728                           	callstack 0
   729  00000A                     strncmp@r:
   730                           	callstack 0
   731                           
   732                           ; 2 bytes @ 0x9
   733  00000A                     	ds	1
   734  00000B                     lcd_write@lin:
   735                           	callstack 0
   736  00000B                     ___xxtofl@arg:
   737                           	callstack 0
   738  00000B                     ___fpclassifyf@u:
   739                           	callstack 0
   740                           
   741                           ; 4 bytes @ 0xA
   742  00000B                     	ds	1
   743  00000C                     ctoa@c:
   744                           	callstack 0
   745  00000C                     fputs@fp:
   746                           	callstack 0
   747                           
   748                           ; 2 bytes @ 0xB
   749  00000C                     	ds	1
   750  00000D                     ??_ctoa:
   751  00000D                     ___fladd@signs:
   752                           	callstack 0
   753                           
   754                           ; 1 bytes @ 0xC
   755  00000D                     	ds	1
   756  00000E                     ___fladd@aexp:
   757                           	callstack 0
   758  00000E                     fputs@c:
   759                           	callstack 0
   760  00000E                     ctoa@l:
   761                           	callstack 0
   762  00000E                     atoi@neg:
   763                           	callstack 0
   764                           
   765                           ; 2 bytes @ 0xD
   766  00000E                     	ds	1
   767  00000F                     ?___flmul:
   768                           	callstack 0
   769  00000F                     ___fladd@bexp:
   770                           	callstack 0
   771  00000F                     fputs@i:
   772                           	callstack 0
   773  00000F                     ___flmul@b:
   774                           	callstack 0
   775                           
   776                           ; 4 bytes @ 0xE
   777  00000F                     	ds	1
   778  000010                     ___fladd@grs:
   779                           	callstack 0
   780  000010                     ctoa@w:
   781                           	callstack 0
   782  000010                     atoi@n:
   783                           	callstack 0
   784                           
   785                           ; 2 bytes @ 0xF
   786  000010                     	ds	1
   787  000011                     ?_pad:
   788                           	callstack 0
   789  000011                     ___aodiv@counter:
   790                           	callstack 0
   791  000011                     ___aomod@counter:
   792                           	callstack 0
   793  000011                     pad@fp:
   794                           	callstack 0
   795                           
   796                           ; 2 bytes @ 0x10
   797  000011                     	ds	1
   798  000012                     ___aodiv@sign:
   799                           	callstack 0
   800  000012                     ___aomod@sign:
   801                           	callstack 0
   802                           
   803                           ; 1 bytes @ 0x11
   804  000012                     	ds	1
   805  000013                     ?_abs:
   806                           	callstack 0
   807  000013                     pad@buf:
   808                           	callstack 0
   809  000013                     abs@a:
   810                           	callstack 0
   811  000013                     ___flmul@a:
   812                           	callstack 0
   813  000013                     ___aodiv@quotient:
   814                           	callstack 0
   815                           
   816                           ; 8 bytes @ 0x12
   817  000013                     	ds	2
   818  000015                     ??_abs:
   819  000015                     pad@p:
   820                           	callstack 0
   821                           
   822                           ; 2 bytes @ 0x14
   823  000015                     	ds	2
   824  000017                     ??___flmul:
   825  000017                     ??_pad:
   826                           
   827                           ; 1 bytes @ 0x16
   828  000017                     	ds	1
   829  000018                     pad@i:
   830                           	callstack 0
   831                           
   832                           ; 2 bytes @ 0x17
   833  000018                     	ds	2
   834  00001A                     pad@w:
   835                           	callstack 0
   836                           
   837                           ; 2 bytes @ 0x19
   838  00001A                     	ds	1
   839  00001B                     ___flmul@sign:
   840                           	callstack 0
   841                           
   842                           ; 1 bytes @ 0x1A
   843  00001B                     	ds	1
   844  00001C                     ?_dtoa:
   845                           	callstack 0
   846  00001C                     dtoa@fp:
   847                           	callstack 0
   848  00001C                     ___flmul@grs:
   849                           	callstack 0
   850                           
   851                           ; 4 bytes @ 0x1B
   852  00001C                     	ds	2
   853  00001E                     dtoa@d:
   854                           	callstack 0
   855                           
   856                           ; 8 bytes @ 0x1D
   857  00001E                     	ds	2
   858  000020                     ___flmul@aexp:
   859                           	callstack 0
   860                           
   861                           ; 1 bytes @ 0x1F
   862  000020                     	ds	1
   863  000021                     ___flmul@bexp:
   864                           	callstack 0
   865                           
   866                           ; 1 bytes @ 0x20
   867  000021                     	ds	1
   868  000022                     ___flmul@prod:
   869                           	callstack 0
   870                           
   871                           ; 4 bytes @ 0x21
   872  000022                     	ds	4
   873  000026                     ??_dtoa:
   874  000026                     ___flmul@temp:
   875                           	callstack 0
   876                           
   877                           ; 2 bytes @ 0x25
   878  000026                     	ds	2
   879  000028                     ?___fldiv:
   880                           	callstack 0
   881  000028                     ?___flsub:
   882                           	callstack 0
   883  000028                     ___flge@ff1:
   884                           	callstack 0
   885  000028                     ___flsub@b:
   886                           	callstack 0
   887  000028                     ___fldiv@b:
   888                           	callstack 0
   889                           
   890                           ; 4 bytes @ 0x27
   891  000028                     	ds	4
   892  00002C                     ___flge@ff2:
   893                           	callstack 0
   894  00002C                     ___flsub@a:
   895                           	callstack 0
   896  00002C                     ___fldiv@a:
   897                           	callstack 0
   898                           
   899                           ; 4 bytes @ 0x2B
   900  00002C                     	ds	2
   901  00002E                     _dtoa$1141:
   902                           	callstack 0
   903                           
   904                           ; 2 bytes @ 0x2D
   905  00002E                     	ds	2
   906  000030                     ??___fldiv:
   907  000030                     ??___flge:
   908  000030                     dtoa@p:
   909                           	callstack 0
   910                           
   911                           ; 2 bytes @ 0x2F
   912  000030                     	ds	2
   913  000032                     dtoa@w:
   914                           	callstack 0
   915                           
   916                           ; 2 bytes @ 0x31
   917  000032                     	ds	2
   918  000034                     dtoa@s:
   919                           	callstack 0
   920  000034                     ___fldiv@rem:
   921                           	callstack 0
   922                           
   923                           ; 4 bytes @ 0x33
   924  000034                     	ds	2
   925  000036                     dtoa@n:
   926                           	callstack 0
   927                           
   928                           ; 8 bytes @ 0x35
   929  000036                     	ds	2
   930  000038                     ___fldiv@sign:
   931                           	callstack 0
   932                           
   933                           ; 1 bytes @ 0x37
   934  000038                     	ds	1
   935  000039                     ___fldiv@new_exp:
   936                           	callstack 0
   937                           
   938                           ; 2 bytes @ 0x38
   939  000039                     	ds	2
   940  00003B                     ___fldiv@grs:
   941                           	callstack 0
   942                           
   943                           ; 4 bytes @ 0x3A
   944  00003B                     	ds	3
   945  00003E                     dtoa@i:
   946                           	callstack 0
   947                           
   948                           ; 2 bytes @ 0x3D
   949  00003E                     	ds	1
   950  00003F                     ___fldiv@bexp:
   951                           	callstack 0
   952                           
   953                           ; 1 bytes @ 0x3E
   954  00003F                     	ds	1
   955  000040                     ___fldiv@aexp:
   956                           	callstack 0
   957                           
   958                           ; 1 bytes @ 0x3F
   959  000040                     	ds	1
   960  000041                     ?_floorf:
   961                           	callstack 0
   962  000041                     floorf@x:
   963                           	callstack 0
   964                           
   965                           ; 4 bytes @ 0x40
   966  000041                     	ds	4
   967  000045                     ??_floorf:
   968                           
   969                           ; 1 bytes @ 0x44
   970  000045                     	ds	6
   971  00004B                     floorf@m:
   972                           	callstack 0
   973                           
   974                           ; 4 bytes @ 0x4A
   975  00004B                     	ds	4
   976  00004F                     floorf@e:
   977                           	callstack 0
   978                           
   979                           ; 2 bytes @ 0x4E
   980  00004F                     	ds	2
   981  000051                     floorf@u:
   982                           	callstack 0
   983                           
   984                           ; 4 bytes @ 0x50
   985  000051                     	ds	4
   986  000055                     ?_efgtoa:
   987                           	callstack 0
   988  000055                     efgtoa@fp:
   989                           	callstack 0
   990                           
   991                           ; 2 bytes @ 0x54
   992  000055                     	ds	2
   993  000057                     efgtoa@f:
   994                           	callstack 0
   995                           
   996                           ; 4 bytes @ 0x56
   997  000057                     	ds	4
   998  00005B                     efgtoa@c:
   999                           	callstack 0
  1000                           
  1001                           ; 1 bytes @ 0x5A
  1002  00005B                     	ds	1
  1003  00005C                     ??_efgtoa:
  1004                           
  1005                           ; 1 bytes @ 0x5B
  1006  00005C                     	ds	5
  1007  000061                     ??_vfpfcnvrt:
  1008                           
  1009                           ; 1 bytes @ 0x60
  1010  000061                     	ds	4
  1011  000065                     vfpfcnvrt@ll:
  1012                           	callstack 0
  1013                           
  1014                           ; 8 bytes @ 0x64
  1015  000065                     	ds	8
  1016  00006D                     vfpfcnvrt@done:
  1017                           	callstack 0
  1018                           
  1019                           ; 2 bytes @ 0x6C
  1020  00006D                     	ds	2
  1021  00006F                     vfpfcnvrt@f:
  1022                           	callstack 0
  1023                           
  1024                           ; 4 bytes @ 0x6E
  1025  00006F                     	ds	4
  1026  000073                     vfpfcnvrt@ct:
  1027                           	callstack 0
  1028                           
  1029                           ; 3 bytes @ 0x72
  1030  000073                     	ds	3
  1031  000076                     vfpfcnvrt@c:
  1032                           	callstack 0
  1033                           
  1034                           ; 1 bytes @ 0x75
  1035  000076                     	ds	1
  1036  000077                     vfprintf@cfmt:
  1037                           	callstack 0
  1038                           
  1039                           ; 2 bytes @ 0x76
  1040  000077                     	ds	2
  1041  000079                     
  1042                           ; 1 bytes @ 0x78
  1043 ;;
  1044 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1045 ;;
  1046 ;; *************** function _main *****************
  1047 ;; Defined at:
  1048 ;;		line 195 in file "Main_Program.c"
  1049 ;; Parameters:    Size  Location     Type
  1050 ;;		None
  1051 ;; Auto vars:     Size  Location     Type
  1052 ;;		None
  1053 ;; Return value:  Size  Location     Type
  1054 ;;                  1    wreg      void 
  1055 ;; Registers used:
  1056 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1057 ;; Tracked objects:
  1058 ;;		On entry : 0/0
  1059 ;;		On exit  : 0/0
  1060 ;;		Unchanged: 0/0
  1061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1062 ;;      Params:         0       0       0       0       0       0       0
  1063 ;;      Locals:         0       0       0       0       0       0       0
  1064 ;;      Temps:          0       0       0       0       0       0       0
  1065 ;;      Totals:         0       0       0       0       0       0       0
  1066 ;;Total ram usage:        0 bytes
  1067 ;; Hardware stack levels required when called: 9
  1068 ;; This function calls:
  1069 ;;		_config_ADC
  1070 ;;		_config_FOSC
  1071 ;;		_config_IO
  1072 ;;		_conv_AN0
  1073 ;;		_equation_SENSOR
  1074 ;;		_lcd_PERIPHERAL
  1075 ;;		_lcd_SENSOR
  1076 ;;		_lcd_init
  1077 ;;		_logic_CONTROL
  1078 ;; This function is called by:
  1079 ;;		Startup code after reset
  1080 ;; This function uses a non-reentrant model
  1081 ;;
  1082                           
  1083                           	psect	text0
  1084  00420E                     __ptext0:
  1085                           	callstack 0
  1086  00420E                     _main:
  1087                           	callstack 22
  1088  00420E                     
  1089                           ;Main_Program.c: 197:     config_FOSC();
  1090  00420E  EC06  F022         	call	_config_FOSC	;wreg free
  1091                           
  1092                           ;Main_Program.c: 198:     config_IO();
  1093  004212  ECF8  F021         	call	_config_IO	;wreg free
  1094                           
  1095                           ;Main_Program.c: 199:     config_ADC();
  1096  004216  ECFF  F021         	call	_config_ADC	;wreg free
  1097  00421A                     
  1098                           ;Main_Program.c: 200:     lcd_init();
  1099  00421A  EC81  F01F         	call	_lcd_init	;wreg free
  1100  00421E                     l4708:
  1101                           
  1102                           ;Main_Program.c: 202:     {;Main_Program.c: 203:         conv_AN0();
  1103  00421E  EC95  F021         	call	_conv_AN0	;wreg free
  1104  004222                     
  1105                           ;Main_Program.c: 204:         equation_SENSOR();
  1106  004222  EC9F  F01C         	call	_equation_SENSOR	;wreg free
  1107  004226                     
  1108                           ;Main_Program.c: 205:         logic_CONTROL();
  1109  004226  EC7E  F015         	call	_logic_CONTROL	;wreg free
  1110  00422A                     
  1111                           ;Main_Program.c: 207:         if(PORTBbits.RB0 == 0) lcd_SENSOR();
  1112  00422A  B081               	btfsc	129,0,c	;volatile
  1113  00422C  EF1A  F021         	goto	u5681
  1114  004230  EF1C  F021         	goto	u5680
  1115  004234                     u5681:
  1116  004234  EF20  F021         	goto	l4718
  1117  004238                     u5680:
  1118  004238  ECDE  F01E         	call	_lcd_SENSOR	;wreg free
  1119  00423C  EF0F  F021         	goto	l4708
  1120  004240                     l4718:
  1121  004240  ECE2  F01A         	call	_lcd_PERIPHERAL	;wreg free
  1122  004244  EF0F  F021         	goto	l4708
  1123  004248  EF00  F000         	goto	start
  1124  00424C                     __end_of_main:
  1125                           	callstack 0
  1126                           
  1127 ;; *************** function _logic_CONTROL *****************
  1128 ;; Defined at:
  1129 ;;		line 164 in file "Main_Program.c"
  1130 ;; Parameters:    Size  Location     Type
  1131 ;;		None
  1132 ;; Auto vars:     Size  Location     Type
  1133 ;;		None
  1134 ;; Return value:  Size  Location     Type
  1135 ;;                  1    wreg      void 
  1136 ;; Registers used:
  1137 ;;		wreg, status,2, status,0, cstack
  1138 ;; Tracked objects:
  1139 ;;		On entry : 0/0
  1140 ;;		On exit  : 0/0
  1141 ;;		Unchanged: 0/0
  1142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1143 ;;      Params:         0       0       0       0       0       0       0
  1144 ;;      Locals:         0       0       0       0       0       0       0
  1145 ;;      Temps:          0       0       0       0       0       0       0
  1146 ;;      Totals:         0       0       0       0       0       0       0
  1147 ;;Total ram usage:        0 bytes
  1148 ;; Hardware stack levels used: 1
  1149 ;; Hardware stack levels required when called: 1
  1150 ;; This function calls:
  1151 ;;		___flge
  1152 ;; This function is called by:
  1153 ;;		_main
  1154 ;; This function uses a non-reentrant model
  1155 ;;
  1156                           
  1157                           	psect	text1
  1158  002AFC                     __ptext1:
  1159                           	callstack 0
  1160  002AFC                     _logic_CONTROL:
  1161                           	callstack 29
  1162  002AFC                     
  1163                           ;Main_Program.c: 166:     if(TempSensor <= (0.25*420))
  1164  002AFC  0E00               	movlw	0
  1165  002AFE  6E28               	movwf	___flge@ff1^0,c
  1166  002B00  0E00               	movlw	0
  1167  002B02  6E29               	movwf	(___flge@ff1+1)^0,c
  1168  002B04  0ED2               	movlw	210
  1169  002B06  6E2A               	movwf	(___flge@ff1+2)^0,c
  1170  002B08  0E42               	movlw	66
  1171  002B0A  6E2B               	movwf	(___flge@ff1+3)^0,c
  1172  002B0C  C0E5  F02C         	movff	_TempSensor,___flge@ff2
  1173  002B10  C0E6  F02D         	movff	_TempSensor+1,___flge@ff2+1
  1174  002B14  C0E7  F02E         	movff	_TempSensor+2,___flge@ff2+2
  1175  002B18  C0E8  F02F         	movff	_TempSensor+3,___flge@ff2+3
  1176  002B1C  ECE1  F019         	call	___flge	;wreg free
  1177  002B20  A0D8               	btfss	status,0,c
  1178  002B22  EF95  F015         	goto	u5581
  1179  002B26  EF97  F015         	goto	u5580
  1180  002B2A                     u5581:
  1181  002B2A  EFA6  F015         	goto	l4642
  1182  002B2E                     u5580:
  1183  002B2E                     
  1184                           ;Main_Program.c: 167:     {;Main_Program.c: 168:         FAN1 = 0;
  1185  002B2E  0E00               	movlw	0
  1186  002B30  0100               	movlb	0	; () banked
  1187  002B32  6FF0               	movwf	(_FAN1+1)& (0+255),b
  1188  002B34  0E00               	movlw	0
  1189  002B36  6FEF               	movwf	_FAN1& (0+255),b
  1190                           
  1191                           ;Main_Program.c: 169:         FAN2 = 0;
  1192  002B38  0E00               	movlw	0
  1193  002B3A  6FEE               	movwf	(_FAN2+1)& (0+255),b
  1194  002B3C  0E00               	movlw	0
  1195  002B3E  6FED               	movwf	_FAN2& (0+255),b
  1196                           
  1197                           ;Main_Program.c: 170:         RES = 1;
  1198  002B40  0E00               	movlw	0
  1199  002B42  6FEC               	movwf	(_RES+1)& (0+255),b
  1200  002B44  0E01               	movlw	1
  1201  002B46  6FEB               	movwf	_RES& (0+255),b
  1202                           
  1203                           ;Main_Program.c: 171:     }
  1204  002B48  EF50  F016         	goto	l4658
  1205  002B4C                     l4642:
  1206  002B4C  0E00               	movlw	0
  1207  002B4E  6E28               	movwf	___flge@ff1^0,c
  1208  002B50  0E00               	movlw	0
  1209  002B52  6E29               	movwf	(___flge@ff1+1)^0,c
  1210  002B54  0ED2               	movlw	210
  1211  002B56  6E2A               	movwf	(___flge@ff1+2)^0,c
  1212  002B58  0E42               	movlw	66
  1213  002B5A  6E2B               	movwf	(___flge@ff1+3)^0,c
  1214  002B5C  C0E5  F02C         	movff	_TempSensor,___flge@ff2
  1215  002B60  C0E6  F02D         	movff	_TempSensor+1,___flge@ff2+1
  1216  002B64  C0E7  F02E         	movff	_TempSensor+2,___flge@ff2+2
  1217  002B68  C0E8  F02F         	movff	_TempSensor+3,___flge@ff2+3
  1218  002B6C  ECE1  F019         	call	___flge	;wreg free
  1219  002B70  B0D8               	btfsc	status,0,c
  1220  002B72  EFBD  F015         	goto	u5591
  1221  002B76  EFBF  F015         	goto	u5590
  1222  002B7A                     u5591:
  1223  002B7A  EFE7  F015         	goto	l4648
  1224  002B7E                     u5590:
  1225  002B7E  0E00               	movlw	0
  1226  002B80  6E28               	movwf	___flge@ff1^0,c
  1227  002B82  0E00               	movlw	0
  1228  002B84  6E29               	movwf	(___flge@ff1+1)^0,c
  1229  002B86  0E52               	movlw	82
  1230  002B88  6E2A               	movwf	(___flge@ff1+2)^0,c
  1231  002B8A  0E43               	movlw	67
  1232  002B8C  6E2B               	movwf	(___flge@ff1+3)^0,c
  1233  002B8E  C0E5  F02C         	movff	_TempSensor,___flge@ff2
  1234  002B92  C0E6  F02D         	movff	_TempSensor+1,___flge@ff2+1
  1235  002B96  C0E7  F02E         	movff	_TempSensor+2,___flge@ff2+2
  1236  002B9A  C0E8  F02F         	movff	_TempSensor+3,___flge@ff2+3
  1237  002B9E  ECE1  F019         	call	___flge	;wreg free
  1238  002BA2  A0D8               	btfss	status,0,c
  1239  002BA4  EFD6  F015         	goto	u5601
  1240  002BA8  EFD8  F015         	goto	u5600
  1241  002BAC                     u5601:
  1242  002BAC  EFE7  F015         	goto	l4648
  1243  002BB0                     u5600:
  1244  002BB0                     
  1245                           ;Main_Program.c: 173:     {;Main_Program.c: 174:         FAN1 = 1;
  1246  002BB0  0E00               	movlw	0
  1247  002BB2  0100               	movlb	0	; () banked
  1248  002BB4  6FF0               	movwf	(_FAN1+1)& (0+255),b
  1249  002BB6  0E01               	movlw	1
  1250  002BB8  6FEF               	movwf	_FAN1& (0+255),b
  1251                           
  1252                           ;Main_Program.c: 175:         FAN2 = 0;
  1253  002BBA  0E00               	movlw	0
  1254  002BBC  6FEE               	movwf	(_FAN2+1)& (0+255),b
  1255  002BBE  0E00               	movlw	0
  1256  002BC0  6FED               	movwf	_FAN2& (0+255),b
  1257                           
  1258                           ;Main_Program.c: 176:         RES = 1;
  1259  002BC2  0E00               	movlw	0
  1260  002BC4  6FEC               	movwf	(_RES+1)& (0+255),b
  1261  002BC6  0E01               	movlw	1
  1262  002BC8  6FEB               	movwf	_RES& (0+255),b
  1263                           
  1264                           ;Main_Program.c: 177:     }
  1265  002BCA  EF50  F016         	goto	l4658
  1266  002BCE                     l4648:
  1267  002BCE  0E00               	movlw	0
  1268  002BD0  6E28               	movwf	___flge@ff1^0,c
  1269  002BD2  0E00               	movlw	0
  1270  002BD4  6E29               	movwf	(___flge@ff1+1)^0,c
  1271  002BD6  0E52               	movlw	82
  1272  002BD8  6E2A               	movwf	(___flge@ff1+2)^0,c
  1273  002BDA  0E43               	movlw	67
  1274  002BDC  6E2B               	movwf	(___flge@ff1+3)^0,c
  1275  002BDE  C0E5  F02C         	movff	_TempSensor,___flge@ff2
  1276  002BE2  C0E6  F02D         	movff	_TempSensor+1,___flge@ff2+1
  1277  002BE6  C0E7  F02E         	movff	_TempSensor+2,___flge@ff2+2
  1278  002BEA  C0E8  F02F         	movff	_TempSensor+3,___flge@ff2+3
  1279  002BEE  ECE1  F019         	call	___flge	;wreg free
  1280  002BF2  B0D8               	btfsc	status,0,c
  1281  002BF4  EFFE  F015         	goto	u5611
  1282  002BF8  EF00  F016         	goto	u5610
  1283  002BFC                     u5611:
  1284  002BFC  EF28  F016         	goto	l4654
  1285  002C00                     u5610:
  1286  002C00  0E00               	movlw	0
  1287  002C02  6E28               	movwf	___flge@ff1^0,c
  1288  002C04  0E80               	movlw	128
  1289  002C06  6E29               	movwf	(___flge@ff1+1)^0,c
  1290  002C08  0E9D               	movlw	157
  1291  002C0A  6E2A               	movwf	(___flge@ff1+2)^0,c
  1292  002C0C  0E43               	movlw	67
  1293  002C0E  6E2B               	movwf	(___flge@ff1+3)^0,c
  1294  002C10  C0E5  F02C         	movff	_TempSensor,___flge@ff2
  1295  002C14  C0E6  F02D         	movff	_TempSensor+1,___flge@ff2+1
  1296  002C18  C0E7  F02E         	movff	_TempSensor+2,___flge@ff2+2
  1297  002C1C  C0E8  F02F         	movff	_TempSensor+3,___flge@ff2+3
  1298  002C20  ECE1  F019         	call	___flge	;wreg free
  1299  002C24  A0D8               	btfss	status,0,c
  1300  002C26  EF17  F016         	goto	u5621
  1301  002C2A  EF19  F016         	goto	u5620
  1302  002C2E                     u5621:
  1303  002C2E  EF28  F016         	goto	l4654
  1304  002C32                     u5620:
  1305  002C32                     
  1306                           ;Main_Program.c: 179:     {;Main_Program.c: 180:         FAN1 = 1;
  1307  002C32  0E00               	movlw	0
  1308  002C34  0100               	movlb	0	; () banked
  1309  002C36  6FF0               	movwf	(_FAN1+1)& (0+255),b
  1310  002C38  0E01               	movlw	1
  1311  002C3A  6FEF               	movwf	_FAN1& (0+255),b
  1312                           
  1313                           ;Main_Program.c: 181:         FAN2 = 1;
  1314  002C3C  0E00               	movlw	0
  1315  002C3E  6FEE               	movwf	(_FAN2+1)& (0+255),b
  1316  002C40  0E01               	movlw	1
  1317  002C42  6FED               	movwf	_FAN2& (0+255),b
  1318                           
  1319                           ;Main_Program.c: 182:         RES = 1;
  1320  002C44  0E00               	movlw	0
  1321  002C46  6FEC               	movwf	(_RES+1)& (0+255),b
  1322  002C48  0E01               	movlw	1
  1323  002C4A  6FEB               	movwf	_RES& (0+255),b
  1324                           
  1325                           ;Main_Program.c: 183:     }
  1326  002C4C  EF50  F016         	goto	l4658
  1327  002C50                     l4654:
  1328  002C50  0E00               	movlw	0
  1329  002C52  6E28               	movwf	___flge@ff1^0,c
  1330  002C54  0E80               	movlw	128
  1331  002C56  6E29               	movwf	(___flge@ff1+1)^0,c
  1332  002C58  0E9D               	movlw	157
  1333  002C5A  6E2A               	movwf	(___flge@ff1+2)^0,c
  1334  002C5C  0E43               	movlw	67
  1335  002C5E  6E2B               	movwf	(___flge@ff1+3)^0,c
  1336  002C60  C0E5  F02C         	movff	_TempSensor,___flge@ff2
  1337  002C64  C0E6  F02D         	movff	_TempSensor+1,___flge@ff2+1
  1338  002C68  C0E7  F02E         	movff	_TempSensor+2,___flge@ff2+2
  1339  002C6C  C0E8  F02F         	movff	_TempSensor+3,___flge@ff2+3
  1340  002C70  ECE1  F019         	call	___flge	;wreg free
  1341  002C74  B0D8               	btfsc	status,0,c
  1342  002C76  EF3F  F016         	goto	u5631
  1343  002C7A  EF41  F016         	goto	u5630
  1344  002C7E                     u5631:
  1345  002C7E  EF50  F016         	goto	l88
  1346  002C82                     u5630:
  1347  002C82                     
  1348                           ;Main_Program.c: 185:     {;Main_Program.c: 186:         FAN1 = 1;
  1349  002C82  0E00               	movlw	0
  1350  002C84  0100               	movlb	0	; () banked
  1351  002C86  6FF0               	movwf	(_FAN1+1)& (0+255),b
  1352  002C88  0E01               	movlw	1
  1353  002C8A  6FEF               	movwf	_FAN1& (0+255),b
  1354                           
  1355                           ;Main_Program.c: 187:         FAN2 = 1;
  1356  002C8C  0E00               	movlw	0
  1357  002C8E  6FEE               	movwf	(_FAN2+1)& (0+255),b
  1358  002C90  0E01               	movlw	1
  1359  002C92  6FED               	movwf	_FAN2& (0+255),b
  1360                           
  1361                           ;Main_Program.c: 188:         RES = 0;
  1362  002C94  0E00               	movlw	0
  1363  002C96  6FEC               	movwf	(_RES+1)& (0+255),b
  1364  002C98  0E00               	movlw	0
  1365  002C9A  6FEB               	movwf	_RES& (0+255),b
  1366  002C9C  EF50  F016         	goto	l4658
  1367  002CA0                     l88:
  1368  002CA0                     l4658:
  1369                           
  1370                           ;Main_Program.c: 190:     PORTCbits.RC0 = FAN1;
  1371  002CA0  0100               	movlb	0	; () banked
  1372  002CA2  B1EF               	btfsc	_FAN1& (0+255),0,b
  1373  002CA4  D002               	bra	u5645
  1374  002CA6  9082               	bcf	130,0,c	;volatile
  1375  002CA8  D001               	bra	u5646
  1376  002CAA                     u5645:
  1377  002CAA  8082               	bsf	130,0,c	;volatile
  1378  002CAC                     u5646:
  1379  002CAC                     
  1380                           ;Main_Program.c: 191:     PORTCbits.RC1 = FAN2;
  1381  002CAC  0100               	movlb	0	; () banked
  1382  002CAE  B1ED               	btfsc	_FAN2& (0+255),0,b
  1383  002CB0  D002               	bra	u5655
  1384  002CB2  9282               	bcf	130,1,c	;volatile
  1385  002CB4  D001               	bra	u5656
  1386  002CB6                     u5655:
  1387  002CB6  8282               	bsf	130,1,c	;volatile
  1388  002CB8                     u5656:
  1389  002CB8                     
  1390                           ;Main_Program.c: 192:     PORTCbits.RC2 = RES;
  1391  002CB8  0100               	movlb	0	; () banked
  1392  002CBA  B1EB               	btfsc	_RES& (0+255),0,b
  1393  002CBC  D002               	bra	u5665
  1394  002CBE  9482               	bcf	130,2,c	;volatile
  1395  002CC0  D001               	bra	u5666
  1396  002CC2                     u5665:
  1397  002CC2  8482               	bsf	130,2,c	;volatile
  1398  002CC4                     u5666:
  1399  002CC4  0012               	return		;funcret
  1400  002CC6                     __end_of_logic_CONTROL:
  1401                           	callstack 0
  1402                           
  1403 ;; *************** function _lcd_init *****************
  1404 ;; Defined at:
  1405 ;;		line 3 in file "LCD4b.c"
  1406 ;; Parameters:    Size  Location     Type
  1407 ;;		None
  1408 ;; Auto vars:     Size  Location     Type
  1409 ;;  i               1    5[COMRAM] unsigned char 
  1410 ;; Return value:  Size  Location     Type
  1411 ;;                  1    wreg      void 
  1412 ;; Registers used:
  1413 ;;		wreg, status,2, status,0, cstack
  1414 ;; Tracked objects:
  1415 ;;		On entry : 0/0
  1416 ;;		On exit  : 0/0
  1417 ;;		Unchanged: 0/0
  1418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1419 ;;      Params:         0       0       0       0       0       0       0
  1420 ;;      Locals:         1       0       0       0       0       0       0
  1421 ;;      Temps:          1       0       0       0       0       0       0
  1422 ;;      Totals:         2       0       0       0       0       0       0
  1423 ;;Total ram usage:        2 bytes
  1424 ;; Hardware stack levels used: 1
  1425 ;; Hardware stack levels required when called: 2
  1426 ;; This function calls:
  1427 ;;		_lcd_cmd
  1428 ;; This function is called by:
  1429 ;;		_main
  1430 ;; This function uses a non-reentrant model
  1431 ;;
  1432                           
  1433                           	psect	text2
  1434  003F02                     __ptext2:
  1435                           	callstack 0
  1436  003F02                     _lcd_init:
  1437                           	callstack 28
  1438  003F02                     
  1439                           ;LCD4b.c: 5:     char i;;LCD4b.c: 7:     TRISD = 0b00000000;
  1440  003F02  0E00               	movlw	0
  1441  003F04  6E95               	movwf	149,c	;volatile
  1442  003F06                     
  1443                           ;LCD4b.c: 8:     TRISEbits.TRISE1 = 0;
  1444  003F06  9296               	bcf	150,1,c	;volatile
  1445  003F08                     
  1446                           ;LCD4b.c: 9:     TRISEbits.TRISE2 = 0;
  1447  003F08  9496               	bcf	150,2,c	;volatile
  1448                           
  1449                           ;LCD4b.c: 10:     PORTD = 0b00000000;
  1450  003F0A  0E00               	movlw	0
  1451  003F0C  6E83               	movwf	131,c	;volatile
  1452  003F0E                     
  1453                           ;LCD4b.c: 11:     PORTEbits.RE2 = 0;
  1454  003F0E  9484               	bcf	132,2,c	;volatile
  1455  003F10                     
  1456                           ;LCD4b.c: 12:     PORTEbits.RE1 = 0;
  1457  003F10  9284               	bcf	132,1,c	;volatile
  1458  003F12                     
  1459                           ;LCD4b.c: 14:     _delay((unsigned long)((15)*(8000000/4000.0)));
  1460  003F12  0E27               	movlw	39
  1461  003F14  6E05               	movwf	??_lcd_init^0,c
  1462  003F16  0EF5               	movlw	245
  1463  003F18                     u5697:
  1464  003F18  2EE8               	decfsz	wreg,f,c
  1465  003F1A  D7FE               	bra	u5697
  1466  003F1C  2E05               	decfsz	??_lcd_init^0,f,c
  1467  003F1E  D7FC               	bra	u5697
  1468  003F20  F000               	nop	
  1469  003F22                     
  1470                           ;LCD4b.c: 16:     for(i=0;i<=2;i++)
  1471  003F22  0E00               	movlw	0
  1472  003F24  6E06               	movwf	lcd_init@i^0,c
  1473  003F26                     l4682:
  1474                           
  1475                           ;LCD4b.c: 17:     {;LCD4b.c: 18:         lcd_cmd(0x30);
  1476  003F26  0E30               	movlw	48
  1477  003F28  EC58  F01B         	call	_lcd_cmd
  1478  003F2C                     
  1479                           ;LCD4b.c: 19:         _delay((unsigned long)((5)*(8000000/4000.0)));
  1480  003F2C  0E0D               	movlw	13
  1481  003F2E  6E05               	movwf	??_lcd_init^0,c
  1482  003F30  0EFC               	movlw	252
  1483  003F32                     u5707:
  1484  003F32  2EE8               	decfsz	wreg,f,c
  1485  003F34  D7FE               	bra	u5707
  1486  003F36  2E05               	decfsz	??_lcd_init^0,f,c
  1487  003F38  D7FC               	bra	u5707
  1488  003F3A                     
  1489                           ;LCD4b.c: 20:     }
  1490  003F3A  2A06               	incf	lcd_init@i^0,f,c
  1491  003F3C  0E02               	movlw	2
  1492  003F3E  6406               	cpfsgt	lcd_init@i^0,c
  1493  003F40  EFA4  F01F         	goto	u5671
  1494  003F44  EFA6  F01F         	goto	u5670
  1495  003F48                     u5671:
  1496  003F48  EF93  F01F         	goto	l4682
  1497  003F4C                     u5670:
  1498  003F4C                     
  1499                           ;LCD4b.c: 22:     lcd_cmd(0x02);
  1500  003F4C  0E02               	movlw	2
  1501  003F4E  EC58  F01B         	call	_lcd_cmd
  1502  003F52                     
  1503                           ;LCD4b.c: 23:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1504  003F52  0E1A               	movlw	26
  1505  003F54                     u5717:
  1506  003F54  2EE8               	decfsz	wreg,f,c
  1507  003F56  D7FE               	bra	u5717
  1508  003F58  D000               	nop2	
  1509  003F5A                     
  1510                           ;LCD4b.c: 24:     lcd_cmd(0x28);
  1511  003F5A  0E28               	movlw	40
  1512  003F5C  EC58  F01B         	call	_lcd_cmd
  1513                           
  1514                           ;LCD4b.c: 25:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1515  003F60  0E1A               	movlw	26
  1516  003F62                     u5727:
  1517  003F62  2EE8               	decfsz	wreg,f,c
  1518  003F64  D7FE               	bra	u5727
  1519  003F66  D000               	nop2	
  1520  003F68                     
  1521                           ;LCD4b.c: 26:     lcd_cmd(0x01);
  1522  003F68  0E01               	movlw	1
  1523  003F6A  EC58  F01B         	call	_lcd_cmd
  1524  003F6E                     
  1525                           ;LCD4b.c: 27:     _delay((unsigned long)((2)*(8000000/4000.0)));
  1526  003F6E  0E06               	movlw	6
  1527  003F70  6E05               	movwf	??_lcd_init^0,c
  1528  003F72  0E30               	movlw	48
  1529  003F74                     u5737:
  1530  003F74  2EE8               	decfsz	wreg,f,c
  1531  003F76  D7FE               	bra	u5737
  1532  003F78  2E05               	decfsz	??_lcd_init^0,f,c
  1533  003F7A  D7FC               	bra	u5737
  1534  003F7C  D000               	nop2	
  1535                           
  1536                           ;LCD4b.c: 28:     lcd_cmd(0x0C);
  1537  003F7E  0E0C               	movlw	12
  1538  003F80  EC58  F01B         	call	_lcd_cmd
  1539  003F84                     
  1540                           ;LCD4b.c: 29:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1541  003F84  0E1A               	movlw	26
  1542  003F86                     u5747:
  1543  003F86  2EE8               	decfsz	wreg,f,c
  1544  003F88  D7FE               	bra	u5747
  1545  003F8A  D000               	nop2	
  1546  003F8C                     
  1547                           ;LCD4b.c: 30:     lcd_cmd(0x06);
  1548  003F8C  0E06               	movlw	6
  1549  003F8E  EC58  F01B         	call	_lcd_cmd
  1550                           
  1551                           ;LCD4b.c: 31:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1552  003F92  0E1A               	movlw	26
  1553  003F94                     u5757:
  1554  003F94  2EE8               	decfsz	wreg,f,c
  1555  003F96  D7FE               	bra	u5757
  1556  003F98  D000               	nop2	
  1557  003F9A  0012               	return		;funcret
  1558  003F9C                     __end_of_lcd_init:
  1559                           	callstack 0
  1560                           
  1561 ;; *************** function _lcd_SENSOR *****************
  1562 ;; Defined at:
  1563 ;;		line 124 in file "Main_Program.c"
  1564 ;; Parameters:    Size  Location     Type
  1565 ;;		None
  1566 ;; Auto vars:     Size  Location     Type
  1567 ;;		None
  1568 ;; Return value:  Size  Location     Type
  1569 ;;                  1    wreg      void 
  1570 ;; Registers used:
  1571 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1572 ;; Tracked objects:
  1573 ;;		On entry : 0/0
  1574 ;;		On exit  : 0/0
  1575 ;;		Unchanged: 0/0
  1576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1577 ;;      Params:         0       0       0       0       0       0       0
  1578 ;;      Locals:         0       0       0       0       0       0       0
  1579 ;;      Temps:          0       0       0       0       0       0       0
  1580 ;;      Totals:         0       0       0       0       0       0       0
  1581 ;;Total ram usage:        0 bytes
  1582 ;; Hardware stack levels used: 1
  1583 ;; Hardware stack levels required when called: 8
  1584 ;; This function calls:
  1585 ;;		_lcd_write
  1586 ;;		_sprintf
  1587 ;; This function is called by:
  1588 ;;		_main
  1589 ;; This function uses a non-reentrant model
  1590 ;;
  1591                           
  1592                           	psect	text3
  1593  003DBC                     __ptext3:
  1594                           	callstack 0
  1595  003DBC                     _lcd_SENSOR:
  1596                           	callstack 22
  1597  003DBC                     
  1598                           ;Main_Program.c: 126:    sprintf(BufferLCD_Temp,
  1599  003DBC  0E60               	movlw	low _BufferLCD_Temp
  1600  003DBE  0100               	movlb	0	; () banked
  1601  003DC0  6FBE               	movwf	sprintf@s& (0+255),b
  1602  003DC2  0E01               	movlw	high _BufferLCD_Temp
  1603  003DC4  6FBF               	movwf	(sprintf@s+1)& (0+255),b
  1604  003DC6  0E11               	movlw	low STR_1
  1605  003DC8  6FC0               	movwf	sprintf@fmt& (0+255),b
  1606  003DCA  0E06               	movlw	high STR_1
  1607  003DCC  6FC1               	movwf	(sprintf@fmt+1)& (0+255),b
  1608  003DCE  C0E5  F0C2         	movff	_TempSensor,?_sprintf+4
  1609  003DD2  C0E6  F0C3         	movff	_TempSensor+1,?_sprintf+5
  1610  003DD6  C0E7  F0C4         	movff	_TempSensor+2,?_sprintf+6
  1611  003DDA  C0E8  F0C5         	movff	_TempSensor+3,?_sprintf+7
  1612  003DDE  0E00               	movlw	0
  1613  003DE0  6FC7               	movwf	(?_sprintf+9)& (0+255),b
  1614  003DE2  0EDF               	movlw	223
  1615  003DE4  6FC6               	movwf	(?_sprintf+8)& (0+255),b
  1616  003DE6  EC2D  F020         	call	_sprintf	;wreg free
  1617                           
  1618                           ;Main_Program.c: 130:    sprintf(BufferLCD_Percent,
  1619  003DEA  0E50               	movlw	low _BufferLCD_Percent
  1620  003DEC  0100               	movlb	0	; () banked
  1621  003DEE  6FBE               	movwf	sprintf@s& (0+255),b
  1622  003DF0  0E01               	movlw	high _BufferLCD_Percent
  1623  003DF2  6FBF               	movwf	(sprintf@s+1)& (0+255),b
  1624  003DF4  0E20               	movlw	low STR_2
  1625  003DF6  6FC0               	movwf	sprintf@fmt& (0+255),b
  1626  003DF8  0E06               	movlw	high STR_2
  1627  003DFA  6FC1               	movwf	(sprintf@fmt+1)& (0+255),b
  1628  003DFC  C0E1  F0C2         	movff	_TempPercent,?_sprintf+4
  1629  003E00  C0E2  F0C3         	movff	_TempPercent+1,?_sprintf+5
  1630  003E04  C0E3  F0C4         	movff	_TempPercent+2,?_sprintf+6
  1631  003E08  C0E4  F0C5         	movff	_TempPercent+3,?_sprintf+7
  1632  003E0C  0E00               	movlw	0
  1633  003E0E  6FC7               	movwf	(?_sprintf+9)& (0+255),b
  1634  003E10  0E25               	movlw	37
  1635  003E12  6FC6               	movwf	(?_sprintf+8)& (0+255),b
  1636  003E14  EC2D  F020         	call	_sprintf	;wreg free
  1637  003E18                     
  1638                           ;Main_Program.c: 134:     lcd_write(1,1,"Temp:    ");
  1639  003E18  0E01               	movlw	1
  1640  003E1A  6E07               	movwf	lcd_write@col^0,c
  1641  003E1C  0E2E               	movlw	low STR_3
  1642  003E1E  6E08               	movwf	lcd_write@str^0,c
  1643  003E20  0E06               	movlw	high STR_3
  1644  003E22  6E09               	movwf	(lcd_write@str+1)^0,c
  1645  003E24  0E01               	movlw	1
  1646  003E26  EC31  F01F         	call	_lcd_write
  1647  003E2A                     
  1648                           ;Main_Program.c: 135:     lcd_write(1,10,BufferLCD_Temp);
  1649  003E2A  0E0A               	movlw	10
  1650  003E2C  6E07               	movwf	lcd_write@col^0,c
  1651  003E2E  0E60               	movlw	low _BufferLCD_Temp
  1652  003E30  6E08               	movwf	lcd_write@str^0,c
  1653  003E32  0E01               	movlw	high _BufferLCD_Temp
  1654  003E34  6E09               	movwf	(lcd_write@str+1)^0,c
  1655  003E36  0E01               	movlw	1
  1656  003E38  EC31  F01F         	call	_lcd_write
  1657  003E3C                     
  1658                           ;Main_Program.c: 136:     lcd_write(2,1,"Percent:");
  1659  003E3C  0E01               	movlw	1
  1660  003E3E  6E07               	movwf	lcd_write@col^0,c
  1661  003E40  0E38               	movlw	low STR_4
  1662  003E42  6E08               	movwf	lcd_write@str^0,c
  1663  003E44  0E06               	movlw	high STR_4
  1664  003E46  6E09               	movwf	(lcd_write@str+1)^0,c
  1665  003E48  0E02               	movlw	2
  1666  003E4A  EC31  F01F         	call	_lcd_write
  1667  003E4E                     
  1668                           ;Main_Program.c: 137:     lcd_write(2,10,BufferLCD_Percent);
  1669  003E4E  0E0A               	movlw	10
  1670  003E50  6E07               	movwf	lcd_write@col^0,c
  1671  003E52  0E50               	movlw	low _BufferLCD_Percent
  1672  003E54  6E08               	movwf	lcd_write@str^0,c
  1673  003E56  0E01               	movlw	high _BufferLCD_Percent
  1674  003E58  6E09               	movwf	(lcd_write@str+1)^0,c
  1675  003E5A  0E02               	movlw	2
  1676  003E5C  EC31  F01F         	call	_lcd_write
  1677  003E60  0012               	return		;funcret
  1678  003E62                     __end_of_lcd_SENSOR:
  1679                           	callstack 0
  1680                           
  1681 ;; *************** function _lcd_PERIPHERAL *****************
  1682 ;; Defined at:
  1683 ;;		line 140 in file "Main_Program.c"
  1684 ;; Parameters:    Size  Location     Type
  1685 ;;		None
  1686 ;; Auto vars:     Size  Location     Type
  1687 ;;		None
  1688 ;; Return value:  Size  Location     Type
  1689 ;;                  1    wreg      void 
  1690 ;; Registers used:
  1691 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1692 ;; Tracked objects:
  1693 ;;		On entry : 0/0
  1694 ;;		On exit  : 0/0
  1695 ;;		Unchanged: 0/0
  1696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1697 ;;      Params:         0       0       0       0       0       0       0
  1698 ;;      Locals:         0       0       0       0       0       0       0
  1699 ;;      Temps:          0       0       0       0       0       0       0
  1700 ;;      Totals:         0       0       0       0       0       0       0
  1701 ;;Total ram usage:        0 bytes
  1702 ;; Hardware stack levels used: 1
  1703 ;; Hardware stack levels required when called: 8
  1704 ;; This function calls:
  1705 ;;		_lcd_write
  1706 ;;		_sprintf
  1707 ;; This function is called by:
  1708 ;;		_main
  1709 ;; This function uses a non-reentrant model
  1710 ;;
  1711                           
  1712                           	psect	text4
  1713  0035C4                     __ptext4:
  1714                           	callstack 0
  1715  0035C4                     _lcd_PERIPHERAL:
  1716                           	callstack 22
  1717  0035C4                     
  1718                           ;Main_Program.c: 142:     sprintf(BufferFAN1,
  1719  0035C4  0EF1               	movlw	low _BufferFAN1
  1720  0035C6  0100               	movlb	0	; () banked
  1721  0035C8  6FBE               	movwf	sprintf@s& (0+255),b
  1722  0035CA  0E00               	movlw	high _BufferFAN1
  1723  0035CC  6FBF               	movwf	(sprintf@s+1)& (0+255),b
  1724  0035CE  0E5B               	movlw	low STR_5
  1725  0035D0  6FC0               	movwf	sprintf@fmt& (0+255),b
  1726  0035D2  0E06               	movlw	high STR_5
  1727  0035D4  6FC1               	movwf	(sprintf@fmt+1)& (0+255),b
  1728  0035D6  C0EF  F0C2         	movff	_FAN1,?_sprintf+4
  1729  0035DA  C0F0  F0C3         	movff	_FAN1+1,?_sprintf+5
  1730  0035DE  EC2D  F020         	call	_sprintf	;wreg free
  1731                           
  1732                           ;Main_Program.c: 146:     sprintf(BufferFAN2,
  1733  0035E2  0E78               	movlw	low _BufferFAN2
  1734  0035E4  0100               	movlb	0	; () banked
  1735  0035E6  6FBE               	movwf	sprintf@s& (0+255),b
  1736  0035E8  0E01               	movlw	high _BufferFAN2
  1737  0035EA  6FBF               	movwf	(sprintf@s+1)& (0+255),b
  1738  0035EC  0E5B               	movlw	low STR_5
  1739  0035EE  6FC0               	movwf	sprintf@fmt& (0+255),b
  1740  0035F0  0E06               	movlw	high STR_5
  1741  0035F2  6FC1               	movwf	(sprintf@fmt+1)& (0+255),b
  1742  0035F4  C0ED  F0C2         	movff	_FAN2,?_sprintf+4
  1743  0035F8  C0EE  F0C3         	movff	_FAN2+1,?_sprintf+5
  1744  0035FC  EC2D  F020         	call	_sprintf	;wreg free
  1745                           
  1746                           ;Main_Program.c: 150:     sprintf(BufferRES,
  1747  003600  0E70               	movlw	low _BufferRES
  1748  003602  0100               	movlb	0	; () banked
  1749  003604  6FBE               	movwf	sprintf@s& (0+255),b
  1750  003606  0E01               	movlw	high _BufferRES
  1751  003608  6FBF               	movwf	(sprintf@s+1)& (0+255),b
  1752  00360A  0E50               	movlw	low STR_7
  1753  00360C  6FC0               	movwf	sprintf@fmt& (0+255),b
  1754  00360E  0E06               	movlw	high STR_7
  1755  003610  6FC1               	movwf	(sprintf@fmt+1)& (0+255),b
  1756  003612  C0EB  F0C2         	movff	_RES,?_sprintf+4
  1757  003616  C0EC  F0C3         	movff	_RES+1,?_sprintf+5
  1758  00361A  EC2D  F020         	call	_sprintf	;wreg free
  1759  00361E                     
  1760                           ;Main_Program.c: 154:     lcd_write(1,1,"FAN 1:");
  1761  00361E  0E01               	movlw	1
  1762  003620  6E07               	movwf	lcd_write@col^0,c
  1763  003622  0E49               	movlw	low STR_8
  1764  003624  6E08               	movwf	lcd_write@str^0,c
  1765  003626  0E06               	movlw	high STR_8
  1766  003628  6E09               	movwf	(lcd_write@str+1)^0,c
  1767  00362A  0E01               	movlw	1
  1768  00362C  EC31  F01F         	call	_lcd_write
  1769  003630                     
  1770                           ;Main_Program.c: 155:     lcd_write(1,7,BufferFAN1);
  1771  003630  0E07               	movlw	7
  1772  003632  6E07               	movwf	lcd_write@col^0,c
  1773  003634  0EF1               	movlw	low _BufferFAN1
  1774  003636  6E08               	movwf	lcd_write@str^0,c
  1775  003638  0E00               	movlw	high _BufferFAN1
  1776  00363A  6E09               	movwf	(lcd_write@str+1)^0,c
  1777  00363C  0E01               	movlw	1
  1778  00363E  EC31  F01F         	call	_lcd_write
  1779  003642                     
  1780                           ;Main_Program.c: 156:     lcd_write(1,8," FAN 2:");
  1781  003642  0E08               	movlw	8
  1782  003644  6E07               	movwf	lcd_write@col^0,c
  1783  003646  0E41               	movlw	low STR_9
  1784  003648  6E08               	movwf	lcd_write@str^0,c
  1785  00364A  0E06               	movlw	high STR_9
  1786  00364C  6E09               	movwf	(lcd_write@str+1)^0,c
  1787  00364E  0E01               	movlw	1
  1788  003650  EC31  F01F         	call	_lcd_write
  1789  003654                     
  1790                           ;Main_Program.c: 157:     lcd_write(1,15,BufferFAN2);
  1791  003654  0E0F               	movlw	15
  1792  003656  6E07               	movwf	lcd_write@col^0,c
  1793  003658  0E78               	movlw	low _BufferFAN2
  1794  00365A  6E08               	movwf	lcd_write@str^0,c
  1795  00365C  0E01               	movlw	high _BufferFAN2
  1796  00365E  6E09               	movwf	(lcd_write@str+1)^0,c
  1797  003660  0E01               	movlw	1
  1798  003662  EC31  F01F         	call	_lcd_write
  1799  003666                     
  1800                           ;Main_Program.c: 158:     lcd_write(1,16," ");
  1801  003666  0E10               	movlw	16
  1802  003668  6E07               	movwf	lcd_write@col^0,c
  1803  00366A  0E0F               	movlw	low (STR_13+14)
  1804  00366C  6E08               	movwf	lcd_write@str^0,c
  1805  00366E  0E06               	movlw	high (STR_13+14)
  1806  003670  6E09               	movwf	(lcd_write@str+1)^0,c
  1807  003672  0E01               	movlw	1
  1808  003674  EC31  F01F         	call	_lcd_write
  1809  003678                     
  1810                           ;Main_Program.c: 159:     lcd_write(2,1,"RES:");
  1811  003678  0E01               	movlw	1
  1812  00367A  6E07               	movwf	lcd_write@col^0,c
  1813  00367C  0E56               	movlw	low STR_11
  1814  00367E  6E08               	movwf	lcd_write@str^0,c
  1815  003680  0E06               	movlw	high STR_11
  1816  003682  6E09               	movwf	(lcd_write@str+1)^0,c
  1817  003684  0E02               	movlw	2
  1818  003686  EC31  F01F         	call	_lcd_write
  1819  00368A                     
  1820                           ;Main_Program.c: 160:     lcd_write(2,5,BufferRES);
  1821  00368A  0E05               	movlw	5
  1822  00368C  6E07               	movwf	lcd_write@col^0,c
  1823  00368E  0E70               	movlw	low _BufferRES
  1824  003690  6E08               	movwf	lcd_write@str^0,c
  1825  003692  0E01               	movlw	high _BufferRES
  1826  003694  6E09               	movwf	(lcd_write@str+1)^0,c
  1827  003696  0E02               	movlw	2
  1828  003698  EC31  F01F         	call	_lcd_write
  1829  00369C                     
  1830                           ;Main_Program.c: 161:     lcd_write(2,6,"          ");
  1831  00369C  0E06               	movlw	6
  1832  00369E  6E07               	movwf	lcd_write@col^0,c
  1833  0036A0  0E06               	movlw	low (STR_13+5)
  1834  0036A2  6E08               	movwf	lcd_write@str^0,c
  1835  0036A4  0E06               	movlw	high (STR_13+5)
  1836  0036A6  6E09               	movwf	(lcd_write@str+1)^0,c
  1837  0036A8  0E02               	movlw	2
  1838  0036AA  EC31  F01F         	call	_lcd_write
  1839  0036AE  0012               	return		;funcret
  1840  0036B0                     __end_of_lcd_PERIPHERAL:
  1841                           	callstack 0
  1842                           
  1843 ;; *************** function _sprintf *****************
  1844 ;; Defined at:
  1845 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_sprintf.c"
  1846 ;; Parameters:    Size  Location     Type
  1847 ;;  s               2   62[BANK0 ] PTR unsigned char 
  1848 ;;		 -> BufferRES(8), BufferFAN2(8), BufferFAN1(8), BufferLCD_Percent(16), 
  1849 ;;		 -> BufferLCD_Temp(16), 
  1850 ;;  fmt             2   64[BANK0 ] PTR const unsigned char 
  1851 ;;		 -> STR_7(6), STR_6(5), STR_5(5), STR_2(14), 
  1852 ;;		 -> STR_1(15), 
  1853 ;; Auto vars:     Size  Location     Type
  1854 ;;  f              11   74[BANK0 ] struct _IO_FILE
  1855 ;;  ap              2   72[BANK0 ] PTR void [1]
  1856 ;;		 -> ?_sprintf(2), 
  1857 ;;  ret             2    0        int 
  1858 ;; Return value:  Size  Location     Type
  1859 ;;                  2   62[BANK0 ] int 
  1860 ;; Registers used:
  1861 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1862 ;; Tracked objects:
  1863 ;;		On entry : 0/0
  1864 ;;		On exit  : 0/0
  1865 ;;		Unchanged: 0/0
  1866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1867 ;;      Params:         0      10       0       0       0       0       0
  1868 ;;      Locals:         0      13       0       0       0       0       0
  1869 ;;      Temps:          0       0       0       0       0       0       0
  1870 ;;      Totals:         0      23       0       0       0       0       0
  1871 ;;Total ram usage:       23 bytes
  1872 ;; Hardware stack levels used: 1
  1873 ;; Hardware stack levels required when called: 7
  1874 ;; This function calls:
  1875 ;;		_vfprintf
  1876 ;; This function is called by:
  1877 ;;		_lcd_SENSOR
  1878 ;;		_lcd_PERIPHERAL
  1879 ;; This function uses a non-reentrant model
  1880 ;;
  1881                           
  1882                           	psect	text5
  1883  00405A                     __ptext5:
  1884                           	callstack 0
  1885  00405A                     _sprintf:
  1886                           	callstack 22
  1887  00405A  0EC2               	movlw	low (?_sprintf+4)
  1888  00405C  0100               	movlb	0	; () banked
  1889  00405E  6FC8               	movwf	sprintf@ap& (0+255),b
  1890  004060  0E00               	movlw	high (?_sprintf+4)
  1891  004062  6FC9               	movwf	(sprintf@ap+1)& (0+255),b
  1892  004064  C0BE  F0CA         	movff	sprintf@s,sprintf@f
  1893  004068  C0BF  F0CB         	movff	sprintf@s+1,sprintf@f+1
  1894  00406C                     
  1895                           ; BSR set to: 0
  1896  00406C  0E00               	movlw	0
  1897  00406E  6FCE               	movwf	(sprintf@f+4)& (0+255),b
  1898  004070  0E00               	movlw	0
  1899  004072  6FCD               	movwf	(sprintf@f+3)& (0+255),b
  1900  004074                     
  1901                           ; BSR set to: 0
  1902  004074  0E00               	movlw	0
  1903  004076  6FD4               	movwf	(sprintf@f+10)& (0+255),b
  1904  004078  0E00               	movlw	0
  1905  00407A  6FD3               	movwf	(sprintf@f+9)& (0+255),b
  1906  00407C                     
  1907                           ; BSR set to: 0
  1908  00407C  0ECA               	movlw	low sprintf@f
  1909  00407E  6FB8               	movwf	vfprintf@fp& (0+255),b
  1910  004080  0E00               	movlw	high sprintf@f
  1911  004082  6FB9               	movwf	(vfprintf@fp+1)& (0+255),b
  1912  004084  C0C0  F0BA         	movff	sprintf@fmt,vfprintf@fmt
  1913  004088  C0C1  F0BB         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1914  00408C  0EC8               	movlw	low sprintf@ap
  1915  00408E  6FBC               	movwf	vfprintf@ap& (0+255),b
  1916  004090  0E00               	movlw	high sprintf@ap
  1917  004092  6FBD               	movwf	(vfprintf@ap+1)& (0+255),b
  1918  004094  ECCE  F01F         	call	_vfprintf	;wreg free
  1919  004098  0100               	movlb	0	; () banked
  1920  00409A  51CD               	movf	(sprintf@f+3)& (0+255),w,b
  1921  00409C  25BE               	addwf	sprintf@s& (0+255),w,b
  1922  00409E  6ED9               	movwf	fsr2l,c
  1923  0040A0  51CE               	movf	(sprintf@f+4)& (0+255),w,b
  1924  0040A2  21BF               	addwfc	(sprintf@s+1)& (0+255),w,b
  1925  0040A4  6EDA               	movwf	fsr2h,c
  1926  0040A6  0E00               	movlw	0
  1927  0040A8  6EDF               	movwf	indf2,c
  1928  0040AA                     
  1929                           ; BSR set to: 0
  1930  0040AA  0012               	return		;funcret
  1931  0040AC                     __end_of_sprintf:
  1932                           	callstack 0
  1933                           
  1934 ;; *************** function _vfprintf *****************
  1935 ;; Defined at:
  1936 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1937 ;; Parameters:    Size  Location     Type
  1938 ;;  fp              2   56[BANK0 ] PTR struct _IO_FILE
  1939 ;;		 -> sprintf@f(11), 
  1940 ;;  fmt             2   58[BANK0 ] PTR const unsigned char 
  1941 ;;		 -> STR_7(6), STR_6(5), STR_5(5), STR_2(14), 
  1942 ;;		 -> STR_1(15), 
  1943 ;;  ap              2   60[BANK0 ] PTR PTR void 
  1944 ;;		 -> sprintf@ap(2), 
  1945 ;; Auto vars:     Size  Location     Type
  1946 ;;  cfmt            2  118[COMRAM] PTR unsigned char 
  1947 ;;		 -> STR_7(6), STR_6(5), STR_5(5), STR_2(14), 
  1948 ;;		 -> STR_1(15), 
  1949 ;; Return value:  Size  Location     Type
  1950 ;;                  2   56[BANK0 ] int 
  1951 ;; Registers used:
  1952 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1953 ;; Tracked objects:
  1954 ;;		On entry : 0/0
  1955 ;;		On exit  : 0/0
  1956 ;;		Unchanged: 0/0
  1957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1958 ;;      Params:         0       6       0       0       0       0       0
  1959 ;;      Locals:         2       0       0       0       0       0       0
  1960 ;;      Temps:          0       0       0       0       0       0       0
  1961 ;;      Totals:         2       6       0       0       0       0       0
  1962 ;;Total ram usage:        8 bytes
  1963 ;; Hardware stack levels used: 1
  1964 ;; Hardware stack levels required when called: 6
  1965 ;; This function calls:
  1966 ;;		_vfpfcnvrt
  1967 ;; This function is called by:
  1968 ;;		_sprintf
  1969 ;; This function uses a non-reentrant model
  1970 ;;
  1971                           
  1972                           	psect	text6
  1973  003F9C                     __ptext6:
  1974                           	callstack 0
  1975  003F9C                     _vfprintf:
  1976                           	callstack 22
  1977  003F9C                     
  1978                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1979  003F9C  C0BA  F077         	movff	vfprintf@fmt,vfprintf@cfmt
  1980  003FA0  C0BB  F078         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1981  003FA4                     
  1982                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1983  003FA4  0E00               	movlw	0
  1984  003FA6  0100               	movlb	0	; () banked
  1985  003FA8  6FEA               	movwf	(_nout+1)& (0+255),b
  1986  003FAA  0E00               	movlw	0
  1987  003FAC  6FE9               	movwf	_nout& (0+255),b
  1988                           
  1989                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1990  003FAE  EFEC  F01F         	goto	l4522
  1991  003FB2                     l4520:
  1992                           
  1993                           ; BSR set to: 0
  1994                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1995  003FB2  C0B8  F0B2         	movff	vfprintf@fp,vfpfcnvrt@fp
  1996  003FB6  C0B9  F0B3         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1997  003FBA  0E77               	movlw	low vfprintf@cfmt
  1998  003FBC  6FB4               	movwf	vfpfcnvrt@fmt& (0+255),b
  1999  003FBE  0E00               	movlw	high vfprintf@cfmt
  2000  003FC0  6FB5               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2001  003FC2  C0BC  F0B6         	movff	vfprintf@ap,vfpfcnvrt@ap
  2002  003FC6  C0BD  F0B7         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2003  003FCA  EC42  F009         	call	_vfpfcnvrt	;wreg free
  2004  003FCE  0100               	movlb	0	; () banked
  2005  003FD0  51B2               	movf	?_vfpfcnvrt& (0+255),w,b
  2006  003FD2  27E9               	addwf	_nout& (0+255),f,b
  2007  003FD4  51B3               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  2008  003FD6  23EA               	addwfc	(_nout+1)& (0+255),f,b
  2009  003FD8                     l4522:
  2010                           
  2011                           ; BSR set to: 0
  2012                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2013  003FD8  C077  FFF6         	movff	vfprintf@cfmt,tblptrl
  2014  003FDC  C078  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2015  003FE0                     	if	0	;tblptru may be non-zero
  2016  003FE0                     	endif
  2017  003FE0                     	if	0	;tblptru may be non-zero
  2018  003FE0                     	endif
  2019  003FE0  0008               	tblrd		*
  2020  003FE2  50F5               	movf	tablat,w,c
  2021  003FE4  0900               	iorlw	0
  2022  003FE6  A4D8               	btfss	status,2,c
  2023  003FE8  EFF8  F01F         	goto	u5411
  2024  003FEC  EFFA  F01F         	goto	u5410
  2025  003FF0                     u5411:
  2026  003FF0  EFD9  F01F         	goto	l4520
  2027  003FF4                     u5410:
  2028  003FF4                     
  2029                           ; BSR set to: 0
  2030                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  2031  003FF4  C0E9  F0B8         	movff	_nout,?_vfprintf
  2032  003FF8  C0EA  F0B9         	movff	_nout+1,?_vfprintf+1
  2033  003FFC                     
  2034                           ; BSR set to: 0
  2035  003FFC  0012               	return		;funcret
  2036  003FFE                     __end_of_vfprintf:
  2037                           	callstack 0
  2038                           
  2039 ;; *************** function _vfpfcnvrt *****************
  2040 ;; Defined at:
  2041 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2042 ;; Parameters:    Size  Location     Type
  2043 ;;  fp              2   50[BANK0 ] PTR struct _IO_FILE
  2044 ;;		 -> sprintf@f(11), 
  2045 ;;  fmt             2   52[BANK0 ] PTR PTR unsigned char 
  2046 ;;		 -> vfprintf@cfmt(2), 
  2047 ;;  ap              2   54[BANK0 ] PTR PTR void 
  2048 ;;		 -> sprintf@ap(2), 
  2049 ;; Auto vars:     Size  Location     Type
  2050 ;;  ll              8  100[COMRAM] long long 
  2051 ;;  llu             8    0        unsigned long long 
  2052 ;;  f               4  110[COMRAM] unsigned long long 
  2053 ;;  ct              3  114[COMRAM] unsigned char [3]
  2054 ;;  vp              3    0        PTR void 
  2055 ;;  cp              3    0        PTR unsigned char 
  2056 ;;  done            2  108[COMRAM] int 
  2057 ;;  i               2    0        int 
  2058 ;;  c               1  117[COMRAM] unsigned char 
  2059 ;; Return value:  Size  Location     Type
  2060 ;;                  2   50[BANK0 ] int 
  2061 ;; Registers used:
  2062 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2063 ;; Tracked objects:
  2064 ;;		On entry : 0/0
  2065 ;;		On exit  : 0/0
  2066 ;;		Unchanged: 0/0
  2067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2068 ;;      Params:         0       6       0       0       0       0       0
  2069 ;;      Locals:        18       0       0       0       0       0       0
  2070 ;;      Temps:          4       0       0       0       0       0       0
  2071 ;;      Totals:        22       6       0       0       0       0       0
  2072 ;;Total ram usage:       28 bytes
  2073 ;; Hardware stack levels used: 1
  2074 ;; Hardware stack levels required when called: 5
  2075 ;; This function calls:
  2076 ;;		_atoi
  2077 ;;		_ctoa
  2078 ;;		_dtoa
  2079 ;;		_efgtoa
  2080 ;;		_fputc
  2081 ;;		_isdigit
  2082 ;;		_isupper
  2083 ;;		_strncmp
  2084 ;;		_tolower
  2085 ;; This function is called by:
  2086 ;;		_vfprintf
  2087 ;; This function uses a non-reentrant model
  2088 ;;
  2089                           
  2090                           	psect	text7
  2091  001284                     __ptext7:
  2092                           	callstack 0
  2093  001284                     _vfpfcnvrt:
  2094                           	callstack 22
  2095  001284                     
  2096                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.36\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2097  001284  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2098  001288  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2099  00128C  CFDE FFF6          	movff	postinc2,tblptrl
  2100  001290  CFDD FFF7          	movff	postdec2,tblptrh
  2101  001294                     	if	0	;tblptru may be non-zero
  2102  001294                     	endif
  2103  001294                     	if	0	;tblptru may be non-zero
  2104  001294                     	endif
  2105  001294  0008               	tblrd		*
  2106  001296  50F5               	movf	tablat,w,c
  2107  001298  0A25               	xorlw	37
  2108  00129A  A4D8               	btfss	status,2,c
  2109  00129C  EF52  F009         	goto	u5221
  2110  0012A0  EF54  F009         	goto	u5220
  2111  0012A4                     u5221:
  2112  0012A4  EFA8  F00C         	goto	l4496
  2113  0012A8                     u5220:
  2114  0012A8                     
  2115                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2116  0012A8  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2117  0012AC  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2118  0012B0  2ADE               	incf	postinc2,f,c
  2119  0012B2  0E00               	movlw	0
  2120  0012B4  22DD               	addwfc	postdec2,f,c
  2121  0012B6                     
  2122                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2123  0012B6  0E00               	movlw	0
  2124  0012B8  6E7A               	movwf	(_width+1)^0,c
  2125  0012BA  0E00               	movlw	0
  2126  0012BC  6E79               	movwf	_width^0,c
  2127  0012BE  C079  F07D         	movff	_width,_flags
  2128  0012C2  C07A  F07E         	movff	_width+1,_flags+1
  2129  0012C6                     
  2130                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2131  0012C6  687B               	setf	_prec^0,c
  2132  0012C8  687C               	setf	(_prec+1)^0,c
  2133  0012CA                     
  2134                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  2135  0012CA  0E00               	movlw	0
  2136  0012CC  6E6E               	movwf	(vfpfcnvrt@done+1)^0,c
  2137  0012CE  0E00               	movlw	0
  2138  0012D0  6E6D               	movwf	vfpfcnvrt@done^0,c
  2139                           
  2140                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  2141  0012D2  EFB1  F009         	goto	l4386
  2142  0012D6                     l4360:
  2143                           
  2144                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  2145  0012D6  807D               	bsf	_flags^0,0,c
  2146  0012D8                     l4362:
  2147                           
  2148                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  2149  0012D8  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2150  0012DC  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2151  0012E0  2ADE               	incf	postinc2,f,c
  2152  0012E2  0E00               	movlw	0
  2153  0012E4  22DD               	addwfc	postdec2,f,c
  2154                           
  2155                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  2156  0012E6  EFB1  F009         	goto	l4386
  2157  0012EA                     l4364:
  2158                           
  2159                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  2160  0012EA  827D               	bsf	_flags^0,1,c
  2161  0012EC  EF6C  F009         	goto	l4362
  2162  0012F0                     l4368:
  2163                           
  2164                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  2165  0012F0  847D               	bsf	_flags^0,2,c
  2166  0012F2  EF6C  F009         	goto	l4362
  2167  0012F6                     l4372:
  2168                           
  2169                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  2170  0012F6  867D               	bsf	_flags^0,3,c
  2171  0012F8  EF6C  F009         	goto	l4362
  2172  0012FC                     l4376:
  2173                           
  2174                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  2175  0012FC  887D               	bsf	_flags^0,4,c
  2176  0012FE  EF6C  F009         	goto	l4362
  2177  001302                     l4380:
  2178                           
  2179                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  2180  001302  0E00               	movlw	0
  2181  001304  6E6E               	movwf	(vfpfcnvrt@done+1)^0,c
  2182  001306  0E01               	movlw	1
  2183  001308  6E6D               	movwf	vfpfcnvrt@done^0,c
  2184                           
  2185                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  2186  00130A  EFB1  F009         	goto	l4386
  2187  00130E                     l4384:
  2188  00130E  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2189  001312  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2190  001316  CFDE FFF6          	movff	postinc2,tblptrl
  2191  00131A  CFDD FFF7          	movff	postdec2,tblptrh
  2192  00131E                     	if	0	;tblptru may be non-zero
  2193  00131E                     	endif
  2194  00131E                     	if	0	;tblptru may be non-zero
  2195  00131E                     	endif
  2196  00131E  0008               	tblrd		*
  2197  001320  50F5               	movf	tablat,w,c
  2198  001322  6E61               	movwf	??_vfpfcnvrt^0,c
  2199  001324  6A62               	clrf	(??_vfpfcnvrt+1)^0,c
  2200                           
  2201                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2202                           ; Switch size 1, requested type "simple"
  2203                           ; Number of cases is 1, Range of values is 0 to 0
  2204                           ; switch strategies available:
  2205                           ; Name         Instructions Cycles
  2206                           ; simple_byte            4     3 (average)
  2207                           ;	Chosen strategy is simple_byte
  2208  001326  5062               	movf	(??_vfpfcnvrt+1)^0,w,c
  2209  001328  0A00               	xorlw	0	; case 0
  2210  00132A  B4D8               	btfsc	status,2,c
  2211  00132C  EF9A  F009         	goto	l4762
  2212  001330  EF81  F009         	goto	l4380
  2213  001334                     l4762:
  2214                           
  2215                           ; Switch size 1, requested type "simple"
  2216                           ; Number of cases is 5, Range of values is 32 to 48
  2217                           ; switch strategies available:
  2218                           ; Name         Instructions Cycles
  2219                           ; simple_byte           16     9 (average)
  2220                           ;	Chosen strategy is simple_byte
  2221  001334  5061               	movf	??_vfpfcnvrt^0,w,c
  2222  001336  0A20               	xorlw	32	; case 32
  2223  001338  B4D8               	btfsc	status,2,c
  2224  00133A  EF7B  F009         	goto	l4372
  2225  00133E  0A03               	xorlw	3	; case 35
  2226  001340  B4D8               	btfsc	status,2,c
  2227  001342  EF7E  F009         	goto	l4376
  2228  001346  0A08               	xorlw	8	; case 43
  2229  001348  B4D8               	btfsc	status,2,c
  2230  00134A  EF78  F009         	goto	l4368
  2231  00134E  0A06               	xorlw	6	; case 45
  2232  001350  B4D8               	btfsc	status,2,c
  2233  001352  EF6B  F009         	goto	l4360
  2234  001356  0A1D               	xorlw	29	; case 48
  2235  001358  B4D8               	btfsc	status,2,c
  2236  00135A  EF75  F009         	goto	l4364
  2237  00135E  EF81  F009         	goto	l4380
  2238  001362                     l4386:
  2239                           
  2240                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  2241  001362  506D               	movf	vfpfcnvrt@done^0,w,c
  2242  001364  106E               	iorwf	(vfpfcnvrt@done+1)^0,w,c
  2243  001366  B4D8               	btfsc	status,2,c
  2244  001368  EFB8  F009         	goto	u5231
  2245  00136C  EFBA  F009         	goto	u5230
  2246  001370                     u5231:
  2247  001370  EF87  F009         	goto	l4384
  2248  001374                     u5230:
  2249  001374                     
  2250                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  2251  001374  A07D               	btfss	_flags^0,0,c
  2252  001376  EFBF  F009         	goto	u5241
  2253  00137A  EFC1  F009         	goto	u5240
  2254  00137E                     u5241:
  2255  00137E  EFC2  F009         	goto	l4390
  2256  001382                     u5240:
  2257  001382                     
  2258                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  2259  001382  927D               	bcf	_flags^0,1,c
  2260  001384                     l4390:
  2261                           
  2262                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  2263  001384  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2264  001388  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2265  00138C  CFDE FFF6          	movff	postinc2,tblptrl
  2266  001390  CFDD FFF7          	movff	postdec2,tblptrh
  2267  001394                     	if	0	;tblptru may be non-zero
  2268  001394                     	endif
  2269  001394                     	if	0	;tblptru may be non-zero
  2270  001394                     	endif
  2271  001394  0008               	tblrd		*
  2272  001396  50F5               	movf	tablat,w,c
  2273  001398  0A2A               	xorlw	42
  2274  00139A  A4D8               	btfss	status,2,c
  2275  00139C  EFD2  F009         	goto	u5251
  2276  0013A0  EFD4  F009         	goto	u5250
  2277  0013A4                     u5251:
  2278  0013A4  EFFD  F009         	goto	l4398
  2279  0013A8                     u5250:
  2280  0013A8                     
  2281                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  2282  0013A8  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2283  0013AC  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2284  0013B0  2ADE               	incf	postinc2,f,c
  2285  0013B2  0E00               	movlw	0
  2286  0013B4  22DD               	addwfc	postdec2,f,c
  2287                           
  2288                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  2289  0013B6  C0B6  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2290  0013BA  C0B7  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2291  0013BE  CFDF F061          	movff	indf2,??_vfpfcnvrt
  2292  0013C2  0E02               	movlw	2
  2293  0013C4  26DE               	addwf	postinc2,f,c
  2294  0013C6  CFDF F062          	movff	indf2,??_vfpfcnvrt+1
  2295  0013CA  0E00               	movlw	0
  2296  0013CC  22DD               	addwfc	postdec2,f,c
  2297  0013CE  C061  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2298  0013D2  C062  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2299  0013D6  CFDE F079          	movff	postinc2,_width
  2300  0013DA  CFDD F07A          	movff	postdec2,_width+1
  2301  0013DE                     
  2302                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  2303  0013DE  BE7A               	btfsc	(_width+1)^0,7,c
  2304  0013E0  EFF6  F009         	goto	u5260
  2305  0013E4  EFF4  F009         	goto	u5261
  2306  0013E8                     u5261:
  2307  0013E8  EF33  F00A         	goto	l4406
  2308  0013EC                     u5260:
  2309  0013EC                     
  2310                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  2311  0013EC  807D               	bsf	_flags^0,0,c
  2312                           
  2313                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  2314  0013EE  6C79               	negf	_width^0,c
  2315  0013F0  1E7A               	comf	(_width+1)^0,f,c
  2316  0013F2  B0D8               	btfsc	status,0,c
  2317  0013F4  2A7A               	incf	(_width+1)^0,f,c
  2318  0013F6  EF33  F00A         	goto	l4406
  2319  0013FA                     l4398:
  2320                           
  2321                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  2322  0013FA  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2323  0013FE  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2324  001402  CFDE F008          	movff	postinc2,atoi@s
  2325  001406  CFDD F009          	movff	postdec2,atoi@s+1
  2326  00140A  ECB3  F018         	call	_atoi	;wreg free
  2327  00140E  C008  F079         	movff	?_atoi,_width
  2328  001412  C009  F07A         	movff	?_atoi+1,_width+1
  2329                           
  2330                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  2331  001416  EF14  F00A         	goto	l4404
  2332  00141A                     l4400:
  2333                           
  2334                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  2335  00141A  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2336  00141E  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2337  001422  2ADE               	incf	postinc2,f,c
  2338  001424  0E00               	movlw	0
  2339  001426  22DD               	addwfc	postdec2,f,c
  2340  001428                     l4404:
  2341  001428  0ED0               	movlw	208
  2342  00142A  6E61               	movwf	??_vfpfcnvrt^0,c
  2343  00142C  0EFF               	movlw	255
  2344  00142E  6E62               	movwf	(??_vfpfcnvrt+1)^0,c
  2345  001430  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2346  001434  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2347  001438  CFDE FFF6          	movff	postinc2,tblptrl
  2348  00143C  CFDD FFF7          	movff	postdec2,tblptrh
  2349  001440                     	if	0	;tblptru may be non-zero
  2350  001440                     	endif
  2351  001440                     	if	0	;tblptru may be non-zero
  2352  001440                     	endif
  2353  001440  0008               	tblrd		*
  2354  001442  50F5               	movf	tablat,w,c
  2355  001444  6E63               	movwf	(??_vfpfcnvrt+2)^0,c
  2356  001446  6A64               	clrf	(??_vfpfcnvrt+3)^0,c
  2357  001448  5061               	movf	??_vfpfcnvrt^0,w,c
  2358  00144A  2663               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2359  00144C  5062               	movf	(??_vfpfcnvrt+1)^0,w,c
  2360  00144E  2264               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2361  001450  5064               	movf	(??_vfpfcnvrt+3)^0,w,c
  2362  001452  E109               	bnz	u5270
  2363  001454  0E0A               	movlw	10
  2364  001456  5C63               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2365  001458  A0D8               	btfss	status,0,c
  2366  00145A  EF31  F00A         	goto	u5271
  2367  00145E  EF33  F00A         	goto	u5270
  2368  001462                     u5271:
  2369  001462  EF0D  F00A         	goto	l4400
  2370  001466                     u5270:
  2371  001466                     l4406:
  2372                           
  2373                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  2374  001466  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2375  00146A  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2376  00146E  CFDE FFF6          	movff	postinc2,tblptrl
  2377  001472  CFDD FFF7          	movff	postdec2,tblptrh
  2378  001476                     	if	0	;tblptru may be non-zero
  2379  001476                     	endif
  2380  001476                     	if	0	;tblptru may be non-zero
  2381  001476                     	endif
  2382  001476  0008               	tblrd		*
  2383  001478  50F5               	movf	tablat,w,c
  2384  00147A  0A2E               	xorlw	46
  2385  00147C  A4D8               	btfss	status,2,c
  2386  00147E  EF43  F00A         	goto	u5281
  2387  001482  EF45  F00A         	goto	u5280
  2388  001486                     u5281:
  2389  001486  EFB5  F00A         	goto	l4424
  2390  00148A                     u5280:
  2391  00148A                     
  2392                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  2393  00148A  0E00               	movlw	0
  2394  00148C  6E7C               	movwf	(_prec+1)^0,c
  2395  00148E  0E00               	movlw	0
  2396  001490  6E7B               	movwf	_prec^0,c
  2397  001492                     
  2398                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  2399  001492  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2400  001496  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2401  00149A  2ADE               	incf	postinc2,f,c
  2402  00149C  0E00               	movlw	0
  2403  00149E  22DD               	addwfc	postdec2,f,c
  2404  0014A0                     
  2405                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  2406  0014A0  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2407  0014A4  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2408  0014A8  CFDE FFF6          	movff	postinc2,tblptrl
  2409  0014AC  CFDD FFF7          	movff	postdec2,tblptrh
  2410  0014B0                     	if	0	;tblptru may be non-zero
  2411  0014B0                     	endif
  2412  0014B0                     	if	0	;tblptru may be non-zero
  2413  0014B0                     	endif
  2414  0014B0  0008               	tblrd		*
  2415  0014B2  50F5               	movf	tablat,w,c
  2416  0014B4  0A2A               	xorlw	42
  2417  0014B6  A4D8               	btfss	status,2,c
  2418  0014B8  EF60  F00A         	goto	u5291
  2419  0014BC  EF62  F00A         	goto	u5290
  2420  0014C0                     u5291:
  2421  0014C0  EF7F  F00A         	goto	l4416
  2422  0014C4                     u5290:
  2423  0014C4                     
  2424                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  2425  0014C4  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2426  0014C8  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2427  0014CC  2ADE               	incf	postinc2,f,c
  2428  0014CE  0E00               	movlw	0
  2429  0014D0  22DD               	addwfc	postdec2,f,c
  2430                           
  2431                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  2432  0014D2  C0B6  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2433  0014D6  C0B7  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2434  0014DA  CFDF F061          	movff	indf2,??_vfpfcnvrt
  2435  0014DE  0E02               	movlw	2
  2436  0014E0  26DE               	addwf	postinc2,f,c
  2437  0014E2  CFDF F062          	movff	indf2,??_vfpfcnvrt+1
  2438  0014E6  0E00               	movlw	0
  2439  0014E8  22DD               	addwfc	postdec2,f,c
  2440  0014EA  C061  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2441  0014EE  C062  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2442  0014F2  CFDE F07B          	movff	postinc2,_prec
  2443  0014F6  CFDD F07C          	movff	postdec2,_prec+1
  2444                           
  2445                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  2446  0014FA  EFB5  F00A         	goto	l4424
  2447  0014FE                     l4416:
  2448                           
  2449                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  2450  0014FE  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2451  001502  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2452  001506  CFDE F008          	movff	postinc2,atoi@s
  2453  00150A  CFDD F009          	movff	postdec2,atoi@s+1
  2454  00150E  ECB3  F018         	call	_atoi	;wreg free
  2455  001512  C008  F07B         	movff	?_atoi,_prec
  2456  001516  C009  F07C         	movff	?_atoi+1,_prec+1
  2457                           
  2458                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  2459  00151A  EF96  F00A         	goto	l4422
  2460  00151E                     l4418:
  2461                           
  2462                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  2463  00151E  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2464  001522  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2465  001526  2ADE               	incf	postinc2,f,c
  2466  001528  0E00               	movlw	0
  2467  00152A  22DD               	addwfc	postdec2,f,c
  2468  00152C                     l4422:
  2469  00152C  0ED0               	movlw	208
  2470  00152E  6E61               	movwf	??_vfpfcnvrt^0,c
  2471  001530  0EFF               	movlw	255
  2472  001532  6E62               	movwf	(??_vfpfcnvrt+1)^0,c
  2473  001534  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2474  001538  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2475  00153C  CFDE FFF6          	movff	postinc2,tblptrl
  2476  001540  CFDD FFF7          	movff	postdec2,tblptrh
  2477  001544                     	if	0	;tblptru may be non-zero
  2478  001544                     	endif
  2479  001544                     	if	0	;tblptru may be non-zero
  2480  001544                     	endif
  2481  001544  0008               	tblrd		*
  2482  001546  50F5               	movf	tablat,w,c
  2483  001548  6E63               	movwf	(??_vfpfcnvrt+2)^0,c
  2484  00154A  6A64               	clrf	(??_vfpfcnvrt+3)^0,c
  2485  00154C  5061               	movf	??_vfpfcnvrt^0,w,c
  2486  00154E  2663               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2487  001550  5062               	movf	(??_vfpfcnvrt+1)^0,w,c
  2488  001552  2264               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2489  001554  5064               	movf	(??_vfpfcnvrt+3)^0,w,c
  2490  001556  E109               	bnz	u5300
  2491  001558  0E0A               	movlw	10
  2492  00155A  5C63               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2493  00155C  A0D8               	btfss	status,0,c
  2494  00155E  EFB3  F00A         	goto	u5301
  2495  001562  EFB5  F00A         	goto	u5300
  2496  001566                     u5301:
  2497  001566  EF8F  F00A         	goto	l4418
  2498  00156A                     u5300:
  2499  00156A                     l4424:
  2500                           
  2501                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  2502  00156A  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2503  00156E  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2504  001572  CFDE FFF6          	movff	postinc2,tblptrl
  2505  001576  CFDD FFF7          	movff	postdec2,tblptrh
  2506  00157A                     	if	0	;tblptru may be non-zero
  2507  00157A                     	endif
  2508  00157A                     	if	0	;tblptru may be non-zero
  2509  00157A                     	endif
  2510  00157A  0008               	tblrd		*
  2511  00157C  50F5               	movf	tablat,w,c
  2512  00157E  6E07               	movwf	tolower@c^0,c
  2513  001580  6A08               	clrf	(tolower@c+1)^0,c
  2514  001582  EC7F  F020         	call	_tolower	;wreg free
  2515  001586  5007               	movf	?_tolower^0,w,c
  2516  001588  6E73               	movwf	vfpfcnvrt@ct^0,c
  2517  00158A                     
  2518                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  2519  00158A  5073               	movf	vfpfcnvrt@ct^0,w,c
  2520  00158C  B4D8               	btfsc	status,2,c
  2521  00158E  EFCB  F00A         	goto	u5311
  2522  001592  EFCD  F00A         	goto	u5310
  2523  001596                     u5311:
  2524  001596  EF05  F00B         	goto	l4434
  2525  00159A                     u5310:
  2526  00159A                     
  2527                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  2528  00159A  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2529  00159E  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2530  0015A2  CFDE F061          	movff	postinc2,??_vfpfcnvrt
  2531  0015A6  CFDD F062          	movff	postdec2,??_vfpfcnvrt+1
  2532  0015AA  0E01               	movlw	1
  2533  0015AC  2661               	addwf	??_vfpfcnvrt^0,f,c
  2534  0015AE  0E00               	movlw	0
  2535  0015B0  2262               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2536  0015B2  C061  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2537  0015B6  C062  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2538  0015BA                     	if	0	;tblptru may be non-zero
  2539  0015BA                     	endif
  2540  0015BA                     	if	0	;tblptru may be non-zero
  2541  0015BA                     	endif
  2542  0015BA  0008               	tblrd		*
  2543  0015BC  50F5               	movf	tablat,w,c
  2544  0015BE  6E07               	movwf	tolower@c^0,c
  2545  0015C0  6A08               	clrf	(tolower@c+1)^0,c
  2546  0015C2  EC7F  F020         	call	_tolower	;wreg free
  2547  0015C6  5007               	movf	?_tolower^0,w,c
  2548  0015C8  6E74               	movwf	(vfpfcnvrt@ct+1)^0,c
  2549  0015CA                     
  2550                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  2551  0015CA  5074               	movf	(vfpfcnvrt@ct+1)^0,w,c
  2552  0015CC  B4D8               	btfsc	status,2,c
  2553  0015CE  EFEB  F00A         	goto	u5321
  2554  0015D2  EFED  F00A         	goto	u5320
  2555  0015D6                     u5321:
  2556  0015D6  EF05  F00B         	goto	l4434
  2557  0015DA                     u5320:
  2558  0015DA                     
  2559                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  2560  0015DA  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2561  0015DE  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2562  0015E2  CFDE F061          	movff	postinc2,??_vfpfcnvrt
  2563  0015E6  CFDD F062          	movff	postdec2,??_vfpfcnvrt+1
  2564  0015EA  0E02               	movlw	2
  2565  0015EC  2661               	addwf	??_vfpfcnvrt^0,f,c
  2566  0015EE  0E00               	movlw	0
  2567  0015F0  2262               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2568  0015F2  C061  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2569  0015F6  C062  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2570  0015FA                     	if	0	;tblptru may be non-zero
  2571  0015FA                     	endif
  2572  0015FA                     	if	0	;tblptru may be non-zero
  2573  0015FA                     	endif
  2574  0015FA  0008               	tblrd		*
  2575  0015FC  50F5               	movf	tablat,w,c
  2576  0015FE  6E07               	movwf	tolower@c^0,c
  2577  001600  6A08               	clrf	(tolower@c+1)^0,c
  2578  001602  EC7F  F020         	call	_tolower	;wreg free
  2579  001606  5007               	movf	?_tolower^0,w,c
  2580  001608  6E75               	movwf	(vfpfcnvrt@ct+2)^0,c
  2581  00160A                     l4434:
  2582                           
  2583                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 814:         if (
      +                          *fmt[0] == 'c') {
  2584  00160A  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2585  00160E  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2586  001612  CFDE FFF6          	movff	postinc2,tblptrl
  2587  001616  CFDD FFF7          	movff	postdec2,tblptrh
  2588  00161A                     	if	0	;tblptru may be non-zero
  2589  00161A                     	endif
  2590  00161A                     	if	0	;tblptru may be non-zero
  2591  00161A                     	endif
  2592  00161A  0008               	tblrd		*
  2593  00161C  50F5               	movf	tablat,w,c
  2594  00161E  0A63               	xorlw	99
  2595  001620  A4D8               	btfss	status,2,c
  2596  001622  EF15  F00B         	goto	u5331
  2597  001626  EF17  F00B         	goto	u5330
  2598  00162A                     u5331:
  2599  00162A  EF3E  F00B         	goto	l4442
  2600  00162E                     u5330:
  2601  00162E                     
  2602                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 815:             
      +                          ++*fmt;
  2603  00162E  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2604  001632  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2605  001636  2ADE               	incf	postinc2,f,c
  2606  001638  0E00               	movlw	0
  2607  00163A  22DD               	addwfc	postdec2,f,c
  2608                           
  2609                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 816:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2610  00163C  C0B6  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2611  001640  C0B7  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2612  001644  CFDF F061          	movff	indf2,??_vfpfcnvrt
  2613  001648  0E02               	movlw	2
  2614  00164A  26DE               	addwf	postinc2,f,c
  2615  00164C  CFDF F062          	movff	indf2,??_vfpfcnvrt+1
  2616  001650  0E00               	movlw	0
  2617  001652  22DD               	addwfc	postdec2,f,c
  2618  001654  C061  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2619  001658  C062  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2620  00165C  50DF               	movf	indf2,w,c
  2621  00165E  6E76               	movwf	vfpfcnvrt@c^0,c
  2622  001660                     
  2623                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 817:             
      +                          return ctoa(fp, c);
  2624  001660  C0B2  F00A         	movff	vfpfcnvrt@fp,ctoa@fp
  2625  001664  C0B3  F00B         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  2626  001668  C076  F00C         	movff	vfpfcnvrt@c,ctoa@c
  2627  00166C  EC35  F01C         	call	_ctoa	;wreg free
  2628  001670  C00A  F0B2         	movff	?_ctoa,?_vfpfcnvrt
  2629  001674  C00B  F0B3         	movff	?_ctoa+1,?_vfpfcnvrt+1
  2630  001678  EFC3  F00C         	goto	l1039
  2631  00167C                     l4442:
  2632                           
  2633                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2634  00167C  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2635  001680  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2636  001684  CFDE FFF6          	movff	postinc2,tblptrl
  2637  001688  CFDD FFF7          	movff	postdec2,tblptrh
  2638  00168C                     	if	0	;tblptru may be non-zero
  2639  00168C                     	endif
  2640  00168C                     	if	0	;tblptru may be non-zero
  2641  00168C                     	endif
  2642  00168C  0008               	tblrd		*
  2643  00168E  50F5               	movf	tablat,w,c
  2644  001690  0A64               	xorlw	100
  2645  001692  B4D8               	btfsc	status,2,c
  2646  001694  EF4E  F00B         	goto	u5341
  2647  001698  EF50  F00B         	goto	u5340
  2648  00169C                     u5341:
  2649  00169C  EF62  F00B         	goto	l4446
  2650  0016A0                     u5340:
  2651  0016A0  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2652  0016A4  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2653  0016A8  CFDE FFF6          	movff	postinc2,tblptrl
  2654  0016AC  CFDD FFF7          	movff	postdec2,tblptrh
  2655  0016B0                     	if	0	;tblptru may be non-zero
  2656  0016B0                     	endif
  2657  0016B0                     	if	0	;tblptru may be non-zero
  2658  0016B0                     	endif
  2659  0016B0  0008               	tblrd		*
  2660  0016B2  50F5               	movf	tablat,w,c
  2661  0016B4  0A69               	xorlw	105
  2662  0016B6  A4D8               	btfss	status,2,c
  2663  0016B8  EF60  F00B         	goto	u5351
  2664  0016BC  EF62  F00B         	goto	u5350
  2665  0016C0                     u5351:
  2666  0016C0  EFA2  F00B         	goto	l4452
  2667  0016C4                     u5350:
  2668  0016C4                     l4446:
  2669                           
  2670                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  2671  0016C4  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2672  0016C8  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2673  0016CC  2ADE               	incf	postinc2,f,c
  2674  0016CE  0E00               	movlw	0
  2675  0016D0  22DD               	addwfc	postdec2,f,c
  2676                           
  2677                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2678  0016D2  C0B6  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2679  0016D6  C0B7  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2680  0016DA  CFDF F061          	movff	indf2,??_vfpfcnvrt
  2681  0016DE  0E02               	movlw	2
  2682  0016E0  26DE               	addwf	postinc2,f,c
  2683  0016E2  CFDF F062          	movff	indf2,??_vfpfcnvrt+1
  2684  0016E6  0E00               	movlw	0
  2685  0016E8  22DD               	addwfc	postdec2,f,c
  2686  0016EA  C061  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2687  0016EE  C062  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2688  0016F2  CFDE F065          	movff	postinc2,vfpfcnvrt@ll
  2689  0016F6  CFDD F066          	movff	postdec2,vfpfcnvrt@ll+1
  2690  0016FA  0E00               	movlw	0
  2691  0016FC  BE66               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  2692  0016FE  0EFF               	movlw	-1
  2693  001700  6E67               	movwf	(vfpfcnvrt@ll+2)^0,c
  2694  001702  6E68               	movwf	(vfpfcnvrt@ll+3)^0,c
  2695  001704  6E69               	movwf	(vfpfcnvrt@ll+4)^0,c
  2696  001706  6E6A               	movwf	(vfpfcnvrt@ll+5)^0,c
  2697  001708  6E6B               	movwf	(vfpfcnvrt@ll+6)^0,c
  2698  00170A  6E6C               	movwf	(vfpfcnvrt@ll+7)^0,c
  2699  00170C                     
  2700                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  2701  00170C  C0B2  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2702  001710  C0B3  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2703  001714  C065  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  2704  001718  C066  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2705  00171C  C067  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2706  001720  C068  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2707  001724  C069  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2708  001728  C06A  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2709  00172C  C06B  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2710  001730  C06C  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2711  001734  EC06  F013         	call	_dtoa	;wreg free
  2712  001738  C01C  F0B2         	movff	?_dtoa,?_vfpfcnvrt
  2713  00173C  C01D  F0B3         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2714  001740  EFC3  F00C         	goto	l1039
  2715  001744                     l4452:
  2716                           
  2717                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  2718  001744  0E66               	movlw	102
  2719  001746  1873               	xorwf	vfpfcnvrt@ct^0,w,c
  2720  001748  A4D8               	btfss	status,2,c
  2721  00174A  EFA9  F00B         	goto	u5361
  2722  00174E  EFAB  F00B         	goto	u5360
  2723  001752                     u5361:
  2724  001752  EFEB  F00B         	goto	l4464
  2725  001756                     u5360:
  2726  001756                     
  2727                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  2728  001756  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2729  00175A  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2730  00175E  CFDE FFF6          	movff	postinc2,tblptrl
  2731  001762  CFDD FFF7          	movff	postdec2,tblptrh
  2732  001766                     	if	0	;tblptru may be non-zero
  2733  001766                     	endif
  2734  001766                     	if	0	;tblptru may be non-zero
  2735  001766                     	endif
  2736  001766  0008               	tblrd		*
  2737  001768  CFF5 F076          	movff	tablat,vfpfcnvrt@c
  2738  00176C                     
  2739                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  2740  00176C  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2741  001770  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2742  001774  2ADE               	incf	postinc2,f,c
  2743  001776  0E00               	movlw	0
  2744  001778  22DD               	addwfc	postdec2,f,c
  2745  00177A                     
  2746                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2747  00177A  C0B6  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2748  00177E  C0B7  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2749  001782  CFDF F061          	movff	indf2,??_vfpfcnvrt
  2750  001786  0E04               	movlw	4
  2751  001788  26DE               	addwf	postinc2,f,c
  2752  00178A  CFDF F062          	movff	indf2,??_vfpfcnvrt+1
  2753  00178E  0E00               	movlw	0
  2754  001790  22DD               	addwfc	postdec2,f,c
  2755  001792  C061  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2756  001796  C062  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2757  00179A  CFDE F06F          	movff	postinc2,vfpfcnvrt@f
  2758  00179E  CFDE F070          	movff	postinc2,vfpfcnvrt@f+1
  2759  0017A2  CFDE F071          	movff	postinc2,vfpfcnvrt@f+2
  2760  0017A6  CFDE F072          	movff	postinc2,vfpfcnvrt@f+3
  2761  0017AA                     l4460:
  2762                           
  2763                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  2764  0017AA  C0B2  F055         	movff	vfpfcnvrt@fp,efgtoa@fp
  2765  0017AE  C0B3  F056         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2766  0017B2  C06F  F057         	movff	vfpfcnvrt@f,efgtoa@f
  2767  0017B6  C070  F058         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2768  0017BA  C071  F059         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2769  0017BE  C072  F05A         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2770  0017C2  C076  F05B         	movff	vfpfcnvrt@c,efgtoa@c
  2771  0017C6  EC3A  F003         	call	_efgtoa	;wreg free
  2772  0017CA  C055  F0B2         	movff	?_efgtoa,?_vfpfcnvrt
  2773  0017CE  C056  F0B3         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2774  0017D2  EFC3  F00C         	goto	l1039
  2775  0017D6                     l4464:
  2776                           
  2777                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2778  0017D6  0E73               	movlw	low vfpfcnvrt@ct
  2779  0017D8  6E01               	movwf	strncmp@_l^0,c
  2780  0017DA  0E00               	movlw	high vfpfcnvrt@ct
  2781  0017DC  6E02               	movwf	(strncmp@_l+1)^0,c
  2782  0017DE  0E70               	movlw	low STR_23
  2783  0017E0  6E03               	movwf	strncmp@_r^0,c
  2784  0017E2  0E06               	movlw	high STR_23
  2785  0017E4  6E04               	movwf	(strncmp@_r+1)^0,c
  2786  0017E6  0E00               	movlw	0
  2787  0017E8  6E06               	movwf	(strncmp@n+1)^0,c
  2788  0017EA  0E02               	movlw	2
  2789  0017EC  6E05               	movwf	strncmp@n^0,c
  2790  0017EE  ECCA  F01B         	call	_strncmp	;wreg free
  2791  0017F2  5001               	movf	?_strncmp^0,w,c
  2792  0017F4  1002               	iorwf	(?_strncmp+1)^0,w,c
  2793  0017F6  A4D8               	btfss	status,2,c
  2794  0017F8  EF00  F00C         	goto	u5371
  2795  0017FC  EF02  F00C         	goto	u5370
  2796  001800                     u5371:
  2797  001800  EF70  F00C         	goto	l4480
  2798  001804                     u5370:
  2799  001804                     
  2800                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 952:             
      +                          c = (*fmt)[1];
  2801  001804  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2802  001808  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2803  00180C  CFDE F061          	movff	postinc2,??_vfpfcnvrt
  2804  001810  CFDD F062          	movff	postdec2,??_vfpfcnvrt+1
  2805  001814  0E01               	movlw	1
  2806  001816  2661               	addwf	??_vfpfcnvrt^0,f,c
  2807  001818  0E00               	movlw	0
  2808  00181A  2262               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2809  00181C  C061  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2810  001820  C062  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2811  001824                     	if	0	;tblptru may be non-zero
  2812  001824                     	endif
  2813  001824                     	if	0	;tblptru may be non-zero
  2814  001824                     	endif
  2815  001824  0008               	tblrd		*
  2816  001826  CFF5 F076          	movff	tablat,vfpfcnvrt@c
  2817  00182A  0EBF               	movlw	191
  2818  00182C  6E61               	movwf	??_vfpfcnvrt^0,c
  2819  00182E  0EFF               	movlw	255
  2820  001830  6E62               	movwf	(??_vfpfcnvrt+1)^0,c
  2821  001832  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2822  001836  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2823  00183A  CFDE FFF6          	movff	postinc2,tblptrl
  2824  00183E  CFDD FFF7          	movff	postdec2,tblptrh
  2825  001842                     	if	0	;tblptru may be non-zero
  2826  001842                     	endif
  2827  001842                     	if	0	;tblptru may be non-zero
  2828  001842                     	endif
  2829  001842  0008               	tblrd		*
  2830  001844  50F5               	movf	tablat,w,c
  2831  001846  6E63               	movwf	(??_vfpfcnvrt+2)^0,c
  2832  001848  6A64               	clrf	(??_vfpfcnvrt+3)^0,c
  2833  00184A  5061               	movf	??_vfpfcnvrt^0,w,c
  2834  00184C  2663               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2835  00184E  5062               	movf	(??_vfpfcnvrt+1)^0,w,c
  2836  001850  2264               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2837  001852  5064               	movf	(??_vfpfcnvrt+3)^0,w,c
  2838  001854  E107               	bnz	u5381
  2839  001856  0E1A               	movlw	26
  2840  001858  5C63               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2841  00185A  B0D8               	btfsc	status,0,c
  2842  00185C  EF32  F00C         	goto	u5381
  2843  001860  EF34  F00C         	goto	u5380
  2844  001864                     u5381:
  2845  001864  EF4E  F00C         	goto	l4474
  2846  001868                     u5380:
  2847  001868                     
  2848                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2849  001868  C0B6  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2850  00186C  C0B7  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2851  001870  CFDF F061          	movff	indf2,??_vfpfcnvrt
  2852  001874  0E04               	movlw	4
  2853  001876  26DE               	addwf	postinc2,f,c
  2854  001878  CFDF F062          	movff	indf2,??_vfpfcnvrt+1
  2855  00187C  0E00               	movlw	0
  2856  00187E  22DD               	addwfc	postdec2,f,c
  2857  001880  C061  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2858  001884  C062  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2859  001888  CFDE F06F          	movff	postinc2,vfpfcnvrt@f
  2860  00188C  CFDE F070          	movff	postinc2,vfpfcnvrt@f+1
  2861  001890  CFDE F071          	movff	postinc2,vfpfcnvrt@f+2
  2862  001894  CFDE F072          	movff	postinc2,vfpfcnvrt@f+3
  2863                           
  2864                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  2865  001898  EF66  F00C         	goto	l1048
  2866  00189C                     l4474:
  2867                           
  2868                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2869  00189C  C0B6  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2870  0018A0  C0B7  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2871  0018A4  CFDF F061          	movff	indf2,??_vfpfcnvrt
  2872  0018A8  0E04               	movlw	4
  2873  0018AA  26DE               	addwf	postinc2,f,c
  2874  0018AC  CFDF F062          	movff	indf2,??_vfpfcnvrt+1
  2875  0018B0  0E00               	movlw	0
  2876  0018B2  22DD               	addwfc	postdec2,f,c
  2877  0018B4  C061  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2878  0018B8  C062  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2879  0018BC  CFDE F06F          	movff	postinc2,vfpfcnvrt@f
  2880  0018C0  CFDE F070          	movff	postinc2,vfpfcnvrt@f+1
  2881  0018C4  CFDE F071          	movff	postinc2,vfpfcnvrt@f+2
  2882  0018C8  CFDE F072          	movff	postinc2,vfpfcnvrt@f+3
  2883  0018CC                     l1048:
  2884                           
  2885                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2886  0018CC  0E02               	movlw	2
  2887  0018CE  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2888  0018D2  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2889  0018D6  26DE               	addwf	postinc2,f,c
  2890  0018D8  0E00               	movlw	0
  2891  0018DA  22DD               	addwfc	postdec2,f,c
  2892  0018DC  EFD5  F00B         	goto	l4460
  2893  0018E0                     l4480:
  2894                           
  2895                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2896  0018E0  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2897  0018E4  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2898  0018E8  CFDE FFF6          	movff	postinc2,tblptrl
  2899  0018EC  CFDD FFF7          	movff	postdec2,tblptrh
  2900  0018F0                     	if	0	;tblptru may be non-zero
  2901  0018F0                     	endif
  2902  0018F0                     	if	0	;tblptru may be non-zero
  2903  0018F0                     	endif
  2904  0018F0  0008               	tblrd		*
  2905  0018F2  50F5               	movf	tablat,w,c
  2906  0018F4  0A25               	xorlw	37
  2907  0018F6  A4D8               	btfss	status,2,c
  2908  0018F8  EF80  F00C         	goto	u5391
  2909  0018FC  EF82  F00C         	goto	u5390
  2910  001900                     u5391:
  2911  001900  EF9A  F00C         	goto	l4490
  2912  001904                     u5390:
  2913  001904                     
  2914                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2915  001904  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2916  001908  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2917  00190C  2ADE               	incf	postinc2,f,c
  2918  00190E  0E00               	movlw	0
  2919  001910  22DD               	addwfc	postdec2,f,c
  2920  001912                     
  2921                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2922  001912  0E00               	movlw	0
  2923  001914  6E02               	movwf	(fputc@c+1)^0,c
  2924  001916  0E25               	movlw	37
  2925  001918  6E01               	movwf	fputc@c^0,c
  2926  00191A  C0B2  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2927  00191E  C0B3  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2928  001922  EC09  F01D         	call	_fputc	;wreg free
  2929  001926                     l4486:
  2930                           
  2931                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2932  001926  0E00               	movlw	0
  2933  001928  0100               	movlb	0	; () banked
  2934  00192A  6FB3               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2935  00192C  0E01               	movlw	1
  2936  00192E  6FB2               	movwf	?_vfpfcnvrt& (0+255),b
  2937  001930  EFC3  F00C         	goto	l1039
  2938  001934                     l4490:
  2939                           
  2940                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2941  001934  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2942  001938  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2943  00193C  2ADE               	incf	postinc2,f,c
  2944  00193E  0E00               	movlw	0
  2945  001940  22DD               	addwfc	postdec2,f,c
  2946  001942                     
  2947                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2948  001942  0E00               	movlw	0
  2949  001944  0100               	movlb	0	; () banked
  2950  001946  6FB3               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2951  001948  0E00               	movlw	0
  2952  00194A  6FB2               	movwf	?_vfpfcnvrt& (0+255),b
  2953  00194C  EFC3  F00C         	goto	l1039
  2954  001950                     l4496:
  2955                           
  2956                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2957  001950  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2958  001954  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2959  001958  CFDE FFF6          	movff	postinc2,tblptrl
  2960  00195C  CFDD FFF7          	movff	postdec2,tblptrh
  2961  001960                     	if	0	;tblptru may be non-zero
  2962  001960                     	endif
  2963  001960                     	if	0	;tblptru may be non-zero
  2964  001960                     	endif
  2965  001960  0008               	tblrd		*
  2966  001962  50F5               	movf	tablat,w,c
  2967  001964  6E01               	movwf	fputc@c^0,c
  2968  001966  6A02               	clrf	(fputc@c+1)^0,c
  2969  001968  C0B2  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2970  00196C  C0B3  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2971  001970  EC09  F01D         	call	_fputc	;wreg free
  2972  001974                     
  2973                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2974  001974  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2975  001978  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2976  00197C  2ADE               	incf	postinc2,f,c
  2977  00197E  0E00               	movlw	0
  2978  001980  22DD               	addwfc	postdec2,f,c
  2979  001982  EF93  F00C         	goto	l4486
  2980  001986                     l1039:
  2981  001986  0012               	return		;funcret
  2982  001988                     __end_of_vfpfcnvrt:
  2983                           	callstack 0
  2984                           
  2985 ;; *************** function _strncmp *****************
  2986 ;; Defined at:
  2987 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strncmp.c"
  2988 ;; Parameters:    Size  Location     Type
  2989 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  2990 ;;		 -> vfpfcnvrt@ct(3), 
  2991 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  2992 ;;		 -> STR_25(3), 
  2993 ;;  n               2    4[COMRAM] unsigned int 
  2994 ;; Auto vars:     Size  Location     Type
  2995 ;;  r               2    9[COMRAM] PTR const unsigned char 
  2996 ;;		 -> STR_25(3), 
  2997 ;;  l               2    7[COMRAM] PTR const unsigned char 
  2998 ;;		 -> vfpfcnvrt@ct(3), 
  2999 ;; Return value:  Size  Location     Type
  3000 ;;                  2    0[COMRAM] int 
  3001 ;; Registers used:
  3002 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3003 ;; Tracked objects:
  3004 ;;		On entry : 0/0
  3005 ;;		On exit  : 0/0
  3006 ;;		Unchanged: 0/0
  3007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3008 ;;      Params:         6       0       0       0       0       0       0
  3009 ;;      Locals:         4       0       0       0       0       0       0
  3010 ;;      Temps:          1       0       0       0       0       0       0
  3011 ;;      Totals:        11       0       0       0       0       0       0
  3012 ;;Total ram usage:       11 bytes
  3013 ;; Hardware stack levels used: 1
  3014 ;; This function calls:
  3015 ;;		Nothing
  3016 ;; This function is called by:
  3017 ;;		_vfpfcnvrt
  3018 ;; This function uses a non-reentrant model
  3019 ;;
  3020                           
  3021                           	psect	text8
  3022  003794                     __ptext8:
  3023                           	callstack 0
  3024  003794                     _strncmp:
  3025                           	callstack 26
  3026  003794  C001  F008         	movff	strncmp@_l,strncmp@l
  3027  003798  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  3028  00379C  C003  F00A         	movff	strncmp@_r,strncmp@r
  3029  0037A0  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  3030  0037A4  0605               	decf	strncmp@n^0,f,c
  3031  0037A6  A0D8               	btfss	status,0,c
  3032  0037A8  0606               	decf	(strncmp@n+1)^0,f,c
  3033  0037AA  2805               	incf	strncmp@n^0,w,c
  3034  0037AC  E106               	bnz	u5171
  3035  0037AE  2806               	incf	(strncmp@n+1)^0,w,c
  3036  0037B0  A4D8               	btfss	status,2,c
  3037  0037B2  EFDD  F01B         	goto	u5171
  3038  0037B6  EFDF  F01B         	goto	u5170
  3039  0037BA                     u5171:
  3040  0037BA  EFEC  F01B         	goto	l4318
  3041  0037BE                     u5170:
  3042  0037BE  0E00               	movlw	0
  3043  0037C0  6E02               	movwf	(?_strncmp+1)^0,c
  3044  0037C2  0E00               	movlw	0
  3045  0037C4  6E01               	movwf	?_strncmp^0,c
  3046  0037C6  EF34  F01C         	goto	l1170
  3047  0037CA                     l4316:
  3048  0037CA  4A08               	infsnz	strncmp@l^0,f,c
  3049  0037CC  2A09               	incf	(strncmp@l+1)^0,f,c
  3050  0037CE  4A0A               	infsnz	strncmp@r^0,f,c
  3051  0037D0  2A0B               	incf	(strncmp@r+1)^0,f,c
  3052  0037D2  0605               	decf	strncmp@n^0,f,c
  3053  0037D4  A0D8               	btfss	status,0,c
  3054  0037D6  0606               	decf	(strncmp@n+1)^0,f,c
  3055  0037D8                     l4318:
  3056  0037D8  C008  FFD9         	movff	strncmp@l,fsr2l
  3057  0037DC  C009  FFDA         	movff	strncmp@l+1,fsr2h
  3058  0037E0  50DF               	movf	indf2,w,c
  3059  0037E2  B4D8               	btfsc	status,2,c
  3060  0037E4  EFF6  F01B         	goto	u5181
  3061  0037E8  EFF8  F01B         	goto	u5180
  3062  0037EC                     u5181:
  3063  0037EC  EF23  F01C         	goto	l4326
  3064  0037F0                     u5180:
  3065  0037F0  C00A  FFF6         	movff	strncmp@r,tblptrl
  3066  0037F4  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3067  0037F8                     	if	0	;tblptru may be non-zero
  3068  0037F8                     	endif
  3069  0037F8                     	if	0	;tblptru may be non-zero
  3070  0037F8                     	endif
  3071  0037F8  0008               	tblrd		*
  3072  0037FA  50F5               	movf	tablat,w,c
  3073  0037FC  0900               	iorlw	0
  3074  0037FE  B4D8               	btfsc	status,2,c
  3075  003800  EF04  F01C         	goto	u5191
  3076  003804  EF06  F01C         	goto	u5190
  3077  003808                     u5191:
  3078  003808  EF23  F01C         	goto	l4326
  3079  00380C                     u5190:
  3080  00380C  5005               	movf	strncmp@n^0,w,c
  3081  00380E  1006               	iorwf	(strncmp@n+1)^0,w,c
  3082  003810  B4D8               	btfsc	status,2,c
  3083  003812  EF0D  F01C         	goto	u5201
  3084  003816  EF0F  F01C         	goto	u5200
  3085  00381A                     u5201:
  3086  00381A  EF23  F01C         	goto	l4326
  3087  00381E                     u5200:
  3088  00381E  C008  FFD9         	movff	strncmp@l,fsr2l
  3089  003822  C009  FFDA         	movff	strncmp@l+1,fsr2h
  3090  003826  50DF               	movf	indf2,w,c
  3091  003828  6E07               	movwf	??_strncmp^0,c
  3092  00382A  C00A  FFF6         	movff	strncmp@r,tblptrl
  3093  00382E  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3094  003832                     	if	0	;tblptru may be non-zero
  3095  003832                     	endif
  3096  003832                     	if	0	;tblptru may be non-zero
  3097  003832                     	endif
  3098  003832  0008               	tblrd		*
  3099  003834  50F5               	movf	tablat,w,c
  3100  003836  1807               	xorwf	??_strncmp^0,w,c
  3101  003838  B4D8               	btfsc	status,2,c
  3102  00383A  EF21  F01C         	goto	u5211
  3103  00383E  EF23  F01C         	goto	u5210
  3104  003842                     u5211:
  3105  003842  EFE5  F01B         	goto	l4316
  3106  003846                     u5210:
  3107  003846                     l4326:
  3108  003846  C008  FFD9         	movff	strncmp@l,fsr2l
  3109  00384A  C009  FFDA         	movff	strncmp@l+1,fsr2h
  3110  00384E  50DF               	movf	indf2,w,c
  3111  003850  6E07               	movwf	??_strncmp^0,c
  3112  003852  C00A  FFF6         	movff	strncmp@r,tblptrl
  3113  003856  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3114  00385A                     	if	0	;tblptru may be non-zero
  3115  00385A                     	endif
  3116  00385A                     	if	0	;tblptru may be non-zero
  3117  00385A                     	endif
  3118  00385A  0008               	tblrd		*
  3119  00385C  50F5               	movf	tablat,w,c
  3120  00385E  5C07               	subwf	??_strncmp^0,w,c
  3121  003860  6E01               	movwf	?_strncmp^0,c
  3122  003862  6A02               	clrf	(?_strncmp+1)^0,c
  3123  003864  A0D8               	btfss	status,0,c
  3124  003866  0602               	decf	(?_strncmp+1)^0,f,c
  3125  003868                     l1170:
  3126  003868  0012               	return		;funcret
  3127  00386A                     __end_of_strncmp:
  3128                           	callstack 0
  3129                           
  3130 ;; *************** function _efgtoa *****************
  3131 ;; Defined at:
  3132 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  3133 ;; Parameters:    Size  Location     Type
  3134 ;;  fp              2   84[COMRAM] PTR struct _IO_FILE
  3135 ;;		 -> sprintf@f(11), 
  3136 ;;  f               4   86[COMRAM] PTR struct _IO_FILE
  3137 ;;  c               1   90[COMRAM] unsigned char 
  3138 ;; Auto vars:     Size  Location     Type
  3139 ;;  u               4   46[BANK0 ] unsigned char 
  3140 ;;  g               4   38[BANK0 ] unsigned char 
  3141 ;;  l               4   32[BANK0 ] unsigned char 
  3142 ;;  h               4   28[BANK0 ] unsigned char 
  3143 ;;  ou              4   14[BANK0 ] unsigned char 
  3144 ;;  n               2   44[BANK0 ] int 
  3145 ;;  e               2   42[BANK0 ] int 
  3146 ;;  i               2   36[BANK0 ] int 
  3147 ;;  w               2   24[BANK0 ] int 
  3148 ;;  p               2   22[BANK0 ] int 
  3149 ;;  sign            2   20[BANK0 ] int 
  3150 ;;  d               2   18[BANK0 ] int 
  3151 ;;  m               2   12[BANK0 ] int 
  3152 ;;  ne              2   10[BANK0 ] int 
  3153 ;;  pp              2    8[BANK0 ] int 
  3154 ;;  t               2    6[BANK0 ] int 
  3155 ;;  mode            1   27[BANK0 ] unsigned char 
  3156 ;;  nmode           1   26[BANK0 ] unsigned char 
  3157 ;; Return value:  Size  Location     Type
  3158 ;;                  2   84[COMRAM] int 
  3159 ;; Registers used:
  3160 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3161 ;; Tracked objects:
  3162 ;;		On entry : 0/0
  3163 ;;		On exit  : 0/0
  3164 ;;		Unchanged: 0/0
  3165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3166 ;;      Params:         7       0       0       0       0       0       0
  3167 ;;      Locals:         0      50       0       0       0       0       0
  3168 ;;      Temps:          5       0       0       0       0       0       0
  3169 ;;      Totals:        12      50       0       0       0       0       0
  3170 ;;Total ram usage:       62 bytes
  3171 ;; Hardware stack levels used: 1
  3172 ;; Hardware stack levels required when called: 4
  3173 ;; This function calls:
  3174 ;;		___awdiv
  3175 ;;		___awmod
  3176 ;;		___fladd
  3177 ;;		___fldiv
  3178 ;;		___fleq
  3179 ;;		___flge
  3180 ;;		___flmul
  3181 ;;		___flneg
  3182 ;;		___flsub
  3183 ;;		___fltol
  3184 ;;		___fpclassifyf
  3185 ;;		_floorf
  3186 ;;		_isupper
  3187 ;;		_pad
  3188 ;;		_strcpy
  3189 ;;		_tolower
  3190 ;; This function is called by:
  3191 ;;		_vfpfcnvrt
  3192 ;; This function uses a non-reentrant model
  3193 ;;
  3194                           
  3195                           	psect	text9
  3196  000674                     __ptext9:
  3197                           	callstack 0
  3198  000674                     _efgtoa:
  3199                           	callstack 22
  3200  000674                     
  3201                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.36\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  3202  000674  0E00               	movlw	0
  3203  000676  0100               	movlb	0	; () banked
  3204  000678  6F95               	movwf	(efgtoa@sign+1)& (0+255),b
  3205  00067A  0E00               	movlw	0
  3206  00067C  6F94               	movwf	efgtoa@sign& (0+255),b
  3207  00067E                     
  3208                           ; BSR set to: 0
  3209                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 340:     g = f;
  3210  00067E  C057  F0A6         	movff	efgtoa@f,efgtoa@g
  3211  000682  C058  F0A7         	movff	efgtoa@f+1,efgtoa@g+1
  3212  000686  C059  F0A8         	movff	efgtoa@f+2,efgtoa@g+2
  3213  00068A  C05A  F0A9         	movff	efgtoa@f+3,efgtoa@g+3
  3214  00068E                     
  3215                           ; BSR set to: 0
  3216                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  3217  00068E  BFA9               	btfsc	(efgtoa@g+3)& (0+255),7,b
  3218  000690  EF4E  F003         	goto	u4650
  3219  000694  EF4C  F003         	goto	u4651
  3220  000698                     u4651:
  3221  000698  EF64  F003         	goto	l3982
  3222  00069C                     u4650:
  3223  00069C                     
  3224                           ; BSR set to: 0
  3225                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  3226  00069C  0E00               	movlw	0
  3227  00069E  6F95               	movwf	(efgtoa@sign+1)& (0+255),b
  3228  0006A0  0E01               	movlw	1
  3229  0006A2  6F94               	movwf	efgtoa@sign& (0+255),b
  3230  0006A4                     
  3231                           ; BSR set to: 0
  3232                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  3233  0006A4  C0A6  F001         	movff	efgtoa@g,___flneg@f1
  3234  0006A8  C0A7  F002         	movff	efgtoa@g+1,___flneg@f1+1
  3235  0006AC  C0A8  F003         	movff	efgtoa@g+2,___flneg@f1+2
  3236  0006B0  C0A9  F004         	movff	efgtoa@g+3,___flneg@f1+3
  3237  0006B4  EC42  F021         	call	___flneg	;wreg free
  3238  0006B8  C001  F0A6         	movff	?___flneg,efgtoa@g
  3239  0006BC  C002  F0A7         	movff	?___flneg+1,efgtoa@g+1
  3240  0006C0  C003  F0A8         	movff	?___flneg+2,efgtoa@g+2
  3241  0006C4  C004  F0A9         	movff	?___flneg+3,efgtoa@g+3
  3242  0006C8                     l3982:
  3243                           
  3244                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  3245  0006C8  0E00               	movlw	0
  3246  0006CA  0100               	movlb	0	; () banked
  3247  0006CC  6FAD               	movwf	(efgtoa@n+1)& (0+255),b
  3248  0006CE  0E00               	movlw	0
  3249  0006D0  6FAC               	movwf	efgtoa@n& (0+255),b
  3250  0006D2                     
  3251                           ; BSR set to: 0
  3252                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  3253  0006D2  C079  F098         	movff	_width,efgtoa@w
  3254  0006D6  C07A  F099         	movff	_width+1,efgtoa@w+1
  3255  0006DA                     
  3256                           ; BSR set to: 0
  3257                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  3258  0006DA  5194               	movf	efgtoa@sign& (0+255),w,b
  3259  0006DC  1195               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3260  0006DE  A4D8               	btfss	status,2,c
  3261  0006E0  EF74  F003         	goto	u4661
  3262  0006E4  EF76  F003         	goto	u4660
  3263  0006E8                     u4661:
  3264  0006E8  EF7D  F003         	goto	l3990
  3265  0006EC                     u4660:
  3266  0006EC                     
  3267                           ; BSR set to: 0
  3268  0006EC  A47D               	btfss	_flags^0,2,c
  3269  0006EE  EF7B  F003         	goto	u4671
  3270  0006F2  EF7D  F003         	goto	u4670
  3271  0006F6                     u4671:
  3272  0006F6  EF97  F003         	goto	l4002
  3273  0006FA                     u4670:
  3274  0006FA                     l3990:
  3275                           
  3276                           ; BSR set to: 0
  3277                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  3278  0006FA  5194               	movf	efgtoa@sign& (0+255),w,b
  3279  0006FC  1195               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3280  0006FE  A4D8               	btfss	status,2,c
  3281  000700  EF84  F003         	goto	u4681
  3282  000704  EF86  F003         	goto	u4680
  3283  000708                     u4681:
  3284  000708  EF8C  F003         	goto	l3994
  3285  00070C                     u4680:
  3286  00070C                     
  3287                           ; BSR set to: 0
  3288  00070C  0E00               	movlw	0
  3289  00070E  6F81               	movwf	(_efgtoa$1165+1)& (0+255),b
  3290  000710  0E2B               	movlw	43
  3291  000712  6F80               	movwf	_efgtoa$1165& (0+255),b
  3292  000714  EF90  F003         	goto	l3996
  3293  000718                     l3994:
  3294                           
  3295                           ; BSR set to: 0
  3296  000718  0E00               	movlw	0
  3297  00071A  6F81               	movwf	(_efgtoa$1165+1)& (0+255),b
  3298  00071C  0E2D               	movlw	45
  3299  00071E  6F80               	movwf	_efgtoa$1165& (0+255),b
  3300  000720                     l3996:
  3301                           
  3302                           ; BSR set to: 0
  3303  000720  C080  F100         	movff	_efgtoa$1165,_dbuf
  3304  000724                     
  3305                           ; BSR set to: 0
  3306                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 351:         ++n;
  3307  000724  4BAC               	infsnz	efgtoa@n& (0+255),f,b
  3308  000726  2BAD               	incf	(efgtoa@n+1)& (0+255),f,b
  3309  000728                     
  3310                           ; BSR set to: 0
  3311                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 352:         --w;
  3312  000728  0798               	decf	efgtoa@w& (0+255),f,b
  3313  00072A  A0D8               	btfss	status,0,c
  3314  00072C  0799               	decf	(efgtoa@w+1)& (0+255),f,b
  3315  00072E                     l4002:
  3316                           
  3317                           ; BSR set to: 0
  3318                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 356:     if (( __
      +                          fpclassifyf(g) == 1 )) {
  3319  00072E  C0A6  F001         	movff	efgtoa@g,___fpclassifyf@x
  3320  000732  C0A7  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3321  000736  C0A8  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3322  00073A  C0A9  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3323  00073E  EC63  F01A         	call	___fpclassifyf	;wreg free
  3324  000742  0401               	decf	?___fpclassifyf^0,w,c
  3325  000744  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3326  000746  A4D8               	btfss	status,2,c
  3327  000748  EFA8  F003         	goto	u4691
  3328  00074C  EFAA  F003         	goto	u4690
  3329  000750                     u4691:
  3330  000750  EFF5  F003         	goto	l4020
  3331  000754                     u4690:
  3332  000754  0EBF               	movlw	191
  3333  000756  6E5C               	movwf	??_efgtoa^0,c
  3334  000758  0EFF               	movlw	255
  3335  00075A  6E5D               	movwf	(??_efgtoa+1)^0,c
  3336  00075C  505B               	movf	efgtoa@c^0,w,c
  3337  00075E  6E5E               	movwf	(??_efgtoa+2)^0,c
  3338  000760  6A5F               	clrf	(??_efgtoa+3)^0,c
  3339  000762  505C               	movf	??_efgtoa^0,w,c
  3340  000764  265E               	addwf	(??_efgtoa+2)^0,f,c
  3341  000766  505D               	movf	(??_efgtoa+1)^0,w,c
  3342  000768  225F               	addwfc	(??_efgtoa+3)^0,f,c
  3343  00076A  505F               	movf	(??_efgtoa+3)^0,w,c
  3344  00076C  E107               	bnz	u4701
  3345  00076E  0E1A               	movlw	26
  3346  000770  5C5E               	subwf	(??_efgtoa+2)^0,w,c
  3347  000772  B0D8               	btfsc	status,0,c
  3348  000774  EFBE  F003         	goto	u4701
  3349  000778  EFC0  F003         	goto	u4700
  3350  00077C                     u4701:
  3351  00077C  EFCF  F003         	goto	l4012
  3352  000780                     u4700:
  3353  000780                     
  3354                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  3355  000780  0E00               	movlw	low _dbuf
  3356  000782  0100               	movlb	0	; () banked
  3357  000784  25AC               	addwf	efgtoa@n& (0+255),w,b
  3358  000786  6E01               	movwf	strcpy@dest^0,c
  3359  000788  0E01               	movlw	high _dbuf
  3360  00078A  21AD               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3361  00078C  6E02               	movwf	(strcpy@dest+1)^0,c
  3362  00078E  0E60               	movlw	low STR_15
  3363  000790  6E03               	movwf	strcpy@src^0,c
  3364  000792  0E06               	movlw	high STR_15
  3365  000794  6E04               	movwf	(strcpy@src+1)^0,c
  3366  000796  ECFF  F01F         	call	_strcpy	;wreg free
  3367                           
  3368                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  3369  00079A  EFDC  F003         	goto	l4014
  3370  00079E                     l4012:
  3371                           
  3372                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  3373  00079E  0E00               	movlw	low _dbuf
  3374  0007A0  0100               	movlb	0	; () banked
  3375  0007A2  25AC               	addwf	efgtoa@n& (0+255),w,b
  3376  0007A4  6E01               	movwf	strcpy@dest^0,c
  3377  0007A6  0E01               	movlw	high _dbuf
  3378  0007A8  21AD               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3379  0007AA  6E02               	movwf	(strcpy@dest+1)^0,c
  3380  0007AC  0E68               	movlw	low STR_16
  3381  0007AE  6E03               	movwf	strcpy@src^0,c
  3382  0007B0  0E06               	movlw	high STR_16
  3383  0007B2  6E04               	movwf	(strcpy@src+1)^0,c
  3384  0007B4  ECFF  F01F         	call	_strcpy	;wreg free
  3385  0007B8                     l4014:
  3386                           
  3387                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  3388  0007B8  0100               	movlb	0	; () banked
  3389  0007BA  0EFD               	movlw	253
  3390  0007BC  2798               	addwf	efgtoa@w& (0+255),f,b
  3391  0007BE  0EFF               	movlw	255
  3392  0007C0  2399               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3393  0007C2                     l4016:
  3394                           
  3395                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  3396  0007C2  C055  F011         	movff	efgtoa@fp,pad@fp
  3397  0007C6  C056  F012         	movff	efgtoa@fp+1,pad@fp+1
  3398  0007CA  0E00               	movlw	low _dbuf
  3399  0007CC  6E13               	movwf	pad@buf^0,c
  3400  0007CE  0E01               	movlw	high _dbuf
  3401  0007D0  6E14               	movwf	(pad@buf+1)^0,c
  3402  0007D2  C098  F015         	movff	efgtoa@w,pad@p
  3403  0007D6  C099  F016         	movff	efgtoa@w+1,pad@p+1
  3404  0007DA  ECD0  F01D         	call	_pad	;wreg free
  3405  0007DE  C011  F055         	movff	?_pad,?_efgtoa
  3406  0007E2  C012  F056         	movff	?_pad+1,?_efgtoa+1
  3407  0007E6  EF41  F009         	goto	l933
  3408  0007EA                     l4020:
  3409                           
  3410                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 365:     if (( __
      +                          fpclassifyf(g) == 0 )) {
  3411  0007EA  C0A6  F001         	movff	efgtoa@g,___fpclassifyf@x
  3412  0007EE  C0A7  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3413  0007F2  C0A8  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3414  0007F6  C0A9  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3415  0007FA  EC63  F01A         	call	___fpclassifyf	;wreg free
  3416  0007FE  5001               	movf	?___fpclassifyf^0,w,c
  3417  000800  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3418  000802  A4D8               	btfss	status,2,c
  3419  000804  EF06  F004         	goto	u4711
  3420  000808  EF08  F004         	goto	u4710
  3421  00080C                     u4711:
  3422  00080C  EF3C  F004         	goto	l4038
  3423  000810                     u4710:
  3424  000810  0EBF               	movlw	191
  3425  000812  6E5C               	movwf	??_efgtoa^0,c
  3426  000814  0EFF               	movlw	255
  3427  000816  6E5D               	movwf	(??_efgtoa+1)^0,c
  3428  000818  505B               	movf	efgtoa@c^0,w,c
  3429  00081A  6E5E               	movwf	(??_efgtoa+2)^0,c
  3430  00081C  6A5F               	clrf	(??_efgtoa+3)^0,c
  3431  00081E  505C               	movf	??_efgtoa^0,w,c
  3432  000820  265E               	addwf	(??_efgtoa+2)^0,f,c
  3433  000822  505D               	movf	(??_efgtoa+1)^0,w,c
  3434  000824  225F               	addwfc	(??_efgtoa+3)^0,f,c
  3435  000826  505F               	movf	(??_efgtoa+3)^0,w,c
  3436  000828  E107               	bnz	u4721
  3437  00082A  0E1A               	movlw	26
  3438  00082C  5C5E               	subwf	(??_efgtoa+2)^0,w,c
  3439  00082E  B0D8               	btfsc	status,0,c
  3440  000830  EF1C  F004         	goto	u4721
  3441  000834  EF1E  F004         	goto	u4720
  3442  000838                     u4721:
  3443  000838  EF2D  F004         	goto	l4030
  3444  00083C                     u4720:
  3445  00083C                     
  3446                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  3447  00083C  0E00               	movlw	low _dbuf
  3448  00083E  0100               	movlb	0	; () banked
  3449  000840  25AC               	addwf	efgtoa@n& (0+255),w,b
  3450  000842  6E01               	movwf	strcpy@dest^0,c
  3451  000844  0E01               	movlw	high _dbuf
  3452  000846  21AD               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3453  000848  6E02               	movwf	(strcpy@dest+1)^0,c
  3454  00084A  0E64               	movlw	low STR_19
  3455  00084C  6E03               	movwf	strcpy@src^0,c
  3456  00084E  0E06               	movlw	high STR_19
  3457  000850  6E04               	movwf	(strcpy@src+1)^0,c
  3458  000852  ECFF  F01F         	call	_strcpy	;wreg free
  3459                           
  3460                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  3461  000856  EFDC  F003         	goto	l4014
  3462  00085A                     l4030:
  3463                           
  3464                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  3465  00085A  0E00               	movlw	low _dbuf
  3466  00085C  0100               	movlb	0	; () banked
  3467  00085E  25AC               	addwf	efgtoa@n& (0+255),w,b
  3468  000860  6E01               	movwf	strcpy@dest^0,c
  3469  000862  0E01               	movlw	high _dbuf
  3470  000864  21AD               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3471  000866  6E02               	movwf	(strcpy@dest+1)^0,c
  3472  000868  0E6C               	movlw	low STR_20
  3473  00086A  6E03               	movwf	strcpy@src^0,c
  3474  00086C  0E06               	movlw	high STR_20
  3475  00086E  6E04               	movwf	(strcpy@src+1)^0,c
  3476  000870  ECFF  F01F         	call	_strcpy	;wreg free
  3477  000874  EFDC  F003         	goto	l4014
  3478  000878                     l4038:
  3479                           
  3480                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  3481  000878  0E00               	movlw	0
  3482  00087A  0100               	movlb	0	; () banked
  3483  00087C  6FAE               	movwf	efgtoa@u& (0+255),b
  3484  00087E  0E00               	movlw	0
  3485  000880  6FAF               	movwf	(efgtoa@u+1)& (0+255),b
  3486  000882  0E80               	movlw	128
  3487  000884  6FB0               	movwf	(efgtoa@u+2)& (0+255),b
  3488  000886  0E3F               	movlw	63
  3489  000888  6FB1               	movwf	(efgtoa@u+3)& (0+255),b
  3490                           
  3491                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  3492  00088A  0E00               	movlw	0
  3493  00088C  6FAB               	movwf	(efgtoa@e+1)& (0+255),b
  3494  00088E  0E00               	movlw	0
  3495  000890  6FAA               	movwf	efgtoa@e& (0+255),b
  3496  000892                     
  3497                           ; BSR set to: 0
  3498                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  3499  000892  C0A6  F001         	movff	efgtoa@g,___fleq@ff1
  3500  000896  C0A7  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  3501  00089A  C0A8  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  3502  00089E  C0A9  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  3503  0008A2  0E00               	movlw	0
  3504  0008A4  6E05               	movwf	___fleq@ff2^0,c
  3505  0008A6  0E00               	movlw	0
  3506  0008A8  6E06               	movwf	(___fleq@ff2+1)^0,c
  3507  0008AA  0E00               	movlw	0
  3508  0008AC  6E07               	movwf	(___fleq@ff2+2)^0,c
  3509  0008AE  0E00               	movlw	0
  3510  0008B0  6E08               	movwf	(___fleq@ff2+3)^0,c
  3511  0008B2  EC89  F01E         	call	___fleq	;wreg free
  3512  0008B6  B0D8               	btfsc	status,0,c
  3513  0008B8  EF60  F004         	goto	u4731
  3514  0008BC  EF62  F004         	goto	u4730
  3515  0008C0                     u4731:
  3516  0008C0  EFE5  F004         	goto	l4056
  3517  0008C4                     u4730:
  3518  0008C4  EF81  F004         	goto	l4048
  3519  0008C8                     l4044:
  3520                           
  3521                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  3522  0008C8  C0AE  F00F         	movff	efgtoa@u,___flmul@b
  3523  0008CC  C0AF  F010         	movff	efgtoa@u+1,___flmul@b+1
  3524  0008D0  C0B0  F011         	movff	efgtoa@u+2,___flmul@b+2
  3525  0008D4  C0B1  F012         	movff	efgtoa@u+3,___flmul@b+3
  3526  0008D8  0E00               	movlw	0
  3527  0008DA  6E13               	movwf	___flmul@a^0,c
  3528  0008DC  0E00               	movlw	0
  3529  0008DE  6E14               	movwf	(___flmul@a+1)^0,c
  3530  0008E0  0E20               	movlw	32
  3531  0008E2  6E15               	movwf	(___flmul@a+2)^0,c
  3532  0008E4  0E41               	movlw	65
  3533  0008E6  6E16               	movwf	(___flmul@a+3)^0,c
  3534  0008E8  EC24  F00F         	call	___flmul	;wreg free
  3535  0008EC  C00F  F0AE         	movff	?___flmul,efgtoa@u
  3536  0008F0  C010  F0AF         	movff	?___flmul+1,efgtoa@u+1
  3537  0008F4  C011  F0B0         	movff	?___flmul+2,efgtoa@u+2
  3538  0008F8  C012  F0B1         	movff	?___flmul+3,efgtoa@u+3
  3539  0008FC                     
  3540                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  3541  0008FC  0100               	movlb	0	; () banked
  3542  0008FE  4BAA               	infsnz	efgtoa@e& (0+255),f,b
  3543  000900  2BAB               	incf	(efgtoa@e+1)& (0+255),f,b
  3544  000902                     l4048:
  3545                           
  3546                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  3547  000902  C0A6  F028         	movff	efgtoa@g,___flge@ff1
  3548  000906  C0A7  F029         	movff	efgtoa@g+1,___flge@ff1+1
  3549  00090A  C0A8  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  3550  00090E  C0A9  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  3551  000912  0E00               	movlw	0
  3552  000914  6E13               	movwf	___flmul@a^0,c
  3553  000916  0E00               	movlw	0
  3554  000918  6E14               	movwf	(___flmul@a+1)^0,c
  3555  00091A  0E20               	movlw	32
  3556  00091C  6E15               	movwf	(___flmul@a+2)^0,c
  3557  00091E  0E41               	movlw	65
  3558  000920  6E16               	movwf	(___flmul@a+3)^0,c
  3559  000922  C0AE  F00F         	movff	efgtoa@u,___flmul@b
  3560  000926  C0AF  F010         	movff	efgtoa@u+1,___flmul@b+1
  3561  00092A  C0B0  F011         	movff	efgtoa@u+2,___flmul@b+2
  3562  00092E  C0B1  F012         	movff	efgtoa@u+3,___flmul@b+3
  3563  000932  EC24  F00F         	call	___flmul	;wreg free
  3564  000936  C00F  F02C         	movff	?___flmul,___flge@ff2
  3565  00093A  C010  F02D         	movff	?___flmul+1,___flge@ff2+1
  3566  00093E  C011  F02E         	movff	?___flmul+2,___flge@ff2+2
  3567  000942  C012  F02F         	movff	?___flmul+3,___flge@ff2+3
  3568  000946  ECE1  F019         	call	___flge	;wreg free
  3569  00094A  B0D8               	btfsc	status,0,c
  3570  00094C  EFAA  F004         	goto	u4741
  3571  000950  EFAC  F004         	goto	u4740
  3572  000954                     u4741:
  3573  000954  EF64  F004         	goto	l4044
  3574  000958                     u4740:
  3575  000958  EFCC  F004         	goto	l4054
  3576  00095C                     l4050:
  3577                           
  3578                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  3579  00095C  C0AE  F028         	movff	efgtoa@u,___fldiv@b
  3580  000960  C0AF  F029         	movff	efgtoa@u+1,___fldiv@b+1
  3581  000964  C0B0  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  3582  000968  C0B1  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  3583  00096C  0E00               	movlw	0
  3584  00096E  6E2C               	movwf	___fldiv@a^0,c
  3585  000970  0E00               	movlw	0
  3586  000972  6E2D               	movwf	(___fldiv@a+1)^0,c
  3587  000974  0E20               	movlw	32
  3588  000976  6E2E               	movwf	(___fldiv@a+2)^0,c
  3589  000978  0E41               	movlw	65
  3590  00097A  6E2F               	movwf	(___fldiv@a+3)^0,c
  3591  00097C  EC39  F011         	call	___fldiv	;wreg free
  3592  000980  C028  F0AE         	movff	?___fldiv,efgtoa@u
  3593  000984  C029  F0AF         	movff	?___fldiv+1,efgtoa@u+1
  3594  000988  C02A  F0B0         	movff	?___fldiv+2,efgtoa@u+2
  3595  00098C  C02B  F0B1         	movff	?___fldiv+3,efgtoa@u+3
  3596  000990                     
  3597                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  3598  000990  0100               	movlb	0	; () banked
  3599  000992  07AA               	decf	efgtoa@e& (0+255),f,b
  3600  000994  A0D8               	btfss	status,0,c
  3601  000996  07AB               	decf	(efgtoa@e+1)& (0+255),f,b
  3602  000998                     l4054:
  3603                           
  3604                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  3605  000998  C0A6  F028         	movff	efgtoa@g,___flge@ff1
  3606  00099C  C0A7  F029         	movff	efgtoa@g+1,___flge@ff1+1
  3607  0009A0  C0A8  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  3608  0009A4  C0A9  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  3609  0009A8  C0AE  F02C         	movff	efgtoa@u,___flge@ff2
  3610  0009AC  C0AF  F02D         	movff	efgtoa@u+1,___flge@ff2+1
  3611  0009B0  C0B0  F02E         	movff	efgtoa@u+2,___flge@ff2+2
  3612  0009B4  C0B1  F02F         	movff	efgtoa@u+3,___flge@ff2+3
  3613  0009B8  ECE1  F019         	call	___flge	;wreg free
  3614  0009BC  A0D8               	btfss	status,0,c
  3615  0009BE  EFE3  F004         	goto	u4751
  3616  0009C2  EFE5  F004         	goto	u4750
  3617  0009C6                     u4751:
  3618  0009C6  EFAE  F004         	goto	l4050
  3619  0009CA                     u4750:
  3620  0009CA                     l4056:
  3621                           
  3622                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  3623  0009CA  C05B  F007         	movff	efgtoa@c,tolower@c
  3624  0009CE  6A08               	clrf	(tolower@c+1)^0,c
  3625  0009D0  EC7F  F020         	call	_tolower	;wreg free
  3626  0009D4  5007               	movf	?_tolower^0,w,c
  3627  0009D6  0100               	movlb	0	; () banked
  3628  0009D8  6F9B               	movwf	efgtoa@mode& (0+255),b
  3629  0009DA                     
  3630                           ; BSR set to: 0
  3631                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  3632  0009DA  C09B  F09A         	movff	efgtoa@mode,efgtoa@nmode
  3633  0009DE                     
  3634                           ; BSR set to: 0
  3635                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  3636  0009DE  0E67               	movlw	103
  3637  0009E0  199B               	xorwf	efgtoa@mode& (0+255),w,b
  3638  0009E2  A4D8               	btfss	status,2,c
  3639  0009E4  EFF6  F004         	goto	u4761
  3640  0009E8  EFF8  F004         	goto	u4760
  3641  0009EC                     u4761:
  3642  0009EC  EF1E  F005         	goto	l4070
  3643  0009F0                     u4760:
  3644  0009F0                     
  3645                           ; BSR set to: 0
  3646                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  3647  0009F0  507B               	movf	_prec^0,w,c
  3648  0009F2  107C               	iorwf	(_prec+1)^0,w,c
  3649  0009F4  A4D8               	btfss	status,2,c
  3650  0009F6  EFFF  F004         	goto	u4771
  3651  0009FA  EF01  F005         	goto	u4770
  3652  0009FE                     u4771:
  3653  0009FE  EF05  F005         	goto	l4066
  3654  000A02                     u4770:
  3655  000A02                     
  3656                           ; BSR set to: 0
  3657                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  3658  000A02  0E00               	movlw	0
  3659  000A04  6E7C               	movwf	(_prec+1)^0,c
  3660  000A06  0E01               	movlw	1
  3661  000A08  6E7B               	movwf	_prec^0,c
  3662  000A0A                     l4066:
  3663                           
  3664                           ; BSR set to: 0
  3665                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  3666  000A0A  BE7C               	btfsc	(_prec+1)^0,7,c
  3667  000A0C  EF12  F005         	goto	u4780
  3668  000A10  507C               	movf	(_prec+1)^0,w,c
  3669  000A12  E106               	bnz	u4781
  3670  000A14  047B               	decf	_prec^0,w,c
  3671  000A16  B0D8               	btfsc	status,0,c
  3672  000A18  EF10  F005         	goto	u4781
  3673  000A1C  EF12  F005         	goto	u4780
  3674  000A20                     u4781:
  3675  000A20  EF18  F005         	goto	l949
  3676  000A24                     u4780:
  3677  000A24                     l4068:
  3678                           
  3679                           ; BSR set to: 0
  3680  000A24  0E00               	movlw	0
  3681  000A26  6F97               	movwf	(efgtoa@p+1)& (0+255),b
  3682  000A28  0E06               	movlw	6
  3683  000A2A  6F96               	movwf	efgtoa@p& (0+255),b
  3684  000A2C  EF27  F005         	goto	l4076
  3685  000A30                     l949:
  3686                           
  3687                           ; BSR set to: 0
  3688  000A30  C07B  F096         	movff	_prec,efgtoa@p
  3689  000A34  C07C  F097         	movff	_prec+1,efgtoa@p+1
  3690  000A38  EF27  F005         	goto	l4076
  3691  000A3C                     l4070:
  3692                           
  3693                           ; BSR set to: 0
  3694                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  3695  000A3C  BE7C               	btfsc	(_prec+1)^0,7,c
  3696  000A3E  EF23  F005         	goto	u4791
  3697  000A42  EF25  F005         	goto	u4790
  3698  000A46                     u4791:
  3699  000A46  EF12  F005         	goto	l4068
  3700  000A4A                     u4790:
  3701  000A4A  EF18  F005         	goto	l949
  3702  000A4E                     l4076:
  3703                           
  3704                           ; BSR set to: 0
  3705                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  3706  000A4E  0E67               	movlw	103
  3707  000A50  199B               	xorwf	efgtoa@mode& (0+255),w,b
  3708  000A52  A4D8               	btfss	status,2,c
  3709  000A54  EF2E  F005         	goto	u4801
  3710  000A58  EF30  F005         	goto	u4800
  3711  000A5C                     u4801:
  3712  000A5C  EF5F  F005         	goto	l4086
  3713  000A60                     u4800:
  3714  000A60                     
  3715                           ; BSR set to: 0
  3716                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  3717  000A60  AFAB               	btfss	(efgtoa@e+1)& (0+255),7,b
  3718  000A62  EF3E  F005         	goto	u4810
  3719  000A66  0EFC               	movlw	252
  3720  000A68  5DAA               	subwf	efgtoa@e& (0+255),w,b
  3721  000A6A  0EFF               	movlw	255
  3722  000A6C  59AB               	subwfb	(efgtoa@e+1)& (0+255),w,b
  3723  000A6E  A0D8               	btfss	status,0,c
  3724  000A70  EF3C  F005         	goto	u4811
  3725  000A74  EF3E  F005         	goto	u4810
  3726  000A78                     u4811:
  3727  000A78  EF5D  F005         	goto	l4084
  3728  000A7C                     u4810:
  3729  000A7C                     
  3730                           ; BSR set to: 0
  3731  000A7C  0EFF               	movlw	255
  3732  000A7E  6E5C               	movwf	??_efgtoa^0,c
  3733  000A80  0EFF               	movlw	255
  3734  000A82  6E5D               	movwf	(??_efgtoa+1)^0,c
  3735  000A84  C096  F05E         	movff	efgtoa@p,??_efgtoa+2
  3736  000A88  C097  F05F         	movff	efgtoa@p+1,??_efgtoa+3
  3737  000A8C  505C               	movf	??_efgtoa^0,w,c
  3738  000A8E  265E               	addwf	(??_efgtoa+2)^0,f,c
  3739  000A90  505D               	movf	(??_efgtoa+1)^0,w,c
  3740  000A92  225F               	addwfc	(??_efgtoa+3)^0,f,c
  3741  000A94  51AA               	movf	efgtoa@e& (0+255),w,b
  3742  000A96  5C5E               	subwf	(??_efgtoa+2)^0,w,c
  3743  000A98  505F               	movf	(??_efgtoa+3)^0,w,c
  3744  000A9A  0A80               	xorlw	128
  3745  000A9C  6E60               	movwf	(??_efgtoa+4)^0,c
  3746  000A9E  51AB               	movf	(efgtoa@e+1)& (0+255),w,b
  3747  000AA0  0A80               	xorlw	128
  3748  000AA2  5860               	subwfb	(??_efgtoa+4)^0,w,c
  3749  000AA4  A0D8               	btfss	status,0,c
  3750  000AA6  EF57  F005         	goto	u4821
  3751  000AAA  EF59  F005         	goto	u4820
  3752  000AAE                     u4821:
  3753  000AAE  EF5D  F005         	goto	l4084
  3754  000AB2                     u4820:
  3755  000AB2                     
  3756                           ; BSR set to: 0
  3757                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  3758  000AB2  0E66               	movlw	102
  3759  000AB4  6F9A               	movwf	efgtoa@nmode& (0+255),b
  3760                           
  3761                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  3762  000AB6  EF5F  F005         	goto	l4086
  3763  000ABA                     l4084:
  3764                           
  3765                           ; BSR set to: 0
  3766                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  3767  000ABA  0E65               	movlw	101
  3768  000ABC  6F9A               	movwf	efgtoa@nmode& (0+255),b
  3769  000ABE                     l4086:
  3770                           
  3771                           ; BSR set to: 0
  3772                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 411:     m = p;
  3773  000ABE  C096  F08C         	movff	efgtoa@p,efgtoa@m
  3774  000AC2  C097  F08D         	movff	efgtoa@p+1,efgtoa@m+1
  3775  000AC6                     
  3776                           ; BSR set to: 0
  3777                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  3778  000AC6  0E67               	movlw	103
  3779  000AC8  199B               	xorwf	efgtoa@mode& (0+255),w,b
  3780  000ACA  A4D8               	btfss	status,2,c
  3781  000ACC  EF6A  F005         	goto	u4831
  3782  000AD0  EF6C  F005         	goto	u4830
  3783  000AD4                     u4831:
  3784  000AD4  EF7C  F005         	goto	l4094
  3785  000AD8                     u4830:
  3786  000AD8                     
  3787                           ; BSR set to: 0
  3788  000AD8  0E66               	movlw	102
  3789  000ADA  199A               	xorwf	efgtoa@nmode& (0+255),w,b
  3790  000ADC  A4D8               	btfss	status,2,c
  3791  000ADE  EF73  F005         	goto	u4841
  3792  000AE2  EF75  F005         	goto	u4840
  3793  000AE6                     u4841:
  3794  000AE6  EF7E  F005         	goto	l4096
  3795  000AEA                     u4840:
  3796  000AEA                     
  3797                           ; BSR set to: 0
  3798  000AEA  BFAB               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3799  000AEC  EF7C  F005         	goto	u4850
  3800  000AF0  EF7A  F005         	goto	u4851
  3801  000AF4                     u4851:
  3802  000AF4  EF7E  F005         	goto	l4096
  3803  000AF8                     u4850:
  3804  000AF8                     l4094:
  3805                           
  3806                           ; BSR set to: 0
  3807                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 413:         ++m;
  3808  000AF8  4B8C               	infsnz	efgtoa@m& (0+255),f,b
  3809  000AFA  2B8D               	incf	(efgtoa@m+1)& (0+255),f,b
  3810  000AFC                     l4096:
  3811                           
  3812                           ; BSR set to: 0
  3813                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  3814  000AFC  0E66               	movlw	102
  3815  000AFE  199A               	xorwf	efgtoa@nmode& (0+255),w,b
  3816  000B00  A4D8               	btfss	status,2,c
  3817  000B02  EF85  F005         	goto	u4861
  3818  000B06  EF87  F005         	goto	u4860
  3819  000B0A                     u4861:
  3820  000B0A  EFA7  F005         	goto	l4106
  3821  000B0E                     u4860:
  3822  000B0E                     
  3823                           ; BSR set to: 0
  3824                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  3825  000B0E  BFAB               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3826  000B10  EF8E  F005         	goto	u4870
  3827  000B14  EF8C  F005         	goto	u4871
  3828  000B18                     u4871:
  3829  000B18  EF9A  F005         	goto	l4102
  3830  000B1C                     u4870:
  3831  000B1C                     
  3832                           ; BSR set to: 0
  3833                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  3834  000B1C  0E00               	movlw	0
  3835  000B1E  6FAE               	movwf	efgtoa@u& (0+255),b
  3836  000B20  0E00               	movlw	0
  3837  000B22  6FAF               	movwf	(efgtoa@u+1)& (0+255),b
  3838  000B24  0E80               	movlw	128
  3839  000B26  6FB0               	movwf	(efgtoa@u+2)& (0+255),b
  3840  000B28  0E3F               	movlw	63
  3841  000B2A  6FB1               	movwf	(efgtoa@u+3)& (0+255),b
  3842                           
  3843                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  3844  000B2C  0E00               	movlw	0
  3845  000B2E  6FAB               	movwf	(efgtoa@e+1)& (0+255),b
  3846  000B30  0E00               	movlw	0
  3847  000B32  6FAA               	movwf	efgtoa@e& (0+255),b
  3848  000B34                     l4102:
  3849                           
  3850                           ; BSR set to: 0
  3851                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  3852  000B34  0E67               	movlw	103
  3853  000B36  199B               	xorwf	efgtoa@mode& (0+255),w,b
  3854  000B38  B4D8               	btfsc	status,2,c
  3855  000B3A  EFA1  F005         	goto	u4881
  3856  000B3E  EFA3  F005         	goto	u4880
  3857  000B42                     u4881:
  3858  000B42  EFA7  F005         	goto	l4106
  3859  000B46                     u4880:
  3860  000B46                     
  3861                           ; BSR set to: 0
  3862                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  3863  000B46  51AA               	movf	efgtoa@e& (0+255),w,b
  3864  000B48  278C               	addwf	efgtoa@m& (0+255),f,b
  3865  000B4A  51AB               	movf	(efgtoa@e+1)& (0+255),w,b
  3866  000B4C  238D               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3867  000B4E                     l4106:
  3868                           
  3869                           ; BSR set to: 0
  3870                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  3871  000B4E  0E00               	movlw	0
  3872  000B50  6FA5               	movwf	(efgtoa@i+1)& (0+255),b
  3873  000B52  0E00               	movlw	0
  3874  000B54  6FA4               	movwf	efgtoa@i& (0+255),b
  3875  000B56                     
  3876                           ; BSR set to: 0
  3877                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 429:     h = g;
  3878  000B56  C0A6  F09C         	movff	efgtoa@g,efgtoa@h
  3879  000B5A  C0A7  F09D         	movff	efgtoa@g+1,efgtoa@h+1
  3880  000B5E  C0A8  F09E         	movff	efgtoa@g+2,efgtoa@h+2
  3881  000B62  C0A9  F09F         	movff	efgtoa@g+3,efgtoa@h+3
  3882  000B66                     
  3883                           ; BSR set to: 0
  3884                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  3885  000B66  C0AE  F08E         	movff	efgtoa@u,efgtoa@ou
  3886  000B6A  C0AF  F08F         	movff	efgtoa@u+1,efgtoa@ou+1
  3887  000B6E  C0B0  F090         	movff	efgtoa@u+2,efgtoa@ou+2
  3888  000B72  C0B1  F091         	movff	efgtoa@u+3,efgtoa@ou+3
  3889                           
  3890                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3891  000B76  EF38  F006         	goto	l4120
  3892  000B7A                     l4112:
  3893                           
  3894                           ; BSR set to: 0
  3895                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  3896  000B7A  C09C  F028         	movff	efgtoa@h,___fldiv@b
  3897  000B7E  C09D  F029         	movff	efgtoa@h+1,___fldiv@b+1
  3898  000B82  C09E  F02A         	movff	efgtoa@h+2,___fldiv@b+2
  3899  000B86  C09F  F02B         	movff	efgtoa@h+3,___fldiv@b+3
  3900  000B8A  C0AE  F02C         	movff	efgtoa@u,___fldiv@a
  3901  000B8E  C0AF  F02D         	movff	efgtoa@u+1,___fldiv@a+1
  3902  000B92  C0B0  F02E         	movff	efgtoa@u+2,___fldiv@a+2
  3903  000B96  C0B1  F02F         	movff	efgtoa@u+3,___fldiv@a+3
  3904  000B9A  EC39  F011         	call	___fldiv	;wreg free
  3905  000B9E  C028  F041         	movff	?___fldiv,floorf@x
  3906  000BA2  C029  F042         	movff	?___fldiv+1,floorf@x+1
  3907  000BA6  C02A  F043         	movff	?___fldiv+2,floorf@x+2
  3908  000BAA  C02B  F044         	movff	?___fldiv+3,floorf@x+3
  3909  000BAE  EC75  F014         	call	_floorf	;wreg free
  3910  000BB2  C041  F0A0         	movff	?_floorf,efgtoa@l
  3911  000BB6  C042  F0A1         	movff	?_floorf+1,efgtoa@l+1
  3912  000BBA  C043  F0A2         	movff	?_floorf+2,efgtoa@l+2
  3913  000BBE  C044  F0A3         	movff	?_floorf+3,efgtoa@l+3
  3914                           
  3915                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  3916  000BC2  C0A0  F001         	movff	efgtoa@l,___fltol@f1
  3917  000BC6  C0A1  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3918  000BCA  C0A2  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3919  000BCE  C0A3  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3920  000BD2  EC5E  F019         	call	___fltol	;wreg free
  3921  000BD6  C001  F092         	movff	?___fltol,efgtoa@d
  3922  000BDA  C002  F093         	movff	?___fltol+1,efgtoa@d+1
  3923  000BDE                     
  3924                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  3925  000BDE  C09C  F028         	movff	efgtoa@h,___flsub@b
  3926  000BE2  C09D  F029         	movff	efgtoa@h+1,___flsub@b+1
  3927  000BE6  C09E  F02A         	movff	efgtoa@h+2,___flsub@b+2
  3928  000BEA  C09F  F02B         	movff	efgtoa@h+3,___flsub@b+3
  3929  000BEE  C0AE  F013         	movff	efgtoa@u,___flmul@a
  3930  000BF2  C0AF  F014         	movff	efgtoa@u+1,___flmul@a+1
  3931  000BF6  C0B0  F015         	movff	efgtoa@u+2,___flmul@a+2
  3932  000BFA  C0B1  F016         	movff	efgtoa@u+3,___flmul@a+3
  3933  000BFE  C0A0  F00F         	movff	efgtoa@l,___flmul@b
  3934  000C02  C0A1  F010         	movff	efgtoa@l+1,___flmul@b+1
  3935  000C06  C0A2  F011         	movff	efgtoa@l+2,___flmul@b+2
  3936  000C0A  C0A3  F012         	movff	efgtoa@l+3,___flmul@b+3
  3937  000C0E  EC24  F00F         	call	___flmul	;wreg free
  3938  000C12  C00F  F02C         	movff	?___flmul,___flsub@a
  3939  000C16  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  3940  000C1A  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  3941  000C1E  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  3942  000C22  ECA2  F020         	call	___flsub	;wreg free
  3943  000C26  C028  F09C         	movff	?___flsub,efgtoa@h
  3944  000C2A  C029  F09D         	movff	?___flsub+1,efgtoa@h+1
  3945  000C2E  C02A  F09E         	movff	?___flsub+2,efgtoa@h+2
  3946  000C32  C02B  F09F         	movff	?___flsub+3,efgtoa@h+3
  3947  000C36                     
  3948                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  3949  000C36  C0AE  F028         	movff	efgtoa@u,___fldiv@b
  3950  000C3A  C0AF  F029         	movff	efgtoa@u+1,___fldiv@b+1
  3951  000C3E  C0B0  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  3952  000C42  C0B1  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  3953  000C46  0E00               	movlw	0
  3954  000C48  6E2C               	movwf	___fldiv@a^0,c
  3955  000C4A  0E00               	movlw	0
  3956  000C4C  6E2D               	movwf	(___fldiv@a+1)^0,c
  3957  000C4E  0E20               	movlw	32
  3958  000C50  6E2E               	movwf	(___fldiv@a+2)^0,c
  3959  000C52  0E41               	movlw	65
  3960  000C54  6E2F               	movwf	(___fldiv@a+3)^0,c
  3961  000C56  EC39  F011         	call	___fldiv	;wreg free
  3962  000C5A  C028  F0AE         	movff	?___fldiv,efgtoa@u
  3963  000C5E  C029  F0AF         	movff	?___fldiv+1,efgtoa@u+1
  3964  000C62  C02A  F0B0         	movff	?___fldiv+2,efgtoa@u+2
  3965  000C66  C02B  F0B1         	movff	?___fldiv+3,efgtoa@u+3
  3966  000C6A                     
  3967                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 436:         ++i;
  3968  000C6A  0100               	movlb	0	; () banked
  3969  000C6C  4BA4               	infsnz	efgtoa@i& (0+255),f,b
  3970  000C6E  2BA5               	incf	(efgtoa@i+1)& (0+255),f,b
  3971  000C70                     l4120:
  3972                           
  3973                           ; BSR set to: 0
  3974                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3975  000C70  518C               	movf	efgtoa@m& (0+255),w,b
  3976  000C72  5DA4               	subwf	efgtoa@i& (0+255),w,b
  3977  000C74  51A5               	movf	(efgtoa@i+1)& (0+255),w,b
  3978  000C76  0A80               	xorlw	128
  3979  000C78  6E5C               	movwf	??_efgtoa^0,c
  3980  000C7A  518D               	movf	(efgtoa@m+1)& (0+255),w,b
  3981  000C7C  0A80               	xorlw	128
  3982  000C7E  585C               	subwfb	??_efgtoa^0,w,c
  3983  000C80  A0D8               	btfss	status,0,c
  3984  000C82  EF45  F006         	goto	u4891
  3985  000C86  EF47  F006         	goto	u4890
  3986  000C8A                     u4891:
  3987  000C8A  EFBD  F005         	goto	l4112
  3988  000C8E                     u4890:
  3989  000C8E                     
  3990                           ; BSR set to: 0
  3991                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  3992  000C8E  C0AE  F00F         	movff	efgtoa@u,___flmul@b
  3993  000C92  C0AF  F010         	movff	efgtoa@u+1,___flmul@b+1
  3994  000C96  C0B0  F011         	movff	efgtoa@u+2,___flmul@b+2
  3995  000C9A  C0B1  F012         	movff	efgtoa@u+3,___flmul@b+3
  3996  000C9E  0E00               	movlw	0
  3997  000CA0  6E13               	movwf	___flmul@a^0,c
  3998  000CA2  0E00               	movlw	0
  3999  000CA4  6E14               	movwf	(___flmul@a+1)^0,c
  4000  000CA6  0EA0               	movlw	160
  4001  000CA8  6E15               	movwf	(___flmul@a+2)^0,c
  4002  000CAA  0E40               	movlw	64
  4003  000CAC  6E16               	movwf	(___flmul@a+3)^0,c
  4004  000CAE  EC24  F00F         	call	___flmul	;wreg free
  4005  000CB2  C00F  F0A0         	movff	?___flmul,efgtoa@l
  4006  000CB6  C010  F0A1         	movff	?___flmul+1,efgtoa@l+1
  4007  000CBA  C011  F0A2         	movff	?___flmul+2,efgtoa@l+2
  4008  000CBE  C012  F0A3         	movff	?___flmul+3,efgtoa@l+3
  4009  000CC2                     
  4010                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  4011  000CC2  C09C  F028         	movff	efgtoa@h,___flge@ff1
  4012  000CC6  C09D  F029         	movff	efgtoa@h+1,___flge@ff1+1
  4013  000CCA  C09E  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  4014  000CCE  C09F  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  4015  000CD2  C0A0  F02C         	movff	efgtoa@l,___flge@ff2
  4016  000CD6  C0A1  F02D         	movff	efgtoa@l+1,___flge@ff2+1
  4017  000CDA  C0A2  F02E         	movff	efgtoa@l+2,___flge@ff2+2
  4018  000CDE  C0A3  F02F         	movff	efgtoa@l+3,___flge@ff2+3
  4019  000CE2  ECE1  F019         	call	___flge	;wreg free
  4020  000CE6  B0D8               	btfsc	status,0,c
  4021  000CE8  EF78  F006         	goto	u4901
  4022  000CEC  EF7A  F006         	goto	u4900
  4023  000CF0                     u4901:
  4024  000CF0  EF85  F006         	goto	l4128
  4025  000CF4                     u4900:
  4026  000CF4                     
  4027                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  4028  000CF4  0E00               	movlw	0
  4029  000CF6  0100               	movlb	0	; () banked
  4030  000CF8  6FA0               	movwf	efgtoa@l& (0+255),b
  4031  000CFA  0E00               	movlw	0
  4032  000CFC  6FA1               	movwf	(efgtoa@l+1)& (0+255),b
  4033  000CFE  0E00               	movlw	0
  4034  000D00  6FA2               	movwf	(efgtoa@l+2)& (0+255),b
  4035  000D02  0E00               	movlw	0
  4036  000D04  6FA3               	movwf	(efgtoa@l+3)& (0+255),b
  4037                           
  4038                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 443:     } else {
  4039  000D06  EFAE  F006         	goto	l4134
  4040  000D0A                     l4128:
  4041                           
  4042                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  4043  000D0A  C09C  F001         	movff	efgtoa@h,___fleq@ff1
  4044  000D0E  C09D  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  4045  000D12  C09E  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  4046  000D16  C09F  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  4047  000D1A  C0A0  F005         	movff	efgtoa@l,___fleq@ff2
  4048  000D1E  C0A1  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  4049  000D22  C0A2  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  4050  000D26  C0A3  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  4051  000D2A  EC89  F01E         	call	___fleq	;wreg free
  4052  000D2E  A0D8               	btfss	status,0,c
  4053  000D30  EF9C  F006         	goto	u4911
  4054  000D34  EF9E  F006         	goto	u4910
  4055  000D38                     u4911:
  4056  000D38  EFAE  F006         	goto	l4134
  4057  000D3C                     u4910:
  4058  000D3C  0100               	movlb	0	; () banked
  4059  000D3E  B192               	btfsc	efgtoa@d& (0+255),0,b
  4060  000D40  EFA4  F006         	goto	u4921
  4061  000D44  EFA6  F006         	goto	u4920
  4062  000D48                     u4921:
  4063  000D48  EFAE  F006         	goto	l4134
  4064  000D4C                     u4920:
  4065  000D4C                     
  4066                           ; BSR set to: 0
  4067                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  4068  000D4C  0E00               	movlw	0
  4069  000D4E  6FA0               	movwf	efgtoa@l& (0+255),b
  4070  000D50  0E00               	movlw	0
  4071  000D52  6FA1               	movwf	(efgtoa@l+1)& (0+255),b
  4072  000D54  0E00               	movlw	0
  4073  000D56  6FA2               	movwf	(efgtoa@l+2)& (0+255),b
  4074  000D58  0E00               	movlw	0
  4075  000D5A  6FA3               	movwf	(efgtoa@l+3)& (0+255),b
  4076  000D5C                     l4134:
  4077                           
  4078                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  4079  000D5C  C0A6  F001         	movff	efgtoa@g,___fladd@b
  4080  000D60  C0A7  F002         	movff	efgtoa@g+1,___fladd@b+1
  4081  000D64  C0A8  F003         	movff	efgtoa@g+2,___fladd@b+2
  4082  000D68  C0A9  F004         	movff	efgtoa@g+3,___fladd@b+3
  4083  000D6C  C0A0  F005         	movff	efgtoa@l,___fladd@a
  4084  000D70  C0A1  F006         	movff	efgtoa@l+1,___fladd@a+1
  4085  000D74  C0A2  F007         	movff	efgtoa@l+2,___fladd@a+2
  4086  000D78  C0A3  F008         	movff	efgtoa@l+3,___fladd@a+3
  4087  000D7C  ECC4  F00C         	call	___fladd	;wreg free
  4088  000D80  C001  F09C         	movff	?___fladd,efgtoa@h
  4089  000D84  C002  F09D         	movff	?___fladd+1,efgtoa@h+1
  4090  000D88  C003  F09E         	movff	?___fladd+2,efgtoa@h+2
  4091  000D8C  C004  F09F         	movff	?___fladd+3,efgtoa@h+3
  4092  000D90                     
  4093                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  4094  000D90  C09C  F028         	movff	efgtoa@h,___flge@ff1
  4095  000D94  C09D  F029         	movff	efgtoa@h+1,___flge@ff1+1
  4096  000D98  C09E  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  4097  000D9C  C09F  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  4098  000DA0  0E00               	movlw	0
  4099  000DA2  6E13               	movwf	___flmul@a^0,c
  4100  000DA4  0E00               	movlw	0
  4101  000DA6  6E14               	movwf	(___flmul@a+1)^0,c
  4102  000DA8  0E20               	movlw	32
  4103  000DAA  6E15               	movwf	(___flmul@a+2)^0,c
  4104  000DAC  0E41               	movlw	65
  4105  000DAE  6E16               	movwf	(___flmul@a+3)^0,c
  4106  000DB0  C08E  F00F         	movff	efgtoa@ou,___flmul@b
  4107  000DB4  C08F  F010         	movff	efgtoa@ou+1,___flmul@b+1
  4108  000DB8  C090  F011         	movff	efgtoa@ou+2,___flmul@b+2
  4109  000DBC  C091  F012         	movff	efgtoa@ou+3,___flmul@b+3
  4110  000DC0  EC24  F00F         	call	___flmul	;wreg free
  4111  000DC4  C00F  F02C         	movff	?___flmul,___flge@ff2
  4112  000DC8  C010  F02D         	movff	?___flmul+1,___flge@ff2+1
  4113  000DCC  C011  F02E         	movff	?___flmul+2,___flge@ff2+2
  4114  000DD0  C012  F02F         	movff	?___flmul+3,___flge@ff2+3
  4115  000DD4  ECE1  F019         	call	___flge	;wreg free
  4116  000DD8  A0D8               	btfss	status,0,c
  4117  000DDA  EFF1  F006         	goto	u4931
  4118  000DDE  EFF3  F006         	goto	u4930
  4119  000DE2                     u4931:
  4120  000DE2  EF1C  F007         	goto	l4146
  4121  000DE6                     u4930:
  4122  000DE6                     
  4123                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 454:   e++;
  4124  000DE6  0100               	movlb	0	; () banked
  4125  000DE8  4BAA               	infsnz	efgtoa@e& (0+255),f,b
  4126  000DEA  2BAB               	incf	(efgtoa@e+1)& (0+255),f,b
  4127  000DEC                     
  4128                           ; BSR set to: 0
  4129                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  4130  000DEC  C08E  F00F         	movff	efgtoa@ou,___flmul@b
  4131  000DF0  C08F  F010         	movff	efgtoa@ou+1,___flmul@b+1
  4132  000DF4  C090  F011         	movff	efgtoa@ou+2,___flmul@b+2
  4133  000DF8  C091  F012         	movff	efgtoa@ou+3,___flmul@b+3
  4134  000DFC  0E00               	movlw	0
  4135  000DFE  6E13               	movwf	___flmul@a^0,c
  4136  000E00  0E00               	movlw	0
  4137  000E02  6E14               	movwf	(___flmul@a+1)^0,c
  4138  000E04  0E20               	movlw	32
  4139  000E06  6E15               	movwf	(___flmul@a+2)^0,c
  4140  000E08  0E41               	movlw	65
  4141  000E0A  6E16               	movwf	(___flmul@a+3)^0,c
  4142  000E0C  EC24  F00F         	call	___flmul	;wreg free
  4143  000E10  C00F  F08E         	movff	?___flmul,efgtoa@ou
  4144  000E14  C010  F08F         	movff	?___flmul+1,efgtoa@ou+1
  4145  000E18  C011  F090         	movff	?___flmul+2,efgtoa@ou+2
  4146  000E1C  C012  F091         	movff	?___flmul+3,efgtoa@ou+3
  4147  000E20                     
  4148                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  4149  000E20  0E66               	movlw	102
  4150  000E22  0100               	movlb	0	; () banked
  4151  000E24  199A               	xorwf	efgtoa@nmode& (0+255),w,b
  4152  000E26  A4D8               	btfss	status,2,c
  4153  000E28  EF18  F007         	goto	u4941
  4154  000E2C  EF1A  F007         	goto	u4940
  4155  000E30                     u4941:
  4156  000E30  EF1C  F007         	goto	l4146
  4157  000E34                     u4940:
  4158  000E34                     
  4159                           ; BSR set to: 0
  4160                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 458:    m++;
  4161  000E34  4B8C               	infsnz	efgtoa@m& (0+255),f,b
  4162  000E36  2B8D               	incf	(efgtoa@m+1)& (0+255),f,b
  4163  000E38                     l4146:
  4164                           
  4165                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  4166  000E38  C08E  F0AE         	movff	efgtoa@ou,efgtoa@u
  4167  000E3C  C08F  F0AF         	movff	efgtoa@ou+1,efgtoa@u+1
  4168  000E40  C090  F0B0         	movff	efgtoa@ou+2,efgtoa@u+2
  4169  000E44  C091  F0B1         	movff	efgtoa@ou+3,efgtoa@u+3
  4170  000E48                     
  4171                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  4172  000E48  0E65               	movlw	101
  4173  000E4A  0100               	movlb	0	; () banked
  4174  000E4C  199A               	xorwf	efgtoa@nmode& (0+255),w,b
  4175  000E4E  B4D8               	btfsc	status,2,c
  4176  000E50  EF2C  F007         	goto	u4951
  4177  000E54  EF2E  F007         	goto	u4950
  4178  000E58                     u4951:
  4179  000E58  EF34  F007         	goto	l4152
  4180  000E5C                     u4950:
  4181  000E5C                     
  4182                           ; BSR set to: 0
  4183  000E5C  C0AA  F08A         	movff	efgtoa@e,efgtoa@ne
  4184  000E60  C0AB  F08B         	movff	efgtoa@e+1,efgtoa@ne+1
  4185  000E64  EF38  F007         	goto	l977
  4186  000E68                     l4152:
  4187                           
  4188                           ; BSR set to: 0
  4189  000E68  0E00               	movlw	0
  4190  000E6A  6F8B               	movwf	(efgtoa@ne+1)& (0+255),b
  4191  000E6C  0E00               	movlw	0
  4192  000E6E  6F8A               	movwf	efgtoa@ne& (0+255),b
  4193  000E70                     l977:
  4194                           
  4195                           ; BSR set to: 0
  4196                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  4197  000E70  0E00               	movlw	0
  4198  000E72  6F89               	movwf	(efgtoa@pp+1)& (0+255),b
  4199  000E74  0E00               	movlw	0
  4200  000E76  6F88               	movwf	efgtoa@pp& (0+255),b
  4201                           
  4202                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  4203  000E78  0E00               	movlw	0
  4204  000E7A  6F87               	movwf	(efgtoa@t+1)& (0+255),b
  4205  000E7C  0E00               	movlw	0
  4206  000E7E  6F86               	movwf	efgtoa@t& (0+255),b
  4207                           
  4208                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  4209  000E80  0E00               	movlw	0
  4210  000E82  6FA5               	movwf	(efgtoa@i+1)& (0+255),b
  4211  000E84  0E00               	movlw	0
  4212  000E86  6FA4               	movwf	efgtoa@i& (0+255),b
  4213                           
  4214                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4215  000E88  EF34  F008         	goto	l4202
  4216  000E8C                     l4154:
  4217                           
  4218                           ; BSR set to: 0
  4219                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  4220  000E8C  C09C  F028         	movff	efgtoa@h,___fldiv@b
  4221  000E90  C09D  F029         	movff	efgtoa@h+1,___fldiv@b+1
  4222  000E94  C09E  F02A         	movff	efgtoa@h+2,___fldiv@b+2
  4223  000E98  C09F  F02B         	movff	efgtoa@h+3,___fldiv@b+3
  4224  000E9C  C0AE  F02C         	movff	efgtoa@u,___fldiv@a
  4225  000EA0  C0AF  F02D         	movff	efgtoa@u+1,___fldiv@a+1
  4226  000EA4  C0B0  F02E         	movff	efgtoa@u+2,___fldiv@a+2
  4227  000EA8  C0B1  F02F         	movff	efgtoa@u+3,___fldiv@a+3
  4228  000EAC  EC39  F011         	call	___fldiv	;wreg free
  4229  000EB0  C028  F041         	movff	?___fldiv,floorf@x
  4230  000EB4  C029  F042         	movff	?___fldiv+1,floorf@x+1
  4231  000EB8  C02A  F043         	movff	?___fldiv+2,floorf@x+2
  4232  000EBC  C02B  F044         	movff	?___fldiv+3,floorf@x+3
  4233  000EC0  EC75  F014         	call	_floorf	;wreg free
  4234  000EC4  C041  F0A0         	movff	?_floorf,efgtoa@l
  4235  000EC8  C042  F0A1         	movff	?_floorf+1,efgtoa@l+1
  4236  000ECC  C043  F0A2         	movff	?_floorf+2,efgtoa@l+2
  4237  000ED0  C044  F0A3         	movff	?_floorf+3,efgtoa@l+3
  4238                           
  4239                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  4240  000ED4  C0A0  F001         	movff	efgtoa@l,___fltol@f1
  4241  000ED8  C0A1  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4242  000EDC  C0A2  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4243  000EE0  C0A3  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4244  000EE4  EC5E  F019         	call	___fltol	;wreg free
  4245  000EE8  C001  F092         	movff	?___fltol,efgtoa@d
  4246  000EEC  C002  F093         	movff	?___fltol+1,efgtoa@d+1
  4247  000EF0                     
  4248                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  4249  000EF0  B87D               	btfsc	_flags^0,4,c
  4250  000EF2  EF7D  F007         	goto	u4961
  4251  000EF6  EF7F  F007         	goto	u4960
  4252  000EFA                     u4961:
  4253  000EFA  EF9D  F007         	goto	l4166
  4254  000EFE                     u4960:
  4255  000EFE  0100               	movlb	0	; () banked
  4256  000F00  5192               	movf	efgtoa@d& (0+255),w,b
  4257  000F02  1193               	iorwf	(efgtoa@d+1)& (0+255),w,b
  4258  000F04  A4D8               	btfss	status,2,c
  4259  000F06  EF87  F007         	goto	u4971
  4260  000F0A  EF89  F007         	goto	u4970
  4261  000F0E                     u4971:
  4262  000F0E  EF9D  F007         	goto	l4166
  4263  000F12                     u4970:
  4264  000F12                     
  4265                           ; BSR set to: 0
  4266  000F12  0E67               	movlw	103
  4267  000F14  199B               	xorwf	efgtoa@mode& (0+255),w,b
  4268  000F16  A4D8               	btfss	status,2,c
  4269  000F18  EF90  F007         	goto	u4981
  4270  000F1C  EF92  F007         	goto	u4980
  4271  000F20                     u4981:
  4272  000F20  EF9D  F007         	goto	l4166
  4273  000F24                     u4980:
  4274  000F24                     
  4275                           ; BSR set to: 0
  4276  000F24  BF8B               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4277  000F26  EF99  F007         	goto	u4990
  4278  000F2A  EF97  F007         	goto	u4991
  4279  000F2E                     u4991:
  4280  000F2E  EF9D  F007         	goto	l4166
  4281  000F32                     u4990:
  4282  000F32                     
  4283                           ; BSR set to: 0
  4284                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  4285  000F32  4B86               	infsnz	efgtoa@t& (0+255),f,b
  4286  000F34  2B87               	incf	(efgtoa@t+1)& (0+255),f,b
  4287                           
  4288                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  4289  000F36  EFE8  F007         	goto	l4194
  4290  000F3A                     l4166:
  4291                           
  4292                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  4293  000F3A  0100               	movlb	0	; () banked
  4294  000F3C  5188               	movf	efgtoa@pp& (0+255),w,b
  4295  000F3E  1189               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4296  000F40  A4D8               	btfss	status,2,c
  4297  000F42  EFA5  F007         	goto	u5001
  4298  000F46  EFA7  F007         	goto	u5000
  4299  000F4A                     u5001:
  4300  000F4A  EFD1  F007         	goto	l4186
  4301  000F4E                     u5000:
  4302  000F4E                     
  4303                           ; BSR set to: 0
  4304  000F4E  BF8B               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4305  000F50  EFAE  F007         	goto	u5010
  4306  000F54  EFAC  F007         	goto	u5011
  4307  000F58                     u5011:
  4308  000F58  EFD1  F007         	goto	l4186
  4309  000F5C                     u5010:
  4310  000F5C                     
  4311                           ; BSR set to: 0
  4312                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  4313  000F5C  0E00               	movlw	low _dbuf
  4314  000F5E  25AC               	addwf	efgtoa@n& (0+255),w,b
  4315  000F60  6ED9               	movwf	fsr2l,c
  4316  000F62  0E01               	movlw	high _dbuf
  4317  000F64  21AD               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4318  000F66  6EDA               	movwf	fsr2h,c
  4319  000F68  0E2E               	movlw	46
  4320  000F6A  6EDF               	movwf	indf2,c
  4321  000F6C                     
  4322                           ; BSR set to: 0
  4323  000F6C  4BAC               	infsnz	efgtoa@n& (0+255),f,b
  4324  000F6E  2BAD               	incf	(efgtoa@n+1)& (0+255),f,b
  4325  000F70                     
  4326                           ; BSR set to: 0
  4327                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  4328  000F70  0798               	decf	efgtoa@w& (0+255),f,b
  4329  000F72  A0D8               	btfss	status,0,c
  4330  000F74  0799               	decf	(efgtoa@w+1)& (0+255),f,b
  4331  000F76                     
  4332                           ; BSR set to: 0
  4333                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  4334  000F76  0E00               	movlw	0
  4335  000F78  6F89               	movwf	(efgtoa@pp+1)& (0+255),b
  4336  000F7A  0E01               	movlw	1
  4337  000F7C  6F88               	movwf	efgtoa@pp& (0+255),b
  4338  000F7E  EFD1  F007         	goto	l4186
  4339  000F82                     l4178:
  4340                           
  4341                           ; BSR set to: 0
  4342                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  4343  000F82  0E00               	movlw	low _dbuf
  4344  000F84  25AC               	addwf	efgtoa@n& (0+255),w,b
  4345  000F86  6ED9               	movwf	fsr2l,c
  4346  000F88  0E01               	movlw	high _dbuf
  4347  000F8A  21AD               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4348  000F8C  6EDA               	movwf	fsr2h,c
  4349  000F8E  0E30               	movlw	48
  4350  000F90  6EDF               	movwf	indf2,c
  4351  000F92                     
  4352                           ; BSR set to: 0
  4353  000F92  4BAC               	infsnz	efgtoa@n& (0+255),f,b
  4354  000F94  2BAD               	incf	(efgtoa@n+1)& (0+255),f,b
  4355  000F96                     
  4356                           ; BSR set to: 0
  4357                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  4358  000F96  0798               	decf	efgtoa@w& (0+255),f,b
  4359  000F98  A0D8               	btfss	status,0,c
  4360  000F9A  0799               	decf	(efgtoa@w+1)& (0+255),f,b
  4361  000F9C                     
  4362                           ; BSR set to: 0
  4363                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  4364  000F9C  0786               	decf	efgtoa@t& (0+255),f,b
  4365  000F9E  A0D8               	btfss	status,0,c
  4366  000FA0  0787               	decf	(efgtoa@t+1)& (0+255),f,b
  4367  000FA2                     l4186:
  4368                           
  4369                           ; BSR set to: 0
  4370                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  4371  000FA2  5186               	movf	efgtoa@t& (0+255),w,b
  4372  000FA4  1187               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4373  000FA6  A4D8               	btfss	status,2,c
  4374  000FA8  EFD8  F007         	goto	u5021
  4375  000FAC  EFDA  F007         	goto	u5020
  4376  000FB0                     u5021:
  4377  000FB0  EFC1  F007         	goto	l4178
  4378  000FB4                     u5020:
  4379  000FB4                     
  4380                           ; BSR set to: 0
  4381                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  4382  000FB4  0E00               	movlw	low _dbuf
  4383  000FB6  25AC               	addwf	efgtoa@n& (0+255),w,b
  4384  000FB8  6ED9               	movwf	fsr2l,c
  4385  000FBA  0E01               	movlw	high _dbuf
  4386  000FBC  21AD               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4387  000FBE  6EDA               	movwf	fsr2h,c
  4388  000FC0  5192               	movf	efgtoa@d& (0+255),w,b
  4389  000FC2  0F30               	addlw	48
  4390  000FC4  6EDF               	movwf	indf2,c
  4391  000FC6                     
  4392                           ; BSR set to: 0
  4393  000FC6  4BAC               	infsnz	efgtoa@n& (0+255),f,b
  4394  000FC8  2BAD               	incf	(efgtoa@n+1)& (0+255),f,b
  4395  000FCA                     
  4396                           ; BSR set to: 0
  4397                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  4398  000FCA  0798               	decf	efgtoa@w& (0+255),f,b
  4399  000FCC  A0D8               	btfss	status,0,c
  4400  000FCE  0799               	decf	(efgtoa@w+1)& (0+255),f,b
  4401  000FD0                     l4194:
  4402                           
  4403                           ; BSR set to: 0
  4404                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  4405  000FD0  C09C  F028         	movff	efgtoa@h,___flsub@b
  4406  000FD4  C09D  F029         	movff	efgtoa@h+1,___flsub@b+1
  4407  000FD8  C09E  F02A         	movff	efgtoa@h+2,___flsub@b+2
  4408  000FDC  C09F  F02B         	movff	efgtoa@h+3,___flsub@b+3
  4409  000FE0  C0AE  F013         	movff	efgtoa@u,___flmul@a
  4410  000FE4  C0AF  F014         	movff	efgtoa@u+1,___flmul@a+1
  4411  000FE8  C0B0  F015         	movff	efgtoa@u+2,___flmul@a+2
  4412  000FEC  C0B1  F016         	movff	efgtoa@u+3,___flmul@a+3
  4413  000FF0  C0A0  F00F         	movff	efgtoa@l,___flmul@b
  4414  000FF4  C0A1  F010         	movff	efgtoa@l+1,___flmul@b+1
  4415  000FF8  C0A2  F011         	movff	efgtoa@l+2,___flmul@b+2
  4416  000FFC  C0A3  F012         	movff	efgtoa@l+3,___flmul@b+3
  4417  001000  EC24  F00F         	call	___flmul	;wreg free
  4418  001004  C00F  F02C         	movff	?___flmul,___flsub@a
  4419  001008  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  4420  00100C  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  4421  001010  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  4422  001014  ECA2  F020         	call	___flsub	;wreg free
  4423  001018  C028  F09C         	movff	?___flsub,efgtoa@h
  4424  00101C  C029  F09D         	movff	?___flsub+1,efgtoa@h+1
  4425  001020  C02A  F09E         	movff	?___flsub+2,efgtoa@h+2
  4426  001024  C02B  F09F         	movff	?___flsub+3,efgtoa@h+3
  4427  001028                     
  4428                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  4429  001028  C0AE  F028         	movff	efgtoa@u,___fldiv@b
  4430  00102C  C0AF  F029         	movff	efgtoa@u+1,___fldiv@b+1
  4431  001030  C0B0  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  4432  001034  C0B1  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  4433  001038  0E00               	movlw	0
  4434  00103A  6E2C               	movwf	___fldiv@a^0,c
  4435  00103C  0E00               	movlw	0
  4436  00103E  6E2D               	movwf	(___fldiv@a+1)^0,c
  4437  001040  0E20               	movlw	32
  4438  001042  6E2E               	movwf	(___fldiv@a+2)^0,c
  4439  001044  0E41               	movlw	65
  4440  001046  6E2F               	movwf	(___fldiv@a+3)^0,c
  4441  001048  EC39  F011         	call	___fldiv	;wreg free
  4442  00104C  C028  F0AE         	movff	?___fldiv,efgtoa@u
  4443  001050  C029  F0AF         	movff	?___fldiv+1,efgtoa@u+1
  4444  001054  C02A  F0B0         	movff	?___fldiv+2,efgtoa@u+2
  4445  001058  C02B  F0B1         	movff	?___fldiv+3,efgtoa@u+3
  4446  00105C                     
  4447                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  4448  00105C  0100               	movlb	0	; () banked
  4449  00105E  078A               	decf	efgtoa@ne& (0+255),f,b
  4450  001060  A0D8               	btfss	status,0,c
  4451  001062  078B               	decf	(efgtoa@ne+1)& (0+255),f,b
  4452  001064                     
  4453                           ; BSR set to: 0
  4454                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 490:         ++i;
  4455  001064  4BA4               	infsnz	efgtoa@i& (0+255),f,b
  4456  001066  2BA5               	incf	(efgtoa@i+1)& (0+255),f,b
  4457  001068                     l4202:
  4458                           
  4459                           ; BSR set to: 0
  4460                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4461  001068  518C               	movf	efgtoa@m& (0+255),w,b
  4462  00106A  5DA4               	subwf	efgtoa@i& (0+255),w,b
  4463  00106C  51A5               	movf	(efgtoa@i+1)& (0+255),w,b
  4464  00106E  0A80               	xorlw	128
  4465  001070  6E5C               	movwf	??_efgtoa^0,c
  4466  001072  518D               	movf	(efgtoa@m+1)& (0+255),w,b
  4467  001074  0A80               	xorlw	128
  4468  001076  585C               	subwfb	??_efgtoa^0,w,c
  4469  001078  B0D8               	btfsc	status,0,c
  4470  00107A  EF41  F008         	goto	u5031
  4471  00107E  EF43  F008         	goto	u5030
  4472  001082                     u5031:
  4473  001082  EF51  F008         	goto	l4206
  4474  001086                     u5030:
  4475  001086                     
  4476                           ; BSR set to: 0
  4477  001086  BFAD               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4478  001088  EF4F  F008         	goto	u5041
  4479  00108C  51AD               	movf	(efgtoa@n+1)& (0+255),w,b
  4480  00108E  E109               	bnz	u5040
  4481  001090  0E4B               	movlw	75
  4482  001092  5DAC               	subwf	efgtoa@n& (0+255),w,b
  4483  001094  A0D8               	btfss	status,0,c
  4484  001096  EF4F  F008         	goto	u5041
  4485  00109A  EF51  F008         	goto	u5040
  4486  00109E                     u5041:
  4487  00109E  EF46  F007         	goto	l4154
  4488  0010A2                     u5040:
  4489  0010A2                     l4206:
  4490                           
  4491                           ; BSR set to: 0
  4492                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  4493  0010A2  5188               	movf	efgtoa@pp& (0+255),w,b
  4494  0010A4  1189               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4495  0010A6  A4D8               	btfss	status,2,c
  4496  0010A8  EF58  F008         	goto	u5051
  4497  0010AC  EF5A  F008         	goto	u5050
  4498  0010B0                     u5051:
  4499  0010B0  EF6B  F008         	goto	l4214
  4500  0010B4                     u5050:
  4501  0010B4                     
  4502                           ; BSR set to: 0
  4503  0010B4  A87D               	btfss	_flags^0,4,c
  4504  0010B6  EF5F  F008         	goto	u5061
  4505  0010BA  EF61  F008         	goto	u5060
  4506  0010BE                     u5061:
  4507  0010BE  EF6B  F008         	goto	l4214
  4508  0010C2                     u5060:
  4509  0010C2                     
  4510                           ; BSR set to: 0
  4511                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  4512  0010C2  0E00               	movlw	low _dbuf
  4513  0010C4  25AC               	addwf	efgtoa@n& (0+255),w,b
  4514  0010C6  6ED9               	movwf	fsr2l,c
  4515  0010C8  0E01               	movlw	high _dbuf
  4516  0010CA  21AD               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4517  0010CC  6EDA               	movwf	fsr2h,c
  4518  0010CE  0E2E               	movlw	46
  4519  0010D0  6EDF               	movwf	indf2,c
  4520  0010D2                     
  4521                           ; BSR set to: 0
  4522  0010D2  4BAC               	infsnz	efgtoa@n& (0+255),f,b
  4523  0010D4  2BAD               	incf	(efgtoa@n+1)& (0+255),f,b
  4524  0010D6                     l4214:
  4525                           
  4526                           ; BSR set to: 0
  4527                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  4528  0010D6  0E00               	movlw	low _dbuf
  4529  0010D8  25AC               	addwf	efgtoa@n& (0+255),w,b
  4530  0010DA  6ED9               	movwf	fsr2l,c
  4531  0010DC  0E01               	movlw	high _dbuf
  4532  0010DE  21AD               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4533  0010E0  6EDA               	movwf	fsr2h,c
  4534  0010E2  0E00               	movlw	0
  4535  0010E4  6EDF               	movwf	indf2,c
  4536  0010E6                     
  4537                           ; BSR set to: 0
  4538                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  4539  0010E6  0E65               	movlw	101
  4540  0010E8  199A               	xorwf	efgtoa@nmode& (0+255),w,b
  4541  0010EA  A4D8               	btfss	status,2,c
  4542  0010EC  EF7A  F008         	goto	u5071
  4543  0010F0  EF7C  F008         	goto	u5070
  4544  0010F4                     u5071:
  4545  0010F4  EFE1  F003         	goto	l4016
  4546  0010F8                     u5070:
  4547  0010F8                     
  4548                           ; BSR set to: 0
  4549                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  4550  0010F8  0E00               	movlw	0
  4551  0010FA  6FA5               	movwf	(efgtoa@i+1)& (0+255),b
  4552  0010FC  0E4F               	movlw	79
  4553  0010FE  6FA4               	movwf	efgtoa@i& (0+255),b
  4554  001100                     
  4555                           ; BSR set to: 0
  4556                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  4557  001100  0E00               	movlw	low _dbuf
  4558  001102  25A4               	addwf	efgtoa@i& (0+255),w,b
  4559  001104  6ED9               	movwf	fsr2l,c
  4560  001106  0E01               	movlw	high _dbuf
  4561  001108  21A5               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4562  00110A  6EDA               	movwf	fsr2h,c
  4563  00110C  0E00               	movlw	0
  4564  00110E  6EDF               	movwf	indf2,c
  4565  001110                     
  4566                           ; BSR set to: 0
  4567                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  4568  001110  0E00               	movlw	0
  4569  001112  6F95               	movwf	(efgtoa@sign+1)& (0+255),b
  4570  001114  0E00               	movlw	0
  4571  001116  6F94               	movwf	efgtoa@sign& (0+255),b
  4572  001118                     
  4573                           ; BSR set to: 0
  4574                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  4575  001118  BFAB               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4576  00111A  EF93  F008         	goto	u5080
  4577  00111E  EF91  F008         	goto	u5081
  4578  001122                     u5081:
  4579  001122  EF9B  F008         	goto	l4230
  4580  001126                     u5080:
  4581  001126                     
  4582                           ; BSR set to: 0
  4583                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  4584  001126  0E00               	movlw	0
  4585  001128  6F95               	movwf	(efgtoa@sign+1)& (0+255),b
  4586  00112A  0E01               	movlw	1
  4587  00112C  6F94               	movwf	efgtoa@sign& (0+255),b
  4588  00112E                     
  4589                           ; BSR set to: 0
  4590                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  4591  00112E  6DAA               	negf	efgtoa@e& (0+255),b
  4592  001130  1FAB               	comf	(efgtoa@e+1)& (0+255),f,b
  4593  001132  B0D8               	btfsc	status,0,c
  4594  001134  2BAB               	incf	(efgtoa@e+1)& (0+255),f,b
  4595  001136                     l4230:
  4596                           
  4597                           ; BSR set to: 0
  4598                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  4599  001136  0E00               	movlw	0
  4600  001138  6F97               	movwf	(efgtoa@p+1)& (0+255),b
  4601  00113A  0E02               	movlw	2
  4602  00113C  6F96               	movwf	efgtoa@p& (0+255),b
  4603                           
  4604                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  4605  00113E  EFCC  F008         	goto	l4242
  4606  001142                     l4232:
  4607                           
  4608                           ; BSR set to: 0
  4609                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  4610  001142  07A4               	decf	efgtoa@i& (0+255),f,b
  4611  001144  A0D8               	btfss	status,0,c
  4612  001146  07A5               	decf	(efgtoa@i+1)& (0+255),f,b
  4613  001148                     
  4614                           ; BSR set to: 0
  4615                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  4616  001148  0E00               	movlw	low _dbuf
  4617  00114A  25A4               	addwf	efgtoa@i& (0+255),w,b
  4618  00114C  6ED9               	movwf	fsr2l,c
  4619  00114E  0E01               	movlw	high _dbuf
  4620  001150  21A5               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4621  001152  6EDA               	movwf	fsr2h,c
  4622  001154  C0AA  F001         	movff	efgtoa@e,___awmod@dividend
  4623  001158  C0AB  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  4624  00115C  0E00               	movlw	0
  4625  00115E  6E04               	movwf	(___awmod@divisor+1)^0,c
  4626  001160  0E0A               	movlw	10
  4627  001162  6E03               	movwf	___awmod@divisor^0,c
  4628  001164  EC31  F01E         	call	___awmod	;wreg free
  4629  001168  5001               	movf	?___awmod^0,w,c
  4630  00116A  0F30               	addlw	48
  4631  00116C  6EDF               	movwf	indf2,c
  4632  00116E                     
  4633                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  4634  00116E  C0AA  F001         	movff	efgtoa@e,___awdiv@dividend
  4635  001172  C0AB  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  4636  001176  0E00               	movlw	0
  4637  001178  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4638  00117A  0E0A               	movlw	10
  4639  00117C  6E03               	movwf	___awdiv@divisor^0,c
  4640  00117E  EC6E  F01D         	call	___awdiv	;wreg free
  4641  001182  C001  F0AA         	movff	?___awdiv,efgtoa@e
  4642  001186  C002  F0AB         	movff	?___awdiv+1,efgtoa@e+1
  4643  00118A                     
  4644                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  4645  00118A  0100               	movlb	0	; () banked
  4646  00118C  0796               	decf	efgtoa@p& (0+255),f,b
  4647  00118E  A0D8               	btfss	status,0,c
  4648  001190  0797               	decf	(efgtoa@p+1)& (0+255),f,b
  4649  001192                     
  4650                           ; BSR set to: 0
  4651                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  4652  001192  0798               	decf	efgtoa@w& (0+255),f,b
  4653  001194  A0D8               	btfss	status,0,c
  4654  001196  0799               	decf	(efgtoa@w+1)& (0+255),f,b
  4655  001198                     l4242:
  4656                           
  4657                           ; BSR set to: 0
  4658                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  4659  001198  51AA               	movf	efgtoa@e& (0+255),w,b
  4660  00119A  11AB               	iorwf	(efgtoa@e+1)& (0+255),w,b
  4661  00119C  A4D8               	btfss	status,2,c
  4662  00119E  EFD3  F008         	goto	u5091
  4663  0011A2  EFD5  F008         	goto	u5090
  4664  0011A6                     u5091:
  4665  0011A6  EFA1  F008         	goto	l4232
  4666  0011AA                     u5090:
  4667  0011AA                     
  4668                           ; BSR set to: 0
  4669  0011AA  BF97               	btfsc	(efgtoa@p+1)& (0+255),7,b
  4670  0011AC  EFE2  F008         	goto	u5100
  4671  0011B0  5197               	movf	(efgtoa@p+1)& (0+255),w,b
  4672  0011B2  E106               	bnz	u5101
  4673  0011B4  0596               	decf	efgtoa@p& (0+255),w,b
  4674  0011B6  B0D8               	btfsc	status,0,c
  4675  0011B8  EFE0  F008         	goto	u5101
  4676  0011BC  EFE2  F008         	goto	u5100
  4677  0011C0                     u5101:
  4678  0011C0  EFA1  F008         	goto	l4232
  4679  0011C4                     u5100:
  4680  0011C4                     
  4681                           ; BSR set to: 0
  4682                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 514:         --i;
  4683  0011C4  07A4               	decf	efgtoa@i& (0+255),f,b
  4684  0011C6  A0D8               	btfss	status,0,c
  4685  0011C8  07A5               	decf	(efgtoa@i+1)& (0+255),f,b
  4686  0011CA                     
  4687                           ; BSR set to: 0
  4688                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  4689  0011CA  5194               	movf	efgtoa@sign& (0+255),w,b
  4690  0011CC  1195               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4691  0011CE  A4D8               	btfss	status,2,c
  4692  0011D0  EFEC  F008         	goto	u5111
  4693  0011D4  EFEE  F008         	goto	u5110
  4694  0011D8                     u5111:
  4695  0011D8  EFF4  F008         	goto	l4252
  4696  0011DC                     u5110:
  4697  0011DC                     
  4698                           ; BSR set to: 0
  4699  0011DC  0E00               	movlw	0
  4700  0011DE  6F83               	movwf	(_efgtoa$1172+1)& (0+255),b
  4701  0011E0  0E2B               	movlw	43
  4702  0011E2  6F82               	movwf	_efgtoa$1172& (0+255),b
  4703  0011E4  EFF8  F008         	goto	l4254
  4704  0011E8                     l4252:
  4705                           
  4706                           ; BSR set to: 0
  4707  0011E8  0E00               	movlw	0
  4708  0011EA  6F83               	movwf	(_efgtoa$1172+1)& (0+255),b
  4709  0011EC  0E2D               	movlw	45
  4710  0011EE  6F82               	movwf	_efgtoa$1172& (0+255),b
  4711  0011F0                     l4254:
  4712                           
  4713                           ; BSR set to: 0
  4714  0011F0  0E00               	movlw	low _dbuf
  4715  0011F2  25A4               	addwf	efgtoa@i& (0+255),w,b
  4716  0011F4  6ED9               	movwf	fsr2l,c
  4717  0011F6  0E01               	movlw	high _dbuf
  4718  0011F8  21A5               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4719  0011FA  6EDA               	movwf	fsr2h,c
  4720  0011FC  C082  FFDF         	movff	_efgtoa$1172,indf2
  4721  001200                     
  4722                           ; BSR set to: 0
  4723                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 516:         --w;
  4724  001200  0798               	decf	efgtoa@w& (0+255),f,b
  4725  001202  A0D8               	btfss	status,0,c
  4726  001204  0799               	decf	(efgtoa@w+1)& (0+255),f,b
  4727  001206                     
  4728                           ; BSR set to: 0
  4729                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 517:         --i;
  4730  001206  07A4               	decf	efgtoa@i& (0+255),f,b
  4731  001208  A0D8               	btfss	status,0,c
  4732  00120A  07A5               	decf	(efgtoa@i+1)& (0+255),f,b
  4733  00120C                     
  4734                           ; BSR set to: 0
  4735  00120C  0EBF               	movlw	191
  4736  00120E  6E5C               	movwf	??_efgtoa^0,c
  4737  001210  0EFF               	movlw	255
  4738  001212  6E5D               	movwf	(??_efgtoa+1)^0,c
  4739  001214  505B               	movf	efgtoa@c^0,w,c
  4740  001216  6E5E               	movwf	(??_efgtoa+2)^0,c
  4741  001218  6A5F               	clrf	(??_efgtoa+3)^0,c
  4742  00121A  505C               	movf	??_efgtoa^0,w,c
  4743  00121C  265E               	addwf	(??_efgtoa+2)^0,f,c
  4744  00121E  505D               	movf	(??_efgtoa+1)^0,w,c
  4745  001220  225F               	addwfc	(??_efgtoa+3)^0,f,c
  4746  001222  505F               	movf	(??_efgtoa+3)^0,w,c
  4747  001224  E109               	bnz	u5120
  4748  001226  0E1A               	movlw	26
  4749  001228  5C5E               	subwf	(??_efgtoa+2)^0,w,c
  4750  00122A  A0D8               	btfss	status,0,c
  4751  00122C  EF1A  F009         	goto	u5121
  4752  001230  EF1C  F009         	goto	u5120
  4753  001234                     u5121:
  4754  001234  EF22  F009         	goto	l4266
  4755  001238                     u5120:
  4756  001238                     
  4757                           ; BSR set to: 0
  4758  001238  0E00               	movlw	0
  4759  00123A  6F85               	movwf	(_efgtoa$1173+1)& (0+255),b
  4760  00123C  0E65               	movlw	101
  4761  00123E  6F84               	movwf	_efgtoa$1173& (0+255),b
  4762  001240  EF26  F009         	goto	l4268
  4763  001244                     l4266:
  4764                           
  4765                           ; BSR set to: 0
  4766  001244  0E00               	movlw	0
  4767  001246  6F85               	movwf	(_efgtoa$1173+1)& (0+255),b
  4768  001248  0E45               	movlw	69
  4769  00124A  6F84               	movwf	_efgtoa$1173& (0+255),b
  4770  00124C                     l4268:
  4771                           
  4772                           ; BSR set to: 0
  4773  00124C  0E00               	movlw	low _dbuf
  4774  00124E  25A4               	addwf	efgtoa@i& (0+255),w,b
  4775  001250  6ED9               	movwf	fsr2l,c
  4776  001252  0E01               	movlw	high _dbuf
  4777  001254  21A5               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4778  001256  6EDA               	movwf	fsr2h,c
  4779  001258  C084  FFDF         	movff	_efgtoa$1173,indf2
  4780  00125C                     
  4781                           ; BSR set to: 0
  4782                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 519:         --w;
  4783  00125C  0798               	decf	efgtoa@w& (0+255),f,b
  4784  00125E  A0D8               	btfss	status,0,c
  4785  001260  0799               	decf	(efgtoa@w+1)& (0+255),f,b
  4786  001262                     
  4787                           ; BSR set to: 0
  4788                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  4789  001262  0E00               	movlw	low _dbuf
  4790  001264  25AC               	addwf	efgtoa@n& (0+255),w,b
  4791  001266  6E01               	movwf	strcpy@dest^0,c
  4792  001268  0E01               	movlw	high _dbuf
  4793  00126A  21AD               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4794  00126C  6E02               	movwf	(strcpy@dest+1)^0,c
  4795  00126E  0E00               	movlw	low _dbuf
  4796  001270  25A4               	addwf	efgtoa@i& (0+255),w,b
  4797  001272  6E03               	movwf	strcpy@src^0,c
  4798  001274  0E01               	movlw	high _dbuf
  4799  001276  21A5               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4800  001278  6E04               	movwf	(strcpy@src+1)^0,c
  4801  00127A  ECFF  F01F         	call	_strcpy	;wreg free
  4802  00127E  EFE1  F003         	goto	l4016
  4803  001282                     l933:
  4804  001282  0012               	return		;funcret
  4805  001284                     __end_of_efgtoa:
  4806                           	callstack 0
  4807                           
  4808 ;; *************** function _tolower *****************
  4809 ;; Defined at:
  4810 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\tolower.c"
  4811 ;; Parameters:    Size  Location     Type
  4812 ;;  c               2    6[COMRAM] int 
  4813 ;; Auto vars:     Size  Location     Type
  4814 ;;		None
  4815 ;; Return value:  Size  Location     Type
  4816 ;;                  2    6[COMRAM] int 
  4817 ;; Registers used:
  4818 ;;		wreg, status,2, status,0
  4819 ;; Tracked objects:
  4820 ;;		On entry : 0/0
  4821 ;;		On exit  : 0/0
  4822 ;;		Unchanged: 0/0
  4823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4824 ;;      Params:         2       0       0       0       0       0       0
  4825 ;;      Locals:         0       0       0       0       0       0       0
  4826 ;;      Temps:          4       0       0       0       0       0       0
  4827 ;;      Totals:         6       0       0       0       0       0       0
  4828 ;;Total ram usage:        6 bytes
  4829 ;; Hardware stack levels used: 1
  4830 ;; Hardware stack levels required when called: 1
  4831 ;; This function calls:
  4832 ;;		_isupper
  4833 ;; This function is called by:
  4834 ;;		_efgtoa
  4835 ;;		_vfpfcnvrt
  4836 ;; This function uses a non-reentrant model
  4837 ;;
  4838                           
  4839                           	psect	text10
  4840  0040FE                     __ptext10:
  4841                           	callstack 0
  4842  0040FE                     _tolower:
  4843                           	callstack 25
  4844  0040FE  0EBF               	movlw	191
  4845  004100  6E09               	movwf	??_tolower^0,c
  4846  004102  0EFF               	movlw	255
  4847  004104  6E0A               	movwf	(??_tolower+1)^0,c
  4848  004106  C007  F00B         	movff	tolower@c,??_tolower+2
  4849  00410A  C008  F00C         	movff	tolower@c+1,??_tolower+3
  4850  00410E  5009               	movf	??_tolower^0,w,c
  4851  004110  260B               	addwf	(??_tolower+2)^0,f,c
  4852  004112  500A               	movf	(??_tolower+1)^0,w,c
  4853  004114  220C               	addwfc	(??_tolower+3)^0,f,c
  4854  004116  500C               	movf	(??_tolower+3)^0,w,c
  4855  004118  E107               	bnz	u4291
  4856  00411A  0E1A               	movlw	26
  4857  00411C  5C0B               	subwf	(??_tolower+2)^0,w,c
  4858  00411E  B0D8               	btfsc	status,0,c
  4859  004120  EF94  F020         	goto	u4291
  4860  004124  EF96  F020         	goto	u4290
  4861  004128                     u4291:
  4862  004128  EF9D  F020         	goto	l1180
  4863  00412C                     u4290:
  4864  00412C  0E20               	movlw	32
  4865  00412E  1007               	iorwf	tolower@c^0,w,c
  4866  004130  6E07               	movwf	?_tolower^0,c
  4867  004132  5008               	movf	(tolower@c+1)^0,w,c
  4868  004134  6E08               	movwf	(?_tolower+1)^0,c
  4869  004136  EFA1  F020         	goto	l1183
  4870  00413A                     l1180:
  4871  00413A  C007  F007         	movff	tolower@c,?_tolower
  4872  00413E  C008  F008         	movff	tolower@c+1,?_tolower+1
  4873  004142                     l1183:
  4874  004142  0012               	return		;funcret
  4875  004144                     __end_of_tolower:
  4876                           	callstack 0
  4877                           
  4878 ;; *************** function _isupper *****************
  4879 ;; Defined at:
  4880 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isupper.c"
  4881 ;; Parameters:    Size  Location     Type
  4882 ;;  c               2    0[COMRAM] int 
  4883 ;; Auto vars:     Size  Location     Type
  4884 ;;		None
  4885 ;; Return value:  Size  Location     Type
  4886 ;;                  2    0[COMRAM] int 
  4887 ;; Registers used:
  4888 ;;		wreg, status,2, status,0
  4889 ;; Tracked objects:
  4890 ;;		On entry : 0/0
  4891 ;;		On exit  : 0/0
  4892 ;;		Unchanged: 0/0
  4893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4894 ;;      Params:         2       0       0       0       0       0       0
  4895 ;;      Locals:         0       0       0       0       0       0       0
  4896 ;;      Temps:          4       0       0       0       0       0       0
  4897 ;;      Totals:         6       0       0       0       0       0       0
  4898 ;;Total ram usage:        6 bytes
  4899 ;; Hardware stack levels used: 1
  4900 ;; This function calls:
  4901 ;;		Nothing
  4902 ;; This function is called by:
  4903 ;;		_efgtoa
  4904 ;;		_vfpfcnvrt
  4905 ;;		_tolower
  4906 ;; This function uses a non-reentrant model
  4907 ;;
  4908                           
  4909                           	psect	text11
  4910  00424C                     __ptext11:
  4911                           	callstack 0
  4912  00424C                     _isupper:
  4913                           	callstack 25
  4914  00424C  0EBF               	movlw	191
  4915  00424E  6E03               	movwf	??_isupper^0,c
  4916  004250  0EFF               	movlw	255
  4917  004252  6E04               	movwf	(??_isupper+1)^0,c
  4918  004254  C001  F005         	movff	isupper@c,??_isupper+2
  4919  004258  C002  F006         	movff	isupper@c+1,??_isupper+3
  4920  00425C  5003               	movf	??_isupper^0,w,c
  4921  00425E  2605               	addwf	(??_isupper+2)^0,f,c
  4922  004260  5004               	movf	(??_isupper+1)^0,w,c
  4923  004262  2206               	addwfc	(??_isupper+3)^0,f,c
  4924  004264  5006               	movf	(??_isupper+3)^0,w,c
  4925  004266  E10A               	bnz	u3300
  4926  004268  0E1A               	movlw	26
  4927  00426A  5C05               	subwf	(??_isupper+2)^0,w,c
  4928  00426C  A0D8               	btfss	status,0,c
  4929  00426E  EF3B  F021         	goto	u3301
  4930  004272  EF3E  F021         	goto	u3300
  4931  004276                     u3301:
  4932  004276  0E01               	movlw	1
  4933  004278  EF3F  F021         	goto	u3310
  4934  00427C                     u3300:
  4935  00427C  0E00               	movlw	0
  4936  00427E                     u3310:
  4937  00427E  6E01               	movwf	?_isupper^0,c
  4938  004280  6A02               	clrf	(?_isupper+1)^0,c
  4939  004282  0012               	return		;funcret
  4940  004284                     __end_of_isupper:
  4941                           	callstack 0
  4942                           
  4943 ;; *************** function _strcpy *****************
  4944 ;; Defined at:
  4945 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strcpy.c"
  4946 ;; Parameters:    Size  Location     Type
  4947 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4948 ;;		 -> dbuf(80), 
  4949 ;;  src             2    2[COMRAM] PTR const unsigned char 
  4950 ;;		 -> STR_20(4), STR_19(4), STR_16(4), STR_15(4), 
  4951 ;;		 -> dbuf(80), 
  4952 ;; Auto vars:     Size  Location     Type
  4953 ;;  d               2    8[COMRAM] PTR unsigned char 
  4954 ;;		 -> dbuf(80), 
  4955 ;;  s               2    6[COMRAM] PTR const unsigned char 
  4956 ;;		 -> STR_20(4), STR_19(4), STR_16(4), STR_15(4), 
  4957 ;;		 -> dbuf(80), 
  4958 ;; Return value:  Size  Location     Type
  4959 ;;                  2    0[COMRAM] PTR unsigned char 
  4960 ;; Registers used:
  4961 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4962 ;; Tracked objects:
  4963 ;;		On entry : 0/0
  4964 ;;		On exit  : 0/0
  4965 ;;		Unchanged: 0/0
  4966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4967 ;;      Params:         4       0       0       0       0       0       0
  4968 ;;      Locals:         4       0       0       0       0       0       0
  4969 ;;      Temps:          2       0       0       0       0       0       0
  4970 ;;      Totals:        10       0       0       0       0       0       0
  4971 ;;Total ram usage:       10 bytes
  4972 ;; Hardware stack levels used: 1
  4973 ;; This function calls:
  4974 ;;		Nothing
  4975 ;; This function is called by:
  4976 ;;		_efgtoa
  4977 ;; This function uses a non-reentrant model
  4978 ;;
  4979                           
  4980                           	psect	text12
  4981  003FFE                     __ptext12:
  4982                           	callstack 0
  4983  003FFE                     _strcpy:
  4984                           	callstack 25
  4985  003FFE  C003  F007         	movff	strcpy@src,strcpy@s
  4986  004002  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  4987  004006  C001  F009         	movff	strcpy@dest,strcpy@d
  4988  00400A  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  4989  00400E                     l3814:
  4990  00400E  5007               	movf	strcpy@s^0,w,c
  4991  004010  6E05               	movwf	??_strcpy^0,c
  4992  004012  5008               	movf	(strcpy@s+1)^0,w,c
  4993  004014  6E06               	movwf	(??_strcpy+1)^0,c
  4994  004016  4A07               	infsnz	strcpy@s^0,f,c
  4995  004018  2A08               	incf	(strcpy@s+1)^0,f,c
  4996  00401A  C005  FFF6         	movff	??_strcpy,tblptrl
  4997  00401E  C006  FFF7         	movff	??_strcpy+1,tblptrh
  4998  004022  6AF8               	clrf	tblptru,c
  4999  004024  C009  FFD9         	movff	strcpy@d,fsr2l
  5000  004028  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  5001  00402C  4A09               	infsnz	strcpy@d^0,f,c
  5002  00402E  2A0A               	incf	(strcpy@d+1)^0,f,c
  5003  004030  0E05               	movlw	(high __ramtop+-1)
  5004  004032  64F7               	cpfsgt	tblptrh,c
  5005  004034  D003               	bra	u4277
  5006  004036  0008               	tblrd		*
  5007  004038  50F5               	movf	tablat,w,c
  5008  00403A  D005               	bra	u4270
  5009  00403C                     u4277:
  5010  00403C  CFF6 FFE1          	movff	tblptrl,fsr1l
  5011  004040  CFF7 FFE2          	movff	tblptrh,fsr1h
  5012  004044  50E7               	movf	indf1,w,c
  5013  004046                     u4270:
  5014  004046  6EDF               	movwf	indf2,c
  5015  004048  50DF               	movf	indf2,w,c
  5016  00404A  A4D8               	btfss	status,2,c
  5017  00404C  EF2A  F020         	goto	u4281
  5018  004050  EF2C  F020         	goto	u4280
  5019  004054                     u4281:
  5020  004054  EF07  F020         	goto	l3814
  5021  004058                     u4280:
  5022  004058  0012               	return		;funcret
  5023  00405A                     __end_of_strcpy:
  5024                           	callstack 0
  5025                           
  5026 ;; *************** function _floorf *****************
  5027 ;; Defined at:
  5028 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\floorf.c"
  5029 ;; Parameters:    Size  Location     Type
  5030 ;;  x               4   64[COMRAM] float 
  5031 ;; Auto vars:     Size  Location     Type
  5032 ;;  u               4   80[COMRAM] struct .
  5033 ;;  m               4   74[COMRAM] unsigned long 
  5034 ;;  e               2   78[COMRAM] int 
  5035 ;; Return value:  Size  Location     Type
  5036 ;;                  4   64[COMRAM] float 
  5037 ;; Registers used:
  5038 ;;		wreg, status,2, status,0
  5039 ;; Tracked objects:
  5040 ;;		On entry : 0/0
  5041 ;;		On exit  : 0/0
  5042 ;;		Unchanged: 0/0
  5043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5044 ;;      Params:         4       0       0       0       0       0       0
  5045 ;;      Locals:        10       0       0       0       0       0       0
  5046 ;;      Temps:          6       0       0       0       0       0       0
  5047 ;;      Totals:        20       0       0       0       0       0       0
  5048 ;;Total ram usage:       20 bytes
  5049 ;; Hardware stack levels used: 1
  5050 ;; This function calls:
  5051 ;;		Nothing
  5052 ;; This function is called by:
  5053 ;;		_efgtoa
  5054 ;; This function uses a non-reentrant model
  5055 ;;
  5056                           
  5057                           	psect	text13
  5058  0028EA                     __ptext13:
  5059                           	callstack 0
  5060  0028EA                     _floorf:
  5061                           	callstack 25
  5062  0028EA  C0D5  F051         	movff	floorf@F526,floorf@u
  5063  0028EE  C0D6  F052         	movff	floorf@F526+1,floorf@u+1
  5064  0028F2  C0D7  F053         	movff	floorf@F526+2,floorf@u+2
  5065  0028F6  C0D8  F054         	movff	floorf@F526+3,floorf@u+3
  5066  0028FA  C041  F051         	movff	floorf@x,floorf@u
  5067  0028FE  C042  F052         	movff	floorf@x+1,floorf@u+1
  5068  002902  C043  F053         	movff	floorf@x+2,floorf@u+2
  5069  002906  C044  F054         	movff	floorf@x+3,floorf@u+3
  5070  00290A  0E81               	movlw	129
  5071  00290C  6E45               	movwf	??_floorf^0,c
  5072  00290E  0EFF               	movlw	255
  5073  002910  6E46               	movwf	(??_floorf+1)^0,c
  5074  002912  C051  F047         	movff	floorf@u,??_floorf+2
  5075  002916  C052  F048         	movff	floorf@u+1,??_floorf+3
  5076  00291A  C053  F049         	movff	floorf@u+2,??_floorf+4
  5077  00291E  C054  F04A         	movff	floorf@u+3,??_floorf+5
  5078  002922  0E18               	movlw	24
  5079  002924  EF99  F014         	goto	u4300
  5080  002928                     u4305:
  5081  002928  90D8               	bcf	status,0,c
  5082  00292A  324A               	rrcf	(??_floorf+5)^0,f,c
  5083  00292C  3249               	rrcf	(??_floorf+4)^0,f,c
  5084  00292E  3248               	rrcf	(??_floorf+3)^0,f,c
  5085  002930  3247               	rrcf	(??_floorf+2)^0,f,c
  5086  002932                     u4300:
  5087  002932  2EE8               	decfsz	wreg,f,c
  5088  002934  EF94  F014         	goto	u4305
  5089  002938  5047               	movf	(??_floorf+2)^0,w,c
  5090  00293A  2445               	addwf	??_floorf^0,w,c
  5091  00293C  6E4F               	movwf	floorf@e^0,c
  5092  00293E  0E00               	movlw	0
  5093  002940  2046               	addwfc	(??_floorf+1)^0,w,c
  5094  002942  6E50               	movwf	(floorf@e+1)^0,c
  5095  002944  BE50               	btfsc	(floorf@e+1)^0,7,c
  5096  002946  EFAE  F014         	goto	u4311
  5097  00294A  5050               	movf	(floorf@e+1)^0,w,c
  5098  00294C  E109               	bnz	u4310
  5099  00294E  0E17               	movlw	23
  5100  002950  5C4F               	subwf	floorf@e^0,w,c
  5101  002952  A0D8               	btfss	status,0,c
  5102  002954  EFAE  F014         	goto	u4311
  5103  002958  EFB0  F014         	goto	u4310
  5104  00295C                     u4311:
  5105  00295C  EFBA  F014         	goto	l3832
  5106  002960                     u4310:
  5107  002960                     l3830:
  5108  002960  C041  F041         	movff	floorf@x,?_floorf
  5109  002964  C042  F042         	movff	floorf@x+1,?_floorf+1
  5110  002968  C043  F043         	movff	floorf@x+2,?_floorf+2
  5111  00296C  C044  F044         	movff	floorf@x+3,?_floorf+3
  5112  002970  EF7D  F015         	goto	l1104
  5113  002974                     l3832:
  5114  002974  BE50               	btfsc	(floorf@e+1)^0,7,c
  5115  002976  EFBF  F014         	goto	u4321
  5116  00297A  EFC1  F014         	goto	u4320
  5117  00297E                     u4321:
  5118  00297E  EF31  F015         	goto	l3842
  5119  002982                     u4320:
  5120  002982  C04F  F045         	movff	floorf@e,??_floorf
  5121  002986  0EFF               	movlw	255
  5122  002988  6E46               	movwf	(??_floorf+1)^0,c
  5123  00298A  0EFF               	movlw	255
  5124  00298C  6E47               	movwf	(??_floorf+2)^0,c
  5125  00298E  0E7F               	movlw	127
  5126  002990  6E48               	movwf	(??_floorf+3)^0,c
  5127  002992  0E00               	movlw	0
  5128  002994  6E49               	movwf	(??_floorf+4)^0,c
  5129  002996                     u4335:
  5130  002996  6645               	tstfsz	??_floorf^0,c
  5131  002998  EFD0  F014         	goto	u4336
  5132  00299C  EFD8  F014         	goto	u4337
  5133  0029A0                     u4336:
  5134  0029A0  3449               	rlcf	(??_floorf+4)^0,w,c
  5135  0029A2  3249               	rrcf	(??_floorf+4)^0,f,c
  5136  0029A4  3248               	rrcf	(??_floorf+3)^0,f,c
  5137  0029A6  3247               	rrcf	(??_floorf+2)^0,f,c
  5138  0029A8  3246               	rrcf	(??_floorf+1)^0,f,c
  5139  0029AA  2E45               	decfsz	??_floorf^0,f,c
  5140  0029AC  EFCB  F014         	goto	u4335
  5141  0029B0                     u4337:
  5142  0029B0  C046  F04B         	movff	??_floorf+1,floorf@m
  5143  0029B4  C047  F04C         	movff	??_floorf+2,floorf@m+1
  5144  0029B8  C048  F04D         	movff	??_floorf+3,floorf@m+2
  5145  0029BC  C049  F04E         	movff	??_floorf+4,floorf@m+3
  5146  0029C0  504B               	movf	floorf@m^0,w,c
  5147  0029C2  1451               	andwf	floorf@u^0,w,c
  5148  0029C4  6E45               	movwf	??_floorf^0,c
  5149  0029C6  504C               	movf	(floorf@m+1)^0,w,c
  5150  0029C8  1452               	andwf	(floorf@u+1)^0,w,c
  5151  0029CA  6E46               	movwf	(??_floorf+1)^0,c
  5152  0029CC  504D               	movf	(floorf@m+2)^0,w,c
  5153  0029CE  1453               	andwf	(floorf@u+2)^0,w,c
  5154  0029D0  6E47               	movwf	(??_floorf+2)^0,c
  5155  0029D2  504E               	movf	(floorf@m+3)^0,w,c
  5156  0029D4  1454               	andwf	(floorf@u+3)^0,w,c
  5157  0029D6  6E48               	movwf	(??_floorf+3)^0,c
  5158  0029D8  5045               	movf	??_floorf^0,w,c
  5159  0029DA  1046               	iorwf	(??_floorf+1)^0,w,c
  5160  0029DC  1047               	iorwf	(??_floorf+2)^0,w,c
  5161  0029DE  1048               	iorwf	(??_floorf+3)^0,w,c
  5162  0029E0  A4D8               	btfss	status,2,c
  5163  0029E2  EFF5  F014         	goto	u4341
  5164  0029E6  EFF7  F014         	goto	u4340
  5165  0029EA                     u4341:
  5166  0029EA  EFF9  F014         	goto	l3838
  5167  0029EE                     u4340:
  5168  0029EE  EFB0  F014         	goto	l3830
  5169  0029F2                     l3838:
  5170  0029F2  C051  F045         	movff	floorf@u,??_floorf
  5171  0029F6  C052  F046         	movff	floorf@u+1,??_floorf+1
  5172  0029FA  C053  F047         	movff	floorf@u+2,??_floorf+2
  5173  0029FE  C054  F048         	movff	floorf@u+3,??_floorf+3
  5174  002A02  0E20               	movlw	32
  5175  002A04  EF09  F015         	goto	u4350
  5176  002A08                     u4355:
  5177  002A08  90D8               	bcf	status,0,c
  5178  002A0A  3248               	rrcf	(??_floorf+3)^0,f,c
  5179  002A0C  3247               	rrcf	(??_floorf+2)^0,f,c
  5180  002A0E  3246               	rrcf	(??_floorf+1)^0,f,c
  5181  002A10  3245               	rrcf	??_floorf^0,f,c
  5182  002A12                     u4350:
  5183  002A12  2EE8               	decfsz	wreg,f,c
  5184  002A14  EF04  F015         	goto	u4355
  5185  002A18  5045               	movf	??_floorf^0,w,c
  5186  002A1A  1046               	iorwf	(??_floorf+1)^0,w,c
  5187  002A1C  1047               	iorwf	(??_floorf+2)^0,w,c
  5188  002A1E  1048               	iorwf	(??_floorf+3)^0,w,c
  5189  002A20  B4D8               	btfsc	status,2,c
  5190  002A22  EF15  F015         	goto	u4361
  5191  002A26  EF17  F015         	goto	u4360
  5192  002A2A                     u4361:
  5193  002A2A  EF1F  F015         	goto	l1107
  5194  002A2E                     u4360:
  5195  002A2E  504B               	movf	floorf@m^0,w,c
  5196  002A30  2651               	addwf	floorf@u^0,f,c
  5197  002A32  504C               	movf	(floorf@m+1)^0,w,c
  5198  002A34  2252               	addwfc	(floorf@u+1)^0,f,c
  5199  002A36  504D               	movf	(floorf@m+2)^0,w,c
  5200  002A38  2253               	addwfc	(floorf@u+2)^0,f,c
  5201  002A3A  504E               	movf	(floorf@m+3)^0,w,c
  5202  002A3C  2254               	addwfc	(floorf@u+3)^0,f,c
  5203  002A3E                     l1107:
  5204  002A3E  1C4B               	comf	floorf@m^0,w,c
  5205  002A40  6E45               	movwf	??_floorf^0,c
  5206  002A42  1C4C               	comf	(floorf@m+1)^0,w,c
  5207  002A44  6E46               	movwf	(??_floorf+1)^0,c
  5208  002A46  1C4D               	comf	(floorf@m+2)^0,w,c
  5209  002A48  6E47               	movwf	(??_floorf+2)^0,c
  5210  002A4A  1C4E               	comf	(floorf@m+3)^0,w,c
  5211  002A4C  6E48               	movwf	(??_floorf+3)^0,c
  5212  002A4E  5045               	movf	??_floorf^0,w,c
  5213  002A50  1651               	andwf	floorf@u^0,f,c
  5214  002A52  5046               	movf	(??_floorf+1)^0,w,c
  5215  002A54  1652               	andwf	(floorf@u+1)^0,f,c
  5216  002A56  5047               	movf	(??_floorf+2)^0,w,c
  5217  002A58  1653               	andwf	(floorf@u+2)^0,f,c
  5218  002A5A  5048               	movf	(??_floorf+3)^0,w,c
  5219  002A5C  1654               	andwf	(floorf@u+3)^0,f,c
  5220  002A5E  EF75  F015         	goto	l3850
  5221  002A62                     l3842:
  5222  002A62  C051  F045         	movff	floorf@u,??_floorf
  5223  002A66  C052  F046         	movff	floorf@u+1,??_floorf+1
  5224  002A6A  C053  F047         	movff	floorf@u+2,??_floorf+2
  5225  002A6E  C054  F048         	movff	floorf@u+3,??_floorf+3
  5226  002A72  0E20               	movlw	32
  5227  002A74  EF41  F015         	goto	u4370
  5228  002A78                     u4375:
  5229  002A78  90D8               	bcf	status,0,c
  5230  002A7A  3248               	rrcf	(??_floorf+3)^0,f,c
  5231  002A7C  3247               	rrcf	(??_floorf+2)^0,f,c
  5232  002A7E  3246               	rrcf	(??_floorf+1)^0,f,c
  5233  002A80  3245               	rrcf	??_floorf^0,f,c
  5234  002A82                     u4370:
  5235  002A82  2EE8               	decfsz	wreg,f,c
  5236  002A84  EF3C  F015         	goto	u4375
  5237  002A88  5045               	movf	??_floorf^0,w,c
  5238  002A8A  1046               	iorwf	(??_floorf+1)^0,w,c
  5239  002A8C  1047               	iorwf	(??_floorf+2)^0,w,c
  5240  002A8E  1048               	iorwf	(??_floorf+3)^0,w,c
  5241  002A90  A4D8               	btfss	status,2,c
  5242  002A92  EF4D  F015         	goto	u4381
  5243  002A96  EF4F  F015         	goto	u4380
  5244  002A9A                     u4381:
  5245  002A9A  EF59  F015         	goto	l3846
  5246  002A9E                     u4380:
  5247  002A9E  0E00               	movlw	0
  5248  002AA0  6E51               	movwf	floorf@u^0,c
  5249  002AA2  0E00               	movlw	0
  5250  002AA4  6E52               	movwf	(floorf@u+1)^0,c
  5251  002AA6  0E00               	movlw	0
  5252  002AA8  6E53               	movwf	(floorf@u+2)^0,c
  5253  002AAA  0E00               	movlw	0
  5254  002AAC  6E54               	movwf	(floorf@u+3)^0,c
  5255  002AAE  EF75  F015         	goto	l3850
  5256  002AB2                     l3846:
  5257  002AB2  90D8               	bcf	status,0,c
  5258  002AB4  3451               	rlcf	floorf@u^0,w,c
  5259  002AB6  6E45               	movwf	??_floorf^0,c
  5260  002AB8  3452               	rlcf	(floorf@u+1)^0,w,c
  5261  002ABA  6E46               	movwf	(??_floorf+1)^0,c
  5262  002ABC  3453               	rlcf	(floorf@u+2)^0,w,c
  5263  002ABE  6E47               	movwf	(??_floorf+2)^0,c
  5264  002AC0  3454               	rlcf	(floorf@u+3)^0,w,c
  5265  002AC2  6E48               	movwf	(??_floorf+3)^0,c
  5266  002AC4  5045               	movf	??_floorf^0,w,c
  5267  002AC6  1046               	iorwf	(??_floorf+1)^0,w,c
  5268  002AC8  1047               	iorwf	(??_floorf+2)^0,w,c
  5269  002ACA  1048               	iorwf	(??_floorf+3)^0,w,c
  5270  002ACC  B4D8               	btfsc	status,2,c
  5271  002ACE  EF6B  F015         	goto	u4391
  5272  002AD2  EF6D  F015         	goto	u4390
  5273  002AD6                     u4391:
  5274  002AD6  EF75  F015         	goto	l3850
  5275  002ADA                     u4390:
  5276  002ADA  0E00               	movlw	0
  5277  002ADC  6E51               	movwf	floorf@u^0,c
  5278  002ADE  0E00               	movlw	0
  5279  002AE0  6E52               	movwf	(floorf@u+1)^0,c
  5280  002AE2  0E80               	movlw	128
  5281  002AE4  6E53               	movwf	(floorf@u+2)^0,c
  5282  002AE6  0EBF               	movlw	191
  5283  002AE8  6E54               	movwf	(floorf@u+3)^0,c
  5284  002AEA                     l3850:
  5285  002AEA  C051  F041         	movff	floorf@u,?_floorf
  5286  002AEE  C052  F042         	movff	floorf@u+1,?_floorf+1
  5287  002AF2  C053  F043         	movff	floorf@u+2,?_floorf+2
  5288  002AF6  C054  F044         	movff	floorf@u+3,?_floorf+3
  5289  002AFA                     l1104:
  5290  002AFA  0012               	return		;funcret
  5291  002AFC                     __end_of_floorf:
  5292                           	callstack 0
  5293                           
  5294 ;; *************** function ___fpclassifyf *****************
  5295 ;; Defined at:
  5296 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__fpclassifyf.c"
  5297 ;; Parameters:    Size  Location     Type
  5298 ;;  x               4    0[COMRAM] float 
  5299 ;; Auto vars:     Size  Location     Type
  5300 ;;  u               4   10[COMRAM] struct .
  5301 ;;  e               2    8[COMRAM] int 
  5302 ;; Return value:  Size  Location     Type
  5303 ;;                  2    0[COMRAM] int 
  5304 ;; Registers used:
  5305 ;;		wreg, status,2, status,0
  5306 ;; Tracked objects:
  5307 ;;		On entry : 0/0
  5308 ;;		On exit  : 0/0
  5309 ;;		Unchanged: 0/0
  5310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5311 ;;      Params:         4       0       0       0       0       0       0
  5312 ;;      Locals:         6       0       0       0       0       0       0
  5313 ;;      Temps:          4       0       0       0       0       0       0
  5314 ;;      Totals:        14       0       0       0       0       0       0
  5315 ;;Total ram usage:       14 bytes
  5316 ;; Hardware stack levels used: 1
  5317 ;; This function calls:
  5318 ;;		Nothing
  5319 ;; This function is called by:
  5320 ;;		_efgtoa
  5321 ;; This function uses a non-reentrant model
  5322 ;;
  5323                           
  5324                           	psect	text14
  5325  0034C6                     __ptext14:
  5326                           	callstack 0
  5327  0034C6                     ___fpclassifyf:
  5328                           	callstack 25
  5329  0034C6  C0D9  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  5330  0034CA  C0DA  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5331  0034CE  C0DB  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5332  0034D2  C0DC  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5333  0034D6  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  5334  0034DA  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5335  0034DE  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5336  0034E2  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5337  0034E6  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5338  0034EA  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5339  0034EE  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5340  0034F2  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5341  0034F6  0E18               	movlw	24
  5342  0034F8  EF83  F01A         	goto	u4200
  5343  0034FC                     u4205:
  5344  0034FC  90D8               	bcf	status,0,c
  5345  0034FE  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  5346  003500  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  5347  003502  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  5348  003504  3205               	rrcf	??___fpclassifyf^0,f,c
  5349  003506                     u4200:
  5350  003506  2EE8               	decfsz	wreg,f,c
  5351  003508  EF7E  F01A         	goto	u4205
  5352  00350C  5005               	movf	??___fpclassifyf^0,w,c
  5353  00350E  6E09               	movwf	___fpclassifyf@e^0,c
  5354  003510  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  5355  003512  5009               	movf	___fpclassifyf@e^0,w,c
  5356  003514  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5357  003516  A4D8               	btfss	status,2,c
  5358  003518  EF90  F01A         	goto	u4211
  5359  00351C  EF92  F01A         	goto	u4210
  5360  003520                     u4211:
  5361  003520  EFB2  F01A         	goto	l3802
  5362  003524                     u4210:
  5363  003524  90D8               	bcf	status,0,c
  5364  003526  340B               	rlcf	___fpclassifyf@u^0,w,c
  5365  003528  6E05               	movwf	??___fpclassifyf^0,c
  5366  00352A  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5367  00352C  6E06               	movwf	(??___fpclassifyf+1)^0,c
  5368  00352E  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5369  003530  6E07               	movwf	(??___fpclassifyf+2)^0,c
  5370  003532  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5371  003534  6E08               	movwf	(??___fpclassifyf+3)^0,c
  5372  003536  5005               	movf	??___fpclassifyf^0,w,c
  5373  003538  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5374  00353A  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5375  00353C  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5376  00353E  A4D8               	btfss	status,2,c
  5377  003540  EFA4  F01A         	goto	u4221
  5378  003544  EFA6  F01A         	goto	u4220
  5379  003548                     u4221:
  5380  003548  EFAC  F01A         	goto	l3798
  5381  00354C                     u4220:
  5382  00354C  0E00               	movlw	0
  5383  00354E  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5384  003550  0E02               	movlw	2
  5385  003552  6E01               	movwf	?___fpclassifyf^0,c
  5386  003554  EFE1  F01A         	goto	l1065
  5387  003558                     l3798:
  5388  003558  0E00               	movlw	0
  5389  00355A  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5390  00355C  0E03               	movlw	3
  5391  00355E  6E01               	movwf	?___fpclassifyf^0,c
  5392  003560  EFE1  F01A         	goto	l1065
  5393  003564                     l3802:
  5394  003564  2809               	incf	___fpclassifyf@e^0,w,c
  5395  003566  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5396  003568  A4D8               	btfss	status,2,c
  5397  00356A  EFB9  F01A         	goto	u4231
  5398  00356E  EFBB  F01A         	goto	u4230
  5399  003572                     u4231:
  5400  003572  EFDD  F01A         	goto	l3808
  5401  003576                     u4230:
  5402  003576  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5403  00357A  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5404  00357E  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5405  003582  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5406  003586  0E09               	movlw	9
  5407  003588                     u4245:
  5408  003588  90D8               	bcf	status,0,c
  5409  00358A  3605               	rlcf	??___fpclassifyf^0,f,c
  5410  00358C  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  5411  00358E  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  5412  003590  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  5413  003592  2EE8               	decfsz	wreg,f,c
  5414  003594  EFC4  F01A         	goto	u4245
  5415  003598  5005               	movf	??___fpclassifyf^0,w,c
  5416  00359A  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5417  00359C  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5418  00359E  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5419  0035A0  B4D8               	btfsc	status,2,c
  5420  0035A2  EFD5  F01A         	goto	u4251
  5421  0035A6  EFD8  F01A         	goto	u4250
  5422  0035AA                     u4251:
  5423  0035AA  0E01               	movlw	1
  5424  0035AC  EFD9  F01A         	goto	u4260
  5425  0035B0                     u4250:
  5426  0035B0  0E00               	movlw	0
  5427  0035B2                     u4260:
  5428  0035B2  6E01               	movwf	?___fpclassifyf^0,c
  5429  0035B4  6A02               	clrf	(?___fpclassifyf+1)^0,c
  5430  0035B6  EFE1  F01A         	goto	l1065
  5431  0035BA                     l3808:
  5432  0035BA  0E00               	movlw	0
  5433  0035BC  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5434  0035BE  0E04               	movlw	4
  5435  0035C0  6E01               	movwf	?___fpclassifyf^0,c
  5436  0035C2                     l1065:
  5437  0035C2  0012               	return		;funcret
  5438  0035C4                     __end_of___fpclassifyf:
  5439                           	callstack 0
  5440                           
  5441 ;; *************** function ___fltol *****************
  5442 ;; Defined at:
  5443 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fltol.c"
  5444 ;; Parameters:    Size  Location     Type
  5445 ;;  f1              4    0[COMRAM] int 
  5446 ;; Auto vars:     Size  Location     Type
  5447 ;;  exp1            1    9[COMRAM] unsigned char 
  5448 ;;  sign1           1    8[COMRAM] unsigned char 
  5449 ;; Return value:  Size  Location     Type
  5450 ;;                  4    0[COMRAM] long 
  5451 ;; Registers used:
  5452 ;;		wreg, status,2, status,0
  5453 ;; Tracked objects:
  5454 ;;		On entry : 0/0
  5455 ;;		On exit  : 0/0
  5456 ;;		Unchanged: 0/0
  5457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5458 ;;      Params:         4       0       0       0       0       0       0
  5459 ;;      Locals:         2       0       0       0       0       0       0
  5460 ;;      Temps:          4       0       0       0       0       0       0
  5461 ;;      Totals:        10       0       0       0       0       0       0
  5462 ;;Total ram usage:       10 bytes
  5463 ;; Hardware stack levels used: 1
  5464 ;; This function calls:
  5465 ;;		Nothing
  5466 ;; This function is called by:
  5467 ;;		_efgtoa
  5468 ;; This function uses a non-reentrant model
  5469 ;;
  5470                           
  5471                           	psect	text15
  5472  0032BC                     __ptext15:
  5473                           	callstack 0
  5474  0032BC                     ___fltol:
  5475                           	callstack 25
  5476  0032BC  3403               	rlcf	(___fltol@f1+2)^0,w,c
  5477  0032BE  3404               	rlcf	(___fltol@f1+3)^0,w,c
  5478  0032C0  6E0A               	movwf	___fltol@exp1^0,c
  5479  0032C2  500A               	movf	___fltol@exp1^0,w,c
  5480  0032C4  A4D8               	btfss	status,2,c
  5481  0032C6  EF67  F019         	goto	u4081
  5482  0032CA  EF69  F019         	goto	u4080
  5483  0032CE                     u4081:
  5484  0032CE  EF73  F019         	goto	l3726
  5485  0032D2                     u4080:
  5486  0032D2                     l3722:
  5487  0032D2  0E00               	movlw	0
  5488  0032D4  6E01               	movwf	?___fltol^0,c
  5489  0032D6  0E00               	movlw	0
  5490  0032D8  6E02               	movwf	(?___fltol+1)^0,c
  5491  0032DA  0E00               	movlw	0
  5492  0032DC  6E03               	movwf	(?___fltol+2)^0,c
  5493  0032DE  0E00               	movlw	0
  5494  0032E0  6E04               	movwf	(?___fltol+3)^0,c
  5495  0032E2  EFE0  F019         	goto	l446
  5496  0032E6                     l3726:
  5497  0032E6  C001  F005         	movff	___fltol@f1,??___fltol
  5498  0032EA  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  5499  0032EE  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  5500  0032F2  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  5501  0032F6  0E20               	movlw	32
  5502  0032F8  EF83  F019         	goto	u4090
  5503  0032FC                     u4095:
  5504  0032FC  90D8               	bcf	status,0,c
  5505  0032FE  3208               	rrcf	(??___fltol+3)^0,f,c
  5506  003300  3207               	rrcf	(??___fltol+2)^0,f,c
  5507  003302  3206               	rrcf	(??___fltol+1)^0,f,c
  5508  003304  3205               	rrcf	??___fltol^0,f,c
  5509  003306                     u4090:
  5510  003306  2EE8               	decfsz	wreg,f,c
  5511  003308  EF7E  F019         	goto	u4095
  5512  00330C  5005               	movf	??___fltol^0,w,c
  5513  00330E  6E09               	movwf	___fltol@sign1^0,c
  5514  003310  8E03               	bsf	(___fltol@f1+2)^0,7,c
  5515  003312  0EFF               	movlw	255
  5516  003314  1601               	andwf	___fltol@f1^0,f,c
  5517  003316  0EFF               	movlw	255
  5518  003318  1602               	andwf	(___fltol@f1+1)^0,f,c
  5519  00331A  0EFF               	movlw	255
  5520  00331C  1603               	andwf	(___fltol@f1+2)^0,f,c
  5521  00331E  0E00               	movlw	0
  5522  003320  1604               	andwf	(___fltol@f1+3)^0,f,c
  5523  003322  0E96               	movlw	150
  5524  003324  5E0A               	subwf	___fltol@exp1^0,f,c
  5525  003326  BE0A               	btfsc	___fltol@exp1^0,7,c
  5526  003328  EF9A  F019         	goto	u4100
  5527  00332C  EF98  F019         	goto	u4101
  5528  003330                     u4101:
  5529  003330  EFB0  F019         	goto	l3746
  5530  003334                     u4100:
  5531  003334  500A               	movf	___fltol@exp1^0,w,c
  5532  003336  0A80               	xorlw	128
  5533  003338  0F97               	addlw	151
  5534  00333A  B0D8               	btfsc	status,0,c
  5535  00333C  EFA2  F019         	goto	u4111
  5536  003340  EFA4  F019         	goto	u4110
  5537  003344                     u4111:
  5538  003344  EFA6  F019         	goto	l3742
  5539  003348                     u4110:
  5540  003348  EF69  F019         	goto	l3722
  5541  00334C                     l3742:
  5542  00334C  90D8               	bcf	status,0,c
  5543  00334E  3204               	rrcf	(___fltol@f1+3)^0,f,c
  5544  003350  3203               	rrcf	(___fltol@f1+2)^0,f,c
  5545  003352  3202               	rrcf	(___fltol@f1+1)^0,f,c
  5546  003354  3201               	rrcf	___fltol@f1^0,f,c
  5547  003356  3E0A               	incfsz	___fltol@exp1^0,f,c
  5548  003358  EFA6  F019         	goto	l3742
  5549  00335C  EFC8  F019         	goto	l3756
  5550  003360                     l3746:
  5551  003360  0E1F               	movlw	31
  5552  003362  640A               	cpfsgt	___fltol@exp1^0,c
  5553  003364  EFB6  F019         	goto	u4121
  5554  003368  EFB8  F019         	goto	u4120
  5555  00336C                     u4121:
  5556  00336C  EFC0  F019         	goto	l3754
  5557  003370                     u4120:
  5558  003370  EF69  F019         	goto	l3722
  5559  003374                     l3752:
  5560  003374  90D8               	bcf	status,0,c
  5561  003376  3601               	rlcf	___fltol@f1^0,f,c
  5562  003378  3602               	rlcf	(___fltol@f1+1)^0,f,c
  5563  00337A  3603               	rlcf	(___fltol@f1+2)^0,f,c
  5564  00337C  3604               	rlcf	(___fltol@f1+3)^0,f,c
  5565  00337E  060A               	decf	___fltol@exp1^0,f,c
  5566  003380                     l3754:
  5567  003380  500A               	movf	___fltol@exp1^0,w,c
  5568  003382  A4D8               	btfss	status,2,c
  5569  003384  EFC6  F019         	goto	u4131
  5570  003388  EFC8  F019         	goto	u4130
  5571  00338C                     u4131:
  5572  00338C  EFBA  F019         	goto	l3752
  5573  003390                     u4130:
  5574  003390                     l3756:
  5575  003390  5009               	movf	___fltol@sign1^0,w,c
  5576  003392  B4D8               	btfsc	status,2,c
  5577  003394  EFCE  F019         	goto	u4141
  5578  003398  EFD0  F019         	goto	u4140
  5579  00339C                     u4141:
  5580  00339C  EFD8  F019         	goto	l3760
  5581  0033A0                     u4140:
  5582  0033A0  1E04               	comf	(___fltol@f1+3)^0,f,c
  5583  0033A2  1E03               	comf	(___fltol@f1+2)^0,f,c
  5584  0033A4  1E02               	comf	(___fltol@f1+1)^0,f,c
  5585  0033A6  6C01               	negf	___fltol@f1^0,c
  5586  0033A8  0E00               	movlw	0
  5587  0033AA  2202               	addwfc	(___fltol@f1+1)^0,f,c
  5588  0033AC  2203               	addwfc	(___fltol@f1+2)^0,f,c
  5589  0033AE  2204               	addwfc	(___fltol@f1+3)^0,f,c
  5590  0033B0                     l3760:
  5591  0033B0  C001  F001         	movff	___fltol@f1,?___fltol
  5592  0033B4  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  5593  0033B8  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  5594  0033BC  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  5595  0033C0                     l446:
  5596  0033C0  0012               	return		;funcret
  5597  0033C2                     __end_of___fltol:
  5598                           	callstack 0
  5599                           
  5600 ;; *************** function ___flsub *****************
  5601 ;; Defined at:
  5602 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  5603 ;; Parameters:    Size  Location     Type
  5604 ;;  b               4   39[COMRAM] long 
  5605 ;;  a               4   43[COMRAM] long 
  5606 ;; Auto vars:     Size  Location     Type
  5607 ;;		None
  5608 ;; Return value:  Size  Location     Type
  5609 ;;                  4   39[COMRAM] long 
  5610 ;; Registers used:
  5611 ;;		wreg, status,2, status,0, cstack
  5612 ;; Tracked objects:
  5613 ;;		On entry : 0/0
  5614 ;;		On exit  : 0/0
  5615 ;;		Unchanged: 0/0
  5616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5617 ;;      Params:         8       0       0       0       0       0       0
  5618 ;;      Locals:         0       0       0       0       0       0       0
  5619 ;;      Temps:          0       0       0       0       0       0       0
  5620 ;;      Totals:         8       0       0       0       0       0       0
  5621 ;;Total ram usage:        8 bytes
  5622 ;; Hardware stack levels used: 1
  5623 ;; Hardware stack levels required when called: 1
  5624 ;; This function calls:
  5625 ;;		___fladd
  5626 ;; This function is called by:
  5627 ;;		_efgtoa
  5628 ;; This function uses a non-reentrant model
  5629 ;;
  5630                           
  5631                           	psect	text16
  5632  004144                     __ptext16:
  5633                           	callstack 0
  5634  004144                     ___flsub:
  5635                           	callstack 24
  5636  004144  0E00               	movlw	0
  5637  004146  1A2C               	xorwf	___flsub@a^0,f,c
  5638  004148  0E00               	movlw	0
  5639  00414A  1A2D               	xorwf	(___flsub@a+1)^0,f,c
  5640  00414C  0E00               	movlw	0
  5641  00414E  1A2E               	xorwf	(___flsub@a+2)^0,f,c
  5642  004150  0E80               	movlw	128
  5643  004152  1A2F               	xorwf	(___flsub@a+3)^0,f,c
  5644  004154  C028  F001         	movff	___flsub@b,___fladd@b
  5645  004158  C029  F002         	movff	___flsub@b+1,___fladd@b+1
  5646  00415C  C02A  F003         	movff	___flsub@b+2,___fladd@b+2
  5647  004160  C02B  F004         	movff	___flsub@b+3,___fladd@b+3
  5648  004164  C02C  F005         	movff	___flsub@a,___fladd@a
  5649  004168  C02D  F006         	movff	___flsub@a+1,___fladd@a+1
  5650  00416C  C02E  F007         	movff	___flsub@a+2,___fladd@a+2
  5651  004170  C02F  F008         	movff	___flsub@a+3,___fladd@a+3
  5652  004174  ECC4  F00C         	call	___fladd	;wreg free
  5653  004178  C001  F028         	movff	?___fladd,?___flsub
  5654  00417C  C002  F029         	movff	?___fladd+1,?___flsub+1
  5655  004180  C003  F02A         	movff	?___fladd+2,?___flsub+2
  5656  004184  C004  F02B         	movff	?___fladd+3,?___flsub+3
  5657  004188  0012               	return		;funcret
  5658  00418A                     __end_of___flsub:
  5659                           	callstack 0
  5660                           
  5661 ;; *************** function ___fladd *****************
  5662 ;; Defined at:
  5663 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  5664 ;; Parameters:    Size  Location     Type
  5665 ;;  b               4    0[COMRAM] long 
  5666 ;;  a               4    4[COMRAM] long 
  5667 ;; Auto vars:     Size  Location     Type
  5668 ;;  grs             1   15[COMRAM] unsigned char 
  5669 ;;  bexp            1   14[COMRAM] unsigned char 
  5670 ;;  aexp            1   13[COMRAM] unsigned char 
  5671 ;;  signs           1   12[COMRAM] unsigned char 
  5672 ;; Return value:  Size  Location     Type
  5673 ;;                  4    0[COMRAM] unsigned char 
  5674 ;; Registers used:
  5675 ;;		wreg, status,2, status,0
  5676 ;; Tracked objects:
  5677 ;;		On entry : 0/0
  5678 ;;		On exit  : 0/0
  5679 ;;		Unchanged: 0/0
  5680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5681 ;;      Params:         8       0       0       0       0       0       0
  5682 ;;      Locals:         4       0       0       0       0       0       0
  5683 ;;      Temps:          4       0       0       0       0       0       0
  5684 ;;      Totals:        16       0       0       0       0       0       0
  5685 ;;Total ram usage:       16 bytes
  5686 ;; Hardware stack levels used: 1
  5687 ;; This function calls:
  5688 ;;		Nothing
  5689 ;; This function is called by:
  5690 ;;		___flsub
  5691 ;;		_efgtoa
  5692 ;; This function uses a non-reentrant model
  5693 ;;
  5694                           
  5695                           	psect	text17
  5696  001988                     __ptext17:
  5697                           	callstack 0
  5698  001988                     ___fladd:
  5699                           	callstack 24
  5700  001988  5004               	movf	(___fladd@b+3)^0,w,c
  5701  00198A  0B80               	andlw	128
  5702  00198C  6E0D               	movwf	___fladd@signs^0,c
  5703  00198E  5004               	movf	(___fladd@b+3)^0,w,c
  5704  001990  2404               	addwf	(___fladd@b+3)^0,w,c
  5705  001992  6E0F               	movwf	___fladd@bexp^0,c
  5706  001994  AE03               	btfss	(___fladd@b+2)^0,7,c
  5707  001996  EFCF  F00C         	goto	u2891
  5708  00199A  EFD1  F00C         	goto	u2890
  5709  00199E                     u2891:
  5710  00199E  EFD2  F00C         	goto	l3016
  5711  0019A2                     u2890:
  5712  0019A2  800F               	bsf	___fladd@bexp^0,0,c
  5713  0019A4                     l3016:
  5714  0019A4  500F               	movf	___fladd@bexp^0,w,c
  5715  0019A6  B4D8               	btfsc	status,2,c
  5716  0019A8  EFD8  F00C         	goto	u2901
  5717  0019AC  EFDA  F00C         	goto	u2900
  5718  0019B0                     u2901:
  5719  0019B0  EFEF  F00C         	goto	l3026
  5720  0019B4                     u2900:
  5721  0019B4  280F               	incf	___fladd@bexp^0,w,c
  5722  0019B6  A4D8               	btfss	status,2,c
  5723  0019B8  EFE0  F00C         	goto	u2911
  5724  0019BC  EFE2  F00C         	goto	u2910
  5725  0019C0                     u2911:
  5726  0019C0  EFEA  F00C         	goto	l3022
  5727  0019C4                     u2910:
  5728  0019C4  0E00               	movlw	0
  5729  0019C6  6E01               	movwf	___fladd@b^0,c
  5730  0019C8  0E00               	movlw	0
  5731  0019CA  6E02               	movwf	(___fladd@b+1)^0,c
  5732  0019CC  0E00               	movlw	0
  5733  0019CE  6E03               	movwf	(___fladd@b+2)^0,c
  5734  0019D0  0E00               	movlw	0
  5735  0019D2  6E04               	movwf	(___fladd@b+3)^0,c
  5736  0019D4                     l3022:
  5737  0019D4  8E03               	bsf	(___fladd@b+2)^0,7,c
  5738  0019D6  0E00               	movlw	0
  5739  0019D8  6E04               	movwf	(___fladd@b+3)^0,c
  5740  0019DA  EFF7  F00C         	goto	l3028
  5741  0019DE                     l3026:
  5742  0019DE  0E00               	movlw	0
  5743  0019E0  6E01               	movwf	___fladd@b^0,c
  5744  0019E2  0E00               	movlw	0
  5745  0019E4  6E02               	movwf	(___fladd@b+1)^0,c
  5746  0019E6  0E00               	movlw	0
  5747  0019E8  6E03               	movwf	(___fladd@b+2)^0,c
  5748  0019EA  0E00               	movlw	0
  5749  0019EC  6E04               	movwf	(___fladd@b+3)^0,c
  5750  0019EE                     l3028:
  5751  0019EE  5008               	movf	(___fladd@a+3)^0,w,c
  5752  0019F0  0B80               	andlw	128
  5753  0019F2  6E0E               	movwf	___fladd@aexp^0,c
  5754  0019F4  500D               	movf	___fladd@signs^0,w,c
  5755  0019F6  180E               	xorwf	___fladd@aexp^0,w,c
  5756  0019F8  B4D8               	btfsc	status,2,c
  5757  0019FA  EF01  F00D         	goto	u2921
  5758  0019FE  EF03  F00D         	goto	u2920
  5759  001A02                     u2921:
  5760  001A02  EF04  F00D         	goto	l3034
  5761  001A06                     u2920:
  5762  001A06  8C0D               	bsf	___fladd@signs^0,6,c
  5763  001A08                     l3034:
  5764  001A08  5008               	movf	(___fladd@a+3)^0,w,c
  5765  001A0A  2408               	addwf	(___fladd@a+3)^0,w,c
  5766  001A0C  6E0E               	movwf	___fladd@aexp^0,c
  5767  001A0E  AE07               	btfss	(___fladd@a+2)^0,7,c
  5768  001A10  EF0C  F00D         	goto	u2931
  5769  001A14  EF0E  F00D         	goto	u2930
  5770  001A18                     u2931:
  5771  001A18  EF0F  F00D         	goto	l3040
  5772  001A1C                     u2930:
  5773  001A1C  800E               	bsf	___fladd@aexp^0,0,c
  5774  001A1E                     l3040:
  5775  001A1E  500E               	movf	___fladd@aexp^0,w,c
  5776  001A20  B4D8               	btfsc	status,2,c
  5777  001A22  EF15  F00D         	goto	u2941
  5778  001A26  EF17  F00D         	goto	u2940
  5779  001A2A                     u2941:
  5780  001A2A  EF2C  F00D         	goto	l3050
  5781  001A2E                     u2940:
  5782  001A2E  280E               	incf	___fladd@aexp^0,w,c
  5783  001A30  A4D8               	btfss	status,2,c
  5784  001A32  EF1D  F00D         	goto	u2951
  5785  001A36  EF1F  F00D         	goto	u2950
  5786  001A3A                     u2951:
  5787  001A3A  EF27  F00D         	goto	l3046
  5788  001A3E                     u2950:
  5789  001A3E  0E00               	movlw	0
  5790  001A40  6E05               	movwf	___fladd@a^0,c
  5791  001A42  0E00               	movlw	0
  5792  001A44  6E06               	movwf	(___fladd@a+1)^0,c
  5793  001A46  0E00               	movlw	0
  5794  001A48  6E07               	movwf	(___fladd@a+2)^0,c
  5795  001A4A  0E00               	movlw	0
  5796  001A4C  6E08               	movwf	(___fladd@a+3)^0,c
  5797  001A4E                     l3046:
  5798  001A4E  8E07               	bsf	(___fladd@a+2)^0,7,c
  5799  001A50  0E00               	movlw	0
  5800  001A52  6E08               	movwf	(___fladd@a+3)^0,c
  5801  001A54  EF34  F00D         	goto	l3052
  5802  001A58                     l3050:
  5803  001A58  0E00               	movlw	0
  5804  001A5A  6E05               	movwf	___fladd@a^0,c
  5805  001A5C  0E00               	movlw	0
  5806  001A5E  6E06               	movwf	(___fladd@a+1)^0,c
  5807  001A60  0E00               	movlw	0
  5808  001A62  6E07               	movwf	(___fladd@a+2)^0,c
  5809  001A64  0E00               	movlw	0
  5810  001A66  6E08               	movwf	(___fladd@a+3)^0,c
  5811  001A68                     l3052:
  5812  001A68  500F               	movf	___fladd@bexp^0,w,c
  5813  001A6A  5C0E               	subwf	___fladd@aexp^0,w,c
  5814  001A6C  B0D8               	btfsc	status,0,c
  5815  001A6E  EF3B  F00D         	goto	u2961
  5816  001A72  EF3D  F00D         	goto	u2960
  5817  001A76                     u2961:
  5818  001A76  EF64  F00D         	goto	l3088
  5819  001A7A                     u2960:
  5820  001A7A  AC0D               	btfss	___fladd@signs^0,6,c
  5821  001A7C  EF42  F00D         	goto	u2971
  5822  001A80  EF44  F00D         	goto	u2970
  5823  001A84                     u2971:
  5824  001A84  EF46  F00D         	goto	l3058
  5825  001A88                     u2970:
  5826  001A88  0E80               	movlw	128
  5827  001A8A  1A0D               	xorwf	___fladd@signs^0,f,c
  5828  001A8C                     l3058:
  5829  001A8C  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  5830  001A90  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5831  001A94  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  5832  001A98  C001  F010         	movff	___fladd@b,___fladd@grs
  5833  001A9C  C005  F001         	movff	___fladd@a,___fladd@b
  5834  001AA0  C010  F005         	movff	___fladd@grs,___fladd@a
  5835  001AA4  C002  F010         	movff	___fladd@b+1,___fladd@grs
  5836  001AA8  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  5837  001AAC  C010  F006         	movff	___fladd@grs,___fladd@a+1
  5838  001AB0  C003  F010         	movff	___fladd@b+2,___fladd@grs
  5839  001AB4  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  5840  001AB8  C010  F007         	movff	___fladd@grs,___fladd@a+2
  5841  001ABC  C004  F010         	movff	___fladd@b+3,___fladd@grs
  5842  001AC0  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  5843  001AC4  C010  F008         	movff	___fladd@grs,___fladd@a+3
  5844  001AC8                     l3088:
  5845  001AC8  0E00               	movlw	0
  5846  001ACA  6E10               	movwf	___fladd@grs^0,c
  5847  001ACC  500F               	movf	___fladd@bexp^0,w,c
  5848  001ACE  C00E  F009         	movff	___fladd@aexp,??___fladd
  5849  001AD2  6A0A               	clrf	(??___fladd+1)^0,c
  5850  001AD4  5E09               	subwf	??___fladd^0,f,c
  5851  001AD6  0E00               	movlw	0
  5852  001AD8  5A0A               	subwfb	(??___fladd+1)^0,f,c
  5853  001ADA  BE0A               	btfsc	(??___fladd+1)^0,7,c
  5854  001ADC  EF79  F00D         	goto	u2981
  5855  001AE0  500A               	movf	(??___fladd+1)^0,w,c
  5856  001AE2  E109               	bnz	u2980
  5857  001AE4  0E1A               	movlw	26
  5858  001AE6  5C09               	subwf	??___fladd^0,w,c
  5859  001AE8  A0D8               	btfss	status,0,c
  5860  001AEA  EF79  F00D         	goto	u2981
  5861  001AEE  EF7B  F00D         	goto	u2980
  5862  001AF2                     u2981:
  5863  001AF2  EFB2  F00D         	goto	l678
  5864  001AF6                     u2980:
  5865  001AF6  5001               	movf	___fladd@b^0,w,c
  5866  001AF8  1002               	iorwf	(___fladd@b+1)^0,w,c
  5867  001AFA  1003               	iorwf	(___fladd@b+2)^0,w,c
  5868  001AFC  1004               	iorwf	(___fladd@b+3)^0,w,c
  5869  001AFE  A4D8               	btfss	status,2,c
  5870  001B00  EF84  F00D         	goto	u2991
  5871  001B04  EF87  F00D         	goto	u2990
  5872  001B08                     u2991:
  5873  001B08  0E01               	movlw	1
  5874  001B0A  EF88  F00D         	goto	u3000
  5875  001B0E                     u2990:
  5876  001B0E  0E00               	movlw	0
  5877  001B10                     u3000:
  5878  001B10  6E10               	movwf	___fladd@grs^0,c
  5879  001B12  0E00               	movlw	0
  5880  001B14  6E01               	movwf	___fladd@b^0,c
  5881  001B16  0E00               	movlw	0
  5882  001B18  6E02               	movwf	(___fladd@b+1)^0,c
  5883  001B1A  0E00               	movlw	0
  5884  001B1C  6E03               	movwf	(___fladd@b+2)^0,c
  5885  001B1E  0E00               	movlw	0
  5886  001B20  6E04               	movwf	(___fladd@b+3)^0,c
  5887  001B22  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5888  001B26  EFBB  F00D         	goto	l677
  5889  001B2A                     l679:
  5890  001B2A  A010               	btfss	___fladd@grs^0,0,c
  5891  001B2C  EF9A  F00D         	goto	u3011
  5892  001B30  EF9C  F00D         	goto	u3010
  5893  001B34                     u3011:
  5894  001B34  EFA2  F00D         	goto	l3100
  5895  001B38                     u3010:
  5896  001B38  90D8               	bcf	status,0,c
  5897  001B3A  3010               	rrcf	___fladd@grs^0,w,c
  5898  001B3C  0901               	iorlw	1
  5899  001B3E  6E10               	movwf	___fladd@grs^0,c
  5900  001B40  EFA4  F00D         	goto	l3102
  5901  001B44                     l3100:
  5902  001B44  90D8               	bcf	status,0,c
  5903  001B46  3210               	rrcf	___fladd@grs^0,f,c
  5904  001B48                     l3102:
  5905  001B48  A001               	btfss	___fladd@b^0,0,c
  5906  001B4A  EFA9  F00D         	goto	u3021
  5907  001B4E  EFAB  F00D         	goto	u3020
  5908  001B52                     u3021:
  5909  001B52  EFAC  F00D         	goto	l3106
  5910  001B56                     u3020:
  5911  001B56  8E10               	bsf	___fladd@grs^0,7,c
  5912  001B58                     l3106:
  5913  001B58  3404               	rlcf	(___fladd@b+3)^0,w,c
  5914  001B5A  3204               	rrcf	(___fladd@b+3)^0,f,c
  5915  001B5C  3203               	rrcf	(___fladd@b+2)^0,f,c
  5916  001B5E  3202               	rrcf	(___fladd@b+1)^0,f,c
  5917  001B60  3201               	rrcf	___fladd@b^0,f,c
  5918  001B62  2A0F               	incf	___fladd@bexp^0,f,c
  5919  001B64                     l678:
  5920  001B64  500E               	movf	___fladd@aexp^0,w,c
  5921  001B66  5C0F               	subwf	___fladd@bexp^0,w,c
  5922  001B68  A0D8               	btfss	status,0,c
  5923  001B6A  EFB9  F00D         	goto	u3031
  5924  001B6E  EFBB  F00D         	goto	u3030
  5925  001B72                     u3031:
  5926  001B72  EF95  F00D         	goto	l679
  5927  001B76                     u3030:
  5928  001B76                     l677:
  5929  001B76  BC0D               	btfsc	___fladd@signs^0,6,c
  5930  001B78  EFC0  F00D         	goto	u3041
  5931  001B7C  EFC2  F00D         	goto	u3040
  5932  001B80                     u3041:
  5933  001B80  EF02  F00E         	goto	l3134
  5934  001B84                     u3040:
  5935  001B84  500F               	movf	___fladd@bexp^0,w,c
  5936  001B86  A4D8               	btfss	status,2,c
  5937  001B88  EFC8  F00D         	goto	u3051
  5938  001B8C  EFCA  F00D         	goto	u3050
  5939  001B90                     u3051:
  5940  001B90  EFD4  F00D         	goto	l3116
  5941  001B94                     u3050:
  5942  001B94  0E00               	movlw	0
  5943  001B96  6E01               	movwf	?___fladd^0,c
  5944  001B98  0E00               	movlw	0
  5945  001B9A  6E02               	movwf	(?___fladd+1)^0,c
  5946  001B9C  0E00               	movlw	0
  5947  001B9E  6E03               	movwf	(?___fladd+2)^0,c
  5948  001BA0  0E00               	movlw	0
  5949  001BA2  6E04               	movwf	(?___fladd+3)^0,c
  5950  001BA4  EF23  F00F         	goto	l686
  5951  001BA8                     l3116:
  5952  001BA8  5005               	movf	___fladd@a^0,w,c
  5953  001BAA  2601               	addwf	___fladd@b^0,f,c
  5954  001BAC  5006               	movf	(___fladd@a+1)^0,w,c
  5955  001BAE  2202               	addwfc	(___fladd@b+1)^0,f,c
  5956  001BB0  5007               	movf	(___fladd@a+2)^0,w,c
  5957  001BB2  2203               	addwfc	(___fladd@b+2)^0,f,c
  5958  001BB4  5008               	movf	(___fladd@a+3)^0,w,c
  5959  001BB6  2204               	addwfc	(___fladd@b+3)^0,f,c
  5960  001BB8  A004               	btfss	(___fladd@b+3)^0,0,c
  5961  001BBA  EFE1  F00D         	goto	u3061
  5962  001BBE  EFE3  F00D         	goto	u3060
  5963  001BC2                     u3061:
  5964  001BC2  EF8F  F00E         	goto	l3170
  5965  001BC6                     u3060:
  5966  001BC6  A010               	btfss	___fladd@grs^0,0,c
  5967  001BC8  EFE8  F00D         	goto	u3071
  5968  001BCC  EFEA  F00D         	goto	u3070
  5969  001BD0                     u3071:
  5970  001BD0  EFF0  F00D         	goto	l3124
  5971  001BD4                     u3070:
  5972  001BD4  90D8               	bcf	status,0,c
  5973  001BD6  3010               	rrcf	___fladd@grs^0,w,c
  5974  001BD8  0901               	iorlw	1
  5975  001BDA  6E10               	movwf	___fladd@grs^0,c
  5976  001BDC  EFF2  F00D         	goto	l3126
  5977  001BE0                     l3124:
  5978  001BE0  90D8               	bcf	status,0,c
  5979  001BE2  3210               	rrcf	___fladd@grs^0,f,c
  5980  001BE4                     l3126:
  5981  001BE4  A001               	btfss	___fladd@b^0,0,c
  5982  001BE6  EFF7  F00D         	goto	u3081
  5983  001BEA  EFF9  F00D         	goto	u3080
  5984  001BEE                     u3081:
  5985  001BEE  EFFA  F00D         	goto	l3130
  5986  001BF2                     u3080:
  5987  001BF2  8E10               	bsf	___fladd@grs^0,7,c
  5988  001BF4                     l3130:
  5989  001BF4  3404               	rlcf	(___fladd@b+3)^0,w,c
  5990  001BF6  3204               	rrcf	(___fladd@b+3)^0,f,c
  5991  001BF8  3203               	rrcf	(___fladd@b+2)^0,f,c
  5992  001BFA  3202               	rrcf	(___fladd@b+1)^0,f,c
  5993  001BFC  3201               	rrcf	___fladd@b^0,f,c
  5994  001BFE  2A0F               	incf	___fladd@bexp^0,f,c
  5995  001C00  EF8F  F00E         	goto	l3170
  5996  001C04                     l3134:
  5997  001C04  5005               	movf	___fladd@a^0,w,c
  5998  001C06  5C01               	subwf	___fladd@b^0,w,c
  5999  001C08  5006               	movf	(___fladd@a+1)^0,w,c
  6000  001C0A  5802               	subwfb	(___fladd@b+1)^0,w,c
  6001  001C0C  5007               	movf	(___fladd@a+2)^0,w,c
  6002  001C0E  5803               	subwfb	(___fladd@b+2)^0,w,c
  6003  001C10  5004               	movf	(___fladd@b+3)^0,w,c
  6004  001C12  0A80               	xorlw	128
  6005  001C14  6E09               	movwf	??___fladd^0,c
  6006  001C16  5008               	movf	(___fladd@a+3)^0,w,c
  6007  001C18  0A80               	xorlw	128
  6008  001C1A  5809               	subwfb	??___fladd^0,w,c
  6009  001C1C  B0D8               	btfsc	status,0,c
  6010  001C1E  EF13  F00E         	goto	u3091
  6011  001C22  EF15  F00E         	goto	u3090
  6012  001C26                     u3091:
  6013  001C26  EF40  F00E         	goto	l3144
  6014  001C2A                     u3090:
  6015  001C2A  5001               	movf	___fladd@b^0,w,c
  6016  001C2C  5C05               	subwf	___fladd@a^0,w,c
  6017  001C2E  6E09               	movwf	??___fladd^0,c
  6018  001C30  5002               	movf	(___fladd@b+1)^0,w,c
  6019  001C32  5806               	subwfb	(___fladd@a+1)^0,w,c
  6020  001C34  6E0A               	movwf	(??___fladd+1)^0,c
  6021  001C36  5003               	movf	(___fladd@b+2)^0,w,c
  6022  001C38  5807               	subwfb	(___fladd@a+2)^0,w,c
  6023  001C3A  6E0B               	movwf	(??___fladd+2)^0,c
  6024  001C3C  5004               	movf	(___fladd@b+3)^0,w,c
  6025  001C3E  5808               	subwfb	(___fladd@a+3)^0,w,c
  6026  001C40  6E0C               	movwf	(??___fladd+3)^0,c
  6027  001C42  0EFF               	movlw	255
  6028  001C44  2409               	addwf	??___fladd^0,w,c
  6029  001C46  6E01               	movwf	___fladd@b^0,c
  6030  001C48  0EFF               	movlw	255
  6031  001C4A  200A               	addwfc	(??___fladd+1)^0,w,c
  6032  001C4C  6E02               	movwf	(___fladd@b+1)^0,c
  6033  001C4E  0EFF               	movlw	255
  6034  001C50  200B               	addwfc	(??___fladd+2)^0,w,c
  6035  001C52  6E03               	movwf	(___fladd@b+2)^0,c
  6036  001C54  0EFF               	movlw	255
  6037  001C56  200C               	addwfc	(??___fladd+3)^0,w,c
  6038  001C58  6E04               	movwf	(___fladd@b+3)^0,c
  6039  001C5A  0E80               	movlw	128
  6040  001C5C  1A0D               	xorwf	___fladd@signs^0,f,c
  6041  001C5E  6C10               	negf	___fladd@grs^0,c
  6042  001C60  5010               	movf	___fladd@grs^0,w,c
  6043  001C62  A4D8               	btfss	status,2,c
  6044  001C64  EF36  F00E         	goto	u3101
  6045  001C68  EF38  F00E         	goto	u3100
  6046  001C6C                     u3101:
  6047  001C6C  EF48  F00E         	goto	l694
  6048  001C70                     u3100:
  6049  001C70  0E01               	movlw	1
  6050  001C72  2601               	addwf	___fladd@b^0,f,c
  6051  001C74  0E00               	movlw	0
  6052  001C76  2202               	addwfc	(___fladd@b+1)^0,f,c
  6053  001C78  2203               	addwfc	(___fladd@b+2)^0,f,c
  6054  001C7A  2204               	addwfc	(___fladd@b+3)^0,f,c
  6055  001C7C  EF48  F00E         	goto	l694
  6056  001C80                     l3144:
  6057  001C80  5005               	movf	___fladd@a^0,w,c
  6058  001C82  5E01               	subwf	___fladd@b^0,f,c
  6059  001C84  5006               	movf	(___fladd@a+1)^0,w,c
  6060  001C86  5A02               	subwfb	(___fladd@b+1)^0,f,c
  6061  001C88  5007               	movf	(___fladd@a+2)^0,w,c
  6062  001C8A  5A03               	subwfb	(___fladd@b+2)^0,f,c
  6063  001C8C  5008               	movf	(___fladd@a+3)^0,w,c
  6064  001C8E  5A04               	subwfb	(___fladd@b+3)^0,f,c
  6065  001C90                     l694:
  6066  001C90  5001               	movf	___fladd@b^0,w,c
  6067  001C92  1002               	iorwf	(___fladd@b+1)^0,w,c
  6068  001C94  1003               	iorwf	(___fladd@b+2)^0,w,c
  6069  001C96  1004               	iorwf	(___fladd@b+3)^0,w,c
  6070  001C98  A4D8               	btfss	status,2,c
  6071  001C9A  EF51  F00E         	goto	u3111
  6072  001C9E  EF53  F00E         	goto	u3110
  6073  001CA2                     u3111:
  6074  001CA2  EF88  F00E         	goto	l3168
  6075  001CA6                     u3110:
  6076  001CA6  5010               	movf	___fladd@grs^0,w,c
  6077  001CA8  A4D8               	btfss	status,2,c
  6078  001CAA  EF59  F00E         	goto	u3121
  6079  001CAE  EF5B  F00E         	goto	u3120
  6080  001CB2                     u3121:
  6081  001CB2  EF88  F00E         	goto	l3168
  6082  001CB6                     u3120:
  6083  001CB6  0E00               	movlw	0
  6084  001CB8  6E01               	movwf	?___fladd^0,c
  6085  001CBA  0E00               	movlw	0
  6086  001CBC  6E02               	movwf	(?___fladd+1)^0,c
  6087  001CBE  0E00               	movlw	0
  6088  001CC0  6E03               	movwf	(?___fladd+2)^0,c
  6089  001CC2  0E00               	movlw	0
  6090  001CC4  6E04               	movwf	(?___fladd+3)^0,c
  6091  001CC6  EF23  F00F         	goto	l686
  6092  001CCA                     l3152:
  6093  001CCA  90D8               	bcf	status,0,c
  6094  001CCC  3601               	rlcf	___fladd@b^0,f,c
  6095  001CCE  3602               	rlcf	(___fladd@b+1)^0,f,c
  6096  001CD0  3603               	rlcf	(___fladd@b+2)^0,f,c
  6097  001CD2  3604               	rlcf	(___fladd@b+3)^0,f,c
  6098  001CD4  AE10               	btfss	___fladd@grs^0,7,c
  6099  001CD6  EF6F  F00E         	goto	u3131
  6100  001CDA  EF71  F00E         	goto	u3130
  6101  001CDE                     u3131:
  6102  001CDE  EF72  F00E         	goto	l3158
  6103  001CE2                     u3130:
  6104  001CE2  8001               	bsf	___fladd@b^0,0,c
  6105  001CE4                     l3158:
  6106  001CE4  A010               	btfss	___fladd@grs^0,0,c
  6107  001CE6  EF77  F00E         	goto	u3141
  6108  001CEA  EF79  F00E         	goto	u3140
  6109  001CEE                     u3141:
  6110  001CEE  EF7D  F00E         	goto	l3162
  6111  001CF2                     u3140:
  6112  001CF2  80D8               	bsf	status,0,c
  6113  001CF4  3610               	rlcf	___fladd@grs^0,f,c
  6114  001CF6  EF7F  F00E         	goto	l3164
  6115  001CFA                     l3162:
  6116  001CFA  90D8               	bcf	status,0,c
  6117  001CFC  3610               	rlcf	___fladd@grs^0,f,c
  6118  001CFE                     l3164:
  6119  001CFE  500F               	movf	___fladd@bexp^0,w,c
  6120  001D00  B4D8               	btfsc	status,2,c
  6121  001D02  EF85  F00E         	goto	u3151
  6122  001D06  EF87  F00E         	goto	u3150
  6123  001D0A                     u3151:
  6124  001D0A  EF88  F00E         	goto	l3168
  6125  001D0E                     u3150:
  6126  001D0E  060F               	decf	___fladd@bexp^0,f,c
  6127  001D10                     l3168:
  6128  001D10  AE03               	btfss	(___fladd@b+2)^0,7,c
  6129  001D12  EF8D  F00E         	goto	u3161
  6130  001D16  EF8F  F00E         	goto	u3160
  6131  001D1A                     u3161:
  6132  001D1A  EF65  F00E         	goto	l3152
  6133  001D1E                     u3160:
  6134  001D1E                     l3170:
  6135  001D1E  0E00               	movlw	0
  6136  001D20  6E0E               	movwf	___fladd@aexp^0,c
  6137  001D22  AE10               	btfss	___fladd@grs^0,7,c
  6138  001D24  EF96  F00E         	goto	u3171
  6139  001D28  EF98  F00E         	goto	u3170
  6140  001D2C                     u3171:
  6141  001D2C  EFB0  F00E         	goto	l703
  6142  001D30                     u3170:
  6143  001D30  C010  F009         	movff	___fladd@grs,??___fladd
  6144  001D34  0E7F               	movlw	127
  6145  001D36  1609               	andwf	??___fladd^0,f,c
  6146  001D38  B4D8               	btfsc	status,2,c
  6147  001D3A  EFA1  F00E         	goto	u3181
  6148  001D3E  EFA3  F00E         	goto	u3180
  6149  001D42                     u3181:
  6150  001D42  EFA7  F00E         	goto	l704
  6151  001D46                     u3180:
  6152  001D46                     l3176:
  6153  001D46  0E01               	movlw	1
  6154  001D48  6E0E               	movwf	___fladd@aexp^0,c
  6155  001D4A  EFB0  F00E         	goto	l703
  6156  001D4E                     l704:
  6157  001D4E  A001               	btfss	___fladd@b^0,0,c
  6158  001D50  EFAC  F00E         	goto	u3191
  6159  001D54  EFAE  F00E         	goto	u3190
  6160  001D58                     u3191:
  6161  001D58  EFB0  F00E         	goto	l703
  6162  001D5C                     u3190:
  6163  001D5C  EFA3  F00E         	goto	l3176
  6164  001D60                     l703:
  6165  001D60  500E               	movf	___fladd@aexp^0,w,c
  6166  001D62  B4D8               	btfsc	status,2,c
  6167  001D64  EFB6  F00E         	goto	u3201
  6168  001D68  EFB8  F00E         	goto	u3200
  6169  001D6C                     u3201:
  6170  001D6C  EFE3  F00E         	goto	l3188
  6171  001D70                     u3200:
  6172  001D70  0E01               	movlw	1
  6173  001D72  2601               	addwf	___fladd@b^0,f,c
  6174  001D74  0E00               	movlw	0
  6175  001D76  2202               	addwfc	(___fladd@b+1)^0,f,c
  6176  001D78  2203               	addwfc	(___fladd@b+2)^0,f,c
  6177  001D7A  2204               	addwfc	(___fladd@b+3)^0,f,c
  6178  001D7C  A004               	btfss	(___fladd@b+3)^0,0,c
  6179  001D7E  EFC3  F00E         	goto	u3211
  6180  001D82  EFC5  F00E         	goto	u3210
  6181  001D86                     u3211:
  6182  001D86  EFE3  F00E         	goto	l3188
  6183  001D8A                     u3210:
  6184  001D8A  C001  F009         	movff	___fladd@b,??___fladd
  6185  001D8E  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  6186  001D92  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  6187  001D96  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  6188  001D9A  340C               	rlcf	(??___fladd+3)^0,w,c
  6189  001D9C  320C               	rrcf	(??___fladd+3)^0,f,c
  6190  001D9E  320B               	rrcf	(??___fladd+2)^0,f,c
  6191  001DA0  320A               	rrcf	(??___fladd+1)^0,f,c
  6192  001DA2  3209               	rrcf	??___fladd^0,f,c
  6193  001DA4  C009  F001         	movff	??___fladd,___fladd@b
  6194  001DA8  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  6195  001DAC  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  6196  001DB0  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  6197  001DB4  280F               	incf	___fladd@bexp^0,w,c
  6198  001DB6  B4D8               	btfsc	status,2,c
  6199  001DB8  EFE0  F00E         	goto	u3221
  6200  001DBC  EFE2  F00E         	goto	u3220
  6201  001DC0                     u3221:
  6202  001DC0  EFE3  F00E         	goto	l3188
  6203  001DC4                     u3220:
  6204  001DC4  2A0F               	incf	___fladd@bexp^0,f,c
  6205  001DC6                     l3188:
  6206  001DC6  280F               	incf	___fladd@bexp^0,w,c
  6207  001DC8  B4D8               	btfsc	status,2,c
  6208  001DCA  EFE9  F00E         	goto	u3231
  6209  001DCE  EFEB  F00E         	goto	u3230
  6210  001DD2                     u3231:
  6211  001DD2  EFF3  F00E         	goto	l3192
  6212  001DD6                     u3230:
  6213  001DD6  500F               	movf	___fladd@bexp^0,w,c
  6214  001DD8  A4D8               	btfss	status,2,c
  6215  001DDA  EFF1  F00E         	goto	u3241
  6216  001DDE  EFF3  F00E         	goto	u3240
  6217  001DE2                     u3241:
  6218  001DE2  EF05  F00F         	goto	l3196
  6219  001DE6                     u3240:
  6220  001DE6                     l3192:
  6221  001DE6  0E00               	movlw	0
  6222  001DE8  6E01               	movwf	___fladd@b^0,c
  6223  001DEA  0E00               	movlw	0
  6224  001DEC  6E02               	movwf	(___fladd@b+1)^0,c
  6225  001DEE  0E00               	movlw	0
  6226  001DF0  6E03               	movwf	(___fladd@b+2)^0,c
  6227  001DF2  0E00               	movlw	0
  6228  001DF4  6E04               	movwf	(___fladd@b+3)^0,c
  6229  001DF6  500F               	movf	___fladd@bexp^0,w,c
  6230  001DF8  A4D8               	btfss	status,2,c
  6231  001DFA  EF01  F00F         	goto	u3251
  6232  001DFE  EF03  F00F         	goto	u3250
  6233  001E02                     u3251:
  6234  001E02  EF05  F00F         	goto	l3196
  6235  001E06                     u3250:
  6236  001E06  0E00               	movlw	0
  6237  001E08  6E0D               	movwf	___fladd@signs^0,c
  6238  001E0A                     l3196:
  6239  001E0A  A00F               	btfss	___fladd@bexp^0,0,c
  6240  001E0C  EF0A  F00F         	goto	u3261
  6241  001E10  EF0C  F00F         	goto	u3260
  6242  001E14                     u3261:
  6243  001E14  EF0F  F00F         	goto	l3200
  6244  001E18                     u3260:
  6245  001E18  8E03               	bsf	(___fladd@b+2)^0,7,c
  6246  001E1A  EF10  F00F         	goto	l3202
  6247  001E1E                     l3200:
  6248  001E1E  9E03               	bcf	(___fladd@b+2)^0,7,c
  6249  001E20                     l3202:
  6250  001E20  90D8               	bcf	status,0,c
  6251  001E22  300F               	rrcf	___fladd@bexp^0,w,c
  6252  001E24  6E04               	movwf	(___fladd@b+3)^0,c
  6253  001E26  AE0D               	btfss	___fladd@signs^0,7,c
  6254  001E28  EF18  F00F         	goto	u3271
  6255  001E2C  EF1A  F00F         	goto	u3270
  6256  001E30                     u3271:
  6257  001E30  EF1B  F00F         	goto	l3208
  6258  001E34                     u3270:
  6259  001E34  8E04               	bsf	(___fladd@b+3)^0,7,c
  6260  001E36                     l3208:
  6261  001E36  C001  F001         	movff	___fladd@b,?___fladd
  6262  001E3A  C002  F002         	movff	___fladd@b+1,?___fladd+1
  6263  001E3E  C003  F003         	movff	___fladd@b+2,?___fladd+2
  6264  001E42  C004  F004         	movff	___fladd@b+3,?___fladd+3
  6265  001E46                     l686:
  6266  001E46  0012               	return		;funcret
  6267  001E48                     __end_of___fladd:
  6268                           	callstack 0
  6269                           
  6270 ;; *************** function ___flneg *****************
  6271 ;; Defined at:
  6272 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\flneg.c"
  6273 ;; Parameters:    Size  Location     Type
  6274 ;;  f1              4    0[COMRAM] unsigned char 
  6275 ;; Auto vars:     Size  Location     Type
  6276 ;;		None
  6277 ;; Return value:  Size  Location     Type
  6278 ;;                  4    0[COMRAM] unsigned char 
  6279 ;; Registers used:
  6280 ;;		wreg, status,2, status,0
  6281 ;; Tracked objects:
  6282 ;;		On entry : 0/0
  6283 ;;		On exit  : 0/0
  6284 ;;		Unchanged: 0/0
  6285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6286 ;;      Params:         4       0       0       0       0       0       0
  6287 ;;      Locals:         0       0       0       0       0       0       0
  6288 ;;      Temps:          0       0       0       0       0       0       0
  6289 ;;      Totals:         4       0       0       0       0       0       0
  6290 ;;Total ram usage:        4 bytes
  6291 ;; Hardware stack levels used: 1
  6292 ;; This function calls:
  6293 ;;		Nothing
  6294 ;; This function is called by:
  6295 ;;		_efgtoa
  6296 ;; This function uses a non-reentrant model
  6297 ;;
  6298                           
  6299                           	psect	text18
  6300  004284                     __ptext18:
  6301                           	callstack 0
  6302  004284                     ___flneg:
  6303                           	callstack 25
  6304  004284  5001               	movf	___flneg@f1^0,w,c
  6305  004286  1002               	iorwf	(___flneg@f1+1)^0,w,c
  6306  004288  1003               	iorwf	(___flneg@f1+2)^0,w,c
  6307  00428A  1004               	iorwf	(___flneg@f1+3)^0,w,c
  6308  00428C  B4D8               	btfsc	status,2,c
  6309  00428E  EF4B  F021         	goto	u4071
  6310  004292  EF4D  F021         	goto	u4070
  6311  004296                     u4071:
  6312  004296  EF55  F021         	goto	l3716
  6313  00429A                     u4070:
  6314  00429A  0E00               	movlw	0
  6315  00429C  1A01               	xorwf	___flneg@f1^0,f,c
  6316  00429E  0E00               	movlw	0
  6317  0042A0  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  6318  0042A2  0E00               	movlw	0
  6319  0042A4  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  6320  0042A6  0E80               	movlw	128
  6321  0042A8  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  6322  0042AA                     l3716:
  6323  0042AA  C001  F001         	movff	___flneg@f1,?___flneg
  6324  0042AE  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  6325  0042B2  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  6326  0042B6  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  6327  0042BA  0012               	return		;funcret
  6328  0042BC                     __end_of___flneg:
  6329                           	callstack 0
  6330                           
  6331 ;; *************** function ___flge *****************
  6332 ;; Defined at:
  6333 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\flge.c"
  6334 ;; Parameters:    Size  Location     Type
  6335 ;;  ff1             4   39[COMRAM] unsigned char 
  6336 ;;  ff2             4   43[COMRAM] unsigned char 
  6337 ;; Auto vars:     Size  Location     Type
  6338 ;;		None
  6339 ;; Return value:  Size  Location     Type
  6340 ;;		None               void
  6341 ;; Registers used:
  6342 ;;		wreg, status,2, status,0
  6343 ;; Tracked objects:
  6344 ;;		On entry : 0/0
  6345 ;;		On exit  : 0/0
  6346 ;;		Unchanged: 0/0
  6347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6348 ;;      Params:         8       0       0       0       0       0       0
  6349 ;;      Locals:         0       0       0       0       0       0       0
  6350 ;;      Temps:          4       0       0       0       0       0       0
  6351 ;;      Totals:        12       0       0       0       0       0       0
  6352 ;;Total ram usage:       12 bytes
  6353 ;; Hardware stack levels used: 1
  6354 ;; This function calls:
  6355 ;;		Nothing
  6356 ;; This function is called by:
  6357 ;;		_logic_CONTROL
  6358 ;;		_efgtoa
  6359 ;; This function uses a non-reentrant model
  6360 ;;
  6361                           
  6362                           	psect	text19
  6363  0033C2                     __ptext19:
  6364                           	callstack 0
  6365  0033C2                     ___flge:
  6366                           	callstack 29
  6367  0033C2  0E00               	movlw	0
  6368  0033C4  1428               	andwf	___flge@ff1^0,w,c
  6369  0033C6  6E30               	movwf	??___flge^0,c
  6370  0033C8  0E00               	movlw	0
  6371  0033CA  1429               	andwf	(___flge@ff1+1)^0,w,c
  6372  0033CC  6E31               	movwf	(??___flge+1)^0,c
  6373  0033CE  0E80               	movlw	128
  6374  0033D0  142A               	andwf	(___flge@ff1+2)^0,w,c
  6375  0033D2  6E32               	movwf	(??___flge+2)^0,c
  6376  0033D4  0E7F               	movlw	127
  6377  0033D6  142B               	andwf	(___flge@ff1+3)^0,w,c
  6378  0033D8  6E33               	movwf	(??___flge+3)^0,c
  6379  0033DA  5030               	movf	??___flge^0,w,c
  6380  0033DC  1031               	iorwf	(??___flge+1)^0,w,c
  6381  0033DE  1032               	iorwf	(??___flge+2)^0,w,c
  6382  0033E0  1033               	iorwf	(??___flge+3)^0,w,c
  6383  0033E2  A4D8               	btfss	status,2,c
  6384  0033E4  EFF6  F019         	goto	u4021
  6385  0033E8  EFF8  F019         	goto	u4020
  6386  0033EC                     u4021:
  6387  0033EC  EF00  F01A         	goto	l3694
  6388  0033F0                     u4020:
  6389  0033F0  0E00               	movlw	0
  6390  0033F2  6E28               	movwf	___flge@ff1^0,c
  6391  0033F4  0E00               	movlw	0
  6392  0033F6  6E29               	movwf	(___flge@ff1+1)^0,c
  6393  0033F8  0E00               	movlw	0
  6394  0033FA  6E2A               	movwf	(___flge@ff1+2)^0,c
  6395  0033FC  0E00               	movlw	0
  6396  0033FE  6E2B               	movwf	(___flge@ff1+3)^0,c
  6397  003400                     l3694:
  6398  003400  0E00               	movlw	0
  6399  003402  142C               	andwf	___flge@ff2^0,w,c
  6400  003404  6E30               	movwf	??___flge^0,c
  6401  003406  0E00               	movlw	0
  6402  003408  142D               	andwf	(___flge@ff2+1)^0,w,c
  6403  00340A  6E31               	movwf	(??___flge+1)^0,c
  6404  00340C  0E80               	movlw	128
  6405  00340E  142E               	andwf	(___flge@ff2+2)^0,w,c
  6406  003410  6E32               	movwf	(??___flge+2)^0,c
  6407  003412  0E7F               	movlw	127
  6408  003414  142F               	andwf	(___flge@ff2+3)^0,w,c
  6409  003416  6E33               	movwf	(??___flge+3)^0,c
  6410  003418  5030               	movf	??___flge^0,w,c
  6411  00341A  1031               	iorwf	(??___flge+1)^0,w,c
  6412  00341C  1032               	iorwf	(??___flge+2)^0,w,c
  6413  00341E  1033               	iorwf	(??___flge+3)^0,w,c
  6414  003420  A4D8               	btfss	status,2,c
  6415  003422  EF15  F01A         	goto	u4031
  6416  003426  EF17  F01A         	goto	u4030
  6417  00342A                     u4031:
  6418  00342A  EF1F  F01A         	goto	l3698
  6419  00342E                     u4030:
  6420  00342E  0E00               	movlw	0
  6421  003430  6E2C               	movwf	___flge@ff2^0,c
  6422  003432  0E00               	movlw	0
  6423  003434  6E2D               	movwf	(___flge@ff2+1)^0,c
  6424  003436  0E00               	movlw	0
  6425  003438  6E2E               	movwf	(___flge@ff2+2)^0,c
  6426  00343A  0E00               	movlw	0
  6427  00343C  6E2F               	movwf	(___flge@ff2+3)^0,c
  6428  00343E                     l3698:
  6429  00343E  AE2B               	btfss	(___flge@ff1+3)^0,7,c
  6430  003440  EF24  F01A         	goto	u4041
  6431  003444  EF26  F01A         	goto	u4040
  6432  003448                     u4041:
  6433  003448  EF2F  F01A         	goto	l3702
  6434  00344C                     u4040:
  6435  00344C  6C28               	negf	___flge@ff1^0,c
  6436  00344E  1E29               	comf	(___flge@ff1+1)^0,f,c
  6437  003450  B0D8               	btfsc	status,0,c
  6438  003452  2A29               	incf	(___flge@ff1+1)^0,f,c
  6439  003454  1E2A               	comf	(___flge@ff1+2)^0,f,c
  6440  003456  B0D8               	btfsc	status,0,c
  6441  003458  2A2A               	incf	(___flge@ff1+2)^0,f,c
  6442  00345A  0E80               	movlw	128
  6443  00345C  562B               	subfwb	(___flge@ff1+3)^0,f,c
  6444  00345E                     l3702:
  6445  00345E  AE2F               	btfss	(___flge@ff2+3)^0,7,c
  6446  003460  EF34  F01A         	goto	u4051
  6447  003464  EF36  F01A         	goto	u4050
  6448  003468                     u4051:
  6449  003468  EF3F  F01A         	goto	l414
  6450  00346C                     u4050:
  6451  00346C  6C2C               	negf	___flge@ff2^0,c
  6452  00346E  1E2D               	comf	(___flge@ff2+1)^0,f,c
  6453  003470  B0D8               	btfsc	status,0,c
  6454  003472  2A2D               	incf	(___flge@ff2+1)^0,f,c
  6455  003474  1E2E               	comf	(___flge@ff2+2)^0,f,c
  6456  003476  B0D8               	btfsc	status,0,c
  6457  003478  2A2E               	incf	(___flge@ff2+2)^0,f,c
  6458  00347A  0E80               	movlw	128
  6459  00347C  562F               	subfwb	(___flge@ff2+3)^0,f,c
  6460  00347E                     l414:
  6461  00347E  0E00               	movlw	0
  6462  003480  1A28               	xorwf	___flge@ff1^0,f,c
  6463  003482  0E00               	movlw	0
  6464  003484  1A29               	xorwf	(___flge@ff1+1)^0,f,c
  6465  003486  0E00               	movlw	0
  6466  003488  1A2A               	xorwf	(___flge@ff1+2)^0,f,c
  6467  00348A  0E80               	movlw	128
  6468  00348C  1A2B               	xorwf	(___flge@ff1+3)^0,f,c
  6469  00348E  0E00               	movlw	0
  6470  003490  1A2C               	xorwf	___flge@ff2^0,f,c
  6471  003492  0E00               	movlw	0
  6472  003494  1A2D               	xorwf	(___flge@ff2+1)^0,f,c
  6473  003496  0E00               	movlw	0
  6474  003498  1A2E               	xorwf	(___flge@ff2+2)^0,f,c
  6475  00349A  0E80               	movlw	128
  6476  00349C  1A2F               	xorwf	(___flge@ff2+3)^0,f,c
  6477  00349E  502C               	movf	___flge@ff2^0,w,c
  6478  0034A0  5C28               	subwf	___flge@ff1^0,w,c
  6479  0034A2  502D               	movf	(___flge@ff2+1)^0,w,c
  6480  0034A4  5829               	subwfb	(___flge@ff1+1)^0,w,c
  6481  0034A6  502E               	movf	(___flge@ff2+2)^0,w,c
  6482  0034A8  582A               	subwfb	(___flge@ff1+2)^0,w,c
  6483  0034AA  502F               	movf	(___flge@ff2+3)^0,w,c
  6484  0034AC  582B               	subwfb	(___flge@ff1+3)^0,w,c
  6485  0034AE  B0D8               	btfsc	status,0,c
  6486  0034B0  EF5C  F01A         	goto	u4061
  6487  0034B4  EF5E  F01A         	goto	u4060
  6488  0034B8                     u4061:
  6489  0034B8  EF61  F01A         	goto	l3708
  6490  0034BC                     u4060:
  6491  0034BC  90D8               	bcf	status,0,c
  6492  0034BE  EF62  F01A         	goto	l419
  6493  0034C2                     l3708:
  6494  0034C2  80D8               	bsf	status,0,c
  6495  0034C4                     l419:
  6496  0034C4  0012               	return		;funcret
  6497  0034C6                     __end_of___flge:
  6498                           	callstack 0
  6499                           
  6500 ;; *************** function ___fleq *****************
  6501 ;; Defined at:
  6502 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fleq.c"
  6503 ;; Parameters:    Size  Location     Type
  6504 ;;  ff1             4    0[COMRAM] unsigned char 
  6505 ;;  ff2             4    4[COMRAM] unsigned char 
  6506 ;; Auto vars:     Size  Location     Type
  6507 ;;		None
  6508 ;; Return value:  Size  Location     Type
  6509 ;;		None               void
  6510 ;; Registers used:
  6511 ;;		wreg, status,2, status,0
  6512 ;; Tracked objects:
  6513 ;;		On entry : 0/0
  6514 ;;		On exit  : 0/0
  6515 ;;		Unchanged: 0/0
  6516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6517 ;;      Params:         8       0       0       0       0       0       0
  6518 ;;      Locals:         0       0       0       0       0       0       0
  6519 ;;      Temps:          4       0       0       0       0       0       0
  6520 ;;      Totals:        12       0       0       0       0       0       0
  6521 ;;Total ram usage:       12 bytes
  6522 ;; Hardware stack levels used: 1
  6523 ;; This function calls:
  6524 ;;		Nothing
  6525 ;; This function is called by:
  6526 ;;		_efgtoa
  6527 ;; This function uses a non-reentrant model
  6528 ;;
  6529                           
  6530                           	psect	text20
  6531  003D12                     __ptext20:
  6532                           	callstack 0
  6533  003D12                     ___fleq:
  6534                           	callstack 25
  6535  003D12  0E00               	movlw	0
  6536  003D14  1401               	andwf	___fleq@ff1^0,w,c
  6537  003D16  6E09               	movwf	??___fleq^0,c
  6538  003D18  0E00               	movlw	0
  6539  003D1A  1402               	andwf	(___fleq@ff1+1)^0,w,c
  6540  003D1C  6E0A               	movwf	(??___fleq+1)^0,c
  6541  003D1E  0E80               	movlw	128
  6542  003D20  1403               	andwf	(___fleq@ff1+2)^0,w,c
  6543  003D22  6E0B               	movwf	(??___fleq+2)^0,c
  6544  003D24  0E7F               	movlw	127
  6545  003D26  1404               	andwf	(___fleq@ff1+3)^0,w,c
  6546  003D28  6E0C               	movwf	(??___fleq+3)^0,c
  6547  003D2A  5009               	movf	??___fleq^0,w,c
  6548  003D2C  100A               	iorwf	(??___fleq+1)^0,w,c
  6549  003D2E  100B               	iorwf	(??___fleq+2)^0,w,c
  6550  003D30  100C               	iorwf	(??___fleq+3)^0,w,c
  6551  003D32  A4D8               	btfss	status,2,c
  6552  003D34  EF9E  F01E         	goto	u3991
  6553  003D38  EFA0  F01E         	goto	u3990
  6554  003D3C                     u3991:
  6555  003D3C  EFA8  F01E         	goto	l3678
  6556  003D40                     u3990:
  6557  003D40  0E00               	movlw	0
  6558  003D42  6E01               	movwf	___fleq@ff1^0,c
  6559  003D44  0E00               	movlw	0
  6560  003D46  6E02               	movwf	(___fleq@ff1+1)^0,c
  6561  003D48  0E00               	movlw	0
  6562  003D4A  6E03               	movwf	(___fleq@ff1+2)^0,c
  6563  003D4C  0E00               	movlw	0
  6564  003D4E  6E04               	movwf	(___fleq@ff1+3)^0,c
  6565  003D50                     l3678:
  6566  003D50  0E00               	movlw	0
  6567  003D52  1405               	andwf	___fleq@ff2^0,w,c
  6568  003D54  6E09               	movwf	??___fleq^0,c
  6569  003D56  0E00               	movlw	0
  6570  003D58  1406               	andwf	(___fleq@ff2+1)^0,w,c
  6571  003D5A  6E0A               	movwf	(??___fleq+1)^0,c
  6572  003D5C  0E80               	movlw	128
  6573  003D5E  1407               	andwf	(___fleq@ff2+2)^0,w,c
  6574  003D60  6E0B               	movwf	(??___fleq+2)^0,c
  6575  003D62  0E7F               	movlw	127
  6576  003D64  1408               	andwf	(___fleq@ff2+3)^0,w,c
  6577  003D66  6E0C               	movwf	(??___fleq+3)^0,c
  6578  003D68  5009               	movf	??___fleq^0,w,c
  6579  003D6A  100A               	iorwf	(??___fleq+1)^0,w,c
  6580  003D6C  100B               	iorwf	(??___fleq+2)^0,w,c
  6581  003D6E  100C               	iorwf	(??___fleq+3)^0,w,c
  6582  003D70  A4D8               	btfss	status,2,c
  6583  003D72  EFBD  F01E         	goto	u4001
  6584  003D76  EFBF  F01E         	goto	u4000
  6585  003D7A                     u4001:
  6586  003D7A  EFC7  F01E         	goto	l3682
  6587  003D7E                     u4000:
  6588  003D7E  0E00               	movlw	0
  6589  003D80  6E05               	movwf	___fleq@ff2^0,c
  6590  003D82  0E00               	movlw	0
  6591  003D84  6E06               	movwf	(___fleq@ff2+1)^0,c
  6592  003D86  0E00               	movlw	0
  6593  003D88  6E07               	movwf	(___fleq@ff2+2)^0,c
  6594  003D8A  0E00               	movlw	0
  6595  003D8C  6E08               	movwf	(___fleq@ff2+3)^0,c
  6596  003D8E                     l3682:
  6597  003D8E  5005               	movf	___fleq@ff2^0,w,c
  6598  003D90  1801               	xorwf	___fleq@ff1^0,w,c
  6599  003D92  E10F               	bnz	u4010
  6600  003D94  5006               	movf	(___fleq@ff2+1)^0,w,c
  6601  003D96  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  6602  003D98  E10C               	bnz	u4010
  6603  003D9A  5007               	movf	(___fleq@ff2+2)^0,w,c
  6604  003D9C  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  6605  003D9E  E109               	bnz	u4010
  6606  003DA0  5008               	movf	(___fleq@ff2+3)^0,w,c
  6607  003DA2  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  6608  003DA4  B4D8               	btfsc	status,2,c
  6609  003DA6  EFD7  F01E         	goto	u4011
  6610  003DAA  EFD9  F01E         	goto	u4010
  6611  003DAE                     u4011:
  6612  003DAE  EFDC  F01E         	goto	l3686
  6613  003DB2                     u4010:
  6614  003DB2  90D8               	bcf	status,0,c
  6615  003DB4  EFDD  F01E         	goto	l408
  6616  003DB8                     l3686:
  6617  003DB8  80D8               	bsf	status,0,c
  6618  003DBA                     l408:
  6619  003DBA  0012               	return		;funcret
  6620  003DBC                     __end_of___fleq:
  6621                           	callstack 0
  6622                           
  6623 ;; *************** function ___awmod *****************
  6624 ;; Defined at:
  6625 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awmod.c"
  6626 ;; Parameters:    Size  Location     Type
  6627 ;;  dividend        2    0[COMRAM] int 
  6628 ;;  divisor         2    2[COMRAM] int 
  6629 ;; Auto vars:     Size  Location     Type
  6630 ;;  sign            1    5[COMRAM] unsigned char 
  6631 ;;  counter         1    4[COMRAM] unsigned char 
  6632 ;; Return value:  Size  Location     Type
  6633 ;;                  2    0[COMRAM] int 
  6634 ;; Registers used:
  6635 ;;		wreg, status,2, status,0
  6636 ;; Tracked objects:
  6637 ;;		On entry : 0/0
  6638 ;;		On exit  : 0/0
  6639 ;;		Unchanged: 0/0
  6640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6641 ;;      Params:         4       0       0       0       0       0       0
  6642 ;;      Locals:         2       0       0       0       0       0       0
  6643 ;;      Temps:          0       0       0       0       0       0       0
  6644 ;;      Totals:         6       0       0       0       0       0       0
  6645 ;;Total ram usage:        6 bytes
  6646 ;; Hardware stack levels used: 1
  6647 ;; This function calls:
  6648 ;;		Nothing
  6649 ;; This function is called by:
  6650 ;;		_efgtoa
  6651 ;; This function uses a non-reentrant model
  6652 ;;
  6653                           
  6654                           	psect	text21
  6655  003C62                     __ptext21:
  6656                           	callstack 0
  6657  003C62                     ___awmod:
  6658                           	callstack 25
  6659  003C62  0E00               	movlw	0
  6660  003C64  6E06               	movwf	___awmod@sign^0,c
  6661  003C66  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  6662  003C68  EF3A  F01E         	goto	u3930
  6663  003C6C  EF38  F01E         	goto	u3931
  6664  003C70                     u3931:
  6665  003C70  EF40  F01E         	goto	l3646
  6666  003C74                     u3930:
  6667  003C74  6C01               	negf	___awmod@dividend^0,c
  6668  003C76  1E02               	comf	(___awmod@dividend+1)^0,f,c
  6669  003C78  B0D8               	btfsc	status,0,c
  6670  003C7A  2A02               	incf	(___awmod@dividend+1)^0,f,c
  6671  003C7C  0E01               	movlw	1
  6672  003C7E  6E06               	movwf	___awmod@sign^0,c
  6673  003C80                     l3646:
  6674  003C80  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  6675  003C82  EF47  F01E         	goto	u3940
  6676  003C86  EF45  F01E         	goto	u3941
  6677  003C8A                     u3941:
  6678  003C8A  EF4B  F01E         	goto	l3650
  6679  003C8E                     u3940:
  6680  003C8E  6C03               	negf	___awmod@divisor^0,c
  6681  003C90  1E04               	comf	(___awmod@divisor+1)^0,f,c
  6682  003C92  B0D8               	btfsc	status,0,c
  6683  003C94  2A04               	incf	(___awmod@divisor+1)^0,f,c
  6684  003C96                     l3650:
  6685  003C96  5003               	movf	___awmod@divisor^0,w,c
  6686  003C98  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  6687  003C9A  B4D8               	btfsc	status,2,c
  6688  003C9C  EF52  F01E         	goto	u3951
  6689  003CA0  EF54  F01E         	goto	u3950
  6690  003CA4                     u3951:
  6691  003CA4  EF78  F01E         	goto	l3666
  6692  003CA8                     u3950:
  6693  003CA8  0E01               	movlw	1
  6694  003CAA  6E05               	movwf	___awmod@counter^0,c
  6695  003CAC  EF5C  F01E         	goto	l3656
  6696  003CB0                     l3654:
  6697  003CB0  90D8               	bcf	status,0,c
  6698  003CB2  3603               	rlcf	___awmod@divisor^0,f,c
  6699  003CB4  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  6700  003CB6  2A05               	incf	___awmod@counter^0,f,c
  6701  003CB8                     l3656:
  6702  003CB8  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  6703  003CBA  EF61  F01E         	goto	u3961
  6704  003CBE  EF63  F01E         	goto	u3960
  6705  003CC2                     u3961:
  6706  003CC2  EF58  F01E         	goto	l3654
  6707  003CC6                     u3960:
  6708  003CC6                     l3658:
  6709  003CC6  5003               	movf	___awmod@divisor^0,w,c
  6710  003CC8  5C01               	subwf	___awmod@dividend^0,w,c
  6711  003CCA  5004               	movf	(___awmod@divisor+1)^0,w,c
  6712  003CCC  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  6713  003CCE  A0D8               	btfss	status,0,c
  6714  003CD0  EF6C  F01E         	goto	u3971
  6715  003CD4  EF6E  F01E         	goto	u3970
  6716  003CD8                     u3971:
  6717  003CD8  EF72  F01E         	goto	l3662
  6718  003CDC                     u3970:
  6719  003CDC  5003               	movf	___awmod@divisor^0,w,c
  6720  003CDE  5E01               	subwf	___awmod@dividend^0,f,c
  6721  003CE0  5004               	movf	(___awmod@divisor+1)^0,w,c
  6722  003CE2  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  6723  003CE4                     l3662:
  6724  003CE4  90D8               	bcf	status,0,c
  6725  003CE6  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  6726  003CE8  3203               	rrcf	___awmod@divisor^0,f,c
  6727  003CEA  2E05               	decfsz	___awmod@counter^0,f,c
  6728  003CEC  EF63  F01E         	goto	l3658
  6729  003CF0                     l3666:
  6730  003CF0  5006               	movf	___awmod@sign^0,w,c
  6731  003CF2  B4D8               	btfsc	status,2,c
  6732  003CF4  EF7E  F01E         	goto	u3981
  6733  003CF8  EF80  F01E         	goto	u3980
  6734  003CFC                     u3981:
  6735  003CFC  EF84  F01E         	goto	l3670
  6736  003D00                     u3980:
  6737  003D00  6C01               	negf	___awmod@dividend^0,c
  6738  003D02  1E02               	comf	(___awmod@dividend+1)^0,f,c
  6739  003D04  B0D8               	btfsc	status,0,c
  6740  003D06  2A02               	incf	(___awmod@dividend+1)^0,f,c
  6741  003D08                     l3670:
  6742  003D08  C001  F001         	movff	___awmod@dividend,?___awmod
  6743  003D0C  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  6744  003D10  0012               	return		;funcret
  6745  003D12                     __end_of___awmod:
  6746                           	callstack 0
  6747                           
  6748 ;; *************** function ___awdiv *****************
  6749 ;; Defined at:
  6750 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
  6751 ;; Parameters:    Size  Location     Type
  6752 ;;  dividend        2    0[COMRAM] int 
  6753 ;;  divisor         2    2[COMRAM] int 
  6754 ;; Auto vars:     Size  Location     Type
  6755 ;;  quotient        2    6[COMRAM] int 
  6756 ;;  sign            1    5[COMRAM] unsigned char 
  6757 ;;  counter         1    4[COMRAM] unsigned char 
  6758 ;; Return value:  Size  Location     Type
  6759 ;;                  2    0[COMRAM] int 
  6760 ;; Registers used:
  6761 ;;		wreg, status,2, status,0
  6762 ;; Tracked objects:
  6763 ;;		On entry : 0/0
  6764 ;;		On exit  : 0/0
  6765 ;;		Unchanged: 0/0
  6766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6767 ;;      Params:         4       0       0       0       0       0       0
  6768 ;;      Locals:         4       0       0       0       0       0       0
  6769 ;;      Temps:          0       0       0       0       0       0       0
  6770 ;;      Totals:         8       0       0       0       0       0       0
  6771 ;;Total ram usage:        8 bytes
  6772 ;; Hardware stack levels used: 1
  6773 ;; This function calls:
  6774 ;;		Nothing
  6775 ;; This function is called by:
  6776 ;;		_efgtoa
  6777 ;; This function uses a non-reentrant model
  6778 ;;
  6779                           
  6780                           	psect	text22
  6781  003ADC                     __ptext22:
  6782                           	callstack 0
  6783  003ADC                     ___awdiv:
  6784                           	callstack 25
  6785  003ADC  0E00               	movlw	0
  6786  003ADE  6E06               	movwf	___awdiv@sign^0,c
  6787  003AE0  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  6788  003AE2  EF77  F01D         	goto	u3870
  6789  003AE6  EF75  F01D         	goto	u3871
  6790  003AEA                     u3871:
  6791  003AEA  EF7D  F01D         	goto	l3602
  6792  003AEE                     u3870:
  6793  003AEE  6C03               	negf	___awdiv@divisor^0,c
  6794  003AF0  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  6795  003AF2  B0D8               	btfsc	status,0,c
  6796  003AF4  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  6797  003AF6  0E01               	movlw	1
  6798  003AF8  6E06               	movwf	___awdiv@sign^0,c
  6799  003AFA                     l3602:
  6800  003AFA  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  6801  003AFC  EF84  F01D         	goto	u3880
  6802  003B00  EF82  F01D         	goto	u3881
  6803  003B04                     u3881:
  6804  003B04  EF8A  F01D         	goto	l3608
  6805  003B08                     u3880:
  6806  003B08  6C01               	negf	___awdiv@dividend^0,c
  6807  003B0A  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  6808  003B0C  B0D8               	btfsc	status,0,c
  6809  003B0E  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  6810  003B10  0E01               	movlw	1
  6811  003B12  1A06               	xorwf	___awdiv@sign^0,f,c
  6812  003B14                     l3608:
  6813  003B14  0E00               	movlw	0
  6814  003B16  6E08               	movwf	(___awdiv@quotient+1)^0,c
  6815  003B18  0E00               	movlw	0
  6816  003B1A  6E07               	movwf	___awdiv@quotient^0,c
  6817  003B1C  5003               	movf	___awdiv@divisor^0,w,c
  6818  003B1E  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  6819  003B20  B4D8               	btfsc	status,2,c
  6820  003B22  EF95  F01D         	goto	u3891
  6821  003B26  EF97  F01D         	goto	u3890
  6822  003B2A                     u3891:
  6823  003B2A  EFBF  F01D         	goto	l3630
  6824  003B2E                     u3890:
  6825  003B2E  0E01               	movlw	1
  6826  003B30  6E05               	movwf	___awdiv@counter^0,c
  6827  003B32  EF9F  F01D         	goto	l3616
  6828  003B36                     l3614:
  6829  003B36  90D8               	bcf	status,0,c
  6830  003B38  3603               	rlcf	___awdiv@divisor^0,f,c
  6831  003B3A  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  6832  003B3C  2A05               	incf	___awdiv@counter^0,f,c
  6833  003B3E                     l3616:
  6834  003B3E  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  6835  003B40  EFA4  F01D         	goto	u3901
  6836  003B44  EFA6  F01D         	goto	u3900
  6837  003B48                     u3901:
  6838  003B48  EF9B  F01D         	goto	l3614
  6839  003B4C                     u3900:
  6840  003B4C                     l3618:
  6841  003B4C  90D8               	bcf	status,0,c
  6842  003B4E  3607               	rlcf	___awdiv@quotient^0,f,c
  6843  003B50  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  6844  003B52  5003               	movf	___awdiv@divisor^0,w,c
  6845  003B54  5C01               	subwf	___awdiv@dividend^0,w,c
  6846  003B56  5004               	movf	(___awdiv@divisor+1)^0,w,c
  6847  003B58  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  6848  003B5A  A0D8               	btfss	status,0,c
  6849  003B5C  EFB2  F01D         	goto	u3911
  6850  003B60  EFB4  F01D         	goto	u3910
  6851  003B64                     u3911:
  6852  003B64  EFB9  F01D         	goto	l3626
  6853  003B68                     u3910:
  6854  003B68  5003               	movf	___awdiv@divisor^0,w,c
  6855  003B6A  5E01               	subwf	___awdiv@dividend^0,f,c
  6856  003B6C  5004               	movf	(___awdiv@divisor+1)^0,w,c
  6857  003B6E  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  6858  003B70  8007               	bsf	___awdiv@quotient^0,0,c
  6859  003B72                     l3626:
  6860  003B72  90D8               	bcf	status,0,c
  6861  003B74  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  6862  003B76  3203               	rrcf	___awdiv@divisor^0,f,c
  6863  003B78  2E05               	decfsz	___awdiv@counter^0,f,c
  6864  003B7A  EFA6  F01D         	goto	l3618
  6865  003B7E                     l3630:
  6866  003B7E  5006               	movf	___awdiv@sign^0,w,c
  6867  003B80  B4D8               	btfsc	status,2,c
  6868  003B82  EFC5  F01D         	goto	u3921
  6869  003B86  EFC7  F01D         	goto	u3920
  6870  003B8A                     u3921:
  6871  003B8A  EFCB  F01D         	goto	l3634
  6872  003B8E                     u3920:
  6873  003B8E  6C07               	negf	___awdiv@quotient^0,c
  6874  003B90  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  6875  003B92  B0D8               	btfsc	status,0,c
  6876  003B94  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  6877  003B96                     l3634:
  6878  003B96  C007  F001         	movff	___awdiv@quotient,?___awdiv
  6879  003B9A  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  6880  003B9E  0012               	return		;funcret
  6881  003BA0                     __end_of___awdiv:
  6882                           	callstack 0
  6883                           
  6884 ;; *************** function _dtoa *****************
  6885 ;; Defined at:
  6886 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  6887 ;; Parameters:    Size  Location     Type
  6888 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  6889 ;;		 -> sprintf@f(11), 
  6890 ;;  d               8   29[COMRAM] long long 
  6891 ;; Auto vars:     Size  Location     Type
  6892 ;;  n               8   53[COMRAM] long long 
  6893 ;;  i               2   61[COMRAM] int 
  6894 ;;  s               2   51[COMRAM] int 
  6895 ;;  w               2   49[COMRAM] int 
  6896 ;;  p               2   47[COMRAM] int 
  6897 ;; Return value:  Size  Location     Type
  6898 ;;                  2   27[COMRAM] int 
  6899 ;; Registers used:
  6900 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6901 ;; Tracked objects:
  6902 ;;		On entry : 0/0
  6903 ;;		On exit  : 0/0
  6904 ;;		Unchanged: 0/0
  6905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6906 ;;      Params:        10       0       0       0       0       0       0
  6907 ;;      Locals:        18       0       0       0       0       0       0
  6908 ;;      Temps:          8       0       0       0       0       0       0
  6909 ;;      Totals:        36       0       0       0       0       0       0
  6910 ;;Total ram usage:       36 bytes
  6911 ;; Hardware stack levels used: 1
  6912 ;; Hardware stack levels required when called: 4
  6913 ;; This function calls:
  6914 ;;		___aodiv
  6915 ;;		___aomod
  6916 ;;		_abs
  6917 ;;		_pad
  6918 ;; This function is called by:
  6919 ;;		_vfpfcnvrt
  6920 ;; This function uses a non-reentrant model
  6921 ;;
  6922                           
  6923                           	psect	text23
  6924  00260C                     __ptext23:
  6925                           	callstack 0
  6926  00260C                     _dtoa:
  6927                           	callstack 22
  6928  00260C                     
  6929                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  6930  00260C  C01E  F036         	movff	dtoa@d,dtoa@n
  6931  002610  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  6932  002614  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  6933  002618  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  6934  00261C  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  6935  002620  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  6936  002624  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  6937  002628  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  6938  00262C                     
  6939                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  6940  00262C  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  6941  00262E  EF1B  F013         	goto	u4501
  6942  002632  EF1E  F013         	goto	u4500
  6943  002636                     u4501:
  6944  002636  0E01               	movlw	1
  6945  002638  EF1F  F013         	goto	u4510
  6946  00263C                     u4500:
  6947  00263C  0E00               	movlw	0
  6948  00263E                     u4510:
  6949  00263E  6E34               	movwf	dtoa@s^0,c
  6950  002640  6A35               	clrf	(dtoa@s+1)^0,c
  6951                           
  6952                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  6953  002642  5034               	movf	dtoa@s^0,w,c
  6954  002644  1035               	iorwf	(dtoa@s+1)^0,w,c
  6955  002646  B4D8               	btfsc	status,2,c
  6956  002648  EF28  F013         	goto	u4521
  6957  00264C  EF2A  F013         	goto	u4520
  6958  002650                     u4521:
  6959  002650  EF3A  F013         	goto	l3916
  6960  002654                     u4520:
  6961  002654                     
  6962                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  6963  002654  1E3D               	comf	(dtoa@n+7)^0,f,c
  6964  002656  1E3C               	comf	(dtoa@n+6)^0,f,c
  6965  002658  1E3B               	comf	(dtoa@n+5)^0,f,c
  6966  00265A  1E3A               	comf	(dtoa@n+4)^0,f,c
  6967  00265C  1E39               	comf	(dtoa@n+3)^0,f,c
  6968  00265E  1E38               	comf	(dtoa@n+2)^0,f,c
  6969  002660  1E37               	comf	(dtoa@n+1)^0,f,c
  6970  002662  6C36               	negf	dtoa@n^0,c
  6971  002664  0E00               	movlw	0
  6972  002666  2237               	addwfc	(dtoa@n+1)^0,f,c
  6973  002668  2238               	addwfc	(dtoa@n+2)^0,f,c
  6974  00266A  2239               	addwfc	(dtoa@n+3)^0,f,c
  6975  00266C  223A               	addwfc	(dtoa@n+4)^0,f,c
  6976  00266E  223B               	addwfc	(dtoa@n+5)^0,f,c
  6977  002670  223C               	addwfc	(dtoa@n+6)^0,f,c
  6978  002672  223D               	addwfc	(dtoa@n+7)^0,f,c
  6979  002674                     l3916:
  6980                           
  6981                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  6982  002674  BE7C               	btfsc	(_prec+1)^0,7,c
  6983  002676  EF3F  F013         	goto	u4531
  6984  00267A  EF41  F013         	goto	u4530
  6985  00267E                     u4531:
  6986  00267E  EF42  F013         	goto	l3920
  6987  002682                     u4530:
  6988  002682                     
  6989                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  6990  002682  927D               	bcf	_flags^0,1,c
  6991  002684                     l3920:
  6992                           
  6993                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  6994  002684  BE7C               	btfsc	(_prec+1)^0,7,c
  6995  002686  EF4F  F013         	goto	u4540
  6996  00268A  507C               	movf	(_prec+1)^0,w,c
  6997  00268C  E106               	bnz	u4541
  6998  00268E  047B               	decf	_prec^0,w,c
  6999  002690  B0D8               	btfsc	status,0,c
  7000  002692  EF4D  F013         	goto	u4541
  7001  002696  EF4F  F013         	goto	u4540
  7002  00269A                     u4541:
  7003  00269A  EF55  F013         	goto	l897
  7004  00269E                     u4540:
  7005  00269E  0E00               	movlw	0
  7006  0026A0  6E31               	movwf	(dtoa@p+1)^0,c
  7007  0026A2  0E01               	movlw	1
  7008  0026A4  6E30               	movwf	dtoa@p^0,c
  7009  0026A6  EF59  F013         	goto	l899
  7010  0026AA                     l897:
  7011  0026AA  C07B  F030         	movff	_prec,dtoa@p
  7012  0026AE  C07C  F031         	movff	_prec+1,dtoa@p+1
  7013  0026B2                     l899:
  7014                           
  7015                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  7016  0026B2  C079  F032         	movff	_width,dtoa@w
  7017  0026B6  C07A  F033         	movff	_width+1,dtoa@w+1
  7018  0026BA                     
  7019                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  7020  0026BA  5034               	movf	dtoa@s^0,w,c
  7021  0026BC  1035               	iorwf	(dtoa@s+1)^0,w,c
  7022  0026BE  A4D8               	btfss	status,2,c
  7023  0026C0  EF64  F013         	goto	u4551
  7024  0026C4  EF66  F013         	goto	u4550
  7025  0026C8                     u4551:
  7026  0026C8  EF6D  F013         	goto	l3928
  7027  0026CC                     u4550:
  7028  0026CC  A47D               	btfss	_flags^0,2,c
  7029  0026CE  EF6B  F013         	goto	u4561
  7030  0026D2  EF6D  F013         	goto	u4560
  7031  0026D6                     u4561:
  7032  0026D6  EF70  F013         	goto	l3930
  7033  0026DA                     u4560:
  7034  0026DA                     l3928:
  7035                           
  7036                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 306:         --w;
  7037  0026DA  0632               	decf	dtoa@w^0,f,c
  7038  0026DC  A0D8               	btfss	status,0,c
  7039  0026DE  0633               	decf	(dtoa@w+1)^0,f,c
  7040  0026E0                     l3930:
  7041                           
  7042                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  7043  0026E0  0E00               	movlw	0
  7044  0026E2  6E3F               	movwf	(dtoa@i+1)^0,c
  7045  0026E4  0E4F               	movlw	79
  7046  0026E6  6E3E               	movwf	dtoa@i^0,c
  7047  0026E8                     
  7048                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  7049  0026E8  0E00               	movlw	0
  7050  0026EA  0101               	movlb	1	; () banked
  7051  0026EC  6F4F               	movwf	(_dbuf+79)& (0+255),b
  7052                           
  7053                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7054  0026EE  EFF5  F013         	goto	l3944
  7055  0026F2                     l3934:
  7056                           
  7057                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 313:         --i;
  7058  0026F2  063E               	decf	dtoa@i^0,f,c
  7059  0026F4  A0D8               	btfss	status,0,c
  7060  0026F6  063F               	decf	(dtoa@i+1)^0,f,c
  7061  0026F8                     
  7062                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  7063  0026F8  0E00               	movlw	low _dbuf
  7064  0026FA  243E               	addwf	dtoa@i^0,w,c
  7065  0026FC  6ED9               	movwf	fsr2l,c
  7066  0026FE  0E01               	movlw	high _dbuf
  7067  002700  203F               	addwfc	(dtoa@i+1)^0,w,c
  7068  002702  6EDA               	movwf	fsr2h,c
  7069  002704  C036  F001         	movff	dtoa@n,___aomod@dividend
  7070  002708  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  7071  00270C  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  7072  002710  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  7073  002714  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  7074  002718  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  7075  00271C  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  7076  002720  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  7077  002724  0E0A               	movlw	10
  7078  002726  6E09               	movwf	___aomod@divisor^0,c
  7079  002728  0E00               	movlw	0
  7080  00272A  6E0A               	movwf	(___aomod@divisor+1)^0,c
  7081  00272C  0E00               	movlw	0
  7082  00272E  6E0B               	movwf	(___aomod@divisor+2)^0,c
  7083  002730  0E00               	movlw	0
  7084  002732  6E0C               	movwf	(___aomod@divisor+3)^0,c
  7085  002734  0E00               	movlw	0
  7086  002736  6E0D               	movwf	(___aomod@divisor+4)^0,c
  7087  002738  0E00               	movlw	0
  7088  00273A  6E0E               	movwf	(___aomod@divisor+5)^0,c
  7089  00273C  0E00               	movlw	0
  7090  00273E  6E0F               	movwf	(___aomod@divisor+6)^0,c
  7091  002740  0E00               	movlw	0
  7092  002742  6E10               	movwf	(___aomod@divisor+7)^0,c
  7093  002744  EC01  F018         	call	___aomod	;wreg free
  7094  002748  C001  F026         	movff	?___aomod,??_dtoa
  7095  00274C  C002  F027         	movff	?___aomod+1,??_dtoa+1
  7096  002750  C003  F028         	movff	?___aomod+2,??_dtoa+2
  7097  002754  C004  F029         	movff	?___aomod+3,??_dtoa+3
  7098  002758  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  7099  00275C  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  7100  002760  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  7101  002764  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  7102  002768  C026  F013         	movff	??_dtoa,abs@a
  7103  00276C  C028  F014         	movff	??_dtoa+2,abs@a+1
  7104  002770  ECE7  F020         	call	_abs	;wreg free
  7105  002774  5013               	movf	?_abs^0,w,c
  7106  002776  0F30               	addlw	48
  7107  002778  6EDF               	movwf	indf2,c
  7108  00277A                     
  7109                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 315:         --p;
  7110  00277A  0630               	decf	dtoa@p^0,f,c
  7111  00277C  A0D8               	btfss	status,0,c
  7112  00277E  0631               	decf	(dtoa@p+1)^0,f,c
  7113  002780                     
  7114                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 316:         --w;
  7115  002780  0632               	decf	dtoa@w^0,f,c
  7116  002782  A0D8               	btfss	status,0,c
  7117  002784  0633               	decf	(dtoa@w+1)^0,f,c
  7118  002786                     
  7119                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  7120  002786  C036  F001         	movff	dtoa@n,___aodiv@dividend
  7121  00278A  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  7122  00278E  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  7123  002792  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  7124  002796  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  7125  00279A  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  7126  00279E  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  7127  0027A2  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  7128  0027A6  0E0A               	movlw	10
  7129  0027A8  6E09               	movwf	___aodiv@divisor^0,c
  7130  0027AA  0E00               	movlw	0
  7131  0027AC  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  7132  0027AE  0E00               	movlw	0
  7133  0027B0  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  7134  0027B2  0E00               	movlw	0
  7135  0027B4  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  7136  0027B6  0E00               	movlw	0
  7137  0027B8  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  7138  0027BA  0E00               	movlw	0
  7139  0027BC  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  7140  0027BE  0E00               	movlw	0
  7141  0027C0  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  7142  0027C2  0E00               	movlw	0
  7143  0027C4  6E10               	movwf	(___aodiv@divisor+7)^0,c
  7144  0027C6  EC3D  F017         	call	___aodiv	;wreg free
  7145  0027CA  C001  F036         	movff	?___aodiv,dtoa@n
  7146  0027CE  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  7147  0027D2  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  7148  0027D6  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  7149  0027DA  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  7150  0027DE  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  7151  0027E2  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  7152  0027E6  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  7153  0027EA                     l3944:
  7154                           
  7155                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7156  0027EA  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  7157  0027EC  EF00  F014         	goto	u4571
  7158  0027F0  503F               	movf	(dtoa@i+1)^0,w,c
  7159  0027F2  E108               	bnz	u4570
  7160  0027F4  043E               	decf	dtoa@i^0,w,c
  7161  0027F6  A0D8               	btfss	status,0,c
  7162  0027F8  EF00  F014         	goto	u4571
  7163  0027FC  EF02  F014         	goto	u4570
  7164  002800                     u4571:
  7165  002800  EF32  F014         	goto	l3954
  7166  002804                     u4570:
  7167  002804  5036               	movf	dtoa@n^0,w,c
  7168  002806  1037               	iorwf	(dtoa@n+1)^0,w,c
  7169  002808  1038               	iorwf	(dtoa@n+2)^0,w,c
  7170  00280A  1039               	iorwf	(dtoa@n+3)^0,w,c
  7171  00280C  103A               	iorwf	(dtoa@n+4)^0,w,c
  7172  00280E  103B               	iorwf	(dtoa@n+5)^0,w,c
  7173  002810  103C               	iorwf	(dtoa@n+6)^0,w,c
  7174  002812  103D               	iorwf	(dtoa@n+7)^0,w,c
  7175  002814  A4D8               	btfss	status,2,c
  7176  002816  EF0F  F014         	goto	u4581
  7177  00281A  EF11  F014         	goto	u4580
  7178  00281E                     u4581:
  7179  00281E  EF79  F013         	goto	l3934
  7180  002822                     u4580:
  7181  002822  BE31               	btfsc	(dtoa@p+1)^0,7,c
  7182  002824  EF1E  F014         	goto	u4590
  7183  002828  5031               	movf	(dtoa@p+1)^0,w,c
  7184  00282A  E106               	bnz	u4591
  7185  00282C  0430               	decf	dtoa@p^0,w,c
  7186  00282E  B0D8               	btfsc	status,0,c
  7187  002830  EF1C  F014         	goto	u4591
  7188  002834  EF1E  F014         	goto	u4590
  7189  002838                     u4591:
  7190  002838  EF79  F013         	goto	l3934
  7191  00283C                     u4590:
  7192  00283C  BE33               	btfsc	(dtoa@w+1)^0,7,c
  7193  00283E  EF29  F014         	goto	u4601
  7194  002842  5033               	movf	(dtoa@w+1)^0,w,c
  7195  002844  E108               	bnz	u4600
  7196  002846  0432               	decf	dtoa@w^0,w,c
  7197  002848  A0D8               	btfss	status,0,c
  7198  00284A  EF29  F014         	goto	u4601
  7199  00284E  EF2B  F014         	goto	u4600
  7200  002852                     u4601:
  7201  002852  EF32  F014         	goto	l3954
  7202  002856                     u4600:
  7203  002856  B27D               	btfsc	_flags^0,1,c
  7204  002858  EF30  F014         	goto	u4611
  7205  00285C  EF32  F014         	goto	u4610
  7206  002860                     u4611:
  7207  002860  EF79  F013         	goto	l3934
  7208  002864                     u4610:
  7209  002864                     l3954:
  7210                           
  7211                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  7212  002864  5034               	movf	dtoa@s^0,w,c
  7213  002866  1035               	iorwf	(dtoa@s+1)^0,w,c
  7214  002868  A4D8               	btfss	status,2,c
  7215  00286A  EF39  F014         	goto	u4621
  7216  00286E  EF3B  F014         	goto	u4620
  7217  002872                     u4621:
  7218  002872  EF42  F014         	goto	l3958
  7219  002876                     u4620:
  7220  002876  A47D               	btfss	_flags^0,2,c
  7221  002878  EF40  F014         	goto	u4631
  7222  00287C  EF42  F014         	goto	u4630
  7223  002880                     u4631:
  7224  002880  EF60  F014         	goto	l3968
  7225  002884                     u4630:
  7226  002884                     l3958:
  7227                           
  7228                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 322:         --i;
  7229  002884  063E               	decf	dtoa@i^0,f,c
  7230  002886  A0D8               	btfss	status,0,c
  7231  002888  063F               	decf	(dtoa@i+1)^0,f,c
  7232  00288A                     
  7233                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  7234  00288A  5034               	movf	dtoa@s^0,w,c
  7235  00288C  1035               	iorwf	(dtoa@s+1)^0,w,c
  7236  00288E  A4D8               	btfss	status,2,c
  7237  002890  EF4C  F014         	goto	u4641
  7238  002894  EF4E  F014         	goto	u4640
  7239  002898                     u4641:
  7240  002898  EF54  F014         	goto	l3964
  7241  00289C                     u4640:
  7242  00289C  0E00               	movlw	0
  7243  00289E  6E2F               	movwf	(_dtoa$1141+1)^0,c
  7244  0028A0  0E2B               	movlw	43
  7245  0028A2  6E2E               	movwf	_dtoa$1141^0,c
  7246  0028A4  EF58  F014         	goto	l3966
  7247  0028A8                     l3964:
  7248  0028A8  0E00               	movlw	0
  7249  0028AA  6E2F               	movwf	(_dtoa$1141+1)^0,c
  7250  0028AC  0E2D               	movlw	45
  7251  0028AE  6E2E               	movwf	_dtoa$1141^0,c
  7252  0028B0                     l3966:
  7253  0028B0  0E00               	movlw	low _dbuf
  7254  0028B2  243E               	addwf	dtoa@i^0,w,c
  7255  0028B4  6ED9               	movwf	fsr2l,c
  7256  0028B6  0E01               	movlw	high _dbuf
  7257  0028B8  203F               	addwfc	(dtoa@i+1)^0,w,c
  7258  0028BA  6EDA               	movwf	fsr2h,c
  7259  0028BC  C02E  FFDF         	movff	_dtoa$1141,indf2
  7260  0028C0                     l3968:
  7261                           
  7262                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  7263  0028C0  C01C  F011         	movff	dtoa@fp,pad@fp
  7264  0028C4  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  7265  0028C8  0E00               	movlw	low _dbuf
  7266  0028CA  243E               	addwf	dtoa@i^0,w,c
  7267  0028CC  6E13               	movwf	pad@buf^0,c
  7268  0028CE  0E01               	movlw	high _dbuf
  7269  0028D0  203F               	addwfc	(dtoa@i+1)^0,w,c
  7270  0028D2  6E14               	movwf	(pad@buf+1)^0,c
  7271  0028D4  C032  F015         	movff	dtoa@w,pad@p
  7272  0028D8  C033  F016         	movff	dtoa@w+1,pad@p+1
  7273  0028DC  ECD0  F01D         	call	_pad	;wreg free
  7274  0028E0  C011  F01C         	movff	?_pad,?_dtoa
  7275  0028E4  C012  F01D         	movff	?_pad+1,?_dtoa+1
  7276  0028E8  0012               	return		;funcret
  7277  0028EA                     __end_of_dtoa:
  7278                           	callstack 0
  7279                           
  7280 ;; *************** function _pad *****************
  7281 ;; Defined at:
  7282 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  7283 ;; Parameters:    Size  Location     Type
  7284 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  7285 ;;		 -> sprintf@f(11), 
  7286 ;;  buf             2   18[COMRAM] PTR unsigned char 
  7287 ;;		 -> dbuf(80), 
  7288 ;;  p               2   20[COMRAM] int 
  7289 ;; Auto vars:     Size  Location     Type
  7290 ;;  w               2   25[COMRAM] int 
  7291 ;;  i               2   23[COMRAM] int 
  7292 ;; Return value:  Size  Location     Type
  7293 ;;                  2   16[COMRAM] int 
  7294 ;; Registers used:
  7295 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7296 ;; Tracked objects:
  7297 ;;		On entry : 0/0
  7298 ;;		On exit  : 0/0
  7299 ;;		Unchanged: 0/0
  7300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7301 ;;      Params:         6       0       0       0       0       0       0
  7302 ;;      Locals:         4       0       0       0       0       0       0
  7303 ;;      Temps:          1       0       0       0       0       0       0
  7304 ;;      Totals:        11       0       0       0       0       0       0
  7305 ;;Total ram usage:       11 bytes
  7306 ;; Hardware stack levels used: 1
  7307 ;; Hardware stack levels required when called: 3
  7308 ;; This function calls:
  7309 ;;		_fputc
  7310 ;;		_fputs
  7311 ;;		_strlen
  7312 ;; This function is called by:
  7313 ;;		_dtoa
  7314 ;;		_efgtoa
  7315 ;; This function uses a non-reentrant model
  7316 ;;
  7317                           
  7318                           	psect	text24
  7319  003BA0                     __ptext24:
  7320                           	callstack 0
  7321  003BA0                     _pad:
  7322                           	callstack 22
  7323  003BA0                     
  7324                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  7325  003BA0  A07D               	btfss	_flags^0,0,c
  7326  003BA2  EFD5  F01D         	goto	u4151
  7327  003BA6  EFD7  F01D         	goto	u4150
  7328  003BAA                     u4151:
  7329  003BAA  EFE1  F01D         	goto	l3768
  7330  003BAE                     u4150:
  7331  003BAE                     
  7332                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  7333  003BAE  C013  F00A         	movff	pad@buf,fputs@s
  7334  003BB2  C014  F00B         	movff	pad@buf+1,fputs@s+1
  7335  003BB6  C011  F00C         	movff	pad@fp,fputs@fp
  7336  003BBA  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  7337  003BBE  ECC5  F020         	call	_fputs	;wreg free
  7338  003BC2                     l3768:
  7339                           
  7340                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  7341  003BC2  BE16               	btfsc	(pad@p+1)^0,7,c
  7342  003BC4  EFE6  F01D         	goto	u4161
  7343  003BC8  EFE8  F01D         	goto	u4160
  7344  003BCC                     u4161:
  7345  003BCC  EFEE  F01D         	goto	l3772
  7346  003BD0                     u4160:
  7347  003BD0  C015  F01A         	movff	pad@p,pad@w
  7348  003BD4  C016  F01B         	movff	pad@p+1,pad@w+1
  7349  003BD8  EFF2  F01D         	goto	l870
  7350  003BDC                     l3772:
  7351  003BDC  0E00               	movlw	0
  7352  003BDE  6E1B               	movwf	(pad@w+1)^0,c
  7353  003BE0  0E00               	movlw	0
  7354  003BE2  6E1A               	movwf	pad@w^0,c
  7355  003BE4                     l870:
  7356                           
  7357                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  7358  003BE4  0E00               	movlw	0
  7359  003BE6  6E19               	movwf	(pad@i+1)^0,c
  7360  003BE8  0E00               	movlw	0
  7361  003BEA  6E18               	movwf	pad@i^0,c
  7362                           
  7363                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7364  003BEC  EF04  F01E         	goto	l3778
  7365  003BF0                     l3774:
  7366                           
  7367                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  7368  003BF0  0E00               	movlw	0
  7369  003BF2  6E02               	movwf	(fputc@c+1)^0,c
  7370  003BF4  0E20               	movlw	32
  7371  003BF6  6E01               	movwf	fputc@c^0,c
  7372  003BF8  C011  F003         	movff	pad@fp,fputc@fp
  7373  003BFC  C012  F004         	movff	pad@fp+1,fputc@fp+1
  7374  003C00  EC09  F01D         	call	_fputc	;wreg free
  7375  003C04                     
  7376                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 86:         ++i;
  7377  003C04  4A18               	infsnz	pad@i^0,f,c
  7378  003C06  2A19               	incf	(pad@i+1)^0,f,c
  7379  003C08                     l3778:
  7380                           
  7381                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7382  003C08  501A               	movf	pad@w^0,w,c
  7383  003C0A  5C18               	subwf	pad@i^0,w,c
  7384  003C0C  5019               	movf	(pad@i+1)^0,w,c
  7385  003C0E  0A80               	xorlw	128
  7386  003C10  6E17               	movwf	??_pad^0,c
  7387  003C12  501B               	movf	(pad@w+1)^0,w,c
  7388  003C14  0A80               	xorlw	128
  7389  003C16  5817               	subwfb	??_pad^0,w,c
  7390  003C18  A0D8               	btfss	status,0,c
  7391  003C1A  EF11  F01E         	goto	u4171
  7392  003C1E  EF13  F01E         	goto	u4170
  7393  003C22                     u4171:
  7394  003C22  EFF8  F01D         	goto	l3774
  7395  003C26                     u4170:
  7396  003C26                     
  7397                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  7398  003C26  B07D               	btfsc	_flags^0,0,c
  7399  003C28  EF18  F01E         	goto	u4181
  7400  003C2C  EF1A  F01E         	goto	u4180
  7401  003C30                     u4181:
  7402  003C30  EF24  F01E         	goto	l3782
  7403  003C34                     u4180:
  7404  003C34                     
  7405                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  7406  003C34  C013  F00A         	movff	pad@buf,fputs@s
  7407  003C38  C014  F00B         	movff	pad@buf+1,fputs@s+1
  7408  003C3C  C011  F00C         	movff	pad@fp,fputs@fp
  7409  003C40  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  7410  003C44  ECC5  F020         	call	_fputs	;wreg free
  7411  003C48                     l3782:
  7412                           
  7413                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  7414  003C48  C013  F001         	movff	pad@buf,strlen@s
  7415  003C4C  C014  F002         	movff	pad@buf+1,strlen@s+1
  7416  003C50  EC7A  F021         	call	_strlen	;wreg free
  7417  003C54  501A               	movf	pad@w^0,w,c
  7418  003C56  2401               	addwf	?_strlen^0,w,c
  7419  003C58  6E11               	movwf	?_pad^0,c
  7420  003C5A  501B               	movf	(pad@w+1)^0,w,c
  7421  003C5C  2002               	addwfc	(?_strlen+1)^0,w,c
  7422  003C5E  6E12               	movwf	(?_pad+1)^0,c
  7423  003C60  0012               	return		;funcret
  7424  003C62                     __end_of_pad:
  7425                           	callstack 0
  7426                           
  7427 ;; *************** function _strlen *****************
  7428 ;; Defined at:
  7429 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  7430 ;; Parameters:    Size  Location     Type
  7431 ;;  s               2    0[COMRAM] PTR const unsigned char 
  7432 ;;		 -> dbuf(80), 
  7433 ;; Auto vars:     Size  Location     Type
  7434 ;;  a               2    2[COMRAM] PTR const unsigned char 
  7435 ;;		 -> dbuf(80), 
  7436 ;; Return value:  Size  Location     Type
  7437 ;;                  2    0[COMRAM] unsigned int 
  7438 ;; Registers used:
  7439 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7440 ;; Tracked objects:
  7441 ;;		On entry : 0/0
  7442 ;;		On exit  : 0/0
  7443 ;;		Unchanged: 0/0
  7444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7445 ;;      Params:         2       0       0       0       0       0       0
  7446 ;;      Locals:         2       0       0       0       0       0       0
  7447 ;;      Temps:          0       0       0       0       0       0       0
  7448 ;;      Totals:         4       0       0       0       0       0       0
  7449 ;;Total ram usage:        4 bytes
  7450 ;; Hardware stack levels used: 1
  7451 ;; This function calls:
  7452 ;;		Nothing
  7453 ;; This function is called by:
  7454 ;;		_pad
  7455 ;; This function uses a non-reentrant model
  7456 ;;
  7457                           
  7458                           	psect	text25
  7459  0042F4                     __ptext25:
  7460                           	callstack 0
  7461  0042F4                     _strlen:
  7462                           	callstack 24
  7463  0042F4  C001  F003         	movff	strlen@s,strlen@a
  7464  0042F8  C002  F004         	movff	strlen@s+1,strlen@a+1
  7465  0042FC  EF82  F021         	goto	l3224
  7466  004300                     l3222:
  7467  004300  4A01               	infsnz	strlen@s^0,f,c
  7468  004302  2A02               	incf	(strlen@s+1)^0,f,c
  7469  004304                     l3224:
  7470  004304  C001  FFD9         	movff	strlen@s,fsr2l
  7471  004308  C002  FFDA         	movff	strlen@s+1,fsr2h
  7472  00430C  50DF               	movf	indf2,w,c
  7473  00430E  A4D8               	btfss	status,2,c
  7474  004310  EF8C  F021         	goto	u3291
  7475  004314  EF8E  F021         	goto	u3290
  7476  004318                     u3291:
  7477  004318  EF80  F021         	goto	l3222
  7478  00431C                     u3290:
  7479  00431C  5003               	movf	strlen@a^0,w,c
  7480  00431E  5C01               	subwf	strlen@s^0,w,c
  7481  004320  6E01               	movwf	?_strlen^0,c
  7482  004322  5004               	movf	(strlen@a+1)^0,w,c
  7483  004324  5802               	subwfb	(strlen@s+1)^0,w,c
  7484  004326  6E02               	movwf	(?_strlen+1)^0,c
  7485  004328  0012               	return		;funcret
  7486  00432A                     __end_of_strlen:
  7487                           	callstack 0
  7488                           
  7489 ;; *************** function _fputs *****************
  7490 ;; Defined at:
  7491 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputs.c"
  7492 ;; Parameters:    Size  Location     Type
  7493 ;;  s               2    9[COMRAM] PTR const unsigned char 
  7494 ;;		 -> dbuf(80), 
  7495 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  7496 ;;		 -> sprintf@f(11), 
  7497 ;; Auto vars:     Size  Location     Type
  7498 ;;  i               2   14[COMRAM] int 
  7499 ;;  c               1   13[COMRAM] unsigned char 
  7500 ;; Return value:  Size  Location     Type
  7501 ;;                  2    9[COMRAM] int 
  7502 ;; Registers used:
  7503 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7504 ;; Tracked objects:
  7505 ;;		On entry : 0/0
  7506 ;;		On exit  : 0/0
  7507 ;;		Unchanged: 0/0
  7508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7509 ;;      Params:         4       0       0       0       0       0       0
  7510 ;;      Locals:         3       0       0       0       0       0       0
  7511 ;;      Temps:          0       0       0       0       0       0       0
  7512 ;;      Totals:         7       0       0       0       0       0       0
  7513 ;;Total ram usage:        7 bytes
  7514 ;; Hardware stack levels used: 1
  7515 ;; Hardware stack levels required when called: 2
  7516 ;; This function calls:
  7517 ;;		_fputc
  7518 ;; This function is called by:
  7519 ;;		_pad
  7520 ;; This function uses a non-reentrant model
  7521 ;;
  7522                           
  7523                           	psect	text26
  7524  00418A                     __ptext26:
  7525                           	callstack 0
  7526  00418A                     _fputs:
  7527                           	callstack 22
  7528  00418A  0E00               	movlw	0
  7529  00418C  6E10               	movwf	(fputs@i+1)^0,c
  7530  00418E  0E00               	movlw	0
  7531  004190  6E0F               	movwf	fputs@i^0,c
  7532  004192  EFD6  F020         	goto	l3218
  7533  004196                     l3214:
  7534  004196  C00E  F001         	movff	fputs@c,fputc@c
  7535  00419A  6A02               	clrf	(fputc@c+1)^0,c
  7536  00419C  C00C  F003         	movff	fputs@fp,fputc@fp
  7537  0041A0  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  7538  0041A4  EC09  F01D         	call	_fputc	;wreg free
  7539  0041A8  4A0F               	infsnz	fputs@i^0,f,c
  7540  0041AA  2A10               	incf	(fputs@i+1)^0,f,c
  7541  0041AC                     l3218:
  7542  0041AC  500F               	movf	fputs@i^0,w,c
  7543  0041AE  240A               	addwf	fputs@s^0,w,c
  7544  0041B0  6ED9               	movwf	fsr2l,c
  7545  0041B2  5010               	movf	(fputs@i+1)^0,w,c
  7546  0041B4  200B               	addwfc	(fputs@s+1)^0,w,c
  7547  0041B6  6EDA               	movwf	fsr2h,c
  7548  0041B8  50DF               	movf	indf2,w,c
  7549  0041BA  6E0E               	movwf	fputs@c^0,c
  7550  0041BC  500E               	movf	fputs@c^0,w,c
  7551  0041BE  A4D8               	btfss	status,2,c
  7552  0041C0  EFE4  F020         	goto	u3281
  7553  0041C4  EFE6  F020         	goto	u3280
  7554  0041C8                     u3281:
  7555  0041C8  EFCB  F020         	goto	l3214
  7556  0041CC                     u3280:
  7557  0041CC  0012               	return		;funcret
  7558  0041CE                     __end_of_fputs:
  7559                           	callstack 0
  7560                           
  7561 ;; *************** function _abs *****************
  7562 ;; Defined at:
  7563 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\abs.c"
  7564 ;; Parameters:    Size  Location     Type
  7565 ;;  a               2   18[COMRAM] int 
  7566 ;; Auto vars:     Size  Location     Type
  7567 ;;		None
  7568 ;; Return value:  Size  Location     Type
  7569 ;;                  2   18[COMRAM] int 
  7570 ;; Registers used:
  7571 ;;		wreg, status,2, status,0
  7572 ;; Tracked objects:
  7573 ;;		On entry : 0/0
  7574 ;;		On exit  : 0/0
  7575 ;;		Unchanged: 0/0
  7576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7577 ;;      Params:         2       0       0       0       0       0       0
  7578 ;;      Locals:         0       0       0       0       0       0       0
  7579 ;;      Temps:          2       0       0       0       0       0       0
  7580 ;;      Totals:         4       0       0       0       0       0       0
  7581 ;;Total ram usage:        4 bytes
  7582 ;; Hardware stack levels used: 1
  7583 ;; This function calls:
  7584 ;;		Nothing
  7585 ;; This function is called by:
  7586 ;;		_dtoa
  7587 ;; This function uses a non-reentrant model
  7588 ;;
  7589                           
  7590                           	psect	text27
  7591  0041CE                     __ptext27:
  7592                           	callstack 0
  7593  0041CE                     _abs:
  7594                           	callstack 25
  7595  0041CE  BE14               	btfsc	(abs@a+1)^0,7,c
  7596  0041D0  EFF4  F020         	goto	u4190
  7597  0041D4  5014               	movf	(abs@a+1)^0,w,c
  7598  0041D6  E106               	bnz	u4191
  7599  0041D8  0413               	decf	abs@a^0,w,c
  7600  0041DA  B0D8               	btfsc	status,0,c
  7601  0041DC  EFF2  F020         	goto	u4191
  7602  0041E0  EFF4  F020         	goto	u4190
  7603  0041E4                     u4191:
  7604  0041E4  EF02  F021         	goto	l1070
  7605  0041E8                     u4190:
  7606  0041E8  C013  F015         	movff	abs@a,??_abs
  7607  0041EC  C014  F016         	movff	abs@a+1,??_abs+1
  7608  0041F0  1E15               	comf	??_abs^0,f,c
  7609  0041F2  1E16               	comf	(??_abs+1)^0,f,c
  7610  0041F4  4A15               	infsnz	??_abs^0,f,c
  7611  0041F6  2A16               	incf	(??_abs+1)^0,f,c
  7612  0041F8  C015  F013         	movff	??_abs,?_abs
  7613  0041FC  C016  F014         	movff	??_abs+1,?_abs+1
  7614  004200  EF06  F021         	goto	l1073
  7615  004204                     l1070:
  7616  004204  C013  F013         	movff	abs@a,?_abs
  7617  004208  C014  F014         	movff	abs@a+1,?_abs+1
  7618  00420C                     l1073:
  7619  00420C  0012               	return		;funcret
  7620  00420E                     __end_of_abs:
  7621                           	callstack 0
  7622                           
  7623 ;; *************** function ___aomod *****************
  7624 ;; Defined at:
  7625 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aomod.c"
  7626 ;; Parameters:    Size  Location     Type
  7627 ;;  dividend        8    0[COMRAM] long long 
  7628 ;;  divisor         8    8[COMRAM] long long 
  7629 ;; Auto vars:     Size  Location     Type
  7630 ;;  sign            1   17[COMRAM] unsigned char 
  7631 ;;  counter         1   16[COMRAM] unsigned char 
  7632 ;; Return value:  Size  Location     Type
  7633 ;;                  8    0[COMRAM] long long 
  7634 ;; Registers used:
  7635 ;;		wreg, status,2, status,0
  7636 ;; Tracked objects:
  7637 ;;		On entry : 0/0
  7638 ;;		On exit  : 0/0
  7639 ;;		Unchanged: 0/0
  7640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7641 ;;      Params:        16       0       0       0       0       0       0
  7642 ;;      Locals:         2       0       0       0       0       0       0
  7643 ;;      Temps:          0       0       0       0       0       0       0
  7644 ;;      Totals:        18       0       0       0       0       0       0
  7645 ;;Total ram usage:       18 bytes
  7646 ;; Hardware stack levels used: 1
  7647 ;; This function calls:
  7648 ;;		Nothing
  7649 ;; This function is called by:
  7650 ;;		_dtoa
  7651 ;; This function uses a non-reentrant model
  7652 ;;
  7653                           
  7654                           	psect	text28
  7655  003002                     __ptext28:
  7656                           	callstack 0
  7657  003002                     ___aomod:
  7658                           	callstack 25
  7659  003002  0E00               	movlw	0
  7660  003004  6E12               	movwf	___aomod@sign^0,c
  7661  003006  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  7662  003008  EF0A  F018         	goto	u3390
  7663  00300C  EF08  F018         	goto	u3391
  7664  003010                     u3391:
  7665  003010  EF1C  F018         	goto	l3292
  7666  003014                     u3390:
  7667  003014  1E08               	comf	(___aomod@dividend+7)^0,f,c
  7668  003016  1E07               	comf	(___aomod@dividend+6)^0,f,c
  7669  003018  1E06               	comf	(___aomod@dividend+5)^0,f,c
  7670  00301A  1E05               	comf	(___aomod@dividend+4)^0,f,c
  7671  00301C  1E04               	comf	(___aomod@dividend+3)^0,f,c
  7672  00301E  1E03               	comf	(___aomod@dividend+2)^0,f,c
  7673  003020  1E02               	comf	(___aomod@dividend+1)^0,f,c
  7674  003022  6C01               	negf	___aomod@dividend^0,c
  7675  003024  0E00               	movlw	0
  7676  003026  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  7677  003028  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  7678  00302A  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  7679  00302C  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  7680  00302E  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  7681  003030  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  7682  003032  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  7683  003034  0E01               	movlw	1
  7684  003036  6E12               	movwf	___aomod@sign^0,c
  7685  003038                     l3292:
  7686  003038  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  7687  00303A  EF23  F018         	goto	u3400
  7688  00303E  EF21  F018         	goto	u3401
  7689  003042                     u3401:
  7690  003042  EF33  F018         	goto	l3296
  7691  003046                     u3400:
  7692  003046  1E10               	comf	(___aomod@divisor+7)^0,f,c
  7693  003048  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  7694  00304A  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  7695  00304C  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  7696  00304E  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  7697  003050  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  7698  003052  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  7699  003054  6C09               	negf	___aomod@divisor^0,c
  7700  003056  0E00               	movlw	0
  7701  003058  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  7702  00305A  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  7703  00305C  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  7704  00305E  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  7705  003060  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  7706  003062  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  7707  003064  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  7708  003066                     l3296:
  7709  003066  5009               	movf	___aomod@divisor^0,w,c
  7710  003068  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  7711  00306A  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  7712  00306C  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  7713  00306E  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  7714  003070  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  7715  003072  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  7716  003074  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  7717  003076  B4D8               	btfsc	status,2,c
  7718  003078  EF40  F018         	goto	u3411
  7719  00307C  EF42  F018         	goto	u3410
  7720  003080                     u3411:
  7721  003080  EF8A  F018         	goto	l3312
  7722  003084                     u3410:
  7723  003084  0E01               	movlw	1
  7724  003086  6E11               	movwf	___aomod@counter^0,c
  7725  003088  EF50  F018         	goto	l3302
  7726  00308C                     l3300:
  7727  00308C  90D8               	bcf	status,0,c
  7728  00308E  3609               	rlcf	___aomod@divisor^0,f,c
  7729  003090  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  7730  003092  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  7731  003094  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  7732  003096  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  7733  003098  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  7734  00309A  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  7735  00309C  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  7736  00309E  2A11               	incf	___aomod@counter^0,f,c
  7737  0030A0                     l3302:
  7738  0030A0  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  7739  0030A2  EF55  F018         	goto	u3421
  7740  0030A6  EF57  F018         	goto	u3420
  7741  0030AA                     u3421:
  7742  0030AA  EF46  F018         	goto	l3300
  7743  0030AE                     u3420:
  7744  0030AE                     l3304:
  7745  0030AE  5009               	movf	___aomod@divisor^0,w,c
  7746  0030B0  5C01               	subwf	___aomod@dividend^0,w,c
  7747  0030B2  500A               	movf	(___aomod@divisor+1)^0,w,c
  7748  0030B4  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  7749  0030B6  500B               	movf	(___aomod@divisor+2)^0,w,c
  7750  0030B8  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  7751  0030BA  500C               	movf	(___aomod@divisor+3)^0,w,c
  7752  0030BC  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  7753  0030BE  500D               	movf	(___aomod@divisor+4)^0,w,c
  7754  0030C0  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  7755  0030C2  500E               	movf	(___aomod@divisor+5)^0,w,c
  7756  0030C4  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  7757  0030C6  500F               	movf	(___aomod@divisor+6)^0,w,c
  7758  0030C8  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  7759  0030CA  5010               	movf	(___aomod@divisor+7)^0,w,c
  7760  0030CC  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  7761  0030CE  A0D8               	btfss	status,0,c
  7762  0030D0  EF6C  F018         	goto	u3431
  7763  0030D4  EF6E  F018         	goto	u3430
  7764  0030D8                     u3431:
  7765  0030D8  EF7E  F018         	goto	l3308
  7766  0030DC                     u3430:
  7767  0030DC  5009               	movf	___aomod@divisor^0,w,c
  7768  0030DE  5E01               	subwf	___aomod@dividend^0,f,c
  7769  0030E0  500A               	movf	(___aomod@divisor+1)^0,w,c
  7770  0030E2  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  7771  0030E4  500B               	movf	(___aomod@divisor+2)^0,w,c
  7772  0030E6  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  7773  0030E8  500C               	movf	(___aomod@divisor+3)^0,w,c
  7774  0030EA  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  7775  0030EC  500D               	movf	(___aomod@divisor+4)^0,w,c
  7776  0030EE  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  7777  0030F0  500E               	movf	(___aomod@divisor+5)^0,w,c
  7778  0030F2  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  7779  0030F4  500F               	movf	(___aomod@divisor+6)^0,w,c
  7780  0030F6  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  7781  0030F8  5010               	movf	(___aomod@divisor+7)^0,w,c
  7782  0030FA  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  7783  0030FC                     l3308:
  7784  0030FC  90D8               	bcf	status,0,c
  7785  0030FE  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  7786  003100  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  7787  003102  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  7788  003104  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  7789  003106  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  7790  003108  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  7791  00310A  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  7792  00310C  3209               	rrcf	___aomod@divisor^0,f,c
  7793  00310E  2E11               	decfsz	___aomod@counter^0,f,c
  7794  003110  EF57  F018         	goto	l3304
  7795  003114                     l3312:
  7796  003114  5012               	movf	___aomod@sign^0,w,c
  7797  003116  B4D8               	btfsc	status,2,c
  7798  003118  EF90  F018         	goto	u3441
  7799  00311C  EF92  F018         	goto	u3440
  7800  003120                     u3441:
  7801  003120  EFA2  F018         	goto	l3316
  7802  003124                     u3440:
  7803  003124  1E08               	comf	(___aomod@dividend+7)^0,f,c
  7804  003126  1E07               	comf	(___aomod@dividend+6)^0,f,c
  7805  003128  1E06               	comf	(___aomod@dividend+5)^0,f,c
  7806  00312A  1E05               	comf	(___aomod@dividend+4)^0,f,c
  7807  00312C  1E04               	comf	(___aomod@dividend+3)^0,f,c
  7808  00312E  1E03               	comf	(___aomod@dividend+2)^0,f,c
  7809  003130  1E02               	comf	(___aomod@dividend+1)^0,f,c
  7810  003132  6C01               	negf	___aomod@dividend^0,c
  7811  003134  0E00               	movlw	0
  7812  003136  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  7813  003138  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  7814  00313A  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  7815  00313C  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  7816  00313E  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  7817  003140  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  7818  003142  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  7819  003144                     l3316:
  7820  003144  C001  F001         	movff	___aomod@dividend,?___aomod
  7821  003148  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  7822  00314C  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  7823  003150  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  7824  003154  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  7825  003158  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  7826  00315C  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  7827  003160  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  7828  003164  0012               	return		;funcret
  7829  003166                     __end_of___aomod:
  7830                           	callstack 0
  7831                           
  7832 ;; *************** function ___aodiv *****************
  7833 ;; Defined at:
  7834 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aodiv.c"
  7835 ;; Parameters:    Size  Location     Type
  7836 ;;  dividend        8    0[COMRAM] long long 
  7837 ;;  divisor         8    8[COMRAM] long long 
  7838 ;; Auto vars:     Size  Location     Type
  7839 ;;  quotient        8   18[COMRAM] long long 
  7840 ;;  sign            1   17[COMRAM] unsigned char 
  7841 ;;  counter         1   16[COMRAM] unsigned char 
  7842 ;; Return value:  Size  Location     Type
  7843 ;;                  8    0[COMRAM] long long 
  7844 ;; Registers used:
  7845 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7846 ;; Tracked objects:
  7847 ;;		On entry : 0/0
  7848 ;;		On exit  : 0/0
  7849 ;;		Unchanged: 0/0
  7850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7851 ;;      Params:        16       0       0       0       0       0       0
  7852 ;;      Locals:        10       0       0       0       0       0       0
  7853 ;;      Temps:          0       0       0       0       0       0       0
  7854 ;;      Totals:        26       0       0       0       0       0       0
  7855 ;;Total ram usage:       26 bytes
  7856 ;; Hardware stack levels used: 1
  7857 ;; This function calls:
  7858 ;;		Nothing
  7859 ;; This function is called by:
  7860 ;;		_dtoa
  7861 ;; This function uses a non-reentrant model
  7862 ;;
  7863                           
  7864                           	psect	text29
  7865  002E7A                     __ptext29:
  7866                           	callstack 0
  7867  002E7A                     ___aodiv:
  7868                           	callstack 25
  7869  002E7A  0E00               	movlw	0
  7870  002E7C  6E12               	movwf	___aodiv@sign^0,c
  7871  002E7E  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  7872  002E80  EF46  F017         	goto	u3320
  7873  002E84  EF44  F017         	goto	u3321
  7874  002E88                     u3321:
  7875  002E88  EF58  F017         	goto	l3248
  7876  002E8C                     u3320:
  7877  002E8C  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  7878  002E8E  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  7879  002E90  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  7880  002E92  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  7881  002E94  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  7882  002E96  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  7883  002E98  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  7884  002E9A  6C09               	negf	___aodiv@divisor^0,c
  7885  002E9C  0E00               	movlw	0
  7886  002E9E  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  7887  002EA0  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  7888  002EA2  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  7889  002EA4  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  7890  002EA6  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  7891  002EA8  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  7892  002EAA  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  7893  002EAC  0E01               	movlw	1
  7894  002EAE  6E12               	movwf	___aodiv@sign^0,c
  7895  002EB0                     l3248:
  7896  002EB0  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  7897  002EB2  EF5F  F017         	goto	u3330
  7898  002EB6  EF5D  F017         	goto	u3331
  7899  002EBA                     u3331:
  7900  002EBA  EF71  F017         	goto	l3254
  7901  002EBE                     u3330:
  7902  002EBE  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  7903  002EC0  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  7904  002EC2  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  7905  002EC4  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  7906  002EC6  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  7907  002EC8  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  7908  002ECA  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  7909  002ECC  6C01               	negf	___aodiv@dividend^0,c
  7910  002ECE  0E00               	movlw	0
  7911  002ED0  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  7912  002ED2  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  7913  002ED4  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  7914  002ED6  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  7915  002ED8  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  7916  002EDA  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  7917  002EDC  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  7918  002EDE  0E01               	movlw	1
  7919  002EE0  1A12               	xorwf	___aodiv@sign^0,f,c
  7920  002EE2                     l3254:
  7921  002EE2  EE20  F013         	lfsr	2,___aodiv@quotient
  7922  002EE6  0E07               	movlw	7
  7923  002EE8                     u3341:
  7924  002EE8  6ADE               	clrf	postinc2,c
  7925  002EEA  06E8               	decf	wreg,f,c
  7926  002EEC  E2FD               	bc	u3341
  7927  002EEE  5009               	movf	___aodiv@divisor^0,w,c
  7928  002EF0  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  7929  002EF2  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  7930  002EF4  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  7931  002EF6  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  7932  002EF8  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  7933  002EFA  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  7934  002EFC  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  7935  002EFE  B4D8               	btfsc	status,2,c
  7936  002F00  EF84  F017         	goto	u3351
  7937  002F04  EF86  F017         	goto	u3350
  7938  002F08                     u3351:
  7939  002F08  EFD8  F017         	goto	l3276
  7940  002F0C                     u3350:
  7941  002F0C  0E01               	movlw	1
  7942  002F0E  6E11               	movwf	___aodiv@counter^0,c
  7943  002F10  EF94  F017         	goto	l3262
  7944  002F14                     l3260:
  7945  002F14  90D8               	bcf	status,0,c
  7946  002F16  3609               	rlcf	___aodiv@divisor^0,f,c
  7947  002F18  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  7948  002F1A  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  7949  002F1C  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  7950  002F1E  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  7951  002F20  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  7952  002F22  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  7953  002F24  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  7954  002F26  2A11               	incf	___aodiv@counter^0,f,c
  7955  002F28                     l3262:
  7956  002F28  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  7957  002F2A  EF99  F017         	goto	u3361
  7958  002F2E  EF9B  F017         	goto	u3360
  7959  002F32                     u3361:
  7960  002F32  EF8A  F017         	goto	l3260
  7961  002F36                     u3360:
  7962  002F36                     l3264:
  7963  002F36  90D8               	bcf	status,0,c
  7964  002F38  3613               	rlcf	___aodiv@quotient^0,f,c
  7965  002F3A  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  7966  002F3C  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  7967  002F3E  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  7968  002F40  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  7969  002F42  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  7970  002F44  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  7971  002F46  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  7972  002F48  5009               	movf	___aodiv@divisor^0,w,c
  7973  002F4A  5C01               	subwf	___aodiv@dividend^0,w,c
  7974  002F4C  500A               	movf	(___aodiv@divisor+1)^0,w,c
  7975  002F4E  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  7976  002F50  500B               	movf	(___aodiv@divisor+2)^0,w,c
  7977  002F52  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  7978  002F54  500C               	movf	(___aodiv@divisor+3)^0,w,c
  7979  002F56  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  7980  002F58  500D               	movf	(___aodiv@divisor+4)^0,w,c
  7981  002F5A  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  7982  002F5C  500E               	movf	(___aodiv@divisor+5)^0,w,c
  7983  002F5E  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  7984  002F60  500F               	movf	(___aodiv@divisor+6)^0,w,c
  7985  002F62  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  7986  002F64  5010               	movf	(___aodiv@divisor+7)^0,w,c
  7987  002F66  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  7988  002F68  A0D8               	btfss	status,0,c
  7989  002F6A  EFB9  F017         	goto	u3371
  7990  002F6E  EFBB  F017         	goto	u3370
  7991  002F72                     u3371:
  7992  002F72  EFCC  F017         	goto	l3272
  7993  002F76                     u3370:
  7994  002F76  5009               	movf	___aodiv@divisor^0,w,c
  7995  002F78  5E01               	subwf	___aodiv@dividend^0,f,c
  7996  002F7A  500A               	movf	(___aodiv@divisor+1)^0,w,c
  7997  002F7C  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  7998  002F7E  500B               	movf	(___aodiv@divisor+2)^0,w,c
  7999  002F80  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  8000  002F82  500C               	movf	(___aodiv@divisor+3)^0,w,c
  8001  002F84  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  8002  002F86  500D               	movf	(___aodiv@divisor+4)^0,w,c
  8003  002F88  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  8004  002F8A  500E               	movf	(___aodiv@divisor+5)^0,w,c
  8005  002F8C  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  8006  002F8E  500F               	movf	(___aodiv@divisor+6)^0,w,c
  8007  002F90  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  8008  002F92  5010               	movf	(___aodiv@divisor+7)^0,w,c
  8009  002F94  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  8010  002F96  8013               	bsf	___aodiv@quotient^0,0,c
  8011  002F98                     l3272:
  8012  002F98  90D8               	bcf	status,0,c
  8013  002F9A  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  8014  002F9C  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  8015  002F9E  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  8016  002FA0  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  8017  002FA2  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  8018  002FA4  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  8019  002FA6  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  8020  002FA8  3209               	rrcf	___aodiv@divisor^0,f,c
  8021  002FAA  2E11               	decfsz	___aodiv@counter^0,f,c
  8022  002FAC  EF9B  F017         	goto	l3264
  8023  002FB0                     l3276:
  8024  002FB0  5012               	movf	___aodiv@sign^0,w,c
  8025  002FB2  B4D8               	btfsc	status,2,c
  8026  002FB4  EFDE  F017         	goto	u3381
  8027  002FB8  EFE0  F017         	goto	u3380
  8028  002FBC                     u3381:
  8029  002FBC  EFF0  F017         	goto	l3280
  8030  002FC0                     u3380:
  8031  002FC0  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  8032  002FC2  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  8033  002FC4  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  8034  002FC6  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  8035  002FC8  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  8036  002FCA  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  8037  002FCC  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  8038  002FCE  6C13               	negf	___aodiv@quotient^0,c
  8039  002FD0  0E00               	movlw	0
  8040  002FD2  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  8041  002FD4  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  8042  002FD6  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  8043  002FD8  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  8044  002FDA  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  8045  002FDC  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  8046  002FDE  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  8047  002FE0                     l3280:
  8048  002FE0  C013  F001         	movff	___aodiv@quotient,?___aodiv
  8049  002FE4  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  8050  002FE8  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  8051  002FEC  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  8052  002FF0  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  8053  002FF4  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  8054  002FF8  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  8055  002FFC  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  8056  003000  0012               	return		;funcret
  8057  003002                     __end_of___aodiv:
  8058                           	callstack 0
  8059                           
  8060 ;; *************** function _ctoa *****************
  8061 ;; Defined at:
  8062 ;;		line 259 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  8063 ;; Parameters:    Size  Location     Type
  8064 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  8065 ;;		 -> sprintf@f(11), 
  8066 ;;  c               1   11[COMRAM] unsigned char 
  8067 ;; Auto vars:     Size  Location     Type
  8068 ;;  w               2   15[COMRAM] int 
  8069 ;;  l               2   13[COMRAM] int 
  8070 ;; Return value:  Size  Location     Type
  8071 ;;                  2    9[COMRAM] int 
  8072 ;; Registers used:
  8073 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8074 ;; Tracked objects:
  8075 ;;		On entry : 0/0
  8076 ;;		On exit  : 0/0
  8077 ;;		Unchanged: 0/0
  8078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8079 ;;      Params:         3       0       0       0       0       0       0
  8080 ;;      Locals:         4       0       0       0       0       0       0
  8081 ;;      Temps:          1       0       0       0       0       0       0
  8082 ;;      Totals:         8       0       0       0       0       0       0
  8083 ;;Total ram usage:        8 bytes
  8084 ;; Hardware stack levels used: 1
  8085 ;; Hardware stack levels required when called: 2
  8086 ;; This function calls:
  8087 ;;		_fputc
  8088 ;; This function is called by:
  8089 ;;		_vfpfcnvrt
  8090 ;; This function uses a non-reentrant model
  8091 ;;
  8092                           
  8093                           	psect	text30
  8094  00386A                     __ptext30:
  8095                           	callstack 0
  8096  00386A                     _ctoa:
  8097                           	callstack 24
  8098  00386A                     
  8099                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt
      +                          .c: 260: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
  8100  00386A  5079               	movf	_width^0,w,c
  8101  00386C  107A               	iorwf	(_width+1)^0,w,c
  8102  00386E  A4D8               	btfss	status,2,c
  8103  003870  EF3C  F01C         	goto	u4451
  8104  003874  EF3E  F01C         	goto	u4450
  8105  003878                     u4451:
  8106  003878  EF44  F01C         	goto	l3886
  8107  00387C                     u4450:
  8108  00387C  C079  F010         	movff	_width,ctoa@w
  8109  003880  C07A  F011         	movff	_width+1,ctoa@w+1
  8110  003884  EF4A  F01C         	goto	l3888
  8111  003888                     l3886:
  8112  003888  0EFF               	movlw	255
  8113  00388A  2479               	addwf	_width^0,w,c
  8114  00388C  6E10               	movwf	ctoa@w^0,c
  8115  00388E  0EFF               	movlw	255
  8116  003890  207A               	addwfc	(_width+1)^0,w,c
  8117  003892  6E11               	movwf	(ctoa@w+1)^0,c
  8118  003894                     l3888:
  8119                           
  8120                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 267:     if (flag
      +                          s & (1 << 0)) {
  8121  003894  A07D               	btfss	_flags^0,0,c
  8122  003896  EF4F  F01C         	goto	u4461
  8123  00389A  EF51  F01C         	goto	u4460
  8124  00389E                     u4461:
  8125  00389E  EF5A  F01C         	goto	l3892
  8126  0038A2                     u4460:
  8127  0038A2                     
  8128                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 268:         fput
      +                          c(c, fp);
  8129  0038A2  C00C  F001         	movff	ctoa@c,fputc@c
  8130  0038A6  6A02               	clrf	(fputc@c+1)^0,c
  8131  0038A8  C00A  F003         	movff	ctoa@fp,fputc@fp
  8132  0038AC  C00B  F004         	movff	ctoa@fp+1,fputc@fp+1
  8133  0038B0  EC09  F01D         	call	_fputc	;wreg free
  8134  0038B4                     l3892:
  8135                           
  8136                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 271:     w = (w <
      +                           0) ? 0 : w;
  8137  0038B4  BE11               	btfsc	(ctoa@w+1)^0,7,c
  8138  0038B6  EF5F  F01C         	goto	u4471
  8139  0038BA  EF61  F01C         	goto	u4470
  8140  0038BE                     u4471:
  8141  0038BE  EF63  F01C         	goto	l3896
  8142  0038C2                     u4470:
  8143  0038C2  EF67  F01C         	goto	l886
  8144  0038C6                     l3896:
  8145  0038C6  0E00               	movlw	0
  8146  0038C8  6E11               	movwf	(ctoa@w+1)^0,c
  8147  0038CA  0E00               	movlw	0
  8148  0038CC  6E10               	movwf	ctoa@w^0,c
  8149  0038CE                     l886:
  8150                           
  8151                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 272:     l = 0;
  8152  0038CE  0E00               	movlw	0
  8153  0038D0  6E0F               	movwf	(ctoa@l+1)^0,c
  8154  0038D2  0E00               	movlw	0
  8155  0038D4  6E0E               	movwf	ctoa@l^0,c
  8156                           
  8157                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  8158  0038D6  EF79  F01C         	goto	l3902
  8159  0038DA                     l3898:
  8160                           
  8161                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 274:         fput
      +                          c(' ', fp);
  8162  0038DA  0E00               	movlw	0
  8163  0038DC  6E02               	movwf	(fputc@c+1)^0,c
  8164  0038DE  0E20               	movlw	32
  8165  0038E0  6E01               	movwf	fputc@c^0,c
  8166  0038E2  C00A  F003         	movff	ctoa@fp,fputc@fp
  8167  0038E6  C00B  F004         	movff	ctoa@fp+1,fputc@fp+1
  8168  0038EA  EC09  F01D         	call	_fputc	;wreg free
  8169  0038EE                     
  8170                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 275:         ++l;
  8171  0038EE  4A0E               	infsnz	ctoa@l^0,f,c
  8172  0038F0  2A0F               	incf	(ctoa@l+1)^0,f,c
  8173  0038F2                     l3902:
  8174                           
  8175                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  8176  0038F2  5010               	movf	ctoa@w^0,w,c
  8177  0038F4  5C0E               	subwf	ctoa@l^0,w,c
  8178  0038F6  500F               	movf	(ctoa@l+1)^0,w,c
  8179  0038F8  0A80               	xorlw	128
  8180  0038FA  6E0D               	movwf	??_ctoa^0,c
  8181  0038FC  5011               	movf	(ctoa@w+1)^0,w,c
  8182  0038FE  0A80               	xorlw	128
  8183  003900  580D               	subwfb	??_ctoa^0,w,c
  8184  003902  A0D8               	btfss	status,0,c
  8185  003904  EF86  F01C         	goto	u4481
  8186  003908  EF88  F01C         	goto	u4480
  8187  00390C                     u4481:
  8188  00390C  EF6D  F01C         	goto	l3898
  8189  003910                     u4480:
  8190  003910                     
  8191                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 278:     if (!(fl
      +                          ags & (1 << 0))) {
  8192  003910  B07D               	btfsc	_flags^0,0,c
  8193  003912  EF8D  F01C         	goto	u4491
  8194  003916  EF8F  F01C         	goto	u4490
  8195  00391A                     u4491:
  8196  00391A  EF98  F01C         	goto	l3906
  8197  00391E                     u4490:
  8198  00391E                     
  8199                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 279:         fput
      +                          c(c, fp);
  8200  00391E  C00C  F001         	movff	ctoa@c,fputc@c
  8201  003922  6A02               	clrf	(fputc@c+1)^0,c
  8202  003924  C00A  F003         	movff	ctoa@fp,fputc@fp
  8203  003928  C00B  F004         	movff	ctoa@fp+1,fputc@fp+1
  8204  00392C  EC09  F01D         	call	_fputc	;wreg free
  8205  003930                     l3906:
  8206                           
  8207                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 282:     return l
      +                          +1;
  8208  003930  0E01               	movlw	1
  8209  003932  240E               	addwf	ctoa@l^0,w,c
  8210  003934  6E0A               	movwf	?_ctoa^0,c
  8211  003936  0E00               	movlw	0
  8212  003938  200F               	addwfc	(ctoa@l+1)^0,w,c
  8213  00393A  6E0B               	movwf	(?_ctoa+1)^0,c
  8214  00393C  0012               	return		;funcret
  8215  00393E                     __end_of_ctoa:
  8216                           	callstack 0
  8217                           
  8218 ;; *************** function _fputc *****************
  8219 ;; Defined at:
  8220 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputc.c"
  8221 ;; Parameters:    Size  Location     Type
  8222 ;;  c               2    0[COMRAM] int 
  8223 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  8224 ;;		 -> sprintf@f(11), 
  8225 ;; Auto vars:     Size  Location     Type
  8226 ;;		None
  8227 ;; Return value:  Size  Location     Type
  8228 ;;                  2    0[COMRAM] int 
  8229 ;; Registers used:
  8230 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8231 ;; Tracked objects:
  8232 ;;		On entry : 0/0
  8233 ;;		On exit  : 0/0
  8234 ;;		Unchanged: 0/0
  8235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8236 ;;      Params:         4       0       0       0       0       0       0
  8237 ;;      Locals:         0       0       0       0       0       0       0
  8238 ;;      Temps:          5       0       0       0       0       0       0
  8239 ;;      Totals:         9       0       0       0       0       0       0
  8240 ;;Total ram usage:        9 bytes
  8241 ;; Hardware stack levels used: 1
  8242 ;; Hardware stack levels required when called: 1
  8243 ;; This function calls:
  8244 ;;		_putch
  8245 ;; This function is called by:
  8246 ;;		_pad
  8247 ;;		_ctoa
  8248 ;;		_vfpfcnvrt
  8249 ;;		_fputs
  8250 ;; This function uses a non-reentrant model
  8251 ;;
  8252                           
  8253                           	psect	text31
  8254  003A12                     __ptext31:
  8255                           	callstack 0
  8256  003A12                     _fputc:
  8257                           	callstack 25
  8258  003A12  5003               	movf	fputc@fp^0,w,c
  8259  003A14  1004               	iorwf	(fputc@fp+1)^0,w,c
  8260  003A16  B4D8               	btfsc	status,2,c
  8261  003A18  EF10  F01D         	goto	u2851
  8262  003A1C  EF12  F01D         	goto	u2850
  8263  003A20                     u2851:
  8264  003A20  EF1B  F01D         	goto	l3000
  8265  003A24                     u2850:
  8266  003A24  5003               	movf	fputc@fp^0,w,c
  8267  003A26  1004               	iorwf	(fputc@fp+1)^0,w,c
  8268  003A28  A4D8               	btfss	status,2,c
  8269  003A2A  EF19  F01D         	goto	u2861
  8270  003A2E  EF1B  F01D         	goto	u2860
  8271  003A32                     u2861:
  8272  003A32  EF20  F01D         	goto	l3002
  8273  003A36                     u2860:
  8274  003A36                     l3000:
  8275  003A36  5001               	movf	fputc@c^0,w,c
  8276  003A38  EC0B  F022         	call	_putch
  8277  003A3C  EF6D  F01D         	goto	l1143
  8278  003A40                     l3002:
  8279  003A40  EE20 F009          	lfsr	2,9
  8280  003A44  5003               	movf	fputc@fp^0,w,c
  8281  003A46  26D9               	addwf	fsr2l,f,c
  8282  003A48  5004               	movf	(fputc@fp+1)^0,w,c
  8283  003A4A  22DA               	addwfc	fsr2h,f,c
  8284  003A4C  50DE               	movf	postinc2,w,c
  8285  003A4E  10DE               	iorwf	postinc2,w,c
  8286  003A50  B4D8               	btfsc	status,2,c
  8287  003A52  EF2D  F01D         	goto	u2871
  8288  003A56  EF2F  F01D         	goto	u2870
  8289  003A5A                     u2871:
  8290  003A5A  EF4A  F01D         	goto	l3006
  8291  003A5E                     u2870:
  8292  003A5E  EE20 F009          	lfsr	2,9
  8293  003A62  5003               	movf	fputc@fp^0,w,c
  8294  003A64  26D9               	addwf	fsr2l,f,c
  8295  003A66  5004               	movf	(fputc@fp+1)^0,w,c
  8296  003A68  22DA               	addwfc	fsr2h,f,c
  8297  003A6A  EE10 F003          	lfsr	1,3
  8298  003A6E  5003               	movf	fputc@fp^0,w,c
  8299  003A70  26E1               	addwf	fsr1l,f,c
  8300  003A72  5004               	movf	(fputc@fp+1)^0,w,c
  8301  003A74  22E2               	addwfc	fsr1h,f,c
  8302  003A76  50DE               	movf	postinc2,w,c
  8303  003A78  5CE6               	subwf	postinc1,w,c
  8304  003A7A  50E6               	movf	postinc1,w,c
  8305  003A7C  0A80               	xorlw	128
  8306  003A7E  6E09               	movwf	(??_fputc+4)^0,c
  8307  003A80  50DE               	movf	postinc2,w,c
  8308  003A82  0A80               	xorlw	128
  8309  003A84  5809               	subwfb	(??_fputc+4)^0,w,c
  8310  003A86  B0D8               	btfsc	status,0,c
  8311  003A88  EF48  F01D         	goto	u2881
  8312  003A8C  EF4A  F01D         	goto	u2880
  8313  003A90                     u2881:
  8314  003A90  EF6D  F01D         	goto	l1143
  8315  003A94                     u2880:
  8316  003A94                     l3006:
  8317  003A94  EE20 F003          	lfsr	2,3
  8318  003A98  5003               	movf	fputc@fp^0,w,c
  8319  003A9A  26D9               	addwf	fsr2l,f,c
  8320  003A9C  5004               	movf	(fputc@fp+1)^0,w,c
  8321  003A9E  22DA               	addwfc	fsr2h,f,c
  8322  003AA0  CFDE F005          	movff	postinc2,??_fputc
  8323  003AA4  CFDD F006          	movff	postdec2,??_fputc+1
  8324  003AA8  C003  FFD9         	movff	fputc@fp,fsr2l
  8325  003AAC  C004  FFDA         	movff	fputc@fp+1,fsr2h
  8326  003AB0  CFDE F007          	movff	postinc2,??_fputc+2
  8327  003AB4  CFDD F008          	movff	postdec2,??_fputc+3
  8328  003AB8  5005               	movf	??_fputc^0,w,c
  8329  003ABA  2407               	addwf	(??_fputc+2)^0,w,c
  8330  003ABC  6ED9               	movwf	fsr2l,c
  8331  003ABE  5006               	movf	(??_fputc+1)^0,w,c
  8332  003AC0  2008               	addwfc	(??_fputc+3)^0,w,c
  8333  003AC2  6EDA               	movwf	fsr2h,c
  8334  003AC4  C001  FFDF         	movff	fputc@c,indf2
  8335  003AC8  EE20 F003          	lfsr	2,3
  8336  003ACC  5003               	movf	fputc@fp^0,w,c
  8337  003ACE  26D9               	addwf	fsr2l,f,c
  8338  003AD0  5004               	movf	(fputc@fp+1)^0,w,c
  8339  003AD2  22DA               	addwfc	fsr2h,f,c
  8340  003AD4  2ADE               	incf	postinc2,f,c
  8341  003AD6  0E00               	movlw	0
  8342  003AD8  22DD               	addwfc	postdec2,f,c
  8343  003ADA                     l1143:
  8344  003ADA  0012               	return		;funcret
  8345  003ADC                     __end_of_fputc:
  8346                           	callstack 0
  8347                           
  8348 ;; *************** function _putch *****************
  8349 ;; Defined at:
  8350 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\putch.c"
  8351 ;; Parameters:    Size  Location     Type
  8352 ;;  c               1    wreg     unsigned char 
  8353 ;; Auto vars:     Size  Location     Type
  8354 ;;  c               1    0[COMRAM] unsigned char 
  8355 ;; Return value:  Size  Location     Type
  8356 ;;                  1    wreg      void 
  8357 ;; Registers used:
  8358 ;;		wreg
  8359 ;; Tracked objects:
  8360 ;;		On entry : 0/0
  8361 ;;		On exit  : 0/0
  8362 ;;		Unchanged: 0/0
  8363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8364 ;;      Params:         0       0       0       0       0       0       0
  8365 ;;      Locals:         0       0       0       0       0       0       0
  8366 ;;      Temps:          0       0       0       0       0       0       0
  8367 ;;      Totals:         0       0       0       0       0       0       0
  8368 ;;Total ram usage:        0 bytes
  8369 ;; Hardware stack levels used: 1
  8370 ;; This function calls:
  8371 ;;		Nothing
  8372 ;; This function is called by:
  8373 ;;		_fputc
  8374 ;; This function uses a non-reentrant model
  8375 ;;
  8376                           
  8377                           	psect	text32
  8378  004416                     __ptext32:
  8379                           	callstack 0
  8380  004416                     _putch:
  8381                           	callstack 25
  8382  004416  0012               	return		;funcret
  8383  004418                     __end_of_putch:
  8384                           	callstack 0
  8385                           
  8386 ;; *************** function _atoi *****************
  8387 ;; Defined at:
  8388 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\atoi.c"
  8389 ;; Parameters:    Size  Location     Type
  8390 ;;  s               2    7[COMRAM] PTR const unsigned char 
  8391 ;;		 -> STR_7(6), STR_6(5), STR_5(5), STR_2(14), 
  8392 ;;		 -> STR_1(15), 
  8393 ;; Auto vars:     Size  Location     Type
  8394 ;;  n               2   15[COMRAM] int 
  8395 ;;  neg             2   13[COMRAM] int 
  8396 ;; Return value:  Size  Location     Type
  8397 ;;                  2    7[COMRAM] int 
  8398 ;; Registers used:
  8399 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8400 ;; Tracked objects:
  8401 ;;		On entry : 0/0
  8402 ;;		On exit  : 0/0
  8403 ;;		Unchanged: 0/0
  8404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8405 ;;      Params:         2       0       0       0       0       0       0
  8406 ;;      Locals:         4       0       0       0       0       0       0
  8407 ;;      Temps:          4       0       0       0       0       0       0
  8408 ;;      Totals:        10       0       0       0       0       0       0
  8409 ;;Total ram usage:       10 bytes
  8410 ;; Hardware stack levels used: 1
  8411 ;; Hardware stack levels required when called: 1
  8412 ;; This function calls:
  8413 ;;		___wmul
  8414 ;;		_isdigit
  8415 ;;		_isspace
  8416 ;; This function is called by:
  8417 ;;		_vfpfcnvrt
  8418 ;; This function uses a non-reentrant model
  8419 ;;
  8420                           
  8421                           	psect	text33
  8422  003166                     __ptext33:
  8423                           	callstack 0
  8424  003166                     _atoi:
  8425                           	callstack 25
  8426  003166  0E00               	movlw	0
  8427  003168  6E11               	movwf	(atoi@n+1)^0,c
  8428  00316A  0E00               	movlw	0
  8429  00316C  6E10               	movwf	atoi@n^0,c
  8430  00316E  0E00               	movlw	0
  8431  003170  6E0F               	movwf	(atoi@neg+1)^0,c
  8432  003172  0E00               	movlw	0
  8433  003174  6E0E               	movwf	atoi@neg^0,c
  8434  003176  EFBF  F018         	goto	l4284
  8435  00317A                     l4280:
  8436  00317A  4A08               	infsnz	atoi@s^0,f,c
  8437  00317C  2A09               	incf	(atoi@s+1)^0,f,c
  8438  00317E                     l4284:
  8439  00317E  C008  FFF6         	movff	atoi@s,tblptrl
  8440  003182  C009  FFF7         	movff	atoi@s+1,tblptrh
  8441  003186                     	if	0	;tblptru may be non-zero
  8442  003186                     	endif
  8443  003186                     	if	0	;tblptru may be non-zero
  8444  003186                     	endif
  8445  003186  0008               	tblrd		*
  8446  003188  50F5               	movf	tablat,w,c
  8447  00318A  0A20               	xorlw	32
  8448  00318C  B4D8               	btfsc	status,2,c
  8449  00318E  EFCB  F018         	goto	u5131
  8450  003192  EFCD  F018         	goto	u5130
  8451  003196                     u5131:
  8452  003196  EFBD  F018         	goto	l4280
  8453  00319A                     u5130:
  8454  00319A  0EF7               	movlw	247
  8455  00319C  6E0A               	movwf	??_atoi^0,c
  8456  00319E  0EFF               	movlw	255
  8457  0031A0  6E0B               	movwf	(??_atoi+1)^0,c
  8458  0031A2  C008  FFF6         	movff	atoi@s,tblptrl
  8459  0031A6  C009  FFF7         	movff	atoi@s+1,tblptrh
  8460  0031AA                     	if	0	;tblptru may be non-zero
  8461  0031AA                     	endif
  8462  0031AA                     	if	0	;tblptru may be non-zero
  8463  0031AA                     	endif
  8464  0031AA  0008               	tblrd		*
  8465  0031AC  50F5               	movf	tablat,w,c
  8466  0031AE  6E0C               	movwf	(??_atoi+2)^0,c
  8467  0031B0  6A0D               	clrf	(??_atoi+3)^0,c
  8468  0031B2  500A               	movf	??_atoi^0,w,c
  8469  0031B4  260C               	addwf	(??_atoi+2)^0,f,c
  8470  0031B6  500B               	movf	(??_atoi+1)^0,w,c
  8471  0031B8  220D               	addwfc	(??_atoi+3)^0,f,c
  8472  0031BA  500D               	movf	(??_atoi+3)^0,w,c
  8473  0031BC  E109               	bnz	u5140
  8474  0031BE  0E05               	movlw	5
  8475  0031C0  5C0C               	subwf	(??_atoi+2)^0,w,c
  8476  0031C2  A0D8               	btfss	status,0,c
  8477  0031C4  EFE6  F018         	goto	u5141
  8478  0031C8  EFE8  F018         	goto	u5140
  8479  0031CC                     u5141:
  8480  0031CC  EFBD  F018         	goto	l4280
  8481  0031D0                     u5140:
  8482  0031D0  EFF2  F018         	goto	l4292
  8483  0031D4                     l4288:
  8484  0031D4  0E00               	movlw	0
  8485  0031D6  6E0F               	movwf	(atoi@neg+1)^0,c
  8486  0031D8  0E01               	movlw	1
  8487  0031DA  6E0E               	movwf	atoi@neg^0,c
  8488  0031DC                     l4290:
  8489  0031DC  4A08               	infsnz	atoi@s^0,f,c
  8490  0031DE  2A09               	incf	(atoi@s+1)^0,f,c
  8491  0031E0  EF27  F019         	goto	l4300
  8492  0031E4                     l4292:
  8493  0031E4  C008  FFF6         	movff	atoi@s,tblptrl
  8494  0031E8  C009  FFF7         	movff	atoi@s+1,tblptrh
  8495  0031EC                     	if	0	;tblptru may be non-zero
  8496  0031EC                     	endif
  8497  0031EC                     	if	0	;tblptru may be non-zero
  8498  0031EC                     	endif
  8499  0031EC  0008               	tblrd		*
  8500  0031EE  50F5               	movf	tablat,w,c
  8501  0031F0  6E0A               	movwf	??_atoi^0,c
  8502  0031F2  6A0B               	clrf	(??_atoi+1)^0,c
  8503                           
  8504                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8505                           ; Switch size 1, requested type "simple"
  8506                           ; Number of cases is 1, Range of values is 0 to 0
  8507                           ; switch strategies available:
  8508                           ; Name         Instructions Cycles
  8509                           ; simple_byte            4     3 (average)
  8510                           ;	Chosen strategy is simple_byte
  8511  0031F4  500B               	movf	(??_atoi+1)^0,w,c
  8512  0031F6  0A00               	xorlw	0	; case 0
  8513  0031F8  B4D8               	btfsc	status,2,c
  8514  0031FA  EF01  F019         	goto	l4764
  8515  0031FE  EF27  F019         	goto	l4300
  8516  003202                     l4764:
  8517                           
  8518                           ; Switch size 1, requested type "simple"
  8519                           ; Number of cases is 2, Range of values is 43 to 45
  8520                           ; switch strategies available:
  8521                           ; Name         Instructions Cycles
  8522                           ; simple_byte            7     4 (average)
  8523                           ;	Chosen strategy is simple_byte
  8524  003202  500A               	movf	??_atoi^0,w,c
  8525  003204  0A2B               	xorlw	43	; case 43
  8526  003206  B4D8               	btfsc	status,2,c
  8527  003208  EFEE  F018         	goto	l4290
  8528  00320C  0A06               	xorlw	6	; case 45
  8529  00320E  B4D8               	btfsc	status,2,c
  8530  003210  EFEA  F018         	goto	l4288
  8531  003214  EF27  F019         	goto	l4300
  8532  003218                     l4294:
  8533  003218  C010  F001         	movff	atoi@n,___wmul@multiplier
  8534  00321C  C011  F002         	movff	atoi@n+1,___wmul@multiplier+1
  8535  003220  0E00               	movlw	0
  8536  003222  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8537  003224  0E0A               	movlw	10
  8538  003226  6E03               	movwf	___wmul@multiplicand^0,c
  8539  003228  ECC6  F021         	call	___wmul	;wreg free
  8540  00322C  C008  FFF6         	movff	atoi@s,tblptrl
  8541  003230  C009  FFF7         	movff	atoi@s+1,tblptrh
  8542  003234                     	if	0	;tblptru may be non-zero
  8543  003234                     	endif
  8544  003234                     	if	0	;tblptru may be non-zero
  8545  003234                     	endif
  8546  003234  0008               	tblrd		*
  8547  003236  50F5               	movf	tablat,w,c
  8548  003238  5E01               	subwf	?___wmul^0,f,c
  8549  00323A  0E00               	movlw	0
  8550  00323C  5A02               	subwfb	(?___wmul+1)^0,f,c
  8551  00323E  0E30               	movlw	48
  8552  003240  2401               	addwf	?___wmul^0,w,c
  8553  003242  6E10               	movwf	atoi@n^0,c
  8554  003244  0E00               	movlw	0
  8555  003246  2002               	addwfc	(?___wmul+1)^0,w,c
  8556  003248  6E11               	movwf	(atoi@n+1)^0,c
  8557  00324A  EFEE  F018         	goto	l4290
  8558  00324E                     l4300:
  8559  00324E  0ED0               	movlw	208
  8560  003250  6E0A               	movwf	??_atoi^0,c
  8561  003252  0EFF               	movlw	255
  8562  003254  6E0B               	movwf	(??_atoi+1)^0,c
  8563  003256  C008  FFF6         	movff	atoi@s,tblptrl
  8564  00325A  C009  FFF7         	movff	atoi@s+1,tblptrh
  8565  00325E                     	if	0	;tblptru may be non-zero
  8566  00325E                     	endif
  8567  00325E                     	if	0	;tblptru may be non-zero
  8568  00325E                     	endif
  8569  00325E  0008               	tblrd		*
  8570  003260  50F5               	movf	tablat,w,c
  8571  003262  6E0C               	movwf	(??_atoi+2)^0,c
  8572  003264  6A0D               	clrf	(??_atoi+3)^0,c
  8573  003266  500A               	movf	??_atoi^0,w,c
  8574  003268  260C               	addwf	(??_atoi+2)^0,f,c
  8575  00326A  500B               	movf	(??_atoi+1)^0,w,c
  8576  00326C  220D               	addwfc	(??_atoi+3)^0,f,c
  8577  00326E  500D               	movf	(??_atoi+3)^0,w,c
  8578  003270  E109               	bnz	u5150
  8579  003272  0E0A               	movlw	10
  8580  003274  5C0C               	subwf	(??_atoi+2)^0,w,c
  8581  003276  A0D8               	btfss	status,0,c
  8582  003278  EF40  F019         	goto	u5151
  8583  00327C  EF42  F019         	goto	u5150
  8584  003280                     u5151:
  8585  003280  EF0C  F019         	goto	l4294
  8586  003284                     u5150:
  8587  003284  500E               	movf	atoi@neg^0,w,c
  8588  003286  100F               	iorwf	(atoi@neg+1)^0,w,c
  8589  003288  A4D8               	btfss	status,2,c
  8590  00328A  EF49  F019         	goto	u5161
  8591  00328E  EF4B  F019         	goto	u5160
  8592  003292                     u5161:
  8593  003292  EF59  F019         	goto	l1095
  8594  003296                     u5160:
  8595  003296  C010  F00A         	movff	atoi@n,??_atoi
  8596  00329A  C011  F00B         	movff	atoi@n+1,??_atoi+1
  8597  00329E  1E0A               	comf	??_atoi^0,f,c
  8598  0032A0  1E0B               	comf	(??_atoi+1)^0,f,c
  8599  0032A2  4A0A               	infsnz	??_atoi^0,f,c
  8600  0032A4  2A0B               	incf	(??_atoi+1)^0,f,c
  8601  0032A6  C00A  F008         	movff	??_atoi,?_atoi
  8602  0032AA  C00B  F009         	movff	??_atoi+1,?_atoi+1
  8603  0032AE  EF5D  F019         	goto	l1098
  8604  0032B2                     l1095:
  8605  0032B2  C010  F008         	movff	atoi@n,?_atoi
  8606  0032B6  C011  F009         	movff	atoi@n+1,?_atoi+1
  8607  0032BA                     l1098:
  8608  0032BA  0012               	return		;funcret
  8609  0032BC                     __end_of_atoi:
  8610                           	callstack 0
  8611                           
  8612 ;; *************** function _isspace *****************
  8613 ;; Defined at:
  8614 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isspace.c"
  8615 ;; Parameters:    Size  Location     Type
  8616 ;;  c               2    0[COMRAM] int 
  8617 ;; Auto vars:     Size  Location     Type
  8618 ;;		None
  8619 ;; Return value:  Size  Location     Type
  8620 ;;                  2    0[COMRAM] int 
  8621 ;; Registers used:
  8622 ;;		wreg, status,2, status,0
  8623 ;; Tracked objects:
  8624 ;;		On entry : 0/0
  8625 ;;		On exit  : 0/0
  8626 ;;		Unchanged: 0/0
  8627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8628 ;;      Params:         2       0       0       0       0       0       0
  8629 ;;      Locals:         1       0       0       0       0       0       0
  8630 ;;      Temps:          4       0       0       0       0       0       0
  8631 ;;      Totals:         7       0       0       0       0       0       0
  8632 ;;Total ram usage:        7 bytes
  8633 ;; Hardware stack levels used: 1
  8634 ;; This function calls:
  8635 ;;		Nothing
  8636 ;; This function is called by:
  8637 ;;		_atoi
  8638 ;; This function uses a non-reentrant model
  8639 ;;
  8640                           
  8641                           	psect	text34
  8642  0040AC                     __ptext34:
  8643                           	callstack 0
  8644  0040AC                     _isspace:
  8645                           	callstack 25
  8646  0040AC  0E01               	movlw	1
  8647  0040AE  6E07               	movwf	_isspace$1255^0,c
  8648  0040B0  0E20               	movlw	32
  8649  0040B2  1801               	xorwf	isspace@c^0,w,c
  8650  0040B4  1002               	iorwf	(isspace@c+1)^0,w,c
  8651  0040B6  B4D8               	btfsc	status,2,c
  8652  0040B8  EF60  F020         	goto	u4421
  8653  0040BC  EF62  F020         	goto	u4420
  8654  0040C0                     u4421:
  8655  0040C0  EF7B  F020         	goto	l3866
  8656  0040C4                     u4420:
  8657  0040C4  0EF7               	movlw	247
  8658  0040C6  6E03               	movwf	??_isspace^0,c
  8659  0040C8  0EFF               	movlw	255
  8660  0040CA  6E04               	movwf	(??_isspace+1)^0,c
  8661  0040CC  C001  F005         	movff	isspace@c,??_isspace+2
  8662  0040D0  C002  F006         	movff	isspace@c+1,??_isspace+3
  8663  0040D4  5003               	movf	??_isspace^0,w,c
  8664  0040D6  2605               	addwf	(??_isspace+2)^0,f,c
  8665  0040D8  5004               	movf	(??_isspace+1)^0,w,c
  8666  0040DA  2206               	addwfc	(??_isspace+3)^0,f,c
  8667  0040DC  5006               	movf	(??_isspace+3)^0,w,c
  8668  0040DE  E109               	bnz	u4430
  8669  0040E0  0E05               	movlw	5
  8670  0040E2  5C05               	subwf	(??_isspace+2)^0,w,c
  8671  0040E4  A0D8               	btfss	status,0,c
  8672  0040E6  EF77  F020         	goto	u4431
  8673  0040EA  EF79  F020         	goto	u4430
  8674  0040EE                     u4431:
  8675  0040EE  EF7B  F020         	goto	l3866
  8676  0040F2                     u4430:
  8677  0040F2  0E00               	movlw	0
  8678  0040F4  6E07               	movwf	_isspace$1255^0,c
  8679  0040F6                     l3866:
  8680  0040F6  C007  F001         	movff	_isspace$1255,?_isspace
  8681  0040FA  6A02               	clrf	(?_isspace+1)^0,c
  8682  0040FC  0012               	return		;funcret
  8683  0040FE                     __end_of_isspace:
  8684                           	callstack 0
  8685                           
  8686 ;; *************** function _isdigit *****************
  8687 ;; Defined at:
  8688 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isdigit.c"
  8689 ;; Parameters:    Size  Location     Type
  8690 ;;  c               2    0[COMRAM] int 
  8691 ;; Auto vars:     Size  Location     Type
  8692 ;;		None
  8693 ;; Return value:  Size  Location     Type
  8694 ;;                  2    0[COMRAM] int 
  8695 ;; Registers used:
  8696 ;;		wreg, status,2, status,0
  8697 ;; Tracked objects:
  8698 ;;		On entry : 0/0
  8699 ;;		On exit  : 0/0
  8700 ;;		Unchanged: 0/0
  8701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8702 ;;      Params:         2       0       0       0       0       0       0
  8703 ;;      Locals:         0       0       0       0       0       0       0
  8704 ;;      Temps:          4       0       0       0       0       0       0
  8705 ;;      Totals:         6       0       0       0       0       0       0
  8706 ;;Total ram usage:        6 bytes
  8707 ;; Hardware stack levels used: 1
  8708 ;; This function calls:
  8709 ;;		Nothing
  8710 ;; This function is called by:
  8711 ;;		_vfpfcnvrt
  8712 ;;		_atoi
  8713 ;; This function uses a non-reentrant model
  8714 ;;
  8715                           
  8716                           	psect	text35
  8717  0042BC                     __ptext35:
  8718                           	callstack 0
  8719  0042BC                     _isdigit:
  8720                           	callstack 26
  8721  0042BC  0ED0               	movlw	208
  8722  0042BE  6E03               	movwf	??_isdigit^0,c
  8723  0042C0  0EFF               	movlw	255
  8724  0042C2  6E04               	movwf	(??_isdigit+1)^0,c
  8725  0042C4  C001  F005         	movff	isdigit@c,??_isdigit+2
  8726  0042C8  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  8727  0042CC  5003               	movf	??_isdigit^0,w,c
  8728  0042CE  2605               	addwf	(??_isdigit+2)^0,f,c
  8729  0042D0  5004               	movf	(??_isdigit+1)^0,w,c
  8730  0042D2  2206               	addwfc	(??_isdigit+3)^0,f,c
  8731  0042D4  5006               	movf	(??_isdigit+3)^0,w,c
  8732  0042D6  E10A               	bnz	u4400
  8733  0042D8  0E0A               	movlw	10
  8734  0042DA  5C05               	subwf	(??_isdigit+2)^0,w,c
  8735  0042DC  A0D8               	btfss	status,0,c
  8736  0042DE  EF73  F021         	goto	u4401
  8737  0042E2  EF76  F021         	goto	u4400
  8738  0042E6                     u4401:
  8739  0042E6  0E01               	movlw	1
  8740  0042E8  EF77  F021         	goto	u4410
  8741  0042EC                     u4400:
  8742  0042EC  0E00               	movlw	0
  8743  0042EE                     u4410:
  8744  0042EE  6E01               	movwf	?_isdigit^0,c
  8745  0042F0  6A02               	clrf	(?_isdigit+1)^0,c
  8746  0042F2  0012               	return		;funcret
  8747  0042F4                     __end_of_isdigit:
  8748                           	callstack 0
  8749                           
  8750 ;; *************** function ___wmul *****************
  8751 ;; Defined at:
  8752 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
  8753 ;; Parameters:    Size  Location     Type
  8754 ;;  multiplier      2    0[COMRAM] unsigned int 
  8755 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8756 ;; Auto vars:     Size  Location     Type
  8757 ;;  product         2    4[COMRAM] unsigned int 
  8758 ;; Return value:  Size  Location     Type
  8759 ;;                  2    0[COMRAM] unsigned int 
  8760 ;; Registers used:
  8761 ;;		wreg, status,2, status,0, prodl, prodh
  8762 ;; Tracked objects:
  8763 ;;		On entry : 0/0
  8764 ;;		On exit  : 0/0
  8765 ;;		Unchanged: 0/0
  8766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8767 ;;      Params:         4       0       0       0       0       0       0
  8768 ;;      Locals:         2       0       0       0       0       0       0
  8769 ;;      Temps:          0       0       0       0       0       0       0
  8770 ;;      Totals:         6       0       0       0       0       0       0
  8771 ;;Total ram usage:        6 bytes
  8772 ;; Hardware stack levels used: 1
  8773 ;; This function calls:
  8774 ;;		Nothing
  8775 ;; This function is called by:
  8776 ;;		_atoi
  8777 ;; This function uses a non-reentrant model
  8778 ;;
  8779                           
  8780                           	psect	text36
  8781  00438C                     __ptext36:
  8782                           	callstack 0
  8783  00438C                     ___wmul:
  8784                           	callstack 25
  8785  00438C  5001               	movf	___wmul@multiplier^0,w,c
  8786  00438E  0203               	mulwf	___wmul@multiplicand^0,c
  8787  004390  CFF3 F005          	movff	prodl,___wmul@product
  8788  004394  CFF4 F006          	movff	prodh,___wmul@product+1
  8789  004398  5001               	movf	___wmul@multiplier^0,w,c
  8790  00439A  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  8791  00439C  50F3               	movf	243,w,c
  8792  00439E  2606               	addwf	(___wmul@product+1)^0,f,c
  8793  0043A0  5002               	movf	(___wmul@multiplier+1)^0,w,c
  8794  0043A2  0203               	mulwf	___wmul@multiplicand^0,c
  8795  0043A4  50F3               	movf	243,w,c
  8796  0043A6  2606               	addwf	(___wmul@product+1)^0,f,c
  8797  0043A8  C005  F001         	movff	___wmul@product,?___wmul
  8798  0043AC  C006  F002         	movff	___wmul@product+1,?___wmul+1
  8799  0043B0  0012               	return		;funcret
  8800  0043B2                     __end_of___wmul:
  8801                           	callstack 0
  8802                           
  8803 ;; *************** function _lcd_write *****************
  8804 ;; Defined at:
  8805 ;;		line 75 in file "LCD4b.c"
  8806 ;; Parameters:    Size  Location     Type
  8807 ;;  lin             1    wreg     unsigned char 
  8808 ;;  col             1    6[COMRAM] unsigned char 
  8809 ;;  str             2    7[COMRAM] PTR unsigned char 
  8810 ;;		 -> STR_14(16), STR_13(16), STR_12(11), STR_11(5), 
  8811 ;;		 -> STR_10(2), STR_9(8), STR_8(7), BufferRES(8), 
  8812 ;;		 -> BufferFAN2(8), BufferFAN1(8), STR_4(9), STR_3(10), 
  8813 ;;		 -> BufferLCD_Percent(16), BufferLCD_Temp(16), 
  8814 ;; Auto vars:     Size  Location     Type
  8815 ;;  lin             1   10[COMRAM] unsigned char 
  8816 ;;  end             1    9[COMRAM] unsigned char 
  8817 ;; Return value:  Size  Location     Type
  8818 ;;                  1    wreg      void 
  8819 ;; Registers used:
  8820 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8821 ;; Tracked objects:
  8822 ;;		On entry : 0/0
  8823 ;;		On exit  : 0/0
  8824 ;;		Unchanged: 0/0
  8825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8826 ;;      Params:         3       0       0       0       0       0       0
  8827 ;;      Locals:         2       0       0       0       0       0       0
  8828 ;;      Temps:          0       0       0       0       0       0       0
  8829 ;;      Totals:         5       0       0       0       0       0       0
  8830 ;;Total ram usage:        5 bytes
  8831 ;; Hardware stack levels used: 1
  8832 ;; Hardware stack levels required when called: 3
  8833 ;; This function calls:
  8834 ;;		_lcd_send_byte
  8835 ;; This function is called by:
  8836 ;;		_lcd_SENSOR
  8837 ;;		_lcd_PERIPHERAL
  8838 ;;		_lcd_clear
  8839 ;; This function uses a non-reentrant model
  8840 ;;
  8841                           
  8842                           	psect	text37
  8843  003E62                     __ptext37:
  8844                           	callstack 0
  8845  003E62                     _lcd_write:
  8846                           	callstack 26
  8847                           
  8848                           ;incstack = 0
  8849                           ;lcd_write@lin stored from wreg
  8850  003E62  6E0B               	movwf	lcd_write@lin^0,c
  8851  003E64                     
  8852                           ;LCD4b.c: 75: void lcd_write(char lin, char col, char *str);LCD4b.c: 76: {;LCD4b.c: 77: 
      +                              char end;;LCD4b.c: 79:     if(lin == 1)
  8853  003E64  040B               	decf	lcd_write@lin^0,w,c
  8854  003E66  A4D8               	btfss	status,2,c
  8855  003E68  EF38  F01F         	goto	u5421
  8856  003E6C  EF3A  F01F         	goto	u5420
  8857  003E70                     u5421:
  8858  003E70  EF3F  F01F         	goto	l4540
  8859  003E74                     u5420:
  8860  003E74                     
  8861                           ;LCD4b.c: 80:     {;LCD4b.c: 81:         end = col + 0X80 - 1;
  8862  003E74  5007               	movf	lcd_write@col^0,w,c
  8863  003E76  0F7F               	addlw	127
  8864  003E78  6E0A               	movwf	lcd_write@end^0,c
  8865                           
  8866                           ;LCD4b.c: 82:     }
  8867  003E7A  EF4B  F01F         	goto	l4544
  8868  003E7E                     l4540:
  8869  003E7E  0E02               	movlw	2
  8870  003E80  180B               	xorwf	lcd_write@lin^0,w,c
  8871  003E82  A4D8               	btfss	status,2,c
  8872  003E84  EF46  F01F         	goto	u5431
  8873  003E88  EF48  F01F         	goto	u5430
  8874  003E8C                     u5431:
  8875  003E8C  EF4B  F01F         	goto	l4544
  8876  003E90                     u5430:
  8877  003E90                     
  8878                           ;LCD4b.c: 84:     {;LCD4b.c: 85:         end = col + 0xC0 - 1;
  8879  003E90  5007               	movf	lcd_write@col^0,w,c
  8880  003E92  0FBF               	addlw	191
  8881  003E94  6E0A               	movwf	lcd_write@end^0,c
  8882  003E96                     l4544:
  8883                           
  8884                           ;LCD4b.c: 87:     lcd_send_byte(0,end);
  8885  003E96  C00A  F005         	movff	lcd_write@end,lcd_send_byte@data
  8886  003E9A  0E00               	movlw	0
  8887  003E9C  ECE9  F021         	call	_lcd_send_byte
  8888                           
  8889                           ;LCD4b.c: 89:     while(*str)
  8890  003EA0  EF68  F01F         	goto	l4550
  8891  003EA4                     l4546:
  8892                           
  8893                           ;LCD4b.c: 90:     {;LCD4b.c: 91:         lcd_send_byte(1,*str);
  8894  003EA4  C008  FFF6         	movff	lcd_write@str,tblptrl
  8895  003EA8  C009  FFF7         	movff	lcd_write@str+1,tblptrh
  8896  003EAC  6AF8               	clrf	tblptru,c
  8897  003EAE  0E05               	movlw	(high __ramtop+-1)
  8898  003EB0  64F7               	cpfsgt	tblptrh,c
  8899  003EB2  D003               	bra	u5447
  8900  003EB4  0008               	tblrd		*
  8901  003EB6  50F5               	movf	tablat,w,c
  8902  003EB8  D005               	bra	u5440
  8903  003EBA                     u5447:
  8904  003EBA  CFF6 FFE1          	movff	tblptrl,fsr1l
  8905  003EBE  CFF7 FFE2          	movff	tblptrh,fsr1h
  8906  003EC2  50E7               	movf	indf1,w,c
  8907  003EC4                     u5440:
  8908  003EC4  6E05               	movwf	lcd_send_byte@data^0,c
  8909  003EC6  0E01               	movlw	1
  8910  003EC8  ECE9  F021         	call	_lcd_send_byte
  8911  003ECC                     
  8912                           ;LCD4b.c: 92:         str++;
  8913  003ECC  4A08               	infsnz	lcd_write@str^0,f,c
  8914  003ECE  2A09               	incf	(lcd_write@str+1)^0,f,c
  8915  003ED0                     l4550:
  8916                           
  8917                           ;LCD4b.c: 89:     while(*str)
  8918  003ED0  C008  FFF6         	movff	lcd_write@str,tblptrl
  8919  003ED4  C009  FFF7         	movff	lcd_write@str+1,tblptrh
  8920  003ED8  6AF8               	clrf	tblptru,c
  8921  003EDA  0E05               	movlw	(high __ramtop+-1)
  8922  003EDC  64F7               	cpfsgt	tblptrh,c
  8923  003EDE  D003               	bra	u5457
  8924  003EE0  0008               	tblrd		*
  8925  003EE2  50F5               	movf	tablat,w,c
  8926  003EE4  D005               	bra	u5450
  8927  003EE6                     u5457:
  8928  003EE6  CFF6 FFE1          	movff	tblptrl,fsr1l
  8929  003EEA  CFF7 FFE2          	movff	tblptrh,fsr1h
  8930  003EEE  50E7               	movf	indf1,w,c
  8931  003EF0                     u5450:
  8932  003EF0  0900               	iorlw	0
  8933  003EF2  A4D8               	btfss	status,2,c
  8934  003EF4  EF7E  F01F         	goto	u5461
  8935  003EF8  EF80  F01F         	goto	u5460
  8936  003EFC                     u5461:
  8937  003EFC  EF52  F01F         	goto	l4546
  8938  003F00                     u5460:
  8939  003F00  0012               	return		;funcret
  8940  003F02                     __end_of_lcd_write:
  8941                           	callstack 0
  8942                           
  8943 ;; *************** function _lcd_send_byte *****************
  8944 ;; Defined at:
  8945 ;;		line 61 in file "LCD4b.c"
  8946 ;; Parameters:    Size  Location     Type
  8947 ;;  level           1    wreg     unsigned char 
  8948 ;;  data            1    4[COMRAM] unsigned char 
  8949 ;; Auto vars:     Size  Location     Type
  8950 ;;  level           1    5[COMRAM] unsigned char 
  8951 ;; Return value:  Size  Location     Type
  8952 ;;                  1    wreg      void 
  8953 ;; Registers used:
  8954 ;;		wreg, status,2, status,0, cstack
  8955 ;; Tracked objects:
  8956 ;;		On entry : 0/0
  8957 ;;		On exit  : 0/0
  8958 ;;		Unchanged: 0/0
  8959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8960 ;;      Params:         1       0       0       0       0       0       0
  8961 ;;      Locals:         1       0       0       0       0       0       0
  8962 ;;      Temps:          0       0       0       0       0       0       0
  8963 ;;      Totals:         2       0       0       0       0       0       0
  8964 ;;Total ram usage:        2 bytes
  8965 ;; Hardware stack levels used: 1
  8966 ;; Hardware stack levels required when called: 2
  8967 ;; This function calls:
  8968 ;;		_lcd_cmd
  8969 ;; This function is called by:
  8970 ;;		_lcd_write
  8971 ;; This function uses a non-reentrant model
  8972 ;;
  8973                           
  8974                           	psect	text38
  8975  0043D2                     __ptext38:
  8976                           	callstack 0
  8977  0043D2                     _lcd_send_byte:
  8978                           	callstack 26
  8979                           
  8980                           ;incstack = 0
  8981                           ;lcd_send_byte@level stored from wreg
  8982  0043D2  6E06               	movwf	lcd_send_byte@level^0,c
  8983  0043D4                     
  8984                           ;LCD4b.c: 61: void lcd_send_byte(char level, char data);LCD4b.c: 62: {;LCD4b.c: 63:     
      +                          PORTEbits.RE2 = level;
  8985  0043D4  B006               	btfsc	lcd_send_byte@level^0,0,c
  8986  0043D6  D002               	bra	u5405
  8987  0043D8  9484               	bcf	132,2,c	;volatile
  8988  0043DA  D001               	bra	u5406
  8989  0043DC                     u5405:
  8990  0043DC  8484               	bsf	132,2,c	;volatile
  8991  0043DE                     u5406:
  8992  0043DE                     
  8993                           ;LCD4b.c: 64:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  8994  0043DE  0E42               	movlw	66
  8995  0043E0                     u5767:
  8996  0043E0  2EE8               	decfsz	wreg,f,c
  8997  0043E2  D7FE               	bra	u5767
  8998  0043E4  D000               	nop2	
  8999  0043E6                     
  9000                           ;LCD4b.c: 65:     PORTEbits.RE1 = 0;
  9001  0043E6  9284               	bcf	132,1,c	;volatile
  9002  0043E8                     
  9003                           ;LCD4b.c: 66:     lcd_cmd(data);
  9004  0043E8  5005               	movf	lcd_send_byte@data^0,w,c
  9005  0043EA  EC58  F01B         	call	_lcd_cmd
  9006  0043EE  0012               	return		;funcret
  9007  0043F0                     __end_of_lcd_send_byte:
  9008                           	callstack 0
  9009                           
  9010 ;; *************** function _lcd_cmd *****************
  9011 ;; Defined at:
  9012 ;;		line 40 in file "LCD4b.c"
  9013 ;; Parameters:    Size  Location     Type
  9014 ;;  cmd             1    wreg     unsigned char 
  9015 ;; Auto vars:     Size  Location     Type
  9016 ;;  cmd             1    3[COMRAM] unsigned char 
  9017 ;; Return value:  Size  Location     Type
  9018 ;;                  1    wreg      void 
  9019 ;; Registers used:
  9020 ;;		wreg, status,2, status,0, cstack
  9021 ;; Tracked objects:
  9022 ;;		On entry : 0/0
  9023 ;;		On exit  : 0/0
  9024 ;;		Unchanged: 0/0
  9025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9026 ;;      Params:         0       0       0       0       0       0       0
  9027 ;;      Locals:         1       0       0       0       0       0       0
  9028 ;;      Temps:          1       0       0       0       0       0       0
  9029 ;;      Totals:         2       0       0       0       0       0       0
  9030 ;;Total ram usage:        2 bytes
  9031 ;; Hardware stack levels used: 1
  9032 ;; Hardware stack levels required when called: 1
  9033 ;; This function calls:
  9034 ;;		_set_bit
  9035 ;; This function is called by:
  9036 ;;		_lcd_init
  9037 ;;		_lcd_send_byte
  9038 ;; This function uses a non-reentrant model
  9039 ;;
  9040                           
  9041                           	psect	text39
  9042  0036B0                     __ptext39:
  9043                           	callstack 0
  9044  0036B0                     _lcd_cmd:
  9045                           	callstack 28
  9046                           
  9047                           ;incstack = 0
  9048                           ;lcd_cmd@cmd stored from wreg
  9049  0036B0  6E04               	movwf	lcd_cmd@cmd^0,c
  9050  0036B2                     
  9051                           ;LCD4b.c: 40: void lcd_cmd(char cmd);LCD4b.c: 41: {;LCD4b.c: 42:     PORTDbits.RD4 = set
      +                          _bit(cmd, 0b00010000);
  9052  0036B2  0E10               	movlw	16
  9053  0036B4  6E01               	movwf	set_bit@comp^0,c
  9054  0036B6  5004               	movf	lcd_cmd@cmd^0,w,c
  9055  0036B8  ECD9  F021         	call	_set_bit
  9056  0036BC  6E03               	movwf	??_lcd_cmd^0,c
  9057  0036BE  3A03               	swapf	??_lcd_cmd^0,f,c
  9058  0036C0  5083               	movf	131,w,c	;volatile
  9059  0036C2  1803               	xorwf	??_lcd_cmd^0,w,c
  9060  0036C4  0BEF               	andlw	-17
  9061  0036C6  1803               	xorwf	??_lcd_cmd^0,w,c
  9062  0036C8  6E83               	movwf	131,c	;volatile
  9063                           
  9064                           ;LCD4b.c: 43:     PORTDbits.RD5 = set_bit(cmd, 0b00100000);
  9065  0036CA  0E20               	movlw	32
  9066  0036CC  6E01               	movwf	set_bit@comp^0,c
  9067  0036CE  5004               	movf	lcd_cmd@cmd^0,w,c
  9068  0036D0  ECD9  F021         	call	_set_bit
  9069  0036D4  6E03               	movwf	??_lcd_cmd^0,c
  9070  0036D6  3A03               	swapf	??_lcd_cmd^0,f,c
  9071  0036D8  4603               	rlncf	??_lcd_cmd^0,f,c
  9072  0036DA  5083               	movf	131,w,c	;volatile
  9073  0036DC  1803               	xorwf	??_lcd_cmd^0,w,c
  9074  0036DE  0BDF               	andlw	-33
  9075  0036E0  1803               	xorwf	??_lcd_cmd^0,w,c
  9076  0036E2  6E83               	movwf	131,c	;volatile
  9077                           
  9078                           ;LCD4b.c: 44:     PORTDbits.RD6 = set_bit(cmd, 0b01000000);
  9079  0036E4  0E40               	movlw	64
  9080  0036E6  6E01               	movwf	set_bit@comp^0,c
  9081  0036E8  5004               	movf	lcd_cmd@cmd^0,w,c
  9082  0036EA  ECD9  F021         	call	_set_bit
  9083  0036EE  6E03               	movwf	??_lcd_cmd^0,c
  9084  0036F0  3A03               	swapf	??_lcd_cmd^0,f,c
  9085  0036F2  4603               	rlncf	??_lcd_cmd^0,f,c
  9086  0036F4  4603               	rlncf	??_lcd_cmd^0,f,c
  9087  0036F6  5083               	movf	131,w,c	;volatile
  9088  0036F8  1803               	xorwf	??_lcd_cmd^0,w,c
  9089  0036FA  0BBF               	andlw	-65
  9090  0036FC  1803               	xorwf	??_lcd_cmd^0,w,c
  9091  0036FE  6E83               	movwf	131,c	;volatile
  9092                           
  9093                           ;LCD4b.c: 45:     PORTDbits.RD7 = set_bit(cmd, 0b10000000);
  9094  003700  0E80               	movlw	128
  9095  003702  6E01               	movwf	set_bit@comp^0,c
  9096  003704  5004               	movf	lcd_cmd@cmd^0,w,c
  9097  003706  ECD9  F021         	call	_set_bit
  9098  00370A  6E03               	movwf	??_lcd_cmd^0,c
  9099  00370C  3203               	rrcf	??_lcd_cmd^0,f,c
  9100  00370E  3203               	rrcf	??_lcd_cmd^0,f,c
  9101  003710  5083               	movf	131,w,c	;volatile
  9102  003712  1803               	xorwf	??_lcd_cmd^0,w,c
  9103  003714  0B7F               	andlw	-129
  9104  003716  1803               	xorwf	??_lcd_cmd^0,w,c
  9105  003718  6E83               	movwf	131,c	;volatile
  9106  00371A                     
  9107                           ;LCD4b.c: 47:     PORTEbits.RE1 = 1;
  9108  00371A  8284               	bsf	132,1,c	;volatile
  9109  00371C                     
  9110                           ;LCD4b.c: 48:     PORTEbits.RE1 = 0;
  9111  00371C  9284               	bcf	132,1,c	;volatile
  9112  00371E                     
  9113                           ;LCD4b.c: 50:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  9114  00371E  0E42               	movlw	66
  9115  003720                     u5777:
  9116  003720  2EE8               	decfsz	wreg,f,c
  9117  003722  D7FE               	bra	u5777
  9118  003724  D000               	nop2	
  9119  003726                     
  9120                           ;LCD4b.c: 52:     PORTDbits.RD4 = set_bit(cmd, 0b00000001);
  9121  003726  0E01               	movlw	1
  9122  003728  6E01               	movwf	set_bit@comp^0,c
  9123  00372A  5004               	movf	lcd_cmd@cmd^0,w,c
  9124  00372C  ECD9  F021         	call	_set_bit
  9125  003730  6E03               	movwf	??_lcd_cmd^0,c
  9126  003732  3A03               	swapf	??_lcd_cmd^0,f,c
  9127  003734  5083               	movf	131,w,c	;volatile
  9128  003736  1803               	xorwf	??_lcd_cmd^0,w,c
  9129  003738  0BEF               	andlw	-17
  9130  00373A  1803               	xorwf	??_lcd_cmd^0,w,c
  9131  00373C  6E83               	movwf	131,c	;volatile
  9132  00373E                     
  9133                           ;LCD4b.c: 53:     PORTDbits.RD5 = set_bit(cmd, 0b00000010);
  9134  00373E  0E02               	movlw	2
  9135  003740  6E01               	movwf	set_bit@comp^0,c
  9136  003742  5004               	movf	lcd_cmd@cmd^0,w,c
  9137  003744  ECD9  F021         	call	_set_bit
  9138  003748  6E03               	movwf	??_lcd_cmd^0,c
  9139  00374A  3A03               	swapf	??_lcd_cmd^0,f,c
  9140  00374C  4603               	rlncf	??_lcd_cmd^0,f,c
  9141  00374E  5083               	movf	131,w,c	;volatile
  9142  003750  1803               	xorwf	??_lcd_cmd^0,w,c
  9143  003752  0BDF               	andlw	-33
  9144  003754  1803               	xorwf	??_lcd_cmd^0,w,c
  9145  003756  6E83               	movwf	131,c	;volatile
  9146  003758                     
  9147                           ;LCD4b.c: 54:     PORTDbits.RD6 = set_bit(cmd, 0b00000100);
  9148  003758  0E04               	movlw	4
  9149  00375A  6E01               	movwf	set_bit@comp^0,c
  9150  00375C  5004               	movf	lcd_cmd@cmd^0,w,c
  9151  00375E  ECD9  F021         	call	_set_bit
  9152  003762  6E03               	movwf	??_lcd_cmd^0,c
  9153  003764  3A03               	swapf	??_lcd_cmd^0,f,c
  9154  003766  4603               	rlncf	??_lcd_cmd^0,f,c
  9155  003768  4603               	rlncf	??_lcd_cmd^0,f,c
  9156  00376A  5083               	movf	131,w,c	;volatile
  9157  00376C  1803               	xorwf	??_lcd_cmd^0,w,c
  9158  00376E  0BBF               	andlw	-65
  9159  003770  1803               	xorwf	??_lcd_cmd^0,w,c
  9160  003772  6E83               	movwf	131,c	;volatile
  9161  003774                     
  9162                           ;LCD4b.c: 55:     PORTDbits.RD7 = set_bit(cmd, 0b00001000);
  9163  003774  0E08               	movlw	8
  9164  003776  6E01               	movwf	set_bit@comp^0,c
  9165  003778  5004               	movf	lcd_cmd@cmd^0,w,c
  9166  00377A  ECD9  F021         	call	_set_bit
  9167  00377E  6E03               	movwf	??_lcd_cmd^0,c
  9168  003780  3203               	rrcf	??_lcd_cmd^0,f,c
  9169  003782  3203               	rrcf	??_lcd_cmd^0,f,c
  9170  003784  5083               	movf	131,w,c	;volatile
  9171  003786  1803               	xorwf	??_lcd_cmd^0,w,c
  9172  003788  0B7F               	andlw	-129
  9173  00378A  1803               	xorwf	??_lcd_cmd^0,w,c
  9174  00378C  6E83               	movwf	131,c	;volatile
  9175  00378E                     
  9176                           ;LCD4b.c: 57:     PORTEbits.RE1 = 1;
  9177  00378E  8284               	bsf	132,1,c	;volatile
  9178  003790                     
  9179                           ;LCD4b.c: 58:     PORTEbits.RE1 = 0;
  9180  003790  9284               	bcf	132,1,c	;volatile
  9181  003792  0012               	return		;funcret
  9182  003794                     __end_of_lcd_cmd:
  9183                           	callstack 0
  9184                           
  9185 ;; *************** function _set_bit *****************
  9186 ;; Defined at:
  9187 ;;		line 34 in file "LCD4b.c"
  9188 ;; Parameters:    Size  Location     Type
  9189 ;;  cmd             1    wreg     unsigned char 
  9190 ;;  comp            1    0[COMRAM] unsigned char 
  9191 ;; Auto vars:     Size  Location     Type
  9192 ;;  cmd             1    1[COMRAM] unsigned char 
  9193 ;; Return value:  Size  Location     Type
  9194 ;;                  1    wreg      unsigned char 
  9195 ;; Registers used:
  9196 ;;		wreg, status,2, status,0
  9197 ;; Tracked objects:
  9198 ;;		On entry : 0/0
  9199 ;;		On exit  : 0/0
  9200 ;;		Unchanged: 0/0
  9201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9202 ;;      Params:         1       0       0       0       0       0       0
  9203 ;;      Locals:         1       0       0       0       0       0       0
  9204 ;;      Temps:          0       0       0       0       0       0       0
  9205 ;;      Totals:         2       0       0       0       0       0       0
  9206 ;;Total ram usage:        2 bytes
  9207 ;; Hardware stack levels used: 1
  9208 ;; This function calls:
  9209 ;;		Nothing
  9210 ;; This function is called by:
  9211 ;;		_lcd_cmd
  9212 ;; This function uses a non-reentrant model
  9213 ;;
  9214                           
  9215                           	psect	text40
  9216  0043B2                     __ptext40:
  9217                           	callstack 0
  9218  0043B2                     _set_bit:
  9219                           	callstack 28
  9220                           
  9221                           ;incstack = 0
  9222                           ;set_bit@cmd stored from wreg
  9223  0043B2  6E02               	movwf	set_bit@cmd^0,c
  9224  0043B4                     
  9225                           ;LCD4b.c: 34: char set_bit(char cmd, char comp);LCD4b.c: 35: {;LCD4b.c: 36:     if((cmd 
      +                          & comp) >= 1) return 1;
  9226  0043B4  5002               	movf	set_bit@cmd^0,w,c
  9227  0043B6  1401               	andwf	set_bit@comp^0,w,c
  9228  0043B8  0900               	iorlw	0
  9229  0043BA  B4D8               	btfsc	status,2,c
  9230  0043BC  EFE2  F021         	goto	u4441
  9231  0043C0  EFE4  F021         	goto	u4440
  9232  0043C4                     u4441:
  9233  0043C4  EFE7  F021         	goto	l3878
  9234  0043C8                     u4440:
  9235  0043C8  0E01               	movlw	1
  9236  0043CA  EFE8  F021         	goto	l127
  9237  0043CE                     l3878:
  9238  0043CE  0E00               	movlw	0
  9239  0043D0                     l127:
  9240  0043D0  0012               	return		;funcret
  9241  0043D2                     __end_of_set_bit:
  9242                           	callstack 0
  9243                           
  9244 ;; *************** function _equation_SENSOR *****************
  9245 ;; Defined at:
  9246 ;;		line 117 in file "Main_Program.c"
  9247 ;; Parameters:    Size  Location     Type
  9248 ;;		None
  9249 ;; Auto vars:     Size  Location     Type
  9250 ;;		None
  9251 ;; Return value:  Size  Location     Type
  9252 ;;                  1    wreg      void 
  9253 ;; Registers used:
  9254 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9255 ;; Tracked objects:
  9256 ;;		On entry : 0/0
  9257 ;;		On exit  : 0/0
  9258 ;;		Unchanged: 0/0
  9259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9260 ;;      Params:         0       0       0       0       0       0       0
  9261 ;;      Locals:         0       0       0       0       0       0       0
  9262 ;;      Temps:          0       0       0       0       0       0       0
  9263 ;;      Totals:         0       0       0       0       0       0       0
  9264 ;;Total ram usage:        0 bytes
  9265 ;; Hardware stack levels used: 1
  9266 ;; Hardware stack levels required when called: 1
  9267 ;; This function calls:
  9268 ;;		___fldiv
  9269 ;;		___flmul
  9270 ;;		___xxtofl
  9271 ;; This function is called by:
  9272 ;;		_main
  9273 ;; This function uses a non-reentrant model
  9274 ;;
  9275                           
  9276                           	psect	text41
  9277  00393E                     __ptext41:
  9278                           	callstack 0
  9279  00393E                     _equation_SENSOR:
  9280                           	callstack 29
  9281  00393E                     
  9282                           ;Main_Program.c: 119:     VoltageSensor = 0.0049 * VdigADC_AN0;
  9283  00393E  C0F9  F001         	movff	_VdigADC_AN0,___xxtofl@val
  9284  003942  C0FA  F002         	movff	_VdigADC_AN0+1,___xxtofl@val+1
  9285  003946  6A03               	clrf	(___xxtofl@val+2)^0,c
  9286  003948  6A04               	clrf	(___xxtofl@val+3)^0,c
  9287  00394A  0E00               	movlw	0
  9288  00394C  EC63  F016         	call	___xxtofl
  9289  003950  C001  F00F         	movff	?___xxtofl,___flmul@b
  9290  003954  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  9291  003958  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  9292  00395C  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  9293  003960  0E2E               	movlw	46
  9294  003962  6E13               	movwf	___flmul@a^0,c
  9295  003964  0E90               	movlw	144
  9296  003966  6E14               	movwf	(___flmul@a+1)^0,c
  9297  003968  0EA0               	movlw	160
  9298  00396A  6E15               	movwf	(___flmul@a+2)^0,c
  9299  00396C  0E3B               	movlw	59
  9300  00396E  6E16               	movwf	(___flmul@a+3)^0,c
  9301  003970  EC24  F00F         	call	___flmul	;wreg free
  9302  003974  C00F  F0DD         	movff	?___flmul,_VoltageSensor
  9303  003978  C010  F0DE         	movff	?___flmul+1,_VoltageSensor+1
  9304  00397C  C011  F0DF         	movff	?___flmul+2,_VoltageSensor+2
  9305  003980  C012  F0E0         	movff	?___flmul+3,_VoltageSensor+3
  9306  003984                     
  9307                           ;Main_Program.c: 120:     TempSensor = VoltageSensor / 0.0119047619;
  9308  003984  C0DD  F028         	movff	_VoltageSensor,___fldiv@b
  9309  003988  C0DE  F029         	movff	_VoltageSensor+1,___fldiv@b+1
  9310  00398C  C0DF  F02A         	movff	_VoltageSensor+2,___fldiv@b+2
  9311  003990  C0E0  F02B         	movff	_VoltageSensor+3,___fldiv@b+3
  9312  003994  0E31               	movlw	49
  9313  003996  6E2C               	movwf	___fldiv@a^0,c
  9314  003998  0E0C               	movlw	12
  9315  00399A  6E2D               	movwf	(___fldiv@a+1)^0,c
  9316  00399C  0E43               	movlw	67
  9317  00399E  6E2E               	movwf	(___fldiv@a+2)^0,c
  9318  0039A0  0E3C               	movlw	60
  9319  0039A2  6E2F               	movwf	(___fldiv@a+3)^0,c
  9320  0039A4  EC39  F011         	call	___fldiv	;wreg free
  9321  0039A8  C028  F0E5         	movff	?___fldiv,_TempSensor
  9322  0039AC  C029  F0E6         	movff	?___fldiv+1,_TempSensor+1
  9323  0039B0  C02A  F0E7         	movff	?___fldiv+2,_TempSensor+2
  9324  0039B4  C02B  F0E8         	movff	?___fldiv+3,_TempSensor+3
  9325  0039B8                     
  9326                           ;Main_Program.c: 121:     TempPercent = (TempSensor * 100) / 420;
  9327  0039B8  0E00               	movlw	0
  9328  0039BA  6E13               	movwf	___flmul@a^0,c
  9329  0039BC  0E00               	movlw	0
  9330  0039BE  6E14               	movwf	(___flmul@a+1)^0,c
  9331  0039C0  0EC8               	movlw	200
  9332  0039C2  6E15               	movwf	(___flmul@a+2)^0,c
  9333  0039C4  0E42               	movlw	66
  9334  0039C6  6E16               	movwf	(___flmul@a+3)^0,c
  9335  0039C8  C0E5  F00F         	movff	_TempSensor,___flmul@b
  9336  0039CC  C0E6  F010         	movff	_TempSensor+1,___flmul@b+1
  9337  0039D0  C0E7  F011         	movff	_TempSensor+2,___flmul@b+2
  9338  0039D4  C0E8  F012         	movff	_TempSensor+3,___flmul@b+3
  9339  0039D8  EC24  F00F         	call	___flmul	;wreg free
  9340  0039DC  C00F  F028         	movff	?___flmul,___fldiv@b
  9341  0039E0  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  9342  0039E4  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  9343  0039E8  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  9344  0039EC  0E00               	movlw	0
  9345  0039EE  6E2C               	movwf	___fldiv@a^0,c
  9346  0039F0  0E00               	movlw	0
  9347  0039F2  6E2D               	movwf	(___fldiv@a+1)^0,c
  9348  0039F4  0ED2               	movlw	210
  9349  0039F6  6E2E               	movwf	(___fldiv@a+2)^0,c
  9350  0039F8  0E43               	movlw	67
  9351  0039FA  6E2F               	movwf	(___fldiv@a+3)^0,c
  9352  0039FC  EC39  F011         	call	___fldiv	;wreg free
  9353  003A00  C028  F0E1         	movff	?___fldiv,_TempPercent
  9354  003A04  C029  F0E2         	movff	?___fldiv+1,_TempPercent+1
  9355  003A08  C02A  F0E3         	movff	?___fldiv+2,_TempPercent+2
  9356  003A0C  C02B  F0E4         	movff	?___fldiv+3,_TempPercent+3
  9357  003A10  0012               	return		;funcret
  9358  003A12                     __end_of_equation_SENSOR:
  9359                           	callstack 0
  9360                           
  9361 ;; *************** function ___xxtofl *****************
  9362 ;; Defined at:
  9363 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\xxtofl.c"
  9364 ;; Parameters:    Size  Location     Type
  9365 ;;  sign            1    wreg     unsigned char 
  9366 ;;  val             4    0[COMRAM] long 
  9367 ;; Auto vars:     Size  Location     Type
  9368 ;;  sign            1    8[COMRAM] unsigned char 
  9369 ;;  arg             4   10[COMRAM] unsigned long 
  9370 ;;  exp             1    9[COMRAM] unsigned char 
  9371 ;; Return value:  Size  Location     Type
  9372 ;;                  4    0[COMRAM] unsigned char 
  9373 ;; Registers used:
  9374 ;;		wreg, status,2, status,0
  9375 ;; Tracked objects:
  9376 ;;		On entry : 0/0
  9377 ;;		On exit  : 0/0
  9378 ;;		Unchanged: 0/0
  9379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9380 ;;      Params:         4       0       0       0       0       0       0
  9381 ;;      Locals:         6       0       0       0       0       0       0
  9382 ;;      Temps:          4       0       0       0       0       0       0
  9383 ;;      Totals:        14       0       0       0       0       0       0
  9384 ;;Total ram usage:       14 bytes
  9385 ;; Hardware stack levels used: 1
  9386 ;; This function calls:
  9387 ;;		Nothing
  9388 ;; This function is called by:
  9389 ;;		_equation_SENSOR
  9390 ;; This function uses a non-reentrant model
  9391 ;;
  9392                           
  9393                           	psect	text42
  9394  002CC6                     __ptext42:
  9395                           	callstack 0
  9396  002CC6                     ___xxtofl:
  9397                           	callstack 29
  9398                           
  9399                           ;incstack = 0
  9400                           ;___xxtofl@sign stored from wreg
  9401  002CC6  6E09               	movwf	___xxtofl@sign^0,c
  9402  002CC8  5009               	movf	___xxtofl@sign^0,w,c
  9403  002CCA  B4D8               	btfsc	status,2,c
  9404  002CCC  EF6A  F016         	goto	u5471
  9405  002CD0  EF6C  F016         	goto	u5470
  9406  002CD4                     u5471:
  9407  002CD4  EF8E  F016         	goto	l804
  9408  002CD8                     u5470:
  9409  002CD8  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  9410  002CDA  EF73  F016         	goto	u5480
  9411  002CDE  EF71  F016         	goto	u5481
  9412  002CE2                     u5481:
  9413  002CE2  EF8E  F016         	goto	l804
  9414  002CE6                     u5480:
  9415  002CE6  C001  F005         	movff	___xxtofl@val,??___xxtofl
  9416  002CEA  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  9417  002CEE  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  9418  002CF2  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  9419  002CF6  1E05               	comf	??___xxtofl^0,f,c
  9420  002CF8  1E06               	comf	(??___xxtofl+1)^0,f,c
  9421  002CFA  1E07               	comf	(??___xxtofl+2)^0,f,c
  9422  002CFC  1E08               	comf	(??___xxtofl+3)^0,f,c
  9423  002CFE  2A05               	incf	??___xxtofl^0,f,c
  9424  002D00  0E00               	movlw	0
  9425  002D02  2206               	addwfc	(??___xxtofl+1)^0,f,c
  9426  002D04  2207               	addwfc	(??___xxtofl+2)^0,f,c
  9427  002D06  2208               	addwfc	(??___xxtofl+3)^0,f,c
  9428  002D08  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  9429  002D0C  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  9430  002D10  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  9431  002D14  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  9432  002D18  EF96  F016         	goto	l4558
  9433  002D1C                     l804:
  9434  002D1C  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  9435  002D20  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  9436  002D24  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  9437  002D28  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  9438  002D2C                     l4558:
  9439  002D2C  5001               	movf	___xxtofl@val^0,w,c
  9440  002D2E  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  9441  002D30  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  9442  002D32  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  9443  002D34  A4D8               	btfss	status,2,c
  9444  002D36  EF9F  F016         	goto	u5491
  9445  002D3A  EFA1  F016         	goto	u5490
  9446  002D3E                     u5491:
  9447  002D3E  EFAB  F016         	goto	l4564
  9448  002D42                     u5490:
  9449  002D42  0E00               	movlw	0
  9450  002D44  6E01               	movwf	?___xxtofl^0,c
  9451  002D46  0E00               	movlw	0
  9452  002D48  6E02               	movwf	(?___xxtofl+1)^0,c
  9453  002D4A  0E00               	movlw	0
  9454  002D4C  6E03               	movwf	(?___xxtofl+2)^0,c
  9455  002D4E  0E00               	movlw	0
  9456  002D50  6E04               	movwf	(?___xxtofl+3)^0,c
  9457  002D52  EF3C  F017         	goto	l807
  9458  002D56                     l4564:
  9459  002D56  0E96               	movlw	150
  9460  002D58  6E0A               	movwf	___xxtofl@exp^0,c
  9461  002D5A  EFB5  F016         	goto	l4568
  9462  002D5E                     l4566:
  9463  002D5E  2A0A               	incf	___xxtofl@exp^0,f,c
  9464  002D60  90D8               	bcf	status,0,c
  9465  002D62  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  9466  002D64  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  9467  002D66  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  9468  002D68  320B               	rrcf	___xxtofl@arg^0,f,c
  9469  002D6A                     l4568:
  9470  002D6A  0E00               	movlw	0
  9471  002D6C  140B               	andwf	___xxtofl@arg^0,w,c
  9472  002D6E  6E05               	movwf	??___xxtofl^0,c
  9473  002D70  0E00               	movlw	0
  9474  002D72  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  9475  002D74  6E06               	movwf	(??___xxtofl+1)^0,c
  9476  002D76  0E00               	movlw	0
  9477  002D78  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  9478  002D7A  6E07               	movwf	(??___xxtofl+2)^0,c
  9479  002D7C  0EFE               	movlw	254
  9480  002D7E  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  9481  002D80  6E08               	movwf	(??___xxtofl+3)^0,c
  9482  002D82  5005               	movf	??___xxtofl^0,w,c
  9483  002D84  1006               	iorwf	(??___xxtofl+1)^0,w,c
  9484  002D86  1007               	iorwf	(??___xxtofl+2)^0,w,c
  9485  002D88  1008               	iorwf	(??___xxtofl+3)^0,w,c
  9486  002D8A  A4D8               	btfss	status,2,c
  9487  002D8C  EFCA  F016         	goto	u5501
  9488  002D90  EFCC  F016         	goto	u5500
  9489  002D94                     u5501:
  9490  002D94  EFAF  F016         	goto	l4566
  9491  002D98                     u5500:
  9492  002D98  EFDA  F016         	goto	l811
  9493  002D9C                     l4570:
  9494  002D9C  2A0A               	incf	___xxtofl@exp^0,f,c
  9495  002D9E  0E01               	movlw	1
  9496  002DA0  260B               	addwf	___xxtofl@arg^0,f,c
  9497  002DA2  0E00               	movlw	0
  9498  002DA4  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  9499  002DA6  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  9500  002DA8  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  9501  002DAA  90D8               	bcf	status,0,c
  9502  002DAC  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  9503  002DAE  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  9504  002DB0  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  9505  002DB2  320B               	rrcf	___xxtofl@arg^0,f,c
  9506  002DB4                     l811:
  9507  002DB4  0E00               	movlw	0
  9508  002DB6  140B               	andwf	___xxtofl@arg^0,w,c
  9509  002DB8  6E05               	movwf	??___xxtofl^0,c
  9510  002DBA  0E00               	movlw	0
  9511  002DBC  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  9512  002DBE  6E06               	movwf	(??___xxtofl+1)^0,c
  9513  002DC0  0E00               	movlw	0
  9514  002DC2  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  9515  002DC4  6E07               	movwf	(??___xxtofl+2)^0,c
  9516  002DC6  0EFF               	movlw	255
  9517  002DC8  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  9518  002DCA  6E08               	movwf	(??___xxtofl+3)^0,c
  9519  002DCC  5005               	movf	??___xxtofl^0,w,c
  9520  002DCE  1006               	iorwf	(??___xxtofl+1)^0,w,c
  9521  002DD0  1007               	iorwf	(??___xxtofl+2)^0,w,c
  9522  002DD2  1008               	iorwf	(??___xxtofl+3)^0,w,c
  9523  002DD4  A4D8               	btfss	status,2,c
  9524  002DD6  EFEF  F016         	goto	u5511
  9525  002DDA  EFF1  F016         	goto	u5510
  9526  002DDE                     u5511:
  9527  002DDE  EFCE  F016         	goto	l4570
  9528  002DE2                     u5510:
  9529  002DE2  EFF9  F016         	goto	l4578
  9530  002DE6                     l4576:
  9531  002DE6  060A               	decf	___xxtofl@exp^0,f,c
  9532  002DE8  90D8               	bcf	status,0,c
  9533  002DEA  360B               	rlcf	___xxtofl@arg^0,f,c
  9534  002DEC  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  9535  002DEE  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  9536  002DF0  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  9537  002DF2                     l4578:
  9538  002DF2  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  9539  002DF4  EFFE  F016         	goto	u5521
  9540  002DF8  EF00  F017         	goto	u5520
  9541  002DFC                     u5521:
  9542  002DFC  EF08  F017         	goto	l818
  9543  002E00                     u5520:
  9544  002E00  0E02               	movlw	2
  9545  002E02  600A               	cpfslt	___xxtofl@exp^0,c
  9546  002E04  EF06  F017         	goto	u5531
  9547  002E08  EF08  F017         	goto	u5530
  9548  002E0C                     u5531:
  9549  002E0C  EFF3  F016         	goto	l4576
  9550  002E10                     u5530:
  9551  002E10                     l818:
  9552  002E10  B00A               	btfsc	___xxtofl@exp^0,0,c
  9553  002E12  EF0D  F017         	goto	u5541
  9554  002E16  EF0F  F017         	goto	u5540
  9555  002E1A                     u5541:
  9556  002E1A  EF10  F017         	goto	l4584
  9557  002E1E                     u5540:
  9558  002E1E  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  9559  002E20                     l4584:
  9560  002E20  90D8               	bcf	status,0,c
  9561  002E22  320A               	rrcf	___xxtofl@exp^0,f,c
  9562  002E24  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  9563  002E28  6A06               	clrf	(??___xxtofl+1)^0,c
  9564  002E2A  6A07               	clrf	(??___xxtofl+2)^0,c
  9565  002E2C  6A08               	clrf	(??___xxtofl+3)^0,c
  9566  002E2E  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  9567  002E32  6A07               	clrf	(??___xxtofl+2)^0,c
  9568  002E34  6A06               	clrf	(??___xxtofl+1)^0,c
  9569  002E36  6A05               	clrf	??___xxtofl^0,c
  9570  002E38  5005               	movf	??___xxtofl^0,w,c
  9571  002E3A  120B               	iorwf	___xxtofl@arg^0,f,c
  9572  002E3C  5006               	movf	(??___xxtofl+1)^0,w,c
  9573  002E3E  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  9574  002E40  5007               	movf	(??___xxtofl+2)^0,w,c
  9575  002E42  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  9576  002E44  5008               	movf	(??___xxtofl+3)^0,w,c
  9577  002E46  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  9578  002E48  5009               	movf	___xxtofl@sign^0,w,c
  9579  002E4A  B4D8               	btfsc	status,2,c
  9580  002E4C  EF2A  F017         	goto	u5551
  9581  002E50  EF2C  F017         	goto	u5550
  9582  002E54                     u5551:
  9583  002E54  EF34  F017         	goto	l4594
  9584  002E58                     u5550:
  9585  002E58  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  9586  002E5A  EF33  F017         	goto	u5560
  9587  002E5E  EF31  F017         	goto	u5561
  9588  002E62                     u5561:
  9589  002E62  EF34  F017         	goto	l4594
  9590  002E66                     u5560:
  9591  002E66  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  9592  002E68                     l4594:
  9593  002E68  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  9594  002E6C  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  9595  002E70  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  9596  002E74  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  9597  002E78                     l807:
  9598  002E78  0012               	return		;funcret
  9599  002E7A                     __end_of___xxtofl:
  9600                           	callstack 0
  9601                           
  9602 ;; *************** function ___flmul *****************
  9603 ;; Defined at:
  9604 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcmul.c"
  9605 ;; Parameters:    Size  Location     Type
  9606 ;;  b               4   14[COMRAM] unsigned char 
  9607 ;;  a               4   18[COMRAM] unsigned char 
  9608 ;; Auto vars:     Size  Location     Type
  9609 ;;  prod            4   33[COMRAM] struct .
  9610 ;;  grs             4   27[COMRAM] unsigned long 
  9611 ;;  temp            2   37[COMRAM] struct .
  9612 ;;  bexp            1   32[COMRAM] unsigned char 
  9613 ;;  aexp            1   31[COMRAM] unsigned char 
  9614 ;;  sign            1   26[COMRAM] unsigned char 
  9615 ;; Return value:  Size  Location     Type
  9616 ;;                  4   14[COMRAM] unsigned char 
  9617 ;; Registers used:
  9618 ;;		wreg, status,2, status,0, prodl, prodh
  9619 ;; Tracked objects:
  9620 ;;		On entry : 0/0
  9621 ;;		On exit  : 0/0
  9622 ;;		Unchanged: 0/0
  9623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9624 ;;      Params:         8       0       0       0       0       0       0
  9625 ;;      Locals:        13       0       0       0       0       0       0
  9626 ;;      Temps:          4       0       0       0       0       0       0
  9627 ;;      Totals:        25       0       0       0       0       0       0
  9628 ;;Total ram usage:       25 bytes
  9629 ;; Hardware stack levels used: 1
  9630 ;; This function calls:
  9631 ;;		Nothing
  9632 ;; This function is called by:
  9633 ;;		_equation_SENSOR
  9634 ;;		_efgtoa
  9635 ;; This function uses a non-reentrant model
  9636 ;;
  9637                           
  9638                           	psect	text43
  9639  001E48                     __ptext43:
  9640                           	callstack 0
  9641  001E48                     ___flmul:
  9642                           	callstack 25
  9643  001E48  5012               	movf	(___flmul@b+3)^0,w,c
  9644  001E4A  0B80               	andlw	128
  9645  001E4C  6E1B               	movwf	___flmul@sign^0,c
  9646  001E4E  5012               	movf	(___flmul@b+3)^0,w,c
  9647  001E50  2412               	addwf	(___flmul@b+3)^0,w,c
  9648  001E52  6E21               	movwf	___flmul@bexp^0,c
  9649  001E54  AE11               	btfss	(___flmul@b+2)^0,7,c
  9650  001E56  EF2F  F00F         	goto	u3681
  9651  001E5A  EF31  F00F         	goto	u3680
  9652  001E5E                     u3681:
  9653  001E5E  EF32  F00F         	goto	l3464
  9654  001E62                     u3680:
  9655  001E62  8021               	bsf	___flmul@bexp^0,0,c
  9656  001E64                     l3464:
  9657  001E64  5021               	movf	___flmul@bexp^0,w,c
  9658  001E66  B4D8               	btfsc	status,2,c
  9659  001E68  EF38  F00F         	goto	u3691
  9660  001E6C  EF3A  F00F         	goto	u3690
  9661  001E70                     u3691:
  9662  001E70  EF4D  F00F         	goto	l3472
  9663  001E74                     u3690:
  9664  001E74  2821               	incf	___flmul@bexp^0,w,c
  9665  001E76  A4D8               	btfss	status,2,c
  9666  001E78  EF40  F00F         	goto	u3701
  9667  001E7C  EF42  F00F         	goto	u3700
  9668  001E80                     u3701:
  9669  001E80  EF4A  F00F         	goto	l3470
  9670  001E84                     u3700:
  9671  001E84  0E00               	movlw	0
  9672  001E86  6E0F               	movwf	___flmul@b^0,c
  9673  001E88  0E00               	movlw	0
  9674  001E8A  6E10               	movwf	(___flmul@b+1)^0,c
  9675  001E8C  0E00               	movlw	0
  9676  001E8E  6E11               	movwf	(___flmul@b+2)^0,c
  9677  001E90  0E00               	movlw	0
  9678  001E92  6E12               	movwf	(___flmul@b+3)^0,c
  9679  001E94                     l3470:
  9680  001E94  8E11               	bsf	(___flmul@b+2)^0,7,c
  9681  001E96  EF55  F00F         	goto	l3474
  9682  001E9A                     l3472:
  9683  001E9A  0E00               	movlw	0
  9684  001E9C  6E0F               	movwf	___flmul@b^0,c
  9685  001E9E  0E00               	movlw	0
  9686  001EA0  6E10               	movwf	(___flmul@b+1)^0,c
  9687  001EA2  0E00               	movlw	0
  9688  001EA4  6E11               	movwf	(___flmul@b+2)^0,c
  9689  001EA6  0E00               	movlw	0
  9690  001EA8  6E12               	movwf	(___flmul@b+3)^0,c
  9691  001EAA                     l3474:
  9692  001EAA  5016               	movf	(___flmul@a+3)^0,w,c
  9693  001EAC  0B80               	andlw	128
  9694  001EAE  1A1B               	xorwf	___flmul@sign^0,f,c
  9695  001EB0  5016               	movf	(___flmul@a+3)^0,w,c
  9696  001EB2  2416               	addwf	(___flmul@a+3)^0,w,c
  9697  001EB4  6E20               	movwf	___flmul@aexp^0,c
  9698  001EB6  AE15               	btfss	(___flmul@a+2)^0,7,c
  9699  001EB8  EF60  F00F         	goto	u3711
  9700  001EBC  EF62  F00F         	goto	u3710
  9701  001EC0                     u3711:
  9702  001EC0  EF63  F00F         	goto	l3482
  9703  001EC4                     u3710:
  9704  001EC4  8020               	bsf	___flmul@aexp^0,0,c
  9705  001EC6                     l3482:
  9706  001EC6  5020               	movf	___flmul@aexp^0,w,c
  9707  001EC8  B4D8               	btfsc	status,2,c
  9708  001ECA  EF69  F00F         	goto	u3721
  9709  001ECE  EF6B  F00F         	goto	u3720
  9710  001ED2                     u3721:
  9711  001ED2  EF7E  F00F         	goto	l3490
  9712  001ED6                     u3720:
  9713  001ED6  2820               	incf	___flmul@aexp^0,w,c
  9714  001ED8  A4D8               	btfss	status,2,c
  9715  001EDA  EF71  F00F         	goto	u3731
  9716  001EDE  EF73  F00F         	goto	u3730
  9717  001EE2                     u3731:
  9718  001EE2  EF7B  F00F         	goto	l3488
  9719  001EE6                     u3730:
  9720  001EE6  0E00               	movlw	0
  9721  001EE8  6E13               	movwf	___flmul@a^0,c
  9722  001EEA  0E00               	movlw	0
  9723  001EEC  6E14               	movwf	(___flmul@a+1)^0,c
  9724  001EEE  0E00               	movlw	0
  9725  001EF0  6E15               	movwf	(___flmul@a+2)^0,c
  9726  001EF2  0E00               	movlw	0
  9727  001EF4  6E16               	movwf	(___flmul@a+3)^0,c
  9728  001EF6                     l3488:
  9729  001EF6  8E15               	bsf	(___flmul@a+2)^0,7,c
  9730  001EF8  EF86  F00F         	goto	l763
  9731  001EFC                     l3490:
  9732  001EFC  0E00               	movlw	0
  9733  001EFE  6E13               	movwf	___flmul@a^0,c
  9734  001F00  0E00               	movlw	0
  9735  001F02  6E14               	movwf	(___flmul@a+1)^0,c
  9736  001F04  0E00               	movlw	0
  9737  001F06  6E15               	movwf	(___flmul@a+2)^0,c
  9738  001F08  0E00               	movlw	0
  9739  001F0A  6E16               	movwf	(___flmul@a+3)^0,c
  9740  001F0C                     l763:
  9741  001F0C  5020               	movf	___flmul@aexp^0,w,c
  9742  001F0E  B4D8               	btfsc	status,2,c
  9743  001F10  EF8C  F00F         	goto	u3741
  9744  001F14  EF8E  F00F         	goto	u3740
  9745  001F18                     u3741:
  9746  001F18  EF96  F00F         	goto	l3494
  9747  001F1C                     u3740:
  9748  001F1C  5021               	movf	___flmul@bexp^0,w,c
  9749  001F1E  A4D8               	btfss	status,2,c
  9750  001F20  EF94  F00F         	goto	u3751
  9751  001F24  EF96  F00F         	goto	u3750
  9752  001F28                     u3751:
  9753  001F28  EFA0  F00F         	goto	l3498
  9754  001F2C                     u3750:
  9755  001F2C                     l3494:
  9756  001F2C  0E00               	movlw	0
  9757  001F2E  6E0F               	movwf	?___flmul^0,c
  9758  001F30  0E00               	movlw	0
  9759  001F32  6E10               	movwf	(?___flmul+1)^0,c
  9760  001F34  0E00               	movlw	0
  9761  001F36  6E11               	movwf	(?___flmul+2)^0,c
  9762  001F38  0E00               	movlw	0
  9763  001F3A  6E12               	movwf	(?___flmul+3)^0,c
  9764  001F3C  EF38  F011         	goto	l767
  9765  001F40                     l3498:
  9766  001F40  5015               	movf	(___flmul@a+2)^0,w,c
  9767  001F42  020F               	mulwf	___flmul@b^0,c
  9768  001F44  CFF3 F026          	movff	prodl,___flmul@temp
  9769  001F48  CFF4 F027          	movff	prodh,___flmul@temp+1
  9770  001F4C  5026               	movf	___flmul@temp^0,w,c
  9771  001F4E  6E1C               	movwf	___flmul@grs^0,c
  9772  001F50  6A1D               	clrf	(___flmul@grs+1)^0,c
  9773  001F52  6A1E               	clrf	(___flmul@grs+2)^0,c
  9774  001F54  6A1F               	clrf	(___flmul@grs+3)^0,c
  9775  001F56  5027               	movf	(___flmul@temp+1)^0,w,c
  9776  001F58  6E22               	movwf	___flmul@prod^0,c
  9777  001F5A  6A23               	clrf	(___flmul@prod+1)^0,c
  9778  001F5C  6A24               	clrf	(___flmul@prod+2)^0,c
  9779  001F5E  6A25               	clrf	(___flmul@prod+3)^0,c
  9780  001F60  5014               	movf	(___flmul@a+1)^0,w,c
  9781  001F62  0210               	mulwf	(___flmul@b+1)^0,c
  9782  001F64  CFF3 F026          	movff	prodl,___flmul@temp
  9783  001F68  CFF4 F027          	movff	prodh,___flmul@temp+1
  9784  001F6C  5026               	movf	___flmul@temp^0,w,c
  9785  001F6E  261C               	addwf	___flmul@grs^0,f,c
  9786  001F70  0E00               	movlw	0
  9787  001F72  221D               	addwfc	(___flmul@grs+1)^0,f,c
  9788  001F74  221E               	addwfc	(___flmul@grs+2)^0,f,c
  9789  001F76  221F               	addwfc	(___flmul@grs+3)^0,f,c
  9790  001F78  5027               	movf	(___flmul@temp+1)^0,w,c
  9791  001F7A  2622               	addwf	___flmul@prod^0,f,c
  9792  001F7C  0E00               	movlw	0
  9793  001F7E  2223               	addwfc	(___flmul@prod+1)^0,f,c
  9794  001F80  2224               	addwfc	(___flmul@prod+2)^0,f,c
  9795  001F82  2225               	addwfc	(___flmul@prod+3)^0,f,c
  9796  001F84  5013               	movf	___flmul@a^0,w,c
  9797  001F86  0211               	mulwf	(___flmul@b+2)^0,c
  9798  001F88  CFF3 F026          	movff	prodl,___flmul@temp
  9799  001F8C  CFF4 F027          	movff	prodh,___flmul@temp+1
  9800  001F90  5026               	movf	___flmul@temp^0,w,c
  9801  001F92  261C               	addwf	___flmul@grs^0,f,c
  9802  001F94  0E00               	movlw	0
  9803  001F96  221D               	addwfc	(___flmul@grs+1)^0,f,c
  9804  001F98  221E               	addwfc	(___flmul@grs+2)^0,f,c
  9805  001F9A  221F               	addwfc	(___flmul@grs+3)^0,f,c
  9806  001F9C  5027               	movf	(___flmul@temp+1)^0,w,c
  9807  001F9E  2622               	addwf	___flmul@prod^0,f,c
  9808  001FA0  0E00               	movlw	0
  9809  001FA2  2223               	addwfc	(___flmul@prod+1)^0,f,c
  9810  001FA4  2224               	addwfc	(___flmul@prod+2)^0,f,c
  9811  001FA6  2225               	addwfc	(___flmul@prod+3)^0,f,c
  9812  001FA8  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  9813  001FAC  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  9814  001FB0  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  9815  001FB4  6A1C               	clrf	___flmul@grs^0,c
  9816  001FB6  5013               	movf	___flmul@a^0,w,c
  9817  001FB8  0210               	mulwf	(___flmul@b+1)^0,c
  9818  001FBA  CFF3 F026          	movff	prodl,___flmul@temp
  9819  001FBE  CFF4 F027          	movff	prodh,___flmul@temp+1
  9820  001FC2  5026               	movf	___flmul@temp^0,w,c
  9821  001FC4  261C               	addwf	___flmul@grs^0,f,c
  9822  001FC6  5027               	movf	(___flmul@temp+1)^0,w,c
  9823  001FC8  221D               	addwfc	(___flmul@grs+1)^0,f,c
  9824  001FCA  0E00               	movlw	0
  9825  001FCC  221E               	addwfc	(___flmul@grs+2)^0,f,c
  9826  001FCE  0E00               	movlw	0
  9827  001FD0  221F               	addwfc	(___flmul@grs+3)^0,f,c
  9828  001FD2  5014               	movf	(___flmul@a+1)^0,w,c
  9829  001FD4  020F               	mulwf	___flmul@b^0,c
  9830  001FD6  CFF3 F026          	movff	prodl,___flmul@temp
  9831  001FDA  CFF4 F027          	movff	prodh,___flmul@temp+1
  9832  001FDE  5026               	movf	___flmul@temp^0,w,c
  9833  001FE0  261C               	addwf	___flmul@grs^0,f,c
  9834  001FE2  5027               	movf	(___flmul@temp+1)^0,w,c
  9835  001FE4  221D               	addwfc	(___flmul@grs+1)^0,f,c
  9836  001FE6  0E00               	movlw	0
  9837  001FE8  221E               	addwfc	(___flmul@grs+2)^0,f,c
  9838  001FEA  0E00               	movlw	0
  9839  001FEC  221F               	addwfc	(___flmul@grs+3)^0,f,c
  9840  001FEE  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  9841  001FF2  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  9842  001FF6  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  9843  001FFA  6A1C               	clrf	___flmul@grs^0,c
  9844  001FFC  5013               	movf	___flmul@a^0,w,c
  9845  001FFE  020F               	mulwf	___flmul@b^0,c
  9846  002000  CFF3 F026          	movff	prodl,___flmul@temp
  9847  002004  CFF4 F027          	movff	prodh,___flmul@temp+1
  9848  002008  5026               	movf	___flmul@temp^0,w,c
  9849  00200A  261C               	addwf	___flmul@grs^0,f,c
  9850  00200C  5027               	movf	(___flmul@temp+1)^0,w,c
  9851  00200E  221D               	addwfc	(___flmul@grs+1)^0,f,c
  9852  002010  0E00               	movlw	0
  9853  002012  221E               	addwfc	(___flmul@grs+2)^0,f,c
  9854  002014  0E00               	movlw	0
  9855  002016  221F               	addwfc	(___flmul@grs+3)^0,f,c
  9856  002018  5015               	movf	(___flmul@a+2)^0,w,c
  9857  00201A  0210               	mulwf	(___flmul@b+1)^0,c
  9858  00201C  CFF3 F026          	movff	prodl,___flmul@temp
  9859  002020  CFF4 F027          	movff	prodh,___flmul@temp+1
  9860  002024  5026               	movf	___flmul@temp^0,w,c
  9861  002026  2622               	addwf	___flmul@prod^0,f,c
  9862  002028  5027               	movf	(___flmul@temp+1)^0,w,c
  9863  00202A  2223               	addwfc	(___flmul@prod+1)^0,f,c
  9864  00202C  0E00               	movlw	0
  9865  00202E  2224               	addwfc	(___flmul@prod+2)^0,f,c
  9866  002030  0E00               	movlw	0
  9867  002032  2225               	addwfc	(___flmul@prod+3)^0,f,c
  9868  002034  5014               	movf	(___flmul@a+1)^0,w,c
  9869  002036  0211               	mulwf	(___flmul@b+2)^0,c
  9870  002038  CFF3 F026          	movff	prodl,___flmul@temp
  9871  00203C  CFF4 F027          	movff	prodh,___flmul@temp+1
  9872  002040  5026               	movf	___flmul@temp^0,w,c
  9873  002042  2622               	addwf	___flmul@prod^0,f,c
  9874  002044  5027               	movf	(___flmul@temp+1)^0,w,c
  9875  002046  2223               	addwfc	(___flmul@prod+1)^0,f,c
  9876  002048  0E00               	movlw	0
  9877  00204A  2224               	addwfc	(___flmul@prod+2)^0,f,c
  9878  00204C  0E00               	movlw	0
  9879  00204E  2225               	addwfc	(___flmul@prod+3)^0,f,c
  9880  002050  5015               	movf	(___flmul@a+2)^0,w,c
  9881  002052  0211               	mulwf	(___flmul@b+2)^0,c
  9882  002054  CFF3 F026          	movff	prodl,___flmul@temp
  9883  002058  CFF4 F027          	movff	prodh,___flmul@temp+1
  9884  00205C  5026               	movf	___flmul@temp^0,w,c
  9885  00205E  6E17               	movwf	??___flmul^0,c
  9886  002060  5027               	movf	(___flmul@temp+1)^0,w,c
  9887  002062  6E18               	movwf	(??___flmul+1)^0,c
  9888  002064  6A19               	clrf	(??___flmul+2)^0,c
  9889  002066  6A1A               	clrf	(??___flmul+3)^0,c
  9890  002068  C019  F01A         	movff	??___flmul+2,??___flmul+3
  9891  00206C  C018  F019         	movff	??___flmul+1,??___flmul+2
  9892  002070  C017  F018         	movff	??___flmul,??___flmul+1
  9893  002074  6A17               	clrf	??___flmul^0,c
  9894  002076  5017               	movf	??___flmul^0,w,c
  9895  002078  2622               	addwf	___flmul@prod^0,f,c
  9896  00207A  5018               	movf	(??___flmul+1)^0,w,c
  9897  00207C  2223               	addwfc	(___flmul@prod+1)^0,f,c
  9898  00207E  5019               	movf	(??___flmul+2)^0,w,c
  9899  002080  2224               	addwfc	(___flmul@prod+2)^0,f,c
  9900  002082  501A               	movf	(??___flmul+3)^0,w,c
  9901  002084  2225               	addwfc	(___flmul@prod+3)^0,f,c
  9902  002086  C01C  F017         	movff	___flmul@grs,??___flmul
  9903  00208A  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  9904  00208E  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  9905  002092  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  9906  002096  0E19               	movlw	25
  9907  002098  EF53  F010         	goto	u3760
  9908  00209C                     u3765:
  9909  00209C  90D8               	bcf	status,0,c
  9910  00209E  321A               	rrcf	(??___flmul+3)^0,f,c
  9911  0020A0  3219               	rrcf	(??___flmul+2)^0,f,c
  9912  0020A2  3218               	rrcf	(??___flmul+1)^0,f,c
  9913  0020A4  3217               	rrcf	??___flmul^0,f,c
  9914  0020A6                     u3760:
  9915  0020A6  2EE8               	decfsz	wreg,f,c
  9916  0020A8  EF4E  F010         	goto	u3765
  9917  0020AC  5017               	movf	??___flmul^0,w,c
  9918  0020AE  2622               	addwf	___flmul@prod^0,f,c
  9919  0020B0  5018               	movf	(??___flmul+1)^0,w,c
  9920  0020B2  2223               	addwfc	(___flmul@prod+1)^0,f,c
  9921  0020B4  5019               	movf	(??___flmul+2)^0,w,c
  9922  0020B6  2224               	addwfc	(___flmul@prod+2)^0,f,c
  9923  0020B8  501A               	movf	(??___flmul+3)^0,w,c
  9924  0020BA  2225               	addwfc	(___flmul@prod+3)^0,f,c
  9925  0020BC  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  9926  0020C0  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  9927  0020C4  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  9928  0020C8  6A1C               	clrf	___flmul@grs^0,c
  9929  0020CA  5020               	movf	___flmul@aexp^0,w,c
  9930  0020CC  C021  F017         	movff	___flmul@bexp,??___flmul
  9931  0020D0  6A18               	clrf	(??___flmul+1)^0,c
  9932  0020D2  2617               	addwf	??___flmul^0,f,c
  9933  0020D4  0E00               	movlw	0
  9934  0020D6  2218               	addwfc	(??___flmul+1)^0,f,c
  9935  0020D8  0E82               	movlw	130
  9936  0020DA  2417               	addwf	??___flmul^0,w,c
  9937  0020DC  6E26               	movwf	___flmul@temp^0,c
  9938  0020DE  0EFF               	movlw	255
  9939  0020E0  2018               	addwfc	(??___flmul+1)^0,w,c
  9940  0020E2  6E27               	movwf	(___flmul@temp+1)^0,c
  9941  0020E4  EF89  F010         	goto	l3546
  9942  0020E8                     l3540:
  9943  0020E8  90D8               	bcf	status,0,c
  9944  0020EA  3622               	rlcf	___flmul@prod^0,f,c
  9945  0020EC  3623               	rlcf	(___flmul@prod+1)^0,f,c
  9946  0020EE  3624               	rlcf	(___flmul@prod+2)^0,f,c
  9947  0020F0  3625               	rlcf	(___flmul@prod+3)^0,f,c
  9948  0020F2  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  9949  0020F4  EF7E  F010         	goto	u3771
  9950  0020F8  EF80  F010         	goto	u3770
  9951  0020FC                     u3771:
  9952  0020FC  EF81  F010         	goto	l770
  9953  002100                     u3770:
  9954  002100  8022               	bsf	___flmul@prod^0,0,c
  9955  002102                     l770:
  9956  002102  90D8               	bcf	status,0,c
  9957  002104  361C               	rlcf	___flmul@grs^0,f,c
  9958  002106  361D               	rlcf	(___flmul@grs+1)^0,f,c
  9959  002108  361E               	rlcf	(___flmul@grs+2)^0,f,c
  9960  00210A  361F               	rlcf	(___flmul@grs+3)^0,f,c
  9961  00210C  0626               	decf	___flmul@temp^0,f,c
  9962  00210E  A0D8               	btfss	status,0,c
  9963  002110  0627               	decf	(___flmul@temp+1)^0,f,c
  9964  002112                     l3546:
  9965  002112  AE24               	btfss	(___flmul@prod+2)^0,7,c
  9966  002114  EF8E  F010         	goto	u3781
  9967  002118  EF90  F010         	goto	u3780
  9968  00211C                     u3781:
  9969  00211C  EF74  F010         	goto	l3540
  9970  002120                     u3780:
  9971  002120  0E00               	movlw	0
  9972  002122  6E20               	movwf	___flmul@aexp^0,c
  9973  002124  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  9974  002126  EF97  F010         	goto	u3791
  9975  00212A  EF99  F010         	goto	u3790
  9976  00212E                     u3791:
  9977  00212E  EFBD  F010         	goto	l772
  9978  002132                     u3790:
  9979  002132  0EFF               	movlw	255
  9980  002134  141C               	andwf	___flmul@grs^0,w,c
  9981  002136  6E17               	movwf	??___flmul^0,c
  9982  002138  0EFF               	movlw	255
  9983  00213A  141D               	andwf	(___flmul@grs+1)^0,w,c
  9984  00213C  6E18               	movwf	(??___flmul+1)^0,c
  9985  00213E  0EFF               	movlw	255
  9986  002140  141E               	andwf	(___flmul@grs+2)^0,w,c
  9987  002142  6E19               	movwf	(??___flmul+2)^0,c
  9988  002144  0E7F               	movlw	127
  9989  002146  141F               	andwf	(___flmul@grs+3)^0,w,c
  9990  002148  6E1A               	movwf	(??___flmul+3)^0,c
  9991  00214A  5017               	movf	??___flmul^0,w,c
  9992  00214C  1018               	iorwf	(??___flmul+1)^0,w,c
  9993  00214E  1019               	iorwf	(??___flmul+2)^0,w,c
  9994  002150  101A               	iorwf	(??___flmul+3)^0,w,c
  9995  002152  B4D8               	btfsc	status,2,c
  9996  002154  EFAE  F010         	goto	u3801
  9997  002158  EFB0  F010         	goto	u3800
  9998  00215C                     u3801:
  9999  00215C  EFB4  F010         	goto	l773
 10000  002160                     u3800:
 10001  002160                     l3554:
 10002  002160  0E01               	movlw	1
 10003  002162  6E20               	movwf	___flmul@aexp^0,c
 10004  002164  EFBD  F010         	goto	l772
 10005  002168                     l773:
 10006  002168  A022               	btfss	___flmul@prod^0,0,c
 10007  00216A  EFB9  F010         	goto	u3811
 10008  00216E  EFBB  F010         	goto	u3810
 10009  002172                     u3811:
 10010  002172  EFBD  F010         	goto	l772
 10011  002176                     u3810:
 10012  002176  EFB0  F010         	goto	l3554
 10013  00217A                     l772:
 10014  00217A  5020               	movf	___flmul@aexp^0,w,c
 10015  00217C  B4D8               	btfsc	status,2,c
 10016  00217E  EFC3  F010         	goto	u3821
 10017  002182  EFC5  F010         	goto	u3820
 10018  002186                     u3821:
 10019  002186  EFE9  F010         	goto	l3566
 10020  00218A                     u3820:
 10021  00218A  0E01               	movlw	1
 10022  00218C  2622               	addwf	___flmul@prod^0,f,c
 10023  00218E  0E00               	movlw	0
 10024  002190  2223               	addwfc	(___flmul@prod+1)^0,f,c
 10025  002192  2224               	addwfc	(___flmul@prod+2)^0,f,c
 10026  002194  2225               	addwfc	(___flmul@prod+3)^0,f,c
 10027  002196  A025               	btfss	(___flmul@prod+3)^0,0,c
 10028  002198  EFD0  F010         	goto	u3831
 10029  00219C  EFD2  F010         	goto	u3830
 10030  0021A0                     u3831:
 10031  0021A0  EFE9  F010         	goto	l3566
 10032  0021A4                     u3830:
 10033  0021A4  C022  F017         	movff	___flmul@prod,??___flmul
 10034  0021A8  C023  F018         	movff	___flmul@prod+1,??___flmul+1
 10035  0021AC  C024  F019         	movff	___flmul@prod+2,??___flmul+2
 10036  0021B0  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
 10037  0021B4  341A               	rlcf	(??___flmul+3)^0,w,c
 10038  0021B6  321A               	rrcf	(??___flmul+3)^0,f,c
 10039  0021B8  3219               	rrcf	(??___flmul+2)^0,f,c
 10040  0021BA  3218               	rrcf	(??___flmul+1)^0,f,c
 10041  0021BC  3217               	rrcf	??___flmul^0,f,c
 10042  0021BE  C017  F022         	movff	??___flmul,___flmul@prod
 10043  0021C2  C018  F023         	movff	??___flmul+1,___flmul@prod+1
 10044  0021C6  C019  F024         	movff	??___flmul+2,___flmul@prod+2
 10045  0021CA  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
 10046  0021CE  4A26               	infsnz	___flmul@temp^0,f,c
 10047  0021D0  2A27               	incf	(___flmul@temp+1)^0,f,c
 10048  0021D2                     l3566:
 10049  0021D2  BE27               	btfsc	(___flmul@temp+1)^0,7,c
 10050  0021D4  EFF4  F010         	goto	u3841
 10051  0021D8  5027               	movf	(___flmul@temp+1)^0,w,c
 10052  0021DA  E108               	bnz	u3840
 10053  0021DC  2826               	incf	___flmul@temp^0,w,c
 10054  0021DE  A0D8               	btfss	status,0,c
 10055  0021E0  EFF4  F010         	goto	u3841
 10056  0021E4  EFF6  F010         	goto	u3840
 10057  0021E8                     u3841:
 10058  0021E8  EF00  F011         	goto	l3570
 10059  0021EC                     u3840:
 10060  0021EC  0E00               	movlw	0
 10061  0021EE  6E22               	movwf	___flmul@prod^0,c
 10062  0021F0  0E00               	movlw	0
 10063  0021F2  6E23               	movwf	(___flmul@prod+1)^0,c
 10064  0021F4  0E80               	movlw	128
 10065  0021F6  6E24               	movwf	(___flmul@prod+2)^0,c
 10066  0021F8  0E7F               	movlw	127
 10067  0021FA  6E25               	movwf	(___flmul@prod+3)^0,c
 10068  0021FC  EF2E  F011         	goto	l3582
 10069  002200                     l3570:
 10070  002200  BE27               	btfsc	(___flmul@temp+1)^0,7,c
 10071  002202  EF0D  F011         	goto	u3850
 10072  002206  5027               	movf	(___flmul@temp+1)^0,w,c
 10073  002208  E106               	bnz	u3851
 10074  00220A  0426               	decf	___flmul@temp^0,w,c
 10075  00220C  B0D8               	btfsc	status,0,c
 10076  00220E  EF0B  F011         	goto	u3851
 10077  002212  EF0D  F011         	goto	u3850
 10078  002216                     u3851:
 10079  002216  EF19  F011         	goto	l780
 10080  00221A                     u3850:
 10081  00221A  0E00               	movlw	0
 10082  00221C  6E22               	movwf	___flmul@prod^0,c
 10083  00221E  0E00               	movlw	0
 10084  002220  6E23               	movwf	(___flmul@prod+1)^0,c
 10085  002222  0E00               	movlw	0
 10086  002224  6E24               	movwf	(___flmul@prod+2)^0,c
 10087  002226  0E00               	movlw	0
 10088  002228  6E25               	movwf	(___flmul@prod+3)^0,c
 10089  00222A  0E00               	movlw	0
 10090  00222C  6E1B               	movwf	___flmul@sign^0,c
 10091  00222E  EF2E  F011         	goto	l3582
 10092  002232                     l780:
 10093  002232  C026  F021         	movff	___flmul@temp,___flmul@bexp
 10094  002236  0EFF               	movlw	255
 10095  002238  1622               	andwf	___flmul@prod^0,f,c
 10096  00223A  0EFF               	movlw	255
 10097  00223C  1623               	andwf	(___flmul@prod+1)^0,f,c
 10098  00223E  0E7F               	movlw	127
 10099  002240  1624               	andwf	(___flmul@prod+2)^0,f,c
 10100  002242  0E00               	movlw	0
 10101  002244  1625               	andwf	(___flmul@prod+3)^0,f,c
 10102  002246  A021               	btfss	___flmul@bexp^0,0,c
 10103  002248  EF28  F011         	goto	u3861
 10104  00224C  EF2A  F011         	goto	u3860
 10105  002250                     u3861:
 10106  002250  EF2B  F011         	goto	l3580
 10107  002254                     u3860:
 10108  002254  8E24               	bsf	(___flmul@prod+2)^0,7,c
 10109  002256                     l3580:
 10110  002256  90D8               	bcf	status,0,c
 10111  002258  3021               	rrcf	___flmul@bexp^0,w,c
 10112  00225A  6E25               	movwf	(___flmul@prod+3)^0,c
 10113  00225C                     l3582:
 10114  00225C  501B               	movf	___flmul@sign^0,w,c
 10115  00225E  1225               	iorwf	(___flmul@prod+3)^0,f,c
 10116  002260  C022  F00F         	movff	___flmul@prod,?___flmul
 10117  002264  C023  F010         	movff	___flmul@prod+1,?___flmul+1
 10118  002268  C024  F011         	movff	___flmul@prod+2,?___flmul+2
 10119  00226C  C025  F012         	movff	___flmul@prod+3,?___flmul+3
 10120  002270                     l767:
 10121  002270  0012               	return		;funcret
 10122  002272                     __end_of___flmul:
 10123                           	callstack 0
 10124                           
 10125 ;; *************** function ___fldiv *****************
 10126 ;; Defined at:
 10127 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcdiv.c"
 10128 ;; Parameters:    Size  Location     Type
 10129 ;;  b               4   39[COMRAM] unsigned char 
 10130 ;;  a               4   43[COMRAM] unsigned char 
 10131 ;; Auto vars:     Size  Location     Type
 10132 ;;  grs             4   58[COMRAM] unsigned long 
 10133 ;;  rem             4   51[COMRAM] unsigned long 
 10134 ;;  new_exp         2   56[COMRAM] short 
 10135 ;;  aexp            1   63[COMRAM] unsigned char 
 10136 ;;  bexp            1   62[COMRAM] unsigned char 
 10137 ;;  sign            1   55[COMRAM] unsigned char 
 10138 ;; Return value:  Size  Location     Type
 10139 ;;                  4   39[COMRAM] unsigned char 
 10140 ;; Registers used:
 10141 ;;		wreg, status,2, status,0
 10142 ;; Tracked objects:
 10143 ;;		On entry : 0/0
 10144 ;;		On exit  : 0/0
 10145 ;;		Unchanged: 0/0
 10146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10147 ;;      Params:         8       0       0       0       0       0       0
 10148 ;;      Locals:        13       0       0       0       0       0       0
 10149 ;;      Temps:          4       0       0       0       0       0       0
 10150 ;;      Totals:        25       0       0       0       0       0       0
 10151 ;;Total ram usage:       25 bytes
 10152 ;; Hardware stack levels used: 1
 10153 ;; This function calls:
 10154 ;;		Nothing
 10155 ;; This function is called by:
 10156 ;;		_equation_SENSOR
 10157 ;;		_efgtoa
 10158 ;; This function uses a non-reentrant model
 10159 ;;
 10160                           
 10161                           	psect	text44
 10162  002272                     __ptext44:
 10163                           	callstack 0
 10164  002272                     ___fldiv:
 10165                           	callstack 25
 10166  002272  502B               	movf	(___fldiv@b+3)^0,w,c
 10167  002274  0B80               	andlw	128
 10168  002276  6E38               	movwf	___fldiv@sign^0,c
 10169  002278  502B               	movf	(___fldiv@b+3)^0,w,c
 10170  00227A  242B               	addwf	(___fldiv@b+3)^0,w,c
 10171  00227C  6E3F               	movwf	___fldiv@bexp^0,c
 10172  00227E  AE2A               	btfss	(___fldiv@b+2)^0,7,c
 10173  002280  EF44  F011         	goto	u3451
 10174  002284  EF46  F011         	goto	u3450
 10175  002288                     u3451:
 10176  002288  EF47  F011         	goto	l3326
 10177  00228C                     u3450:
 10178  00228C  803F               	bsf	___fldiv@bexp^0,0,c
 10179  00228E                     l3326:
 10180  00228E  503F               	movf	___fldiv@bexp^0,w,c
 10181  002290  B4D8               	btfsc	status,2,c
 10182  002292  EF4D  F011         	goto	u3461
 10183  002296  EF4F  F011         	goto	u3460
 10184  00229A                     u3461:
 10185  00229A  EF64  F011         	goto	l3336
 10186  00229E                     u3460:
 10187  00229E  283F               	incf	___fldiv@bexp^0,w,c
 10188  0022A0  A4D8               	btfss	status,2,c
 10189  0022A2  EF55  F011         	goto	u3471
 10190  0022A6  EF57  F011         	goto	u3470
 10191  0022AA                     u3471:
 10192  0022AA  EF5F  F011         	goto	l3332
 10193  0022AE                     u3470:
 10194  0022AE  0E00               	movlw	0
 10195  0022B0  6E28               	movwf	___fldiv@b^0,c
 10196  0022B2  0E00               	movlw	0
 10197  0022B4  6E29               	movwf	(___fldiv@b+1)^0,c
 10198  0022B6  0E00               	movlw	0
 10199  0022B8  6E2A               	movwf	(___fldiv@b+2)^0,c
 10200  0022BA  0E00               	movlw	0
 10201  0022BC  6E2B               	movwf	(___fldiv@b+3)^0,c
 10202  0022BE                     l3332:
 10203  0022BE  8E2A               	bsf	(___fldiv@b+2)^0,7,c
 10204  0022C0  0E00               	movlw	0
 10205  0022C2  6E2B               	movwf	(___fldiv@b+3)^0,c
 10206  0022C4  EF6C  F011         	goto	l3338
 10207  0022C8                     l3336:
 10208  0022C8  0E00               	movlw	0
 10209  0022CA  6E28               	movwf	___fldiv@b^0,c
 10210  0022CC  0E00               	movlw	0
 10211  0022CE  6E29               	movwf	(___fldiv@b+1)^0,c
 10212  0022D0  0E00               	movlw	0
 10213  0022D2  6E2A               	movwf	(___fldiv@b+2)^0,c
 10214  0022D4  0E00               	movlw	0
 10215  0022D6  6E2B               	movwf	(___fldiv@b+3)^0,c
 10216  0022D8                     l3338:
 10217  0022D8  502F               	movf	(___fldiv@a+3)^0,w,c
 10218  0022DA  0B80               	andlw	128
 10219  0022DC  1A38               	xorwf	___fldiv@sign^0,f,c
 10220  0022DE  502F               	movf	(___fldiv@a+3)^0,w,c
 10221  0022E0  242F               	addwf	(___fldiv@a+3)^0,w,c
 10222  0022E2  6E40               	movwf	___fldiv@aexp^0,c
 10223  0022E4  AE2E               	btfss	(___fldiv@a+2)^0,7,c
 10224  0022E6  EF77  F011         	goto	u3481
 10225  0022EA  EF79  F011         	goto	u3480
 10226  0022EE                     u3481:
 10227  0022EE  EF7A  F011         	goto	l3346
 10228  0022F2                     u3480:
 10229  0022F2  8040               	bsf	___fldiv@aexp^0,0,c
 10230  0022F4                     l3346:
 10231  0022F4  5040               	movf	___fldiv@aexp^0,w,c
 10232  0022F6  B4D8               	btfsc	status,2,c
 10233  0022F8  EF80  F011         	goto	u3491
 10234  0022FC  EF82  F011         	goto	u3490
 10235  002300                     u3491:
 10236  002300  EF97  F011         	goto	l3356
 10237  002304                     u3490:
 10238  002304  2840               	incf	___fldiv@aexp^0,w,c
 10239  002306  A4D8               	btfss	status,2,c
 10240  002308  EF88  F011         	goto	u3501
 10241  00230C  EF8A  F011         	goto	u3500
 10242  002310                     u3501:
 10243  002310  EF92  F011         	goto	l3352
 10244  002314                     u3500:
 10245  002314  0E00               	movlw	0
 10246  002316  6E2C               	movwf	___fldiv@a^0,c
 10247  002318  0E00               	movlw	0
 10248  00231A  6E2D               	movwf	(___fldiv@a+1)^0,c
 10249  00231C  0E00               	movlw	0
 10250  00231E  6E2E               	movwf	(___fldiv@a+2)^0,c
 10251  002320  0E00               	movlw	0
 10252  002322  6E2F               	movwf	(___fldiv@a+3)^0,c
 10253  002324                     l3352:
 10254  002324  8E2E               	bsf	(___fldiv@a+2)^0,7,c
 10255  002326  0E00               	movlw	0
 10256  002328  6E2F               	movwf	(___fldiv@a+3)^0,c
 10257  00232A  EF9F  F011         	goto	l3358
 10258  00232E                     l3356:
 10259  00232E  0E00               	movlw	0
 10260  002330  6E2C               	movwf	___fldiv@a^0,c
 10261  002332  0E00               	movlw	0
 10262  002334  6E2D               	movwf	(___fldiv@a+1)^0,c
 10263  002336  0E00               	movlw	0
 10264  002338  6E2E               	movwf	(___fldiv@a+2)^0,c
 10265  00233A  0E00               	movlw	0
 10266  00233C  6E2F               	movwf	(___fldiv@a+3)^0,c
 10267  00233E                     l3358:
 10268  00233E  502C               	movf	___fldiv@a^0,w,c
 10269  002340  102D               	iorwf	(___fldiv@a+1)^0,w,c
 10270  002342  102E               	iorwf	(___fldiv@a+2)^0,w,c
 10271  002344  102F               	iorwf	(___fldiv@a+3)^0,w,c
 10272  002346  A4D8               	btfss	status,2,c
 10273  002348  EFA8  F011         	goto	u3511
 10274  00234C  EFAA  F011         	goto	u3510
 10275  002350                     u3511:
 10276  002350  EFC2  F011         	goto	l3370
 10277  002354                     u3510:
 10278  002354  0E00               	movlw	0
 10279  002356  6E28               	movwf	___fldiv@b^0,c
 10280  002358  0E00               	movlw	0
 10281  00235A  6E29               	movwf	(___fldiv@b+1)^0,c
 10282  00235C  0E00               	movlw	0
 10283  00235E  6E2A               	movwf	(___fldiv@b+2)^0,c
 10284  002360  0E00               	movlw	0
 10285  002362  6E2B               	movwf	(___fldiv@b+3)^0,c
 10286  002364  0E80               	movlw	128
 10287  002366  122A               	iorwf	(___fldiv@b+2)^0,f,c
 10288  002368  0E7F               	movlw	127
 10289  00236A  122B               	iorwf	(___fldiv@b+3)^0,f,c
 10290  00236C                     l3364:
 10291  00236C  5038               	movf	___fldiv@sign^0,w,c
 10292  00236E  122B               	iorwf	(___fldiv@b+3)^0,f,c
 10293  002370  C028  F028         	movff	___fldiv@b,?___fldiv
 10294  002374  C029  F029         	movff	___fldiv@b+1,?___fldiv+1
 10295  002378  C02A  F02A         	movff	___fldiv@b+2,?___fldiv+2
 10296  00237C  C02B  F02B         	movff	___fldiv@b+3,?___fldiv+3
 10297  002380  EF05  F013         	goto	l731
 10298  002384                     l3370:
 10299  002384  503F               	movf	___fldiv@bexp^0,w,c
 10300  002386  A4D8               	btfss	status,2,c
 10301  002388  EFC8  F011         	goto	u3521
 10302  00238C  EFCA  F011         	goto	u3520
 10303  002390                     u3521:
 10304  002390  EFD4  F011         	goto	l3378
 10305  002394                     u3520:
 10306  002394  0E00               	movlw	0
 10307  002396  6E28               	movwf	?___fldiv^0,c
 10308  002398  0E00               	movlw	0
 10309  00239A  6E29               	movwf	(?___fldiv+1)^0,c
 10310  00239C  0E00               	movlw	0
 10311  00239E  6E2A               	movwf	(?___fldiv+2)^0,c
 10312  0023A0  0E00               	movlw	0
 10313  0023A2  6E2B               	movwf	(?___fldiv+3)^0,c
 10314  0023A4  EF05  F013         	goto	l731
 10315  0023A8                     l3378:
 10316  0023A8  5040               	movf	___fldiv@aexp^0,w,c
 10317  0023AA  C03F  F030         	movff	___fldiv@bexp,??___fldiv
 10318  0023AE  6A31               	clrf	(??___fldiv+1)^0,c
 10319  0023B0  5E30               	subwf	??___fldiv^0,f,c
 10320  0023B2  0E00               	movlw	0
 10321  0023B4  5A31               	subwfb	(??___fldiv+1)^0,f,c
 10322  0023B6  0E7F               	movlw	127
 10323  0023B8  2430               	addwf	??___fldiv^0,w,c
 10324  0023BA  6E39               	movwf	___fldiv@new_exp^0,c
 10325  0023BC  0E00               	movlw	0
 10326  0023BE  2031               	addwfc	(??___fldiv+1)^0,w,c
 10327  0023C0  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
 10328  0023C2  C028  F034         	movff	___fldiv@b,___fldiv@rem
 10329  0023C6  C029  F035         	movff	___fldiv@b+1,___fldiv@rem+1
 10330  0023CA  C02A  F036         	movff	___fldiv@b+2,___fldiv@rem+2
 10331  0023CE  C02B  F037         	movff	___fldiv@b+3,___fldiv@rem+3
 10332  0023D2  0E00               	movlw	0
 10333  0023D4  6E28               	movwf	___fldiv@b^0,c
 10334  0023D6  0E00               	movlw	0
 10335  0023D8  6E29               	movwf	(___fldiv@b+1)^0,c
 10336  0023DA  0E00               	movlw	0
 10337  0023DC  6E2A               	movwf	(___fldiv@b+2)^0,c
 10338  0023DE  0E00               	movlw	0
 10339  0023E0  6E2B               	movwf	(___fldiv@b+3)^0,c
 10340  0023E2  0E00               	movlw	0
 10341  0023E4  6E3B               	movwf	___fldiv@grs^0,c
 10342  0023E6  0E00               	movlw	0
 10343  0023E8  6E3C               	movwf	(___fldiv@grs+1)^0,c
 10344  0023EA  0E00               	movlw	0
 10345  0023EC  6E3D               	movwf	(___fldiv@grs+2)^0,c
 10346  0023EE  0E00               	movlw	0
 10347  0023F0  6E3E               	movwf	(___fldiv@grs+3)^0,c
 10348  0023F2  0E00               	movlw	0
 10349  0023F4  6E40               	movwf	___fldiv@aexp^0,c
 10350  0023F6  EF35  F012         	goto	l733
 10351  0023FA                     l3388:
 10352  0023FA  5040               	movf	___fldiv@aexp^0,w,c
 10353  0023FC  B4D8               	btfsc	status,2,c
 10354  0023FE  EF03  F012         	goto	u3531
 10355  002402  EF05  F012         	goto	u3530
 10356  002406                     u3531:
 10357  002406  EF1C  F012         	goto	l3396
 10358  00240A                     u3530:
 10359  00240A  90D8               	bcf	status,0,c
 10360  00240C  3634               	rlcf	___fldiv@rem^0,f,c
 10361  00240E  3635               	rlcf	(___fldiv@rem+1)^0,f,c
 10362  002410  3636               	rlcf	(___fldiv@rem+2)^0,f,c
 10363  002412  3637               	rlcf	(___fldiv@rem+3)^0,f,c
 10364  002414  90D8               	bcf	status,0,c
 10365  002416  3628               	rlcf	___fldiv@b^0,f,c
 10366  002418  3629               	rlcf	(___fldiv@b+1)^0,f,c
 10367  00241A  362A               	rlcf	(___fldiv@b+2)^0,f,c
 10368  00241C  362B               	rlcf	(___fldiv@b+3)^0,f,c
 10369  00241E  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
 10370  002420  EF14  F012         	goto	u3541
 10371  002424  EF16  F012         	goto	u3540
 10372  002428                     u3541:
 10373  002428  EF17  F012         	goto	l736
 10374  00242C                     u3540:
 10375  00242C  8028               	bsf	___fldiv@b^0,0,c
 10376  00242E                     l736:
 10377  00242E  90D8               	bcf	status,0,c
 10378  002430  363B               	rlcf	___fldiv@grs^0,f,c
 10379  002432  363C               	rlcf	(___fldiv@grs+1)^0,f,c
 10380  002434  363D               	rlcf	(___fldiv@grs+2)^0,f,c
 10381  002436  363E               	rlcf	(___fldiv@grs+3)^0,f,c
 10382  002438                     l3396:
 10383  002438  502C               	movf	___fldiv@a^0,w,c
 10384  00243A  5C34               	subwf	___fldiv@rem^0,w,c
 10385  00243C  502D               	movf	(___fldiv@a+1)^0,w,c
 10386  00243E  5835               	subwfb	(___fldiv@rem+1)^0,w,c
 10387  002440  502E               	movf	(___fldiv@a+2)^0,w,c
 10388  002442  5836               	subwfb	(___fldiv@rem+2)^0,w,c
 10389  002444  502F               	movf	(___fldiv@a+3)^0,w,c
 10390  002446  5837               	subwfb	(___fldiv@rem+3)^0,w,c
 10391  002448  A0D8               	btfss	status,0,c
 10392  00244A  EF29  F012         	goto	u3551
 10393  00244E  EF2B  F012         	goto	u3550
 10394  002452                     u3551:
 10395  002452  EF34  F012         	goto	l3402
 10396  002456                     u3550:
 10397  002456  8C3E               	bsf	(___fldiv@grs+3)^0,6,c
 10398  002458  502C               	movf	___fldiv@a^0,w,c
 10399  00245A  5E34               	subwf	___fldiv@rem^0,f,c
 10400  00245C  502D               	movf	(___fldiv@a+1)^0,w,c
 10401  00245E  5A35               	subwfb	(___fldiv@rem+1)^0,f,c
 10402  002460  502E               	movf	(___fldiv@a+2)^0,w,c
 10403  002462  5A36               	subwfb	(___fldiv@rem+2)^0,f,c
 10404  002464  502F               	movf	(___fldiv@a+3)^0,w,c
 10405  002466  5A37               	subwfb	(___fldiv@rem+3)^0,f,c
 10406  002468                     l3402:
 10407  002468  2A40               	incf	___fldiv@aexp^0,f,c
 10408  00246A                     l733:
 10409  00246A  0E19               	movlw	25
 10410  00246C  6440               	cpfsgt	___fldiv@aexp^0,c
 10411  00246E  EF3B  F012         	goto	u3561
 10412  002472  EF3D  F012         	goto	u3560
 10413  002476                     u3561:
 10414  002476  EFFD  F011         	goto	l3388
 10415  00247A                     u3560:
 10416  00247A  5034               	movf	___fldiv@rem^0,w,c
 10417  00247C  1035               	iorwf	(___fldiv@rem+1)^0,w,c
 10418  00247E  1036               	iorwf	(___fldiv@rem+2)^0,w,c
 10419  002480  1037               	iorwf	(___fldiv@rem+3)^0,w,c
 10420  002482  B4D8               	btfsc	status,2,c
 10421  002484  EF46  F012         	goto	u3571
 10422  002488  EF48  F012         	goto	u3570
 10423  00248C                     u3571:
 10424  00248C  EF60  F012         	goto	l3414
 10425  002490                     u3570:
 10426  002490  803B               	bsf	___fldiv@grs^0,0,c
 10427  002492  EF60  F012         	goto	l3414
 10428  002496                     l3408:
 10429  002496  90D8               	bcf	status,0,c
 10430  002498  3628               	rlcf	___fldiv@b^0,f,c
 10431  00249A  3629               	rlcf	(___fldiv@b+1)^0,f,c
 10432  00249C  362A               	rlcf	(___fldiv@b+2)^0,f,c
 10433  00249E  362B               	rlcf	(___fldiv@b+3)^0,f,c
 10434  0024A0  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
 10435  0024A2  EF55  F012         	goto	u3581
 10436  0024A6  EF57  F012         	goto	u3580
 10437  0024AA                     u3581:
 10438  0024AA  EF58  F012         	goto	l742
 10439  0024AE                     u3580:
 10440  0024AE  8028               	bsf	___fldiv@b^0,0,c
 10441  0024B0                     l742:
 10442  0024B0  90D8               	bcf	status,0,c
 10443  0024B2  363B               	rlcf	___fldiv@grs^0,f,c
 10444  0024B4  363C               	rlcf	(___fldiv@grs+1)^0,f,c
 10445  0024B6  363D               	rlcf	(___fldiv@grs+2)^0,f,c
 10446  0024B8  363E               	rlcf	(___fldiv@grs+3)^0,f,c
 10447  0024BA  0639               	decf	___fldiv@new_exp^0,f,c
 10448  0024BC  A0D8               	btfss	status,0,c
 10449  0024BE  063A               	decf	(___fldiv@new_exp+1)^0,f,c
 10450  0024C0                     l3414:
 10451  0024C0  AE2A               	btfss	(___fldiv@b+2)^0,7,c
 10452  0024C2  EF65  F012         	goto	u3591
 10453  0024C6  EF67  F012         	goto	u3590
 10454  0024CA                     u3591:
 10455  0024CA  EF4B  F012         	goto	l3408
 10456  0024CE                     u3590:
 10457  0024CE  0E00               	movlw	0
 10458  0024D0  6E40               	movwf	___fldiv@aexp^0,c
 10459  0024D2  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
 10460  0024D4  EF6E  F012         	goto	u3601
 10461  0024D8  EF70  F012         	goto	u3600
 10462  0024DC                     u3601:
 10463  0024DC  EF94  F012         	goto	l744
 10464  0024E0                     u3600:
 10465  0024E0  0EFF               	movlw	255
 10466  0024E2  143B               	andwf	___fldiv@grs^0,w,c
 10467  0024E4  6E30               	movwf	??___fldiv^0,c
 10468  0024E6  0EFF               	movlw	255
 10469  0024E8  143C               	andwf	(___fldiv@grs+1)^0,w,c
 10470  0024EA  6E31               	movwf	(??___fldiv+1)^0,c
 10471  0024EC  0EFF               	movlw	255
 10472  0024EE  143D               	andwf	(___fldiv@grs+2)^0,w,c
 10473  0024F0  6E32               	movwf	(??___fldiv+2)^0,c
 10474  0024F2  0E7F               	movlw	127
 10475  0024F4  143E               	andwf	(___fldiv@grs+3)^0,w,c
 10476  0024F6  6E33               	movwf	(??___fldiv+3)^0,c
 10477  0024F8  5030               	movf	??___fldiv^0,w,c
 10478  0024FA  1031               	iorwf	(??___fldiv+1)^0,w,c
 10479  0024FC  1032               	iorwf	(??___fldiv+2)^0,w,c
 10480  0024FE  1033               	iorwf	(??___fldiv+3)^0,w,c
 10481  002500  B4D8               	btfsc	status,2,c
 10482  002502  EF85  F012         	goto	u3611
 10483  002506  EF87  F012         	goto	u3610
 10484  00250A                     u3611:
 10485  00250A  EF8B  F012         	goto	l745
 10486  00250E                     u3610:
 10487  00250E                     l3422:
 10488  00250E  0E01               	movlw	1
 10489  002510  6E40               	movwf	___fldiv@aexp^0,c
 10490  002512  EF94  F012         	goto	l744
 10491  002516                     l745:
 10492  002516  A028               	btfss	___fldiv@b^0,0,c
 10493  002518  EF90  F012         	goto	u3621
 10494  00251C  EF92  F012         	goto	u3620
 10495  002520                     u3621:
 10496  002520  EF94  F012         	goto	l744
 10497  002524                     u3620:
 10498  002524  EF87  F012         	goto	l3422
 10499  002528                     l744:
 10500  002528  5040               	movf	___fldiv@aexp^0,w,c
 10501  00252A  B4D8               	btfsc	status,2,c
 10502  00252C  EF9A  F012         	goto	u3631
 10503  002530  EF9C  F012         	goto	u3630
 10504  002534                     u3631:
 10505  002534  EFC0  F012         	goto	l3434
 10506  002538                     u3630:
 10507  002538  0E01               	movlw	1
 10508  00253A  2628               	addwf	___fldiv@b^0,f,c
 10509  00253C  0E00               	movlw	0
 10510  00253E  2229               	addwfc	(___fldiv@b+1)^0,f,c
 10511  002540  222A               	addwfc	(___fldiv@b+2)^0,f,c
 10512  002542  222B               	addwfc	(___fldiv@b+3)^0,f,c
 10513  002544  A02B               	btfss	(___fldiv@b+3)^0,0,c
 10514  002546  EFA7  F012         	goto	u3641
 10515  00254A  EFA9  F012         	goto	u3640
 10516  00254E                     u3641:
 10517  00254E  EFC0  F012         	goto	l3434
 10518  002552                     u3640:
 10519  002552  C028  F030         	movff	___fldiv@b,??___fldiv
 10520  002556  C029  F031         	movff	___fldiv@b+1,??___fldiv+1
 10521  00255A  C02A  F032         	movff	___fldiv@b+2,??___fldiv+2
 10522  00255E  C02B  F033         	movff	___fldiv@b+3,??___fldiv+3
 10523  002562  3433               	rlcf	(??___fldiv+3)^0,w,c
 10524  002564  3233               	rrcf	(??___fldiv+3)^0,f,c
 10525  002566  3232               	rrcf	(??___fldiv+2)^0,f,c
 10526  002568  3231               	rrcf	(??___fldiv+1)^0,f,c
 10527  00256A  3230               	rrcf	??___fldiv^0,f,c
 10528  00256C  C030  F028         	movff	??___fldiv,___fldiv@b
 10529  002570  C031  F029         	movff	??___fldiv+1,___fldiv@b+1
 10530  002574  C032  F02A         	movff	??___fldiv+2,___fldiv@b+2
 10531  002578  C033  F02B         	movff	??___fldiv+3,___fldiv@b+3
 10532  00257C  4A39               	infsnz	___fldiv@new_exp^0,f,c
 10533  00257E  2A3A               	incf	(___fldiv@new_exp+1)^0,f,c
 10534  002580                     l3434:
 10535  002580  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
 10536  002582  EFCB  F012         	goto	u3651
 10537  002586  503A               	movf	(___fldiv@new_exp+1)^0,w,c
 10538  002588  E108               	bnz	u3650
 10539  00258A  2839               	incf	___fldiv@new_exp^0,w,c
 10540  00258C  A0D8               	btfss	status,0,c
 10541  00258E  EFCB  F012         	goto	u3651
 10542  002592  EFCD  F012         	goto	u3650
 10543  002596                     u3651:
 10544  002596  EFD8  F012         	goto	l3438
 10545  00259A                     u3650:
 10546  00259A  0E00               	movlw	0
 10547  00259C  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
 10548  00259E  6839               	setf	___fldiv@new_exp^0,c
 10549  0025A0  0E00               	movlw	0
 10550  0025A2  6E28               	movwf	___fldiv@b^0,c
 10551  0025A4  0E00               	movlw	0
 10552  0025A6  6E29               	movwf	(___fldiv@b+1)^0,c
 10553  0025A8  0E00               	movlw	0
 10554  0025AA  6E2A               	movwf	(___fldiv@b+2)^0,c
 10555  0025AC  0E00               	movlw	0
 10556  0025AE  6E2B               	movwf	(___fldiv@b+3)^0,c
 10557  0025B0                     l3438:
 10558  0025B0  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
 10559  0025B2  EFE5  F012         	goto	u3660
 10560  0025B6  503A               	movf	(___fldiv@new_exp+1)^0,w,c
 10561  0025B8  E106               	bnz	u3661
 10562  0025BA  0439               	decf	___fldiv@new_exp^0,w,c
 10563  0025BC  B0D8               	btfsc	status,0,c
 10564  0025BE  EFE3  F012         	goto	u3661
 10565  0025C2  EFE5  F012         	goto	u3660
 10566  0025C6                     u3661:
 10567  0025C6  EFF3  F012         	goto	l3442
 10568  0025CA                     u3660:
 10569  0025CA  0E00               	movlw	0
 10570  0025CC  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
 10571  0025CE  0E00               	movlw	0
 10572  0025D0  6E39               	movwf	___fldiv@new_exp^0,c
 10573  0025D2  0E00               	movlw	0
 10574  0025D4  6E28               	movwf	___fldiv@b^0,c
 10575  0025D6  0E00               	movlw	0
 10576  0025D8  6E29               	movwf	(___fldiv@b+1)^0,c
 10577  0025DA  0E00               	movlw	0
 10578  0025DC  6E2A               	movwf	(___fldiv@b+2)^0,c
 10579  0025DE  0E00               	movlw	0
 10580  0025E0  6E2B               	movwf	(___fldiv@b+3)^0,c
 10581  0025E2  0E00               	movlw	0
 10582  0025E4  6E38               	movwf	___fldiv@sign^0,c
 10583  0025E6                     l3442:
 10584  0025E6  C039  F03F         	movff	___fldiv@new_exp,___fldiv@bexp
 10585  0025EA  A03F               	btfss	___fldiv@bexp^0,0,c
 10586  0025EC  EFFA  F012         	goto	u3671
 10587  0025F0  EFFC  F012         	goto	u3670
 10588  0025F4                     u3671:
 10589  0025F4  EFFF  F012         	goto	l3448
 10590  0025F8                     u3670:
 10591  0025F8  8E2A               	bsf	(___fldiv@b+2)^0,7,c
 10592  0025FA  EF00  F013         	goto	l3450
 10593  0025FE                     l3448:
 10594  0025FE  9E2A               	bcf	(___fldiv@b+2)^0,7,c
 10595  002600                     l3450:
 10596  002600  90D8               	bcf	status,0,c
 10597  002602  303F               	rrcf	___fldiv@bexp^0,w,c
 10598  002604  6E2B               	movwf	(___fldiv@b+3)^0,c
 10599  002606  EFB6  F011         	goto	l3364
 10600  00260A                     l731:
 10601  00260A  0012               	return		;funcret
 10602  00260C                     __end_of___fldiv:
 10603                           	callstack 0
 10604                           
 10605 ;; *************** function _conv_AN0 *****************
 10606 ;; Defined at:
 10607 ;;		line 108 in file "Main_Program.c"
 10608 ;; Parameters:    Size  Location     Type
 10609 ;;		None
 10610 ;; Auto vars:     Size  Location     Type
 10611 ;;		None
 10612 ;; Return value:  Size  Location     Type
 10613 ;;                  1    wreg      void 
 10614 ;; Registers used:
 10615 ;;		wreg, status,2
 10616 ;; Tracked objects:
 10617 ;;		On entry : 0/0
 10618 ;;		On exit  : 0/0
 10619 ;;		Unchanged: 0/0
 10620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10621 ;;      Params:         0       0       0       0       0       0       0
 10622 ;;      Locals:         0       0       0       0       0       0       0
 10623 ;;      Temps:          2       0       0       0       0       0       0
 10624 ;;      Totals:         2       0       0       0       0       0       0
 10625 ;;Total ram usage:        2 bytes
 10626 ;; Hardware stack levels used: 1
 10627 ;; This function calls:
 10628 ;;		Nothing
 10629 ;; This function is called by:
 10630 ;;		_main
 10631 ;; This function uses a non-reentrant model
 10632 ;;
 10633                           
 10634                           	psect	text45
 10635  00432A                     __ptext45:
 10636                           	callstack 0
 10637  00432A                     _conv_AN0:
 10638                           	callstack 30
 10639  00432A                     
 10640                           ;Main_Program.c: 110:     _delay((unsigned long)((50)*(8000000/4000.0)));
 10641  00432A  0E82               	movlw	130
 10642  00432C  6E01               	movwf	??_conv_AN0^0,c
 10643  00432E  0EDE               	movlw	222
 10644  004330                     u5787:
 10645  004330  2EE8               	decfsz	wreg,f,c
 10646  004332  D7FE               	bra	u5787
 10647  004334  2E01               	decfsz	??_conv_AN0^0,f,c
 10648  004336  D7FC               	bra	u5787
 10649  004338                     
 10650                           ;Main_Program.c: 111:     ADCON0bits.GO = 1;
 10651  004338  82C2               	bsf	194,1,c	;volatile
 10652  00433A                     l70:
 10653  00433A  B2C2               	btfsc	194,1,c	;volatile
 10654  00433C  EFA2  F021         	goto	u5571
 10655  004340  EFA4  F021         	goto	u5570
 10656  004344                     u5571:
 10657  004344  EF9D  F021         	goto	l70
 10658  004348                     u5570:
 10659  004348                     
 10660                           ;Main_Program.c: 113:     VdigADC_AN0 = ADRESH;
 10661  004348  CFC4 F0F9          	movff	4036,_VdigADC_AN0	;volatile
 10662  00434C  0100               	movlb	0	; () banked
 10663  00434E  6BFA               	clrf	(_VdigADC_AN0+1)& (0+255),b
 10664  004350                     
 10665                           ; BSR set to: 0
 10666                           ;Main_Program.c: 114:     VdigADC_AN0 = (VdigADC_AN0 << 8) + ADRESL;
 10667  004350  51F9               	movf	_VdigADC_AN0& (0+255),w,b
 10668  004352  6E01               	movwf	??_conv_AN0^0,c
 10669  004354  50C3               	movf	195,w,c	;volatile
 10670  004356  6FF9               	movwf	_VdigADC_AN0& (0+255),b
 10671  004358  C001  F0FA         	movff	??_conv_AN0,_VdigADC_AN0+1
 10672  00435C                     
 10673                           ; BSR set to: 0
 10674  00435C  0012               	return		;funcret
 10675  00435E                     __end_of_conv_AN0:
 10676                           	callstack 0
 10677                           
 10678 ;; *************** function _config_IO *****************
 10679 ;; Defined at:
 10680 ;;		line 94 in file "Main_Program.c"
 10681 ;; Parameters:    Size  Location     Type
 10682 ;;		None
 10683 ;; Auto vars:     Size  Location     Type
 10684 ;;		None
 10685 ;; Return value:  Size  Location     Type
 10686 ;;                  1    wreg      void 
 10687 ;; Registers used:
 10688 ;;		wreg, status,2
 10689 ;; Tracked objects:
 10690 ;;		On entry : 0/0
 10691 ;;		On exit  : 0/0
 10692 ;;		Unchanged: 0/0
 10693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10694 ;;      Params:         0       0       0       0       0       0       0
 10695 ;;      Locals:         0       0       0       0       0       0       0
 10696 ;;      Temps:          0       0       0       0       0       0       0
 10697 ;;      Totals:         0       0       0       0       0       0       0
 10698 ;;Total ram usage:        0 bytes
 10699 ;; Hardware stack levels used: 1
 10700 ;; This function calls:
 10701 ;;		Nothing
 10702 ;; This function is called by:
 10703 ;;		_main
 10704 ;; This function uses a non-reentrant model
 10705 ;;
 10706                           
 10707                           	psect	text46
 10708  0043F0                     __ptext46:
 10709                           	callstack 0
 10710  0043F0                     _config_IO:
 10711                           	callstack 30
 10712  0043F0                     
 10713                           ;Main_Program.c: 96:     TRISB = 0X01;
 10714  0043F0  0E01               	movlw	1
 10715  0043F2  6E93               	movwf	147,c	;volatile
 10716                           
 10717                           ;Main_Program.c: 97:     TRISC = 0X00;
 10718  0043F4  0E00               	movlw	0
 10719  0043F6  6E94               	movwf	148,c	;volatile
 10720                           
 10721                           ;Main_Program.c: 98:     PORTC = 0X00;
 10722  0043F8  0E00               	movlw	0
 10723  0043FA  6E82               	movwf	130,c	;volatile
 10724  0043FC  0012               	return		;funcret
 10725  0043FE                     __end_of_config_IO:
 10726                           	callstack 0
 10727                           
 10728 ;; *************** function _config_FOSC *****************
 10729 ;; Defined at:
 10730 ;;		line 88 in file "Main_Program.c"
 10731 ;; Parameters:    Size  Location     Type
 10732 ;;		None
 10733 ;; Auto vars:     Size  Location     Type
 10734 ;;		None
 10735 ;; Return value:  Size  Location     Type
 10736 ;;                  1    wreg      void 
 10737 ;; Registers used:
 10738 ;;		wreg, status,2
 10739 ;; Tracked objects:
 10740 ;;		On entry : 0/0
 10741 ;;		On exit  : 0/0
 10742 ;;		Unchanged: 0/0
 10743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10744 ;;      Params:         0       0       0       0       0       0       0
 10745 ;;      Locals:         0       0       0       0       0       0       0
 10746 ;;      Temps:          0       0       0       0       0       0       0
 10747 ;;      Totals:         0       0       0       0       0       0       0
 10748 ;;Total ram usage:        0 bytes
 10749 ;; Hardware stack levels used: 1
 10750 ;; This function calls:
 10751 ;;		Nothing
 10752 ;; This function is called by:
 10753 ;;		_main
 10754 ;; This function uses a non-reentrant model
 10755 ;;
 10756                           
 10757                           	psect	text47
 10758  00440C                     __ptext47:
 10759                           	callstack 0
 10760  00440C                     _config_FOSC:
 10761                           	callstack 30
 10762  00440C                     
 10763                           ;Main_Program.c: 90:     OSCCON = 0X00;
 10764  00440C  0E00               	movlw	0
 10765  00440E  6ED3               	movwf	211,c	;volatile
 10766                           
 10767                           ;Main_Program.c: 91:     OSCTUNE = 0X00;
 10768  004410  0E00               	movlw	0
 10769  004412  6E9B               	movwf	155,c	;volatile
 10770  004414  0012               	return		;funcret
 10771  004416                     __end_of_config_FOSC:
 10772                           	callstack 0
 10773                           
 10774 ;; *************** function _config_ADC *****************
 10775 ;; Defined at:
 10776 ;;		line 101 in file "Main_Program.c"
 10777 ;; Parameters:    Size  Location     Type
 10778 ;;		None
 10779 ;; Auto vars:     Size  Location     Type
 10780 ;;		None
 10781 ;; Return value:  Size  Location     Type
 10782 ;;                  1    wreg      void 
 10783 ;; Registers used:
 10784 ;;		wreg, status,2
 10785 ;; Tracked objects:
 10786 ;;		On entry : 0/0
 10787 ;;		On exit  : 0/0
 10788 ;;		Unchanged: 0/0
 10789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10790 ;;      Params:         0       0       0       0       0       0       0
 10791 ;;      Locals:         0       0       0       0       0       0       0
 10792 ;;      Temps:          0       0       0       0       0       0       0
 10793 ;;      Totals:         0       0       0       0       0       0       0
 10794 ;;Total ram usage:        0 bytes
 10795 ;; Hardware stack levels used: 1
 10796 ;; This function calls:
 10797 ;;		Nothing
 10798 ;; This function is called by:
 10799 ;;		_main
 10800 ;; This function uses a non-reentrant model
 10801 ;;
 10802                           
 10803                           	psect	text48
 10804  0043FE                     __ptext48:
 10805                           	callstack 0
 10806  0043FE                     _config_ADC:
 10807                           	callstack 30
 10808  0043FE                     
 10809                           ;Main_Program.c: 103:     ADCON0 = 0X01;
 10810  0043FE  0E01               	movlw	1
 10811  004400  6EC2               	movwf	194,c	;volatile
 10812                           
 10813                           ;Main_Program.c: 104:     ADCON1 = 0X0E;
 10814  004402  0E0E               	movlw	14
 10815  004404  6EC1               	movwf	193,c	;volatile
 10816                           
 10817                           ;Main_Program.c: 105:     ADCON2 = 0X80;
 10818  004406  0E80               	movlw	128
 10819  004408  6EC0               	movwf	192,c	;volatile
 10820  00440A  0012               	return		;funcret
 10821  00440C                     __end_of_config_ADC:
 10822                           	callstack 0
 10823                           
 10824                           	psect	rparam
 10825  0000                     
 10826                           	psect	idloc
 10827                           
 10828                           ;Config register IDLOC0 @ 0x200000
 10829                           ;	unspecified, using default values
 10830  200000                     	org	2097152
 10831  200000  FF                 	db	255
 10832                           
 10833                           ;Config register IDLOC1 @ 0x200001
 10834                           ;	unspecified, using default values
 10835  200001                     	org	2097153
 10836  200001  FF                 	db	255
 10837                           
 10838                           ;Config register IDLOC2 @ 0x200002
 10839                           ;	unspecified, using default values
 10840  200002                     	org	2097154
 10841  200002  FF                 	db	255
 10842                           
 10843                           ;Config register IDLOC3 @ 0x200003
 10844                           ;	unspecified, using default values
 10845  200003                     	org	2097155
 10846  200003  FF                 	db	255
 10847                           
 10848                           ;Config register IDLOC4 @ 0x200004
 10849                           ;	unspecified, using default values
 10850  200004                     	org	2097156
 10851  200004  FF                 	db	255
 10852                           
 10853                           ;Config register IDLOC5 @ 0x200005
 10854                           ;	unspecified, using default values
 10855  200005                     	org	2097157
 10856  200005  FF                 	db	255
 10857                           
 10858                           ;Config register IDLOC6 @ 0x200006
 10859                           ;	unspecified, using default values
 10860  200006                     	org	2097158
 10861  200006  FF                 	db	255
 10862                           
 10863                           ;Config register IDLOC7 @ 0x200007
 10864                           ;	unspecified, using default values
 10865  200007                     	org	2097159
 10866  200007  FF                 	db	255
 10867                           
 10868                           	psect	config
 10869                           
 10870                           ; Padding undefined space
 10871  300000                     	org	3145728
 10872  300000  FF                 	db	255
 10873                           
 10874                           ;Config register CONFIG1H @ 0x300001
 10875                           ;	Oscillator Selection bits
 10876                           ;	OSC = HS, HS oscillator
 10877                           ;	Fail-Safe Clock Monitor Enable bit
 10878                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 10879                           ;	Internal/External Oscillator Switchover bit
 10880                           ;	IESO = OFF, Oscillator Switchover mode disabled
 10881  300001                     	org	3145729
 10882  300001  02                 	db	2
 10883                           
 10884                           ;Config register CONFIG2L @ 0x300002
 10885                           ;	Power-up Timer Enable bit
 10886                           ;	PWRT = OFF, PWRT disabled
 10887                           ;	Brown-out Reset Enable bits
 10888                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
 10889                           ;	Brown Out Reset Voltage bits
 10890                           ;	BORV = 3, Minimum setting
 10891  300002                     	org	3145730
 10892  300002  19                 	db	25
 10893                           
 10894                           ;Config register CONFIG2H @ 0x300003
 10895                           ;	Watchdog Timer Enable bit
 10896                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 10897                           ;	Watchdog Timer Postscale Select bits
 10898                           ;	WDTPS = 32768, 1:32768
 10899  300003                     	org	3145731
 10900  300003  1E                 	db	30
 10901                           
 10902                           ; Padding undefined space
 10903  300004                     	org	3145732
 10904  300004  FF                 	db	255
 10905                           
 10906                           ;Config register CONFIG3H @ 0x300005
 10907                           ;	CCP2 MUX bit
 10908                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
 10909                           ;	PORTB A/D Enable bit
 10910                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
 10911                           ;	Low-Power Timer1 Oscillator Enable bit
 10912                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 10913                           ;	MCLR Pin Enable bit
 10914                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 10915  300005                     	org	3145733
 10916  300005  81                 	db	129
 10917                           
 10918                           ;Config register CONFIG4L @ 0x300006
 10919                           ;	Stack Full/Underflow Reset Enable bit
 10920                           ;	STVREN = ON, Stack full/underflow will cause Reset
 10921                           ;	Single-Supply ICSP Enable bit
 10922                           ;	LVP = OFF, Single-Supply ICSP disabled
 10923                           ;	Extended Instruction Set Enable bit
 10924                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 10925                           ;	Background Debugger Enable bit
 10926                           ;	DEBUG = 0x1, unprogrammed default
 10927  300006                     	org	3145734
 10928  300006  81                 	db	129
 10929                           
 10930                           ; Padding undefined space
 10931  300007                     	org	3145735
 10932  300007  FF                 	db	255
 10933                           
 10934                           ;Config register CONFIG5L @ 0x300008
 10935                           ;	Code Protection bit
 10936                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
 10937                           ;	Code Protection bit
 10938                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
 10939                           ;	Code Protection bit
 10940                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
 10941                           ;	Code Protection bit
 10942                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
 10943  300008                     	org	3145736
 10944  300008  0F                 	db	15
 10945                           
 10946                           ;Config register CONFIG5H @ 0x300009
 10947                           ;	Boot Block Code Protection bit
 10948                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 10949                           ;	Data EEPROM Code Protection bit
 10950                           ;	CPD = OFF, Data EEPROM not code-protected
 10951  300009                     	org	3145737
 10952  300009  C0                 	db	192
 10953                           
 10954                           ;Config register CONFIG6L @ 0x30000A
 10955                           ;	Write Protection bit
 10956                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
 10957                           ;	Write Protection bit
 10958                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
 10959                           ;	Write Protection bit
 10960                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
 10961                           ;	Write Protection bit
 10962                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
 10963  30000A                     	org	3145738
 10964  30000A  0F                 	db	15
 10965                           
 10966                           ;Config register CONFIG6H @ 0x30000B
 10967                           ;	Configuration Register Write Protection bit
 10968                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 10969                           ;	Boot Block Write Protection bit
 10970                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
 10971                           ;	Data EEPROM Write Protection bit
 10972                           ;	WRTD = OFF, Data EEPROM not write-protected
 10973  30000B                     	org	3145739
 10974  30000B  E0                 	db	224
 10975                           
 10976                           ;Config register CONFIG7L @ 0x30000C
 10977                           ;	Table Read Protection bit
 10978                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
 10979                           ;	Table Read Protection bit
 10980                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
 10981                           ;	Table Read Protection bit
 10982                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
 10983                           ;	Table Read Protection bit
 10984                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
 10985  30000C                     	org	3145740
 10986  30000C  0F                 	db	15
 10987                           
 10988                           ;Config register CONFIG7H @ 0x30000D
 10989                           ;	Boot Block Table Read Protection bit
 10990                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 10991  30000D                     	org	3145741
 10992  30000D  40                 	db	64
 10993                           tosu	equ	0xFFF
 10994                           tosh	equ	0xFFE
 10995                           tosl	equ	0xFFD
 10996                           stkptr	equ	0xFFC
 10997                           pclatu	equ	0xFFB
 10998                           pclath	equ	0xFFA
 10999                           pcl	equ	0xFF9
 11000                           tblptru	equ	0xFF8
 11001                           tblptrh	equ	0xFF7
 11002                           tblptrl	equ	0xFF6
 11003                           tablat	equ	0xFF5
 11004                           prodh	equ	0xFF4
 11005                           prodl	equ	0xFF3
 11006                           indf0	equ	0xFEF
 11007                           postinc0	equ	0xFEE
 11008                           postdec0	equ	0xFED
 11009                           preinc0	equ	0xFEC
 11010                           plusw0	equ	0xFEB
 11011                           fsr0h	equ	0xFEA
 11012                           fsr0l	equ	0xFE9
 11013                           wreg	equ	0xFE8
 11014                           indf1	equ	0xFE7
 11015                           postinc1	equ	0xFE6
 11016                           postdec1	equ	0xFE5
 11017                           preinc1	equ	0xFE4
 11018                           plusw1	equ	0xFE3
 11019                           fsr1h	equ	0xFE2
 11020                           fsr1l	equ	0xFE1
 11021                           bsr	equ	0xFE0
 11022                           indf2	equ	0xFDF
 11023                           postinc2	equ	0xFDE
 11024                           postdec2	equ	0xFDD
 11025                           preinc2	equ	0xFDC
 11026                           plusw2	equ	0xFDB
 11027                           fsr2h	equ	0xFDA
 11028                           fsr2l	equ	0xFD9
 11029                           status	equ	0xFD8

Data Sizes:
    Strings     114
    Constant    0
    Data        0
    BSS         172
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    120     126
    BANK0           128     85     123
    BANK1           256      0     128
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_25(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_25(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(COMRAM[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(COMRAM[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_20(CODE[4]), STR_19(CODE[4]), STR_16(CODE[4]), STR_15(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_20(CODE[4]), STR_19(CODE[4]), STR_16(CODE[4]), STR_15(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_7(CODE[6]), STR_6(CODE[5]), STR_5(CODE[5]), STR_2(CODE[14]), 
		 -> STR_1(CODE[15]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_7(CODE[6]), STR_6(CODE[5]), STR_5(CODE[5]), STR_2(CODE[14]), 
		 -> STR_1(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 15
		 -> STR_7(CODE[6]), STR_6(CODE[5]), STR_5(CODE[5]), STR_2(CODE[14]), 
		 -> STR_1(CODE[15]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_7(CODE[6]), STR_6(CODE[5]), STR_5(CODE[5]), STR_2(CODE[14]), 
		 -> STR_1(CODE[15]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> BufferRES(BANK1[8]), BufferFAN2(BANK1[8]), BufferFAN1(BANK0[8]), BufferLCD_Percent(BANK1[16]), 
		 -> BufferLCD_Temp(BANK1[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1011$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1011$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    lcd_write@str	PTR unsigned char  size(2) Largest target is 16
		 -> STR_14(CODE[16]), STR_13(CODE[16]), STR_12(CODE[11]), STR_11(CODE[5]), 
		 -> STR_10(CODE[2]), STR_9(CODE[8]), STR_8(CODE[7]), BufferRES(BANK1[8]), 
		 -> BufferFAN2(BANK1[8]), BufferFAN1(BANK0[8]), STR_4(CODE[9]), STR_3(CODE[10]), 
		 -> BufferLCD_Percent(BANK1[16]), BufferLCD_Temp(BANK1[16]), 


Critical Paths under _main in COMRAM

    _logic_CONTROL->___flge
    _lcd_init->_lcd_cmd
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _ctoa->_fputc
    _atoi->_isspace
    _lcd_write->_lcd_send_byte
    _lcd_send_byte->_lcd_cmd
    _lcd_cmd->_set_bit
    _equation_SENSOR->___fldiv
    ___flmul->___xxtofl
    ___fldiv->___flmul

Critical Paths under _main in BANK0

    _lcd_SENSOR->_sprintf
    _lcd_PERIPHERAL->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   95165
                         _config_ADC
                        _config_FOSC
                          _config_IO
                           _conv_AN0
                    _equation_SENSOR
                     _lcd_PERIPHERAL
                         _lcd_SENSOR
                           _lcd_init
                      _logic_CONTROL
 ---------------------------------------------------------------------------------
 (1) _logic_CONTROL                                        0     0      0    1702
                             ___flge
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0     874
                                              4 COMRAM     2     2      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_SENSOR                                           0     0      0   43460
                          _lcd_write
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _lcd_PERIPHERAL                                       0     0      0   43460
                          _lcd_write
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             25    15     10   40151
                                             62 BANK0     23    13     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   39180
                                            118 COMRAM     2     2      0
                                             56 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           44    38      6   38782
                                             96 COMRAM    22    22      0
                                             50 BANK0      6     0      6
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              62    55      7   24652
                                             84 COMRAM    12     5      7
                                              0 BANK0     50    50      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              6     4      2     920
                                              6 COMRAM     6     4      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     490
                                             64 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    2889
                                             39 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    1702
                                             39 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    5954
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    4305
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1691
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 8     5      3    1645
                                              9 COMRAM     8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1290
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _atoi                                                10     8      2    1370
                                              7 COMRAM    10     8      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     449
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _lcd_write                                            5     2      3    3309
                                              6 COMRAM     5     2      3
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (3) _lcd_send_byte                                        2     1      1    1024
                                              4 COMRAM     2     1      1
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              2     2      0     828
                                              2 COMRAM     2     2      0
                            _set_bit
 ---------------------------------------------------------------------------------
 (3) _set_bit                                              2     1      1     652
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _equation_SENSOR                                      0     0      0    5669
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    2960
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2311
                                             39 COMRAM    25    17      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _conv_AN0                                             2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _config_IO                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_FOSC                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_ADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _config_ADC
   _config_FOSC
   _config_IO
   _conv_AN0
   _equation_SENSOR
     ___fldiv
       ___flmul (ARG)
         ___xxtofl (ARG)
     ___flmul
     ___xxtofl
   _lcd_PERIPHERAL
     _lcd_write
       _lcd_send_byte
         _lcd_cmd
           _set_bit
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _fputc
               _putch
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
               _fputs
                 _fputc
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
             _strcpy
             _tolower
               _isupper
           _fputc
           _isdigit
           _isupper
           _strncmp
           _tolower
   _lcd_SENSOR
     _lcd_write
     _sprintf
   _lcd_init
     _lcd_cmd
   _logic_CONTROL
     ___flge

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      23        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      80       7       50.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     55      7B       5       96.1%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     78      7E       1       99.2%
BITBIGSFRh          2C      0       0      16        0.0%
BITBIGSFRlhl        24      0       0      18        0.0%
BITBIGSFRlhhh        E      0       0      17        0.0%
BITBIGSFRlllh        E      0       0      20        0.0%
BITBIGSFRllh         4      0       0      19        0.0%
BITBIGSFRllll        1      0       0      21        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     179      22        0.0%
DATA                 0      0     179       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Fri Jun 03 21:37:33 2022

           ___fldiv@aexp 0040             ___fldiv@bexp 003F             ___fldiv@sign 0038  
                     l61 4414                       l70 433A                       l64 43FC  
                     l72 4348                       l73 435C                       l82 36AE  
                     l67 440A                       l76 3A10                       l92 2CC4  
                     l79 3E60                       l88 2CA0           ?_lcd_send_byte 0005  
           ___awdiv@sign 0006      ___wmul@multiplicand 0003                      l131 3792  
                    l123 3F9A                      l134 43EE                      l127 43D0  
                    l146 3F00                      l149 43B0                      l414 347E  
                    l263 3000                      l423 42BA                      l408 3DBA  
                    l419 34C4                      l276 3164                      l380 3B9E  
                    l446 33C0                      l703 1D60                      l704 1D4E  
                    l393 3D10                      l731 260A                      l811 2DB4  
                    l804 2D1C                      l733 246A                      l742 24B0  
                    l807 2E78                      l719 4188                      l744 2528  
                    l736 242E                      l745 2516                      l770 2102  
                    l818 2E10                      l763 1F0C                      l827 40AA  
                    l780 2232                      l772 217A                      l773 2168  
                    l917 28E8                      l677 1B76                      l933 1282  
                    l870 3BE4                      l694 1C90                      l686 1E46  
                    l678 1B64                      l767 2270                      l679 1B2A  
                    l873 3C26                      l891 393C                      l875 3C60  
                    l949 0A30                      l886 38CE                      l889 3910  
                    l897 26AA                      l977 0E70                      l899 26B2  
                    _RES 00EB                      _abs 41CE                      _pad 3BA0  
           ___awmod@sign 0006                      wreg 000FE8             ___flmul@aexp 0020  
           ___flmul@bexp 0021             ___flmul@sign 001B             ___flmul@temp 0026  
           ___flmul@prod 0022             ___fltol@exp1 000A                     l1104 2AFA  
                   l1114 42F2                     l1122 40FC                     l1018 1374  
                   l1107 2A3E                     ?_abs 0013                     l1070 4204  
                   l1054 3FF4                     l1143 3ADA                     l1151 41CC  
                   l1039 1986                     l1055 3FFC                     l3000 3A36  
                   l1160 4058                     l1128 4282                     l1048 18CC  
                   l1073 420C                     l1065 35C2                     l1154 4416  
                   l3002 3A40                     l3010 1988                     l1170 3868  
                   l3004 3A5E                     l3100 1B44                     l3020 19C4  
                   l3012 1994                     l1180 413A                     l3006 3A94  
                   l1166 4328                     l3110 1B84                     l3102 1B48  
                   l3030 19F4                     l3022 19D4                     l3014 19A2  
                   l1095 32B2                     l1183 4142                     l3200 1E1E  
                   l3120 1BC6                     l3112 1B94                     l3104 1B56  
                   l3040 1A1E                     l3032 1A06                     l3024 19D6  
                   l3016 19A4                     l4000 0728                     l1098 32BA  
                   l3202 1E20                     l3130 1BF4                     l3122 1BD4  
                   l3106 1B58                     l3042 1A2E                     l3050 1A58  
                   l3034 1A08                     l3018 19B4                     l3026 19DE  
                   l4010 0780                     l4002 072E                     l3300 308C  
                   l3212 418A                     l3220 42F4                     l3204 1E26  
                   l3140 1C60                     l3132 1BFE                     l3124 1BE0  
                   l3116 1BA8                     l3108 1B62                     l3060 1A90  
                   l3052 1A68                     l3044 1A3E                     l3036 1A0E  
                   l3028 19EE                     l4100 0B1C                     l4012 079E  
                   l4020 07EA                     l3310 310E                     l3302 30A0  
                   l3214 4196                     l3222 4300                     l3206 1E34  
                   l3142 1C70                     l3126 1BE4                     l3118 1BB8  
                   l3134 1C04                     l3070 1AA4                     l3062 1A94  
                   l3054 1A7A                     l3046 1A4E                     l3038 1A1C  
                   l3230 424C                     l4110 0B66                     l4102 0B34  
                   l4030 085A                     l4014 07B8                     l3400 2458  
                   l3320 2272                     l3240 2E7A                     l3304 30AE  
                   l3312 3114                     l3216 41A8                     l3224 4304  
                   l3208 1E36                     l3160 1CF2                     l3152 1CCA  
                   l3136 1C2A                     l3144 1C80                     l3128 1BF2  
                   l3080 1AB8                     l3072 1AA8                     l3064 1A98  
                   l3056 1A88                     l3048 1A50                     l4200 1064  
                   l4112 0B7A                     l4120 0C70                     l4104 0B46  
                   l4040 0892                     l4016 07C2                     l4008 0754  
                   l3410 24A0                     l3402 2468                     l3330 22AE  
                   l3322 227E                     l3234 438C                     l3250 2EBE  
                   l3242 2E7E                     l3314 3124                     l3306 30DC  
                   l3218 41AC                     l3226 431C                     l3162 1CFA  
                   l3154 1CD4                     l3146 1CA6                     l3138 1C5E  
                   l3170 1D1E                     l3090 1ACC                     l3082 1ABC  
                   l3074 1AAC                     l3066 1A9C                     l3058 1A8C  
                   l4210 10C2                     l4202 1068                     l4130 0D3C  
                   l4122 0C8E                     l4114 0BDE                     l4106 0B4E  
                   l4050 095C                     l4026 0810                     l3420 24E0  
                   l3412 24AE                     l3404 247A                     l3340 22DE  
                   l3332 22BE                     l3324 228C                     l3500 1F4C  
                   l3236 43A8                     l4300 324E                     l3260 2F14  
                   l3252 2EDE                     l3244 2E8C                     l3316 3144  
                   l3308 30FC                     l3180 1D70                     l3172 1D22  
                   l3164 1CFE                     l3156 1CE2                     l3148 1CB6  
                   l3092 1AF6                     l3084 1AC0                     l3076 1AB0  
                   l3068 1AA0                     l4220 1100                     l4212 10D2  
                   l4204 1086                     l4140 0DEC                     l4132 0D4C  
                   l4124 0CC2                     l4116 0C36                     l4108 0B56  
                   l4060 09DE                     l4052 0990                     l4044 08C8  
                   l4028 083C                     l3430 2552                     l3422 250E  
                   l3406 2490                     l3414 24C0                     l3350 2314  
                   l3342 22E4                     l3334 22C0                     l3326 228E  
                   l3510 1F9C                     l3502 1F56                     l4302 3284  
                   l3270 2F96                     l3262 2F28                     l3254 2EE2  
                   l3246 2EAC                     l3190 1DD6                     l3182 1D7C  
                   l3174 1D30                     l3166 1D0E                     l3158 1CE4  
                   l3094 1B12                     l3086 1AC4                     l3078 1AB4  
                   l4230 1136                     l4222 1110                     l4214 10D6  
                   l4206 10A2                     l4150 0E5C                     l4142 0E20  
                   l4134 0D5C                     l4126 0CF4                     l4118 0C6A  
                   l4062 09F0                     l4070 0A3C                     l4054 0998  
                   l4046 08FC                     l4038 0878                     l4310 3794  
                   l2800 43FE                     l3440 25CA                     l3432 257C  
                   l3416 24CE                     l3408 2496                     l3360 2354  
                   l3352 2324                     l3344 22F2                     l3328 229E  
                   l3336 22C8                     l3520 1FDE                     l3512 1FA8  
                   l3504 1F6C                     l4304 3296                     l3280 2FE0  
                   l3272 2F98                     l3264 2F36                     l3256 2EEE  
                   l3248 2EB0                     l3600 3AF6                     l3192 1DE6  
                   l3184 1D8A                     l3176 1D46                     l3168 1D10  
                   l3096 1B22                     l3088 1AC8                     l4240 1192  
                   l4232 1142                     l4224 1118                     l4216 10E6  
                   l4208 10B4                     l4160 0F12                     l4152 0E68  
                   l4144 0E34                     l4136 0D90                     l4128 0D0A  
                   l4080 0A7C                     l4064 0A02                     l4048 0902  
                   l4056 09CA                     l4320 37F0                     l4312 37BE  
                   l4400 141A                     l3450 2600                     l3442 25E6  
                   l3426 2538                     l3434 2580                     l3418 24D2  
                   l3362 2364                     l3370 2384                     l3354 2326  
                   l3346 22F4                     l3338 22D8                     l3530 2040  
                   l3522 1FEE                     l3514 1FB6                     l3506 1F78  
                   l4330 36B2                     l3274 2FAA                     l3266 2F48  
                   l3258 2F0C                     l3290 3034                     l3610 3B1C  
                   l3602 3AFA                     l3194 1E06                     l3186 1DC4  
                   l3098 1B38                     l4250 11DC                     l4234 1148  
                   l4242 1198                     l4226 1126                     l4218 10F8  
                   l4170 0F5C                     l4162 0F24                     l4154 0E8C  
                   l4138 0DE6                     l4146 0E38                     l4090 0AD8  
                   l4082 0AB2                     l4066 0A0A                     l4058 09DA  
                   l4322 380C                     l4410 1492                     l3444 25EA  
                   l3436 259A                     l3428 2544                     l3380 23C2  
                   l3372 2394                     l3364 236C                     l3348 2304  
                   l3356 232E                     l3540 20E8                     l3532 205C  
                   l3524 2008                     l3516 1FC2                     l3508 1F90  
                   l3460 1E54                     l4340 373E                     l4332 371A  
                   l3268 2F76                     l3276 2FB0                     l3292 3038  
                   l3284 3002                     l3620 3B52                     l3612 3B2E  
                   l3604 3B08                     l3700 344C                     l3196 1E0A  
                   l3188 1DC6                     l4252 11E8                     l4244 11AA  
                   l4236 116E                     l4228 112E                     l4180 0F92  
                   l4172 0F6C                     l4164 0F32                     l4156 0EF0  
                   l4148 0E48                     l4092 0AEA                     l4084 0ABA  
                   l4076 0A4E                     l4068 0A24                     l4324 381E  
                   l4316 37CA                     l4412 14A0                     l4404 1428  
                   l3446 25F8                     l3438 25B0                     l3390 240A  
                   l3382 23D2                     l3374 2394                     l3366 2370  
                   l3358 233E                     l3550 2124                     l3542 20F2  
                   l3534 2086                     l3526 2018                     l3518 1FD2  
                   l3470 1E94                     l3462 1E62                     l4342 3758  
                   l4334 371C                     l4510 43DE                     l3278 2FC0  
                   l3294 3046                     l3286 3006                     l3622 3B68  
                   l3614 3B36                     l3630 3B7E                     l3606 3B10  
                   l3702 345E                     l3198 1E18                     l4270 125C  
                   l4262 120C                     l4254 11F0                     l4246 11C4  
                   l4238 118A                     l4190 0FC6                     l4182 0F96  
                   l4174 0F70                     l4158 0EFE                     l4166 0F3A  
                   l4094 0AF8                     l4078 0A60                     l4086 0ABE  
                   l4326 3846                     l4318 37D8                     l4430 15CA  
                   l4422 152C                     l4414 14C4                     l4406 1466  
                   l4350 1284                     l4600 4338                     l3448 25FE  
                   l3392 241E                     l3384 23E2                     l3560 2196  
                   l3552 2132                     l3544 2100                     l3536 20BC  
                   l3528 2034                     l3480 1EC4                     l3472 1E9A  
                   l3464 1E64                     l4344 3774                     l4336 371E  
                   l4512 43E6                     l4280 317A                     l3296 3066  
                   l3288 3014                     l3632 3B8E                     l3624 3B70  
                   l3616 3B3E                     l3608 3B14                     l3640 3C66  
                   l3704 346C                     l3712 4284                     l3720 32BC  
                   l4272 1262                     l4264 1238                     l4256 1200  
                   l4248 11CA                     l4192 0FCA                     l4184 0F9C  
                   l4176 0F76                     l4168 0F4E                     l4096 0AFC  
                   l4088 0AC6                     l4432 15DA                     l4416 14FE  
                   l4408 148A                     l4424 156A                     l4360 12D6  
                   l4352 12A8                     l4520 3FB2                     l4602 4350  
                   l3394 242C                     l3386 23F2                     l3378 23A8  
                   l3570 2200                     l3562 21A4                     l3554 2160  
                   l3546 2112                     l3538 20CA                     l3490 1EFC  
                   l3482 1EC6                     l3474 1EAA                     l3466 1E74  
                   l3458 1E48                     l4346 378E                     l4338 3726  
                   l4514 43E8                     l4290 31DC                     l3298 3084  
                   l3634 3B96                     l3626 3B72                     l3618 3B4C  
                   l3650 3C96                     l3642 3C74                     l3706 34BC  
                   l3714 429A                     l3730 3312                     l3722 32D2  
                   l3802 3564                     l4266 1244                     l4258 1206  
                   l4178 0F82                     l4186 0FA2                     l4194 0FD0  
                   l4098 0B0E                     l4442 167C                     l4434 160A  
                   l4426 158A                     l4418 151E                     l4362 12D8  
                   l4354 12B6                     l4522 3FD8                     l4530 407C  
                   l4610 3DBC                     l3396 2438                     l3388 23FA  
                   l3580 2256                     l3572 221A                     l3564 21CE  
                   l3548 2120                     l3492 1F1C                     l3484 1ED6  
                   l3476 1EB0                     l3468 1E84                     l4604 393E  
                   l4348 3790                     l4508 43D4                     l4540 3E7E  
                   l4292 31E4                     l4284 317E                     l3900 38EE  
                   l3628 3B78                     l3660 3CDC                     l3652 3CA8  
                   l3644 3C7C                     l3708 34C2                     l3716 42AA  
                   l3732 3322                     l3804 3576                     l3812 3FFE  
                   l3820 40FE                     l4268 124C                     l4196 1028  
                   l4188 0FB4                     l4460 17AA                     l4452 1744  
                   l4444 16A0                     l4436 162E                     l4428 159A  
                   l4380 1302                     l4372 12F6                     l4364 12EA  
                   l4356 12C6                     l4516 3F9C                     l4532 4098  
                   l4524 405A                     l4620 35C4                     l4612 3E18  
                   l4700 3F84                     l3398 2456                     l3574 2236  
                   l3582 225C                     l3558 218A                     l3566 21D2  
                   l3494 1F2C                     l3486 1EE6                     l3478 1EB6  
                   l4606 3984                     l4550 3ED0                     l4542 3E90  
                   l4294 3218                     l4286 319A                     l4278 3166  
                   l3902 38F2                     l3910 260C                     l3670 3D08  
                   l3662 3CE4                     l3654 3CB0                     l3646 3C80  
                   l3638 3C62                     l3590 4154                     l3742 334C  
                   l3734 3326                     l3726 32E6                     l3830 2960  
                   l3814 400E                     l3822 412C                     l4198 105C  
                   l4470 182A                     l4454 1756                     l4446 16C4  
                   l4438 1660                     l4390 1384                     l4358 12CA  
                   l4518 3FA4                     l4526 406C                     l4630 3666  
                   l4622 361E                     l4614 3E2A                     l4702 3F8C  
                   l4710 4222                     ?_pad 0011                     l3584 2260  
                   l3576 2246                     l3568 21EC                     l3488 1EF6  
                   l4560 2D42                     l4552 2CC8                     l4608 39B8  
                   l4544 3E96                     l4536 3E64                     l4288 31D4  
                   l3904 391E                     l3920 2684                     l3912 262C  
                   l3664 3CEA                     l3656 3CB8                     l3648 3C8E  
                   l3680 3D7E                     l3760 33B0                     l3752 3374  
                   l3744 3356                     l3736 3334                     l3728 3310  
                   l3808 35BA                     l3840 2A2E                     l3832 2974  
                   l3816 40FE                     l4472 1868                     l4480 18E0  
                   l4456 176C                     l4464 17D6                     l4448 170C  
                   l4392 13A8                     l4384 130E                     l4376 12FC  
                   l4368 12F0                     l4528 4074                     l4632 3678  
                   l4624 3630                     l4616 3E3C                     l4640 2B2E  
                   l4712 4226                     l4704 420E                     l3578 2254  
                   l3498 1F40                     l4570 2D9C                     l4554 2CD8  
                   l4546 3EA4                     l4538 3E74                     l3906 3930  
                   l3770 3BD0                     l3930 26E0                     l3922 269E  
                   l3914 2654                     l3594 3ADC                     l3658 3CC6  
                   l3666 3CF0                     l3682 3D8E                     l3674 3D12  
                   l3690 33C2                     l3754 3380                     l3746 3360  
                   l3850 2AEA                     l3834 2982                     l3842 2A62  
                   l3826 28EA                     l4482 1904                     l4490 1934  
                   l4474 189C                     l4466 1804                     l4458 177A  
                   l4394 13DE                     l4386 1362                     l4634 368A  
                   l4626 3642                     l4618 3E4E                     l4650 2C00  
                   l4642 2B4C                     l4714 422A                     l4706 421A  
                   l2796 440C                     l4580 2E00                     l4572 2D9E  
                   l4564 2D56                     l4556 2CE6                     l4548 3ECC  
                   l3860 40B0                     l3780 3C34                     l3772 3BDC  
                   l3764 3BA0                     l3940 2780                     l3932 26E8  
                   l3924 26BA                     l3916 2674                     l3596 3AE0  
                   l3668 3D00                     l3684 3DB2                     l3676 3D40  
                   l3692 33F0                     l3588 4144                     l3756 3390  
                   l3844 2A9E                     l3828 290A                     l4492 1942  
                   l4484 1912                     l4396 13EC                     l4388 1382  
                   l4636 369C                     l4628 3654                     l4660 2CAC  
                   l4652 2C32                     l4644 2B7E                     l4716 4238  
                   l4708 421E                     l2798 43F0                     l4590 2E58  
                   l4582 2E1E                     l4574 2DAA                     l4566 2D5E  
                   l4558 2D2C                     l3870 43B4                     l3854 42BC  
                   l3862 40C4                     l3782 3C48                     l3774 3BF0  
                   l3766 3BAE                     l3950 283C                     l3942 2786  
                   l3934 26F2                     l3926 26CC                     l3918 2682  
                   l3598 3AEE                     l3686 3DB8                     l3678 3D50  
                   l3694 3400                     l3758 33A0                     l3790 34C6  
                   l3846 2AB2                     l3838 29F2                     l4486 1926  
                   l4398 13FA                     l4670 3F0E                     l4662 2CB8  
                   l4654 2C50                     l4646 2BB0                     l4638 2AFC  
                   l4718 4240                     l4592 2E66                     l4584 2E20  
                   l4576 2DE6                     l4568 2D6A                     l3872 43C8  
                   l3864 40F2                     l3776 3C04                     l3768 3BC2  
                   l3960 288A                     l3952 2856                     l3936 26F8  
                   l3944 27EA                     l3928 26DA                     l3696 342E  
                   l3792 34E6                     l3848 2ADA                     l4496 1950  
                   l4672 3F10                     l4664 3F02                     l4656 2C82  
                   l4648 2BCE                     l4594 2E68                     l4586 2E24  
                   l4578 2DF2                     l3866 40F6                     l3858 40AC  
                   l3890 38A2                     l3882 386A                     l3786 41CE  
                   l3778 3C08                     l3962 289C                     l3946 2804  
                   l3954 2864                     l3938 277A                     l3698 343E  
                   l3794 3524                     l4498 1974                     l4762 1334  
                   l4690 3F4C                     l4682 3F26                     l4674 3F12  
                   l4666 3F06                     l4658 2CA0                     l4588 2E48  
                   l4764 3202                     l2996 3A12                     l3892 38B4  
                   l3884 387C                     l3788 41E8                     l3964 28A8  
                   l3956 2876                     l3948 2822                     l3796 354C  
                   l3980 06A4                     l3972 0674                     l4692 3F52  
                   l4684 3F2C                     l4676 3F22                     l4668 3F08  
                   l4598 432A                     l3878 43CE                     l2998 3A24  
                   l3886 3888                     l3966 28B0                     l3958 2884  
                   l3798 3558                     l3990 06FA                     l3982 06C8  
                   l3974 067E                     l4694 3F5A                     l4686 3F3A  
                   l3896 38C6                     l3888 3894                     l3968 28C0  
                   l3992 070C                     l3984 06D2                     l3976 068E  
                   l4696 3F68                     l4688 3F3C                     l3898 38DA  
                   l3994 0718                     l3986 06DA                     l3978 069C  
                   l4698 3F6E                     l3996 0720                     l3988 06EC  
                   l3998 0724                     _FAN1 00EF                     _FAN2 00ED  
                   STR_1 0611                     STR_2 0620                     STR_3 062E  
                   STR_4 0638                     STR_5 065B                     STR_6 065B  
                   STR_7 0650                     STR_8 0649                     STR_9 0641  
                   u3000 1B10                     u3010 1B38                     u3011 1B34  
                   u3100 1C70                     u3020 1B56                     u3101 1C6C  
                   u3021 1B52                     u3110 1CA6                     u3030 1B76  
                   u3111 1CA2                     u3031 1B72                     u4000 3D7E  
                   u3200 1D70                     u3120 1CB6                     u3040 1B84  
                   u4001 3D7A                     u3201 1D6C                     u3121 1CB2  
                   u3041 1B80                     u4010 3DB2                     u3210 1D8A  
                   u3130 1CE2                     u3050 1B94                     u4011 3DAE  
                   u3211 1D86                     u3131 1CDE                     u3051 1B90  
                   u4020 33F0                     u3220 1DC4                     u3140 1CF2  
                   u3060 1BC6                     u4100 3334                     u3300 427C  
                   u4021 33EC                     u3221 1DC0                     u3141 1CEE  
                   u3061 1BC2                     u4101 3330                     u3301 4276  
                   u4030 342E                     u3230 1DD6                     u3150 1D0E  
                   u3070 1BD4                     u4110 3348                     u3310 427E  
                   u4031 342A                     u3231 1DD2                     u3151 1D0A  
                   u3071 1BD0                     u4111 3344                     u3320 2E8C  
                   u3400 3046                     u4040 344C                     u3240 1DE6  
                   u3160 1D1E                     u3080 1BF2                     u4120 3370  
                   u4200 3506                     u5000 0F4E                     u3321 2E88  
                   u3401 3042                     u4041 3448                     u3241 1DE2  
                   u3161 1D1A                     u3081 1BEE                     u4121 336C  
                   u5001 0F4A                     u3330 2EBE                     u3410 3084  
                   u4050 346C                     u3250 1E06                     u3170 1D30  
                   u3090 1C2A                     u4130 3390                     u4210 3524  
                   u5010 0F5C                     u3331 2EBA                     u3411 3080  
                   u4051 3468                     u3251 1E02                     u3171 1D2C  
                   u3091 1C26                     u4131 338C                     u4211 3520  
                   u5011 0F58                     u3500 2314                     u3420 30AE  
                   u4060 34BC                     u3260 1E18                     u3180 1D46  
                   u4140 33A0                     u4220 354C                     u4300 2932  
                   u5100 11C4                     u5020 0FB4                     u3501 2310  
                   u3341 2EE8                     u3421 30AA                     u4061 34B8  
                   u3261 1E14                     u3181 1D42                     u4141 339C  
                   u4221 3548                     u4205 34FC                     u5101 11C0  
                   u5021 0FB0                     u3510 2354                     u3350 2F0C  
                   u3430 30DC                     u4150 3BAE                     u4070 429A  
                   u3270 1E34                     u3190 1D5C                     u4230 3576  
                   u4310 2960                     u5110 11DC                     u5030 1086  
                   u3511 2350                     u3351 2F08                     u3431 30D8  
                   u4151 3BAA                     u4071 4296                     u3271 1E30  
                   u3191 1D58                     u4231 3572                     u4311 295C  
                   u5111 11D8                     u5031 1082                     u3600 24E0  
                   u3520 2394                     u4400 42EC                     u3360 2F36  
                   u3440 3124                     u3280 41CC                     u4160 3BD0  
                   u4080 32D2                     u4320 2982                     u5120 1238  
                   u5040 10A2                     u5200 381E                     u3601 24DC  
                   u3521 2390                     u4401 42E6                     u3361 2F32  
                   u3441 3120                     u3281 41C8                     u4161 3BCC  
                   u4081 32CE                     u4321 297E                     u4305 2928  
                   u5121 1234                     u5041 109E                     u5201 381A  
                   u3610 250E                     u3530 240A                     u3450 228C  
                   u4410 42EE                     u5130 319A                     u3370 2F76  
                   u3290 431C                     u4170 3C26                     u4090 3306  
                   u4250 35B0                     u5050 10B4                     u5210 3846  
                   u3611 250A                     u3531 2406                     u3451 2288  
                   u5131 3196                     u3371 2F72                     u3291 4318  
                   u4171 3C22                     u4251 35AA                     u5051 10B0  
                   u5211 3842                     u3620 2524                     u3540 242C  
                   u3460 229E                     u3700 1E84                     u4420 40C4  
                   u5140 31D0                     u3380 2FC0                     u4180 3C34  
                   u4500 263C                     u2900 19B4                     u4260 35B2  
                   u4340 29EE                     u5060 10C2                     u5300 156A  
                   u5220 12A8                     u3621 2520                     u3541 2428  
                   u3461 229A                     u3701 1E80                     u4421 40C0  
                   u5141 31CC                     u3381 2FBC                     u4181 3C30  
                   u4501 2636                     u2901 19B0                     u4245 3588  
                   u4341 29EA                     u5061 10BE                     u5301 1566  
                   u5221 12A4                     u3630 2538                     u3550 2456  
                   u3470 22AE                     u3710 1EC4                     u4430 40F2  
                   u5150 3284                     u3390 3014                     u4190 41E8  
                   u4510 263E                     u2910 19C4                     u4350 2A12  
                   u4270 4046                     u5070 10F8                     u5310 159A  
                   u5230 1374                     u3631 2534                     u3551 2452  
                   u3471 22AA                     u3711 1EC0                     u4431 40EE  
                   u5151 3280                     u3391 3010                     u4191 41E4  
                   u2911 19C0                     u4095 32FC                     u4335 2996  
                   u5071 10F4                     u5311 1596                     u5231 1370  
                   u3640 2552                     u3560 247A                     u3480 22F2  
                   u3800 2160                     u3720 1ED6                     u4440 43C8  
                   u5160 3296                     u4600 2856                     u4520 2654  
                   u2920 1A06                     u4360 2A2E                     u4336 29A0  
                   u4280 4058                     u5080 1126                     u5320 15DA  
                   u5240 1382                     u3641 254E                     u3561 2476  
                   u3481 22EE                     u3801 215C                     u3721 1ED2  
                   u4441 43C4                     u5161 3292                     u4601 2852  
                   u4521 2650                     u2921 1A02                     u4361 2A2A  
                   u4337 29B0                     u4281 4054                     u5081 1122  
                   u5321 15D6                     u5241 137E                     u3650 259A  
                   u3570 2490                     u3490 2304                     u3810 2176  
                   u3730 1EE6                     u2850 3A24                     u4450 387C  
                   u4610 2864                     u4530 2682                     u2930 1A1C  
                   u4370 2A82                     u4290 412C                     u5090 11AA  
                   u5170 37BE                     u5330 162E                     u5250 13A8  
                   u5410 3FF4                     u3651 2596                     u3571 248C  
                   u3491 2300                     u3811 2172                     u3731 1EE2  
                   u2851 3A20                     u4451 3878                     u4611 2860  
                   u4531 267E                     u2931 1A18                     u4355 2A08  
                   u4291 4128                     u5091 11A6                     u5171 37BA  
                   u5331 162A                     u5251 13A4                     u5411 3FF0  
                   u3660 25CA                     u3580 24AE                     u3820 218A  
                   u3740 1F1C                     u5500 2D98                     u5420 3E74  
                   u2860 3A36                     u4460 38A2                     u4620 2876  
                   u4540 269E                     u3900 3B4C                     u2940 1A2E  
                   u4380 2A9E                     u4700 0780                     u5180 37F0  
                   u5340 16A0                     u5260 13EC                     u3661 25C6  
                   u3581 24AA                     u3821 2186                     u3741 1F18  
                   u5501 2D94                     u5405 43DC                     u5421 3E70  
                   u2861 3A32                     u4461 389E                     u4621 2872  
                   u4541 269A                     u3901 3B48                     u2941 1A2A  
                   u4381 2A9A                     u4277 403C                     u4701 077C  
                   u5181 37EC                     u5341 169C                     u5261 13E8  
                   u3670 25F8                     u3590 24CE                     u3830 21A4  
                   u3750 1F2C                     u5510 2DE2                     u5406 43DE  
                   u5430 3E90                     u2870 3A5E                     u4470 38C2  
                   u4630 2884                     u4550 26CC                     u3910 3B68  
                   u2950 1A3E                     u4390 2ADA                     u4710 0810  
                   u5190 380C                     u5350 16C4                     u5270 1466  
                   u3671 25F4                     u3591 24CA                     u3831 21A0  
                   u3751 1F28                     u5511 2DDE                     u5431 3E8C  
                   u2871 3A5A                     u4471 38BE                     u4631 2880  
                   u4551 26C8                     u3911 3B64                     u2951 1A3A  
                   u4391 2AD6                     u4375 2A78                     u4711 080C  
                   u5191 3808                     u5351 16C0                     u5271 1462  
                   u3840 21EC                     u3760 20A6                     u3680 1E62  
                   u5520 2E00                     u5440 3EC4                     u2880 3A94  
                   u4480 3910                     u4640 289C                     u4560 26DA  
                   u3920 3B8E                     u2960 1A7A                     u4800 0A60  
                   u4720 083C                     u5360 1756                     u5280 148A  
                   u5600 2BB0                     u3841 21E8                     u3681 1E5E  
                   u5521 2DFC                     u2881 3A90                     u4481 390C  
                   u4641 2898                     u4561 26D6                     u3921 3B8A  
                   u2961 1A76                     u4801 0A5C                     u4721 0838  
                   u5361 1752                     u5281 1486                     u5601 2BAC  
                   u3850 221A                     u3770 2100                     u3690 1E74  
                   u5530 2E10                     u5450 3EF0                     u4490 391E  
                   u4570 2804                     u3930 3C74                     u2970 1A88  
                   u2890 19A2                     u4810 0A7C                     u4730 08C4  
                   u4650 069C                     u5370 1804                     u5290 14C4  
                   u5610 2C00                     u3851 2216                     u3771 20FC  
                   u3691 1E70                     u5531 2E0C                     u4491 391A  
                   u4571 2800                     u3931 3C70                     u2971 1A84  
                   u2891 199E                     u4811 0A78                     u4731 08C0  
                   u4651 0698                     u5371 1800                     u5291 14C0  
                   u5611 2BFC                     u3860 2254                     u3780 2120  
                   u5540 2E1E                     u5460 3F00                     u4580 2822  
                   u3940 3C8E                     u2980 1AF6                     u4900 0CF4  
                   u4820 0AB2                     u4740 0958                     u4660 06EC  
                   u5380 1868                     u5620 2C32                     u3861 2250  
                   u3781 211C                     u3765 209C                     u5541 2E1A  
                   u5461 3EFC                     u4581 281E                     u3941 3C8A  
                   u2981 1AF2                     u4901 0CF0                     u4821 0AAE  
                   u4741 0954                     u4661 06E8                     u5381 1864  
                   u5621 2C2E                     u3790 2132                     u5550 2E58  
                   u5470 2CD8                     u4590 283C                     u3870 3AEE  
                   u3950 3CA8                     u2990 1B0E                     u4910 0D3C  
                   u4830 0AD8                     u4750 09CA                     u4670 06FA  
                   u5390 1904                     u5630 2C82                     u3791 212E  
                   u5551 2E54                     u5471 2CD4                     u5447 3EBA  
                   u4591 2838                     u3871 3AEA                     u3951 3CA4  
                   u2991 1B08                     u4911 0D38                     u4831 0AD4  
                   u4751 09C6                     u4671 06F6                     u5391 1900  
                   u5631 2C7E                     u5560 2E66                     u5480 2CE6  
                   u3880 3B08                     u3960 3CC6                     u4920 0D4C  
                   u4840 0AEA                     u4760 09F0                     u4680 070C  
                   u5561 2E62                     u5481 2CE2                     u5457 3EE6  
                   u3881 3B04                     u3961 3CC2                     u4921 0D48  
                   u4841 0AE6                     u4761 09EC                     u4681 0708  
                   u5570 4348                     u5490 2D42                     u3890 3B2E  
                   u3970 3CDC                     u4930 0DE6                     u4850 0AF8  
                   u4770 0A02                     u4690 0754                     u5571 4344  
                   u5491 2D3E                     u3891 3B2A                     u3971 3CD8  
                   u4931 0DE2                     u4851 0AF4                     u4771 09FE  
                   u4691 0750                     u5707 3F32                     u3980 3D00  
                   u4940 0E34                     u4860 0B0E                     u4780 0A24  
                   u5580 2B2E                     u3981 3CFC                     u4941 0E30  
                   u4861 0B0A                     u4781 0A20                     u5717 3F54  
                   u5645 2CAA                     u5581 2B2A                     u3990 3D40  
                   u4950 0E5C                     u4870 0B1C                     u4790 0A4A  
                   u5670 3F4C                     u5646 2CAC                     u5590 2B7E  
                   u3991 3D3C                     u4951 0E58                     u4871 0B18  
                   u4791 0A46                     u5727 3F62                     u5671 3F48  
                   u5655 2CB6                     u5591 2B7A                     u4960 0EFE  
                   u4880 0B46                     u5656 2CB8                     u5680 4238  
                   u4961 0EFA                     u4881 0B42                     u5737 3F74  
                   u5665 2CC2                     u5681 4234                     u4970 0F12  
                   u4890 0C8E                     u5666 2CC4                     u4971 0F0E  
                   u4891 0C8A                     u5747 3F86                     u4980 0F24  
                   u4981 0F20                     u5757 3F94                     u4990 0F32  
                   u5767 43E0                     u4991 0F2E                     u5777 3720  
                   u5697 3F18                     u5787 4330                     abs@a 0013  
                   _dbuf 0100                     _atoi 3166                     _ctoa 386A  
                   _main 420E                     _dtoa 260C                     _prec 007B  
                   _nout 00E9                     pad@i 0018                     pad@p 0015  
                   fsr1h 000FE2                     fsr2h 000FDA                     indf1 000FE7  
                   indf2 000FDF                     fsr1l 000FE1                     pad@w 001A  
                   fsr2l 000FD9            ___fpclassifyf 34C6                     prodh 000FF4  
                   prodl 000FF3                     start 0000          ___fldiv@new_exp 0039  
        _equation_SENSOR 393E             ___param_bank 000000                    ??_abs 0015  
                  ??_pad 0017            ___fltol@sign1 0009          __end_of___aodiv 3002  
                  ?_atoi 0008                    ?_ctoa 000A          __end_of___fladd 1E48  
                  ?_main 0001                    ?_dtoa 001C          __end_of___aomod 3166  
        __end_of___fldiv 260C          __end_of___awdiv 3BA0          __end_of___flneg 42BC  
                  STR_10 060F                    STR_11 0656                    STR_12 0606  
                  STR_20 066C                    STR_13 0601                    STR_23 0670  
                  STR_15 0660                    STR_16 0668                    STR_25 0670  
                  STR_19 0664          __end_of___awmod 3D12          __end_of___flmul 2272  
             _BufferFAN1 00F1               _BufferFAN2 0178          __end_of___flsub 418A  
        __end_of___fltol 33C2          ___awdiv@divisor 0003          ___awdiv@counter 0005  
          _VoltageSensor 00DD             vfpfcnvrt@fmt 00B4                    _PORTC 000F82  
                  _PORTD 000F83                    _TRISB 000F93                    _TRISC 000F94  
                  _TRISD 000F95          __end_of_lcd_cmd 3794                    _flags 007D  
                  _fputc 3A12                    _fputs 418A          __end_of_isdigit 42F4  
                  atoi@n 0010                    pad@fp 0011                    atoi@s 0008  
                  _width 0079                    ctoa@c 000C                    _putch 4416  
                  ctoa@l 000E                    ctoa@w 0010                    dtoa@d 001E  
                  dtoa@i 003E                    dtoa@n 0036                    dtoa@p 0030  
                  dtoa@s 0034                    dtoa@w 0032          __end_of_isspace 40FE  
        __end_of_set_bit 43D2          __end_of_isupper 4284                    tablat 000FF5  
                  status 000FD8          __end_of_sprintf 40AC           ?___fpclassifyf 0001  
        __end_of_tolower 4144          __end_of_strncmp 386A             lcd_write@end 000A  
           lcd_write@col 0007             lcd_write@lin 000B             lcd_write@str 0008  
        __initialization 435E             __end_of_atoi 32BC             __end_of_ctoa 393E  
           __end_of_main 424C             __end_of_dtoa 28EA          ??_lcd_send_byte 0006  
                 ??_atoi 000A                   ??_ctoa 000D                   ??_main 0079  
                 ??_dtoa 0026            __activetblptr 000002                   _ADCON0 000FC2  
                 _ADCON1 000FC1                   _ADCON2 000FC0                   ?_fputc 0001  
                 ?_fputs 000A                   _ADRESH 000FC4                   _ADRESL 000FC3  
       ___awdiv@dividend 0001                   ?_putch 0001  __end_of_equation_SENSOR 3A12  
                 _OSCCON 000FD3            vfpfcnvrt@done 006D         __end_of___xxtofl 2E7A  
             _TempSensor 00E5         __end_of_conv_AN0 435E             vfprintf@cfmt 0077  
       __end_of_lcd_init 3F9C                   ___flge 33C2                   ___fleq 3D12  
              ??___aodiv 0011                ??___fladd 0009                ??___aomod 0011  
                 ___wmul 438C                ??___fldiv 0030                ??___awdiv 0005  
              ??___flneg 0005                ??___awmod 0005                ??___flmul 0017  
              ??___flsub 0030                ??___fltol 0005                   _efgtoa 0674  
                 _floorf 28EA                   clear_0 4364                   clear_1 4370  
       ___awdiv@quotient 0007          ___awmod@divisor 0003                   isa$std 000001  
        ___awmod@counter 0005                   pad@buf 0013                   ctoa@fp 000A  
              ??_lcd_cmd 0003                   dtoa@fp 001C                   _strcpy 3FFE  
                 _strlen 42F4                   fputc@c 0001                   fputs@c 000E  
                 fputs@i 000F                   fputs@s 000A                ??_isdigit 0003  
        ___fpclassifyf@e 0009          ___fpclassifyf@u 000B          ___fpclassifyf@x 0001  
           __mediumconst 0000                ??_isspace 0003                ??_set_bit 0002  
                 tblptrh 000FF7                ??_isupper 0003                   tblptrl 000FF6  
                 tblptru 000FF8                   putch@c 0001         __end_of_vfprintf 3FFE  
              ??_sprintf 0079                ??_tolower 0009                ??_strncmp 0007  
             ___flge@ff1 0028               ___flge@ff2 002C          ??___fpclassifyf 0005  
           ___xxtofl@arg 000B             ___xxtofl@exp 000A             ___xxtofl@val 0001  
             ___fleq@ff1 0001               ___fleq@ff2 0005               __accesstop 0080  
__end_of__initialization 4382               ___flneg@f1 0001            ___rparam_used 000001  
             ___fltol@f1 0001           __pcstackCOMRAM 0001            __end_of_fputc 3ADC  
          __end_of_fputs 41CE            __end_of_putch 4418                  ??_fputc 0005  
                ??_fputs 000E                  ??_putch 0001               __pbssBANK0 00D5  
             __pbssBANK1 0100         ?_equation_SENSOR 0001              _VdigADC_AN0 00F9  
                ?___flge 0028                  ?___fleq 0001               _lcd_SENSOR 3DBC  
                ?___wmul 0001                  ?_efgtoa 0055            _logic_CONTROL 2AFC  
                ?_floorf 0041           _lcd_PERIPHERAL 35C4                  ?_strcpy 0001  
                ?_strlen 0001               _config_ADC 43FE                ?___xxtofl 0001  
     lcd_send_byte@level 0006                  _OSCTUNE 000F9B                ?_conv_AN0 0001  
              ?_lcd_init 0001              _TempPercent 00E1        _BufferLCD_Percent 0150  
                __Hparam 0000                  __Lparam 0000        __end_of_config_IO 43FE  
                ___aodiv 2E7A                  ___fladd 1988           ?_logic_CONTROL 0001  
                ___aomod 3002                  ___fldiv 2272                  ___awdiv 3ADC  
                ___flneg 4284                  ___awmod 3C62                  ___flmul 1E48  
                ___flsub 4144                  ___fltol 32BC        __end_of_lcd_write 3F02  
              ?_vfprintf 00B8              set_bit@comp 0001             __psmallconst 0600  
 __end_of_lcd_PERIPHERAL 36B0                  __pcinit 435E                  __ramtop 0600  
                __ptext0 420E                  __ptext1 2AFC                  __ptext2 3F02  
                __ptext3 3DBC                  __ptext4 35C4                  __ptext5 405A  
                __ptext6 3F9C                  __ptext7 1284                  __ptext8 3794  
                __ptext9 0674                  _lcd_cmd 36B0           _BufferLCD_Temp 0160  
                _isdigit 42BC               ??___xxtofl 0005         ___awmod@dividend 0001  
                _isspace 40AC                  _set_bit 43B2                  _isupper 424C  
                efgtoa@c 005B                  efgtoa@d 0092                  efgtoa@e 00AA  
                efgtoa@f 0057                  efgtoa@g 00A6                  efgtoa@h 009C  
                efgtoa@i 00A4                  efgtoa@l 00A0                  efgtoa@m 008C  
                efgtoa@n 00AC                  efgtoa@p 0096                  efgtoa@t 0086  
                efgtoa@u 00AE                  efgtoa@w 0098                  atoi@neg 000E  
             ??_conv_AN0 0001                  _sprintf 405A                  _tolower 40FE  
             ??_lcd_init 0005                  _strncmp 3794     end_of_initialization 4382  
                floorf@e 004F                  floorf@m 004B                  floorf@u 0051  
                floorf@x 0041                  fputc@fp 0003            __Lmediumconst 0000  
                fputs@fp 000C        __end_of_vfpfcnvrt 1988               efgtoa@mode 009B  
             efgtoa@sign 0094              ?_lcd_SENSOR 0001                  postdec2 000FDD  
                postinc0 000FEE                  postinc1 000FE6                  postinc2 000FDE  
             ??_vfprintf 0077    __end_of_lcd_send_byte 43F0          ?_lcd_PERIPHERAL 0001  
                strcpy@d 0009                  strlen@a 0003                  strcpy@s 0007  
                strlen@s 0001                _PORTBbits 000F81                _PORTCbits 000F82  
              _PORTDbits 000F83                _PORTEbits 000F84              ___fladd@grs 0010  
            ?_config_ADC 0001            ___xxtofl@sign 0009                _TRISEbits 000F96  
             lcd_cmd@cmd 0004              ___fldiv@grs 003B              ___fldiv@rem 0034  
            ___flmul@grs 001C            ??_config_FOSC 0001          ??_logic_CONTROL 0034  
         __end_of___flge 34C6           __end_of___fleq 3DBC                _BufferRES 0170  
            vfpfcnvrt@ap 00B6              vfpfcnvrt@ct 0073              vfpfcnvrt@fp 00B2  
            vfpfcnvrt@ll 0065           __end_of___wmul 43B2           __end_of_efgtoa 1284  
         __end_of_floorf 2AFC               floorf@F526 00D5           __end_of_strcpy 405A  
         __end_of_strlen 432A      start_initialization 435E              __end_of_abs 420E  
            __end_of_pad 3C62    __end_of___fpclassifyf 35C4              vfprintf@fmt 00BA  
               ??___flge 0030                 ??___fleq 0009      __end_of_config_FOSC 4416  
               ??___wmul 0005                 ??_efgtoa 005C                 ??_floorf 0045  
               ??_strcpy 0005                 ??_strlen 0003                ___fladd@a 0005  
              ___fladd@b 0001                ___fldiv@a 002C                ___fldiv@b 0028  
              ___flmul@a 0013                ___flmul@b 000F              __pbssCOMRAM 0079  
              ___flsub@a 002C                ___flsub@b 0028            __pcstackBANK0 0080  
       ___aodiv@dividend 0001              _efgtoa$1172 0082              _efgtoa$1173 0084  
            _efgtoa$1165 0080                _dtoa$1141 002E                 ?___aodiv 0001  
               ?___fladd 0001                 ?___aomod 0001                 ?___fldiv 0028  
               ?___awdiv 0001         ___aodiv@quotient 0013                 ?___flneg 0001  
               ?___awmod 0001                 ?___flmul 000F                 ?___flsub 0028  
               ?___fltol 0001                _config_IO 43F0        lcd_send_byte@data 0005  
               ?_lcd_cmd 0001                _lcd_write 3E62              __smallconst 0600  
               ?_isdigit 0001                 ?_isspace 0001                 ?_set_bit 0001  
               ?_isupper 0001               set_bit@cmd 0002                 ?_sprintf 00BE  
               ?_tolower 0007                 ?_strncmp 0001           ___wmul@product 0005  
            _config_FOSC 440C         ??_lcd_PERIPHERAL 0079             ??_lcd_SENSOR 0079  
              _vfpfcnvrt 1284               ?_config_IO 0001               _ADCON0bits 000FC2  
             ?_lcd_write 0007        ___wmul@multiplier 0001                lcd_init@i 0006  
           ??_config_ADC 0001             _isspace$1255 0007               vfpfcnvrt@c 0076  
             vfpfcnvrt@f 006F       __end_of_lcd_SENSOR 3E62                 __Hrparam 0000  
             vfprintf@ap 00BC                 __Lrparam 0000               vfprintf@fp 00B8  
     __end_of_config_ADC 440C               ?_vfpfcnvrt 00B2          ___aodiv@divisor 0009  
      ??_equation_SENSOR 0041          ___aodiv@counter 0011       ___fpclassifyf@F465 00D9  
             sprintf@fmt 00C0                 ___xxtofl 2CC6                 __ptext10 40FE  
               __ptext11 424C                 __ptext20 3D12                 __ptext12 3FFE  
               __ptext21 3C62                 __ptext13 28EA                 __ptext30 386A  
               __ptext22 3ADC                 __ptext14 34C6                 __ptext31 3A12  
               __ptext23 260C                 __ptext15 32BC                 __ptext40 43B2  
               __ptext32 4416                 __ptext24 3BA0                 __ptext16 4144  
               __ptext41 393E                 __ptext33 3166                 __ptext25 42F4  
               __ptext17 1988                 __ptext42 2CC6                 __ptext34 40AC  
               __ptext26 418A                 __ptext18 4284                 __ptext43 1E48  
               __ptext35 42BC                 __ptext27 41CE                 __ptext19 33C2  
               __ptext44 2272                 __ptext36 438C                 __ptext28 3002  
               __ptext45 432A                 __ptext37 3E62                 __ptext29 2E7A  
               __ptext46 43F0                 __ptext38 43D2                 __ptext47 440C  
               __ptext39 36B0                 __ptext48 43FE                 _conv_AN0 432A  
               _lcd_init 3F02               strcpy@dest 0001                 efgtoa@fp 0055  
               efgtoa@ne 008A                 efgtoa@pp 0088                 efgtoa@ou 008E  
               isa$xinst 000000    __end_of_logic_CONTROL 2CC6                 _vfprintf 3F9C  
            ??_config_IO 0001              ??_lcd_write 000A         ___aomod@dividend 0001  
               isdigit@c 0001                sprintf@ap 00C8                 isspace@c 0001  
              strcpy@src 0003                 isupper@c 0001                strncmp@_l 0001  
              strncmp@_r 0003              efgtoa@nmode 009A          ___aomod@divisor 0009  
            ??_vfpfcnvrt 0061          ___aomod@counter 0011            _lcd_send_byte 43D2  
               sprintf@f 00CA                 tolower@c 0007                 sprintf@s 00BE  
               strncmp@l 0008                 strncmp@n 0005                 strncmp@r 000A  
          ___fladd@signs 000D             ___aodiv@sign 0012             ___fladd@aexp 000E  
           ___fladd@bexp 000F             ?_config_FOSC 0001             ___aomod@sign 0012  
