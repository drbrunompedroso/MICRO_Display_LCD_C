

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Mon Oct 24 19:05:59 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text44,global,reloc=2,class=CODE,delta=1
    57                           	psect	text45,global,reloc=2,class=CODE,delta=1
    58                           	psect	text46,global,reloc=2,class=CODE,delta=1
    59                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    60                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    61                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    62                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    63  0000                     
    64                           ; Version 2.40
    65                           ; Generated 17/11/2021 GMT
    66                           ; 
    67                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    68                           ; All rights reserved.
    69                           ; 
    70                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    71                           ; 
    72                           ; Redistribution and use in source and binary forms, with or without modification, are
    73                           ; permitted provided that the following conditions are met:
    74                           ; 
    75                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    76                           ;        conditions and the following disclaimer.
    77                           ; 
    78                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    79                           ;        of conditions and the following disclaimer in the documentation and/or other
    80                           ;        materials provided with the distribution. Publication is not required when
    81                           ;        this file is used in an embedded application.
    82                           ; 
    83                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    84                           ;        software without specific prior written permission.
    85                           ; 
    86                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    87                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    88                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    89                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    90                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    91                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    92                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    93                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    94                           ; 
    95                           ; 
    96                           ; Code-generator required, PIC18F4520 Definitions
    97                           ; 
    98                           ; SFR Addresses
    99  0000                     _ADRESL	set	4035
   100  0000                     _ADRESH	set	4036
   101  0000                     _PORTDbits	set	3971
   102  0000                     _PORTCbits	set	3970
   103  0000                     _ADCON0bits	set	4034
   104  0000                     _PORTBbits	set	3969
   105  0000                     _PORTC	set	3970
   106  0000                     _TRISB	set	3987
   107  0000                     _OSCTUNE	set	3995
   108  0000                     _OSCCON	set	4051
   109  0000                     _ADCON2	set	4032
   110  0000                     _ADCON1	set	4033
   111  0000                     _ADCON0	set	4034
   112  0000                     _TRISEbits	set	3990
   113  0000                     _TRISD	set	3989
   114  0000                     _TRISC	set	3988
   115  0000                     _PORTEbits	set	3972
   116  0000                     _PORTD	set	3971
   117                           
   118                           	psect	smallconst
   119  000600                     __psmallconst:
   120                           	callstack 0
   121  000600  00                 	db	0
   122  000601                     STR_13:
   123  000601  20                 	db	32
   124  000602  20                 	db	32
   125  000603  20                 	db	32
   126  000604  20                 	db	32
   127  000605  20                 	db	32
   128  000606  20                 	db	32
   129  000607  20                 	db	32
   130  000608  20                 	db	32
   131  000609  20                 	db	32
   132  00060A  20                 	db	32
   133  00060B  20                 	db	32
   134  00060C  20                 	db	32
   135  00060D  20                 	db	32
   136  00060E  20                 	db	32
   137  00060F  20                 	db	32
   138  000610  00                 	db	0
   139  000611                     STR_2:
   140  000611  25                 	db	37
   141  000612  30                 	db	48	;'0'
   142  000613  2E                 	db	46
   143  000614  32                 	db	50	;'2'
   144  000615  66                 	db	102	;'f'
   145  000616  20                 	db	32
   146  000617  56                 	db	86	;'V'
   147  000618  20                 	db	32
   148  000619  20                 	db	32
   149  00061A  20                 	db	32
   150  00061B  20                 	db	32
   151  00061C  20                 	db	32
   152  00061D  20                 	db	32
   153  00061E  20                 	db	32
   154  00061F  00                 	db	0
   155  000620                     STR_1:
   156  000620  25                 	db	37
   157  000621  30                 	db	48	;'0'
   158  000622  31                 	db	49	;'1'
   159  000623  64                 	db	100	;'d'
   160  000624  20                 	db	32
   161  000625  44                 	db	68	;'D'
   162  000626  45                 	db	69	;'E'
   163  000627  43                 	db	67	;'C'
   164  000628  20                 	db	32
   165  000629  20                 	db	32
   166  00062A  20                 	db	32
   167  00062B  20                 	db	32
   168  00062C  20                 	db	32
   169  00062D  20                 	db	32
   170  00062E  00                 	db	0
   171  00062F                     STR_4:
   172  00062F  56                 	db	86	;'V'
   173  000630  6F                 	db	111	;'o'
   174  000631  6C                 	db	108	;'l'
   175  000632  74                 	db	116	;'t'
   176  000633  3A                 	db	58	;':'
   177  000634  20                 	db	32
   178  000635  20                 	db	32
   179  000636  20                 	db	32
   180  000637  00                 	db	0
   181  000638                     STR_3:
   182  000638  41                 	db	65	;'A'
   183  000639  44                 	db	68	;'D'
   184  00063A  43                 	db	67	;'C'
   185  00063B  3A                 	db	58	;':'
   186  00063C  20                 	db	32
   187  00063D  20                 	db	32
   188  00063E  20                 	db	32
   189  00063F  00                 	db	0
   190  000640                     STR_10:
   191  000640  20                 	db	32
   192  000641  4C                 	db	76	;'L'
   193  000642  45                 	db	69	;'E'
   194  000643  44                 	db	68	;'D'
   195  000644  20                 	db	32
   196  000645  32                 	db	50	;'2'
   197  000646  3A                 	db	58	;':'
   198  000647  00                 	db	0
   199  000648                     STR_12:
   200  000648  20                 	db	32
   201  000649  4C                 	db	76	;'L'
   202  00064A  45                 	db	69	;'E'
   203  00064B  44                 	db	68	;'D'
   204  00064C  20                 	db	32
   205  00064D  34                 	db	52	;'4'
   206  00064E  3A                 	db	58	;':'
   207  00064F  00                 	db	0
   208  000650                     STR_9:
   209  000650  4C                 	db	76	;'L'
   210  000651  45                 	db	69	;'E'
   211  000652  44                 	db	68	;'D'
   212  000653  20                 	db	32
   213  000654  31                 	db	49	;'1'
   214  000655  3A                 	db	58	;':'
   215  000656  00                 	db	0
   216  000657                     STR_11:
   217  000657  4C                 	db	76	;'L'
   218  000658  45                 	db	69	;'E'
   219  000659  44                 	db	68	;'D'
   220  00065A  20                 	db	32
   221  00065B  33                 	db	51	;'3'
   222  00065C  3A                 	db	58	;':'
   223  00065D  00                 	db	0
   224  00065E                     STR_5:
   225  00065E  25                 	db	37
   226  00065F  30                 	db	48	;'0'
   227  000660  31                 	db	49	;'1'
   228  000661  64                 	db	100	;'d'
   229  000662  00                 	db	0
   230  000663                     STR_15:
   231  000663  49                 	db	73	;'I'
   232  000664  4E                 	db	78	;'N'
   233  000665  46                 	db	70	;'F'
   234  000666  00                 	db	0
   235  000667                     STR_19:
   236  000667  4E                 	db	78	;'N'
   237  000668  41                 	db	65	;'A'
   238  000669  4E                 	db	78	;'N'
   239  00066A  00                 	db	0
   240  00066B                     STR_16:
   241  00066B  69                 	db	105	;'i'
   242  00066C  6E                 	db	110	;'n'
   243  00066D  66                 	db	102	;'f'
   244  00066E  00                 	db	0
   245  00066F                     STR_20:
   246  00066F  6E                 	db	110	;'n'
   247  000670  61                 	db	97	;'a'
   248  000671  6E                 	db	110	;'n'
   249  000672  00                 	db	0
   250  000673                     STR_23:
   251  000673  6C                 	db	108	;'l'
   252  000674  66                 	db	102	;'f'
   253  000675  00                 	db	0
   254  000676  00                 	db	0	; dummy byte at the end
   255  0000                     
   256                           ; #config settings
   257                           
   258                           	psect	cinit
   259  004290                     __pcinit:
   260                           	callstack 0
   261  004290                     start_initialization:
   262                           	callstack 0
   263  004290                     __initialization:
   264                           	callstack 0
   265                           
   266                           ; Clear objects allocated to BANK1 (96 bytes)
   267  004290  EE01  F000         	lfsr	0,__pbssBANK1
   268  004294  0E60               	movlw	96
   269  004296                     clear_0:
   270  004296  6AEE               	clrf	postinc0,c
   271  004298  06E8               	decf	wreg,f,c
   272  00429A  E1FD               	bnz	clear_0
   273                           
   274                           ; Clear objects allocated to BANK0 (76 bytes)
   275  00429C  EE00  F080         	lfsr	0,__pbssBANK0
   276  0042A0  0E4C               	movlw	76
   277  0042A2                     clear_1:
   278  0042A2  6AEE               	clrf	postinc0,c
   279  0042A4  06E8               	decf	wreg,f,c
   280  0042A6  E1FD               	bnz	clear_1
   281                           
   282                           ; Clear objects allocated to COMRAM (2 bytes)
   283  0042A8  6A7F               	clrf	(__pbssCOMRAM+1)& (0+255),c
   284  0042AA  6A7E               	clrf	__pbssCOMRAM& (0+255),c
   285  0042AC                     end_of_initialization:
   286                           	callstack 0
   287  0042AC                     __end_of__initialization:
   288                           	callstack 0
   289  0042AC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   290  0042AE  6EF8               	movwf	tblptru,c
   291  0042B0  0100               	movlb	0
   292  0042B2  EFBC  F020         	goto	_main	;jump to C main() function
   293                           
   294                           	psect	bssCOMRAM
   295  00007E                     __pbssCOMRAM:
   296                           	callstack 0
   297  00007E                     _flags:
   298                           	callstack 0
   299  00007E                     	ds	2
   300                           
   301                           	psect	bssBANK0
   302  000080                     __pbssBANK0:
   303                           	callstack 0
   304  000080                     floorf@F526:
   305                           	callstack 0
   306  000080                     	ds	4
   307  000084                     ___fpclassifyf@F465:
   308                           	callstack 0
   309  000084                     	ds	4
   310  000088                     _Voltage_AN0:
   311                           	callstack 0
   312  000088                     	ds	4
   313  00008C                     _nout:
   314                           	callstack 0
   315  00008C                     	ds	2
   316  00008E                     _width:
   317                           	callstack 0
   318  00008E                     	ds	2
   319  000090                     _prec:
   320                           	callstack 0
   321  000090                     	ds	2
   322  000092                     _D4:
   323                           	callstack 0
   324  000092                     	ds	2
   325  000094                     _D3:
   326                           	callstack 0
   327  000094                     	ds	2
   328  000096                     _D2:
   329                           	callstack 0
   330  000096                     	ds	2
   331  000098                     _D1:
   332                           	callstack 0
   333  000098                     	ds	2
   334  00009A                     _VdigADC_AN0:
   335                           	callstack 0
   336  00009A                     	ds	2
   337  00009C                     _VdigBuffer:
   338                           	callstack 0
   339  00009C                     	ds	16
   340  0000AC                     _Buffer_D4:
   341                           	callstack 0
   342  0000AC                     	ds	8
   343  0000B4                     _Buffer_D3:
   344                           	callstack 0
   345  0000B4                     	ds	8
   346  0000BC                     _Buffer_D2:
   347                           	callstack 0
   348  0000BC                     	ds	8
   349  0000C4                     _Buffer_D1:
   350                           	callstack 0
   351  0000C4                     	ds	8
   352                           
   353                           	psect	bssBANK1
   354  000100                     __pbssBANK1:
   355                           	callstack 0
   356  000100                     _dbuf:
   357                           	callstack 0
   358  000100                     	ds	80
   359  000150                     _VoltageBuffer:
   360                           	callstack 0
   361  000150                     	ds	16
   362                           
   363                           	psect	cstackBANK0
   364  0000CC                     __pcstackBANK0:
   365                           	callstack 0
   366  0000CC                     vfpfcnvrt@ll:
   367                           	callstack 0
   368                           
   369                           ; 8 bytes @ 0x0
   370  0000CC                     	ds	8
   371  0000D4                     vfpfcnvrt@done:
   372                           	callstack 0
   373                           
   374                           ; 2 bytes @ 0x8
   375  0000D4                     	ds	2
   376  0000D6                     vfpfcnvrt@f:
   377                           	callstack 0
   378                           
   379                           ; 4 bytes @ 0xA
   380  0000D6                     	ds	4
   381  0000DA                     vfpfcnvrt@ct:
   382                           	callstack 0
   383                           
   384                           ; 3 bytes @ 0xE
   385  0000DA                     	ds	3
   386  0000DD                     vfpfcnvrt@c:
   387                           	callstack 0
   388                           
   389                           ; 1 bytes @ 0x11
   390  0000DD                     	ds	1
   391  0000DE                     ?_vfprintf:
   392                           	callstack 0
   393  0000DE                     vfprintf@fp:
   394                           	callstack 0
   395                           
   396                           ; 2 bytes @ 0x12
   397  0000DE                     	ds	2
   398  0000E0                     vfprintf@fmt:
   399                           	callstack 0
   400                           
   401                           ; 2 bytes @ 0x14
   402  0000E0                     	ds	2
   403  0000E2                     vfprintf@ap:
   404                           	callstack 0
   405                           
   406                           ; 2 bytes @ 0x16
   407  0000E2                     	ds	2
   408  0000E4                     ?_sprintf:
   409                           	callstack 0
   410  0000E4                     sprintf@s:
   411                           	callstack 0
   412                           
   413                           ; 2 bytes @ 0x18
   414  0000E4                     	ds	2
   415  0000E6                     sprintf@fmt:
   416                           	callstack 0
   417                           
   418                           ; 2 bytes @ 0x1A
   419  0000E6                     	ds	6
   420  0000EC                     sprintf@ap:
   421                           	callstack 0
   422                           
   423                           ; 2 bytes @ 0x20
   424  0000EC                     	ds	2
   425  0000EE                     sprintf@f:
   426                           	callstack 0
   427                           
   428                           ; 11 bytes @ 0x22
   429  0000EE                     	ds	11
   430                           
   431                           	psect	cstackCOMRAM
   432  000001                     __pcstackCOMRAM:
   433                           	callstack 0
   434  000001                     ?_strlen:
   435                           	callstack 0
   436  000001                     ?___fpclassifyf:
   437                           	callstack 0
   438  000001                     ?_isupper:
   439                           	callstack 0
   440  000001                     ?_isdigit:
   441                           	callstack 0
   442  000001                     ?_strncmp:
   443                           	callstack 0
   444  000001                     ?_isspace:
   445                           	callstack 0
   446  000001                     ?___wmul:
   447                           	callstack 0
   448  000001                     ?___awdiv:
   449                           	callstack 0
   450  000001                     ?___awmod:
   451                           	callstack 0
   452  000001                     ?___fladd:
   453                           	callstack 0
   454  000001                     ?___fldiv:
   455                           	callstack 0
   456  000001                     ?___flneg:
   457                           	callstack 0
   458  000001                     ?___fltol:
   459                           	callstack 0
   460  000001                     ?___xxtofl:
   461                           	callstack 0
   462  000001                     ?___aodiv:
   463                           	callstack 0
   464  000001                     ?___aomod:
   465                           	callstack 0
   466  000001                     set_bit@comp:
   467                           	callstack 0
   468  000001                     ___wmul@multiplier:
   469                           	callstack 0
   470  000001                     ___awdiv@dividend:
   471                           	callstack 0
   472  000001                     ___awmod@dividend:
   473                           	callstack 0
   474  000001                     isdigit@c:
   475                           	callstack 0
   476  000001                     isspace@c:
   477                           	callstack 0
   478  000001                     isupper@c:
   479                           	callstack 0
   480  000001                     fputc@c:
   481                           	callstack 0
   482  000001                     strcpy@dest:
   483                           	callstack 0
   484  000001                     strlen@s:
   485                           	callstack 0
   486  000001                     strncmp@_l:
   487                           	callstack 0
   488  000001                     ___fleq@ff1:
   489                           	callstack 0
   490  000001                     ___flneg@f1:
   491                           	callstack 0
   492  000001                     ___fltol@f1:
   493                           	callstack 0
   494  000001                     ___fladd@b:
   495                           	callstack 0
   496  000001                     ___fldiv@b:
   497                           	callstack 0
   498  000001                     ___xxtofl@val:
   499                           	callstack 0
   500  000001                     ___fpclassifyf@x:
   501                           	callstack 0
   502  000001                     ___aodiv@dividend:
   503                           	callstack 0
   504  000001                     ___aomod@dividend:
   505                           	callstack 0
   506                           
   507                           ; 8 bytes @ 0x0
   508  000001                     	ds	1
   509  000002                     set_bit@cmd:
   510                           	callstack 0
   511                           
   512                           ; 1 bytes @ 0x1
   513  000002                     	ds	1
   514  000003                     ??_lcd_cmd:
   515  000003                     ??_isupper:
   516  000003                     ??_isdigit:
   517  000003                     ??_isspace:
   518  000003                     ___wmul@multiplicand:
   519                           	callstack 0
   520  000003                     ___awdiv@divisor:
   521                           	callstack 0
   522  000003                     ___awmod@divisor:
   523                           	callstack 0
   524  000003                     fputc@fp:
   525                           	callstack 0
   526  000003                     strcpy@src:
   527                           	callstack 0
   528  000003                     strlen@a:
   529                           	callstack 0
   530  000003                     strncmp@_r:
   531                           	callstack 0
   532                           
   533                           ; 2 bytes @ 0x2
   534  000003                     	ds	1
   535  000004                     lcd_cmd@cmd:
   536                           	callstack 0
   537                           
   538                           ; 1 bytes @ 0x3
   539  000004                     	ds	1
   540  000005                     ??_lcd_init:
   541  000005                     ??_fputc:
   542  000005                     ??___fpclassifyf:
   543  000005                     ??_strcpy:
   544  000005                     ??___fltol:
   545  000005                     ??___xxtofl:
   546  000005                     lcd_send_byte@data:
   547                           	callstack 0
   548  000005                     ___awdiv@counter:
   549                           	callstack 0
   550  000005                     ___awmod@counter:
   551                           	callstack 0
   552  000005                     ___wmul@product:
   553                           	callstack 0
   554  000005                     strncmp@n:
   555                           	callstack 0
   556  000005                     ___fleq@ff2:
   557                           	callstack 0
   558  000005                     ___fladd@a:
   559                           	callstack 0
   560  000005                     ___fldiv@a:
   561                           	callstack 0
   562                           
   563                           ; 4 bytes @ 0x4
   564  000005                     	ds	1
   565  000006                     lcd_init@i:
   566                           	callstack 0
   567  000006                     lcd_send_byte@level:
   568                           	callstack 0
   569  000006                     ___awdiv@sign:
   570                           	callstack 0
   571  000006                     ___awmod@sign:
   572                           	callstack 0
   573                           
   574                           ; 1 bytes @ 0x5
   575  000006                     	ds	1
   576  000007                     ??_strncmp:
   577  000007                     ?_tolower:
   578                           	callstack 0
   579  000007                     lcd_write@col:
   580                           	callstack 0
   581  000007                     _isspace$1247:
   582                           	callstack 0
   583  000007                     ___awdiv@quotient:
   584                           	callstack 0
   585  000007                     strcpy@s:
   586                           	callstack 0
   587  000007                     tolower@c:
   588                           	callstack 0
   589                           
   590                           ; 2 bytes @ 0x6
   591  000007                     	ds	1
   592  000008                     ?_atoi:
   593                           	callstack 0
   594  000008                     lcd_write@str:
   595                           	callstack 0
   596  000008                     atoi@s:
   597                           	callstack 0
   598  000008                     strncmp@l:
   599                           	callstack 0
   600                           
   601                           ; 2 bytes @ 0x7
   602  000008                     	ds	1
   603  000009                     ??___fladd:
   604  000009                     ??___fldiv:
   605  000009                     ??_tolower:
   606  000009                     ??___fleq:
   607  000009                     ___fltol@sign1:
   608                           	callstack 0
   609  000009                     ___xxtofl@sign:
   610                           	callstack 0
   611  000009                     ___fpclassifyf@e:
   612                           	callstack 0
   613  000009                     strcpy@d:
   614                           	callstack 0
   615  000009                     ___aodiv@divisor:
   616                           	callstack 0
   617  000009                     ___aomod@divisor:
   618                           	callstack 0
   619                           
   620                           ; 8 bytes @ 0x8
   621  000009                     	ds	1
   622  00000A                     ??_atoi:
   623  00000A                     lcd_write@end:
   624                           	callstack 0
   625  00000A                     ___fltol@exp1:
   626                           	callstack 0
   627  00000A                     ___xxtofl@exp:
   628                           	callstack 0
   629  00000A                     fputs@s:
   630                           	callstack 0
   631  00000A                     strncmp@r:
   632                           	callstack 0
   633                           
   634                           ; 2 bytes @ 0x9
   635  00000A                     	ds	1
   636  00000B                     lcd_write@lin:
   637                           	callstack 0
   638  00000B                     ___xxtofl@arg:
   639                           	callstack 0
   640  00000B                     ___fpclassifyf@u:
   641                           	callstack 0
   642                           
   643                           ; 4 bytes @ 0xA
   644  00000B                     	ds	1
   645  00000C                     fputs@fp:
   646                           	callstack 0
   647                           
   648                           ; 2 bytes @ 0xB
   649  00000C                     	ds	1
   650  00000D                     ___fladd@signs:
   651                           	callstack 0
   652  00000D                     ___fldiv@rem:
   653                           	callstack 0
   654                           
   655                           ; 4 bytes @ 0xC
   656  00000D                     	ds	1
   657  00000E                     ___fladd@aexp:
   658                           	callstack 0
   659  00000E                     fputs@c:
   660                           	callstack 0
   661  00000E                     atoi@neg:
   662                           	callstack 0
   663                           
   664                           ; 2 bytes @ 0xD
   665  00000E                     	ds	1
   666  00000F                     ?___flmul:
   667                           	callstack 0
   668  00000F                     ___fladd@bexp:
   669                           	callstack 0
   670  00000F                     fputs@i:
   671                           	callstack 0
   672  00000F                     ___flmul@b:
   673                           	callstack 0
   674                           
   675                           ; 4 bytes @ 0xE
   676  00000F                     	ds	1
   677  000010                     ___fladd@grs:
   678                           	callstack 0
   679  000010                     atoi@n:
   680                           	callstack 0
   681                           
   682                           ; 2 bytes @ 0xF
   683  000010                     	ds	1
   684  000011                     ?_pad:
   685                           	callstack 0
   686  000011                     ___aodiv@counter:
   687                           	callstack 0
   688  000011                     ___aomod@counter:
   689                           	callstack 0
   690  000011                     ___fldiv@sign:
   691                           	callstack 0
   692  000011                     pad@fp:
   693                           	callstack 0
   694                           
   695                           ; 2 bytes @ 0x10
   696  000011                     	ds	1
   697  000012                     ___aodiv@sign:
   698                           	callstack 0
   699  000012                     ___aomod@sign:
   700                           	callstack 0
   701  000012                     ___fldiv@new_exp:
   702                           	callstack 0
   703                           
   704                           ; 2 bytes @ 0x11
   705  000012                     	ds	1
   706  000013                     ?_abs:
   707                           	callstack 0
   708  000013                     pad@buf:
   709                           	callstack 0
   710  000013                     abs@a:
   711                           	callstack 0
   712  000013                     ___flmul@a:
   713                           	callstack 0
   714  000013                     ___aodiv@quotient:
   715                           	callstack 0
   716                           
   717                           ; 8 bytes @ 0x12
   718  000013                     	ds	1
   719  000014                     ___fldiv@grs:
   720                           	callstack 0
   721                           
   722                           ; 4 bytes @ 0x13
   723  000014                     	ds	1
   724  000015                     ??_abs:
   725  000015                     pad@p:
   726                           	callstack 0
   727                           
   728                           ; 2 bytes @ 0x14
   729  000015                     	ds	2
   730  000017                     ??___flmul:
   731  000017                     ??_pad:
   732                           
   733                           ; 1 bytes @ 0x16
   734  000017                     	ds	1
   735  000018                     ___fldiv@bexp:
   736                           	callstack 0
   737  000018                     pad@i:
   738                           	callstack 0
   739                           
   740                           ; 2 bytes @ 0x17
   741  000018                     	ds	1
   742  000019                     ___fldiv@aexp:
   743                           	callstack 0
   744                           
   745                           ; 1 bytes @ 0x18
   746  000019                     	ds	1
   747  00001A                     ?_floorf:
   748                           	callstack 0
   749  00001A                     pad@w:
   750                           	callstack 0
   751  00001A                     floorf@x:
   752                           	callstack 0
   753                           
   754                           ; 4 bytes @ 0x19
   755  00001A                     	ds	1
   756  00001B                     ___flmul@sign:
   757                           	callstack 0
   758                           
   759                           ; 1 bytes @ 0x1A
   760  00001B                     	ds	1
   761  00001C                     ?_dtoa:
   762                           	callstack 0
   763  00001C                     dtoa@fp:
   764                           	callstack 0
   765  00001C                     ___flmul@grs:
   766                           	callstack 0
   767                           
   768                           ; 4 bytes @ 0x1B
   769  00001C                     	ds	2
   770  00001E                     ??_floorf:
   771  00001E                     dtoa@d:
   772                           	callstack 0
   773                           
   774                           ; 8 bytes @ 0x1D
   775  00001E                     	ds	2
   776  000020                     ___flmul@aexp:
   777                           	callstack 0
   778                           
   779                           ; 1 bytes @ 0x1F
   780  000020                     	ds	1
   781  000021                     ___flmul@bexp:
   782                           	callstack 0
   783                           
   784                           ; 1 bytes @ 0x20
   785  000021                     	ds	1
   786  000022                     ___flmul@prod:
   787                           	callstack 0
   788                           
   789                           ; 4 bytes @ 0x21
   790  000022                     	ds	2
   791  000024                     floorf@m:
   792                           	callstack 0
   793                           
   794                           ; 4 bytes @ 0x23
   795  000024                     	ds	2
   796  000026                     ??_dtoa:
   797  000026                     ___flmul@temp:
   798                           	callstack 0
   799                           
   800                           ; 2 bytes @ 0x25
   801  000026                     	ds	2
   802  000028                     ??_conv_AN0:
   803  000028                     ?___flsub:
   804                           	callstack 0
   805  000028                     floorf@e:
   806                           	callstack 0
   807  000028                     ___flge@ff1:
   808                           	callstack 0
   809  000028                     ___flsub@b:
   810                           	callstack 0
   811                           
   812                           ; 4 bytes @ 0x27
   813  000028                     	ds	2
   814  00002A                     floorf@u:
   815                           	callstack 0
   816                           
   817                           ; 4 bytes @ 0x29
   818  00002A                     	ds	2
   819  00002C                     ___flge@ff2:
   820                           	callstack 0
   821  00002C                     ___flsub@a:
   822                           	callstack 0
   823                           
   824                           ; 4 bytes @ 0x2B
   825  00002C                     	ds	2
   826  00002E                     _dtoa$1134:
   827                           	callstack 0
   828                           
   829                           ; 2 bytes @ 0x2D
   830  00002E                     	ds	2
   831  000030                     ??___flge:
   832  000030                     dtoa@p:
   833                           	callstack 0
   834                           
   835                           ; 2 bytes @ 0x2F
   836  000030                     	ds	2
   837  000032                     dtoa@w:
   838                           	callstack 0
   839                           
   840                           ; 2 bytes @ 0x31
   841  000032                     	ds	2
   842  000034                     ??_logic_CONTROL:
   843  000034                     ?_efgtoa:
   844                           	callstack 0
   845  000034                     dtoa@s:
   846                           	callstack 0
   847  000034                     efgtoa@fp:
   848                           	callstack 0
   849                           
   850                           ; 2 bytes @ 0x33
   851  000034                     	ds	2
   852  000036                     efgtoa@f:
   853                           	callstack 0
   854  000036                     dtoa@n:
   855                           	callstack 0
   856                           
   857                           ; 8 bytes @ 0x35
   858  000036                     	ds	4
   859  00003A                     efgtoa@c:
   860                           	callstack 0
   861                           
   862                           ; 1 bytes @ 0x39
   863  00003A                     	ds	1
   864  00003B                     ??_efgtoa:
   865                           
   866                           ; 1 bytes @ 0x3A
   867  00003B                     	ds	3
   868  00003E                     dtoa@i:
   869                           	callstack 0
   870                           
   871                           ; 2 bytes @ 0x3D
   872  00003E                     	ds	2
   873  000040                     _efgtoa$1158:
   874                           	callstack 0
   875                           
   876                           ; 2 bytes @ 0x3F
   877  000040                     	ds	2
   878  000042                     _efgtoa$1165:
   879                           	callstack 0
   880                           
   881                           ; 2 bytes @ 0x41
   882  000042                     	ds	2
   883  000044                     _efgtoa$1166:
   884                           	callstack 0
   885                           
   886                           ; 2 bytes @ 0x43
   887  000044                     	ds	2
   888  000046                     efgtoa@t:
   889                           	callstack 0
   890                           
   891                           ; 2 bytes @ 0x45
   892  000046                     	ds	2
   893  000048                     efgtoa@pp:
   894                           	callstack 0
   895                           
   896                           ; 2 bytes @ 0x47
   897  000048                     	ds	2
   898  00004A                     efgtoa@ne:
   899                           	callstack 0
   900                           
   901                           ; 2 bytes @ 0x49
   902  00004A                     	ds	2
   903  00004C                     efgtoa@m:
   904                           	callstack 0
   905                           
   906                           ; 2 bytes @ 0x4B
   907  00004C                     	ds	2
   908  00004E                     efgtoa@ou:
   909                           	callstack 0
   910                           
   911                           ; 4 bytes @ 0x4D
   912  00004E                     	ds	4
   913  000052                     efgtoa@d:
   914                           	callstack 0
   915                           
   916                           ; 2 bytes @ 0x51
   917  000052                     	ds	2
   918  000054                     efgtoa@sign:
   919                           	callstack 0
   920                           
   921                           ; 2 bytes @ 0x53
   922  000054                     	ds	2
   923  000056                     efgtoa@p:
   924                           	callstack 0
   925                           
   926                           ; 2 bytes @ 0x55
   927  000056                     	ds	2
   928  000058                     efgtoa@w:
   929                           	callstack 0
   930                           
   931                           ; 2 bytes @ 0x57
   932  000058                     	ds	2
   933  00005A                     efgtoa@nmode:
   934                           	callstack 0
   935                           
   936                           ; 1 bytes @ 0x59
   937  00005A                     	ds	1
   938  00005B                     efgtoa@mode:
   939                           	callstack 0
   940                           
   941                           ; 1 bytes @ 0x5A
   942  00005B                     	ds	1
   943  00005C                     efgtoa@h:
   944                           	callstack 0
   945                           
   946                           ; 4 bytes @ 0x5B
   947  00005C                     	ds	4
   948  000060                     efgtoa@l:
   949                           	callstack 0
   950                           
   951                           ; 4 bytes @ 0x5F
   952  000060                     	ds	4
   953  000064                     efgtoa@i:
   954                           	callstack 0
   955                           
   956                           ; 2 bytes @ 0x63
   957  000064                     	ds	2
   958  000066                     efgtoa@g:
   959                           	callstack 0
   960                           
   961                           ; 4 bytes @ 0x65
   962  000066                     	ds	4
   963  00006A                     efgtoa@e:
   964                           	callstack 0
   965                           
   966                           ; 2 bytes @ 0x69
   967  00006A                     	ds	2
   968  00006C                     efgtoa@n:
   969                           	callstack 0
   970                           
   971                           ; 2 bytes @ 0x6B
   972  00006C                     	ds	2
   973  00006E                     efgtoa@u:
   974                           	callstack 0
   975                           
   976                           ; 4 bytes @ 0x6D
   977  00006E                     	ds	4
   978  000072                     ?_vfpfcnvrt:
   979                           	callstack 0
   980  000072                     vfpfcnvrt@fp:
   981                           	callstack 0
   982                           
   983                           ; 2 bytes @ 0x71
   984  000072                     	ds	2
   985  000074                     vfpfcnvrt@fmt:
   986                           	callstack 0
   987                           
   988                           ; 2 bytes @ 0x73
   989  000074                     	ds	2
   990  000076                     vfpfcnvrt@ap:
   991                           	callstack 0
   992                           
   993                           ; 2 bytes @ 0x75
   994  000076                     	ds	2
   995  000078                     ??_vfpfcnvrt:
   996                           
   997                           ; 1 bytes @ 0x77
   998  000078                     	ds	4
   999  00007C                     vfprintf@cfmt:
  1000                           	callstack 0
  1001                           
  1002                           ; 2 bytes @ 0x7B
  1003  00007C                     	ds	2
  1004  00007E                     
  1005                           ; 1 bytes @ 0x7D
  1006 ;;
  1007 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1008 ;;
  1009 ;; *************** function _main *****************
  1010 ;; Defined at:
  1011 ;;		line 205 in file "Main_program_meter.c"
  1012 ;; Parameters:    Size  Location     Type
  1013 ;;		None
  1014 ;; Auto vars:     Size  Location     Type
  1015 ;;		None
  1016 ;; Return value:  Size  Location     Type
  1017 ;;                  1    wreg      void 
  1018 ;; Registers used:
  1019 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1020 ;; Tracked objects:
  1021 ;;		On entry : 0/0
  1022 ;;		On exit  : 0/0
  1023 ;;		Unchanged: 0/0
  1024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1025 ;;      Params:         0       0       0       0       0       0       0
  1026 ;;      Locals:         0       0       0       0       0       0       0
  1027 ;;      Temps:          0       0       0       0       0       0       0
  1028 ;;      Totals:         0       0       0       0       0       0       0
  1029 ;;Total ram usage:        0 bytes
  1030 ;; Hardware stack levels required when called: 9
  1031 ;; This function calls:
  1032 ;;		_config_ADC
  1033 ;;		_config_FOSC
  1034 ;;		_config_IO
  1035 ;;		_conv_AN0
  1036 ;;		_lcd_LEDS
  1037 ;;		_lcd_SENSOR
  1038 ;;		_lcd_init
  1039 ;;		_logic_CONTROL
  1040 ;; This function is called by:
  1041 ;;		Startup code after reset
  1042 ;; This function uses a non-reentrant model
  1043 ;;
  1044                           
  1045                           	psect	text0
  1046  004178                     __ptext0:
  1047                           	callstack 0
  1048  004178                     _main:
  1049                           	callstack 22
  1050  004178                     
  1051                           ;Main_program_meter.c: 207:     config_FOSC();
  1052  004178  EC9A  F021         	call	_config_FOSC	;wreg free
  1053                           
  1054                           ;Main_program_meter.c: 208:     config_IO();
  1055  00417C  EC94  F021         	call	_config_IO	;wreg free
  1056                           
  1057                           ;Main_program_meter.c: 209:     config_ADC();
  1058  004180  EC8D  F021         	call	_config_ADC	;wreg free
  1059  004184                     
  1060                           ;Main_program_meter.c: 210:     lcd_init();
  1061  004184  ECB4  F01E         	call	_lcd_init	;wreg free
  1062  004188                     l4604:
  1063                           
  1064                           ;Main_program_meter.c: 213:     {;Main_program_meter.c: 214:         conv_AN0();
  1065  004188  EC4A  F01F         	call	_conv_AN0	;wreg free
  1066  00418C                     
  1067                           ;Main_program_meter.c: 215:         logic_CONTROL();
  1068  00418C  ECBF  F012         	call	_logic_CONTROL	;wreg free
  1069  004190                     
  1070                           ;Main_program_meter.c: 217:         if(PORTBbits.RB0 == 1)
  1071  004190  A081               	btfss	129,0,c	;volatile
  1072  004192  EFCD  F020         	goto	u5701
  1073  004196  EFCF  F020         	goto	u5700
  1074  00419A                     u5701:
  1075  00419A  EFD3  F020         	goto	l4612
  1076  00419E                     u5700:
  1077  00419E                     
  1078                           ;Main_program_meter.c: 218:         {;Main_program_meter.c: 220:             lcd_SENSOR(
      +                          );
  1079  00419E  EC03  F01F         	call	_lcd_SENSOR	;wreg free
  1080                           
  1081                           ;Main_program_meter.c: 221:         }
  1082  0041A2  EFC4  F020         	goto	l4604
  1083  0041A6                     l4612:
  1084                           
  1085                           ;Main_program_meter.c: 223:         {;Main_program_meter.c: 225:            lcd_LEDS();
  1086  0041A6  ECA9  F019         	call	_lcd_LEDS	;wreg free
  1087  0041AA  EFC4  F020         	goto	l4604
  1088  0041AE  EF00  F000         	goto	start
  1089  0041B2                     __end_of_main:
  1090                           	callstack 0
  1091                           
  1092 ;; *************** function _logic_CONTROL *****************
  1093 ;; Defined at:
  1094 ;;		line 132 in file "Main_program_meter.c"
  1095 ;; Parameters:    Size  Location     Type
  1096 ;;		None
  1097 ;; Auto vars:     Size  Location     Type
  1098 ;;		None
  1099 ;; Return value:  Size  Location     Type
  1100 ;;                  1    wreg      void 
  1101 ;; Registers used:
  1102 ;;		wreg, status,2, status,0, cstack
  1103 ;; Tracked objects:
  1104 ;;		On entry : 0/0
  1105 ;;		On exit  : 0/0
  1106 ;;		Unchanged: 0/0
  1107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1108 ;;      Params:         0       0       0       0       0       0       0
  1109 ;;      Locals:         0       0       0       0       0       0       0
  1110 ;;      Temps:          1       0       0       0       0       0       0
  1111 ;;      Totals:         1       0       0       0       0       0       0
  1112 ;;Total ram usage:        1 bytes
  1113 ;; Hardware stack levels used: 1
  1114 ;; Hardware stack levels required when called: 1
  1115 ;; This function calls:
  1116 ;;		___fleq
  1117 ;;		___flge
  1118 ;; This function is called by:
  1119 ;;		_main
  1120 ;; This function uses a non-reentrant model
  1121 ;;
  1122                           
  1123                           	psect	text1
  1124  00257E                     __ptext1:
  1125                           	callstack 0
  1126  00257E                     _logic_CONTROL:
  1127                           	callstack 29
  1128  00257E                     
  1129                           ;Main_program_meter.c: 134:     if(Voltage_AN0 == (0))
  1130  00257E  C088  F001         	movff	_Voltage_AN0,___fleq@ff1
  1131  002582  C089  F002         	movff	_Voltage_AN0+1,___fleq@ff1+1
  1132  002586  C08A  F003         	movff	_Voltage_AN0+2,___fleq@ff1+2
  1133  00258A  C08B  F004         	movff	_Voltage_AN0+3,___fleq@ff1+3
  1134  00258E  0E00               	movlw	0
  1135  002590  6E05               	movwf	___fleq@ff2^0,c
  1136  002592  0E00               	movlw	0
  1137  002594  6E06               	movwf	(___fleq@ff2+1)^0,c
  1138  002596  0E00               	movlw	0
  1139  002598  6E07               	movwf	(___fleq@ff2+2)^0,c
  1140  00259A  0E00               	movlw	0
  1141  00259C  6E08               	movwf	(___fleq@ff2+3)^0,c
  1142  00259E  EC0F  F01E         	call	___fleq	;wreg free
  1143  0025A2  A0D8               	btfss	status,0,c
  1144  0025A4  EFD6  F012         	goto	u5531
  1145  0025A8  EFD8  F012         	goto	u5530
  1146  0025AC                     u5531:
  1147  0025AC  EFEB  F012         	goto	l4508
  1148  0025B0                     u5530:
  1149  0025B0                     
  1150                           ;Main_program_meter.c: 135:     {;Main_program_meter.c: 136:         D1 = 0;
  1151  0025B0  0E00               	movlw	0
  1152  0025B2  0100               	movlb	0	; () banked
  1153  0025B4  6F99               	movwf	(_D1+1)& (0+255),b
  1154  0025B6  0E00               	movlw	0
  1155  0025B8  6F98               	movwf	_D1& (0+255),b
  1156                           
  1157                           ;Main_program_meter.c: 137:         D2 = 0;
  1158  0025BA  0E00               	movlw	0
  1159  0025BC  6F97               	movwf	(_D2+1)& (0+255),b
  1160  0025BE  0E00               	movlw	0
  1161  0025C0  6F96               	movwf	_D2& (0+255),b
  1162                           
  1163                           ;Main_program_meter.c: 138:         D3 = 0;
  1164  0025C2  0E00               	movlw	0
  1165  0025C4  6F95               	movwf	(_D3+1)& (0+255),b
  1166  0025C6  0E00               	movlw	0
  1167  0025C8  6F94               	movwf	_D3& (0+255),b
  1168                           
  1169                           ;Main_program_meter.c: 139:         D4 = 0;
  1170  0025CA  0E00               	movlw	0
  1171  0025CC  6F93               	movwf	(_D4+1)& (0+255),b
  1172  0025CE  0E00               	movlw	0
  1173  0025D0  6F92               	movwf	_D4& (0+255),b
  1174                           
  1175                           ;Main_program_meter.c: 141:     }
  1176  0025D2  EFE6  F013         	goto	l4530
  1177  0025D6                     l4508:
  1178  0025D6  0E00               	movlw	0
  1179  0025D8  6E28               	movwf	___flge@ff1^0,c
  1180  0025DA  0E00               	movlw	0
  1181  0025DC  6E29               	movwf	(___flge@ff1+1)^0,c
  1182  0025DE  0E00               	movlw	0
  1183  0025E0  6E2A               	movwf	(___flge@ff1+2)^0,c
  1184  0025E2  0E00               	movlw	0
  1185  0025E4  6E2B               	movwf	(___flge@ff1+3)^0,c
  1186  0025E6  C088  F02C         	movff	_Voltage_AN0,___flge@ff2
  1187  0025EA  C089  F02D         	movff	_Voltage_AN0+1,___flge@ff2+1
  1188  0025EE  C08A  F02E         	movff	_Voltage_AN0+2,___flge@ff2+2
  1189  0025F2  C08B  F02F         	movff	_Voltage_AN0+3,___flge@ff2+3
  1190  0025F6  ECB1  F01A         	call	___flge	;wreg free
  1191  0025FA  B0D8               	btfsc	status,0,c
  1192  0025FC  EF02  F013         	goto	u5541
  1193  002600  EF04  F013         	goto	u5540
  1194  002604                     u5541:
  1195  002604  EF30  F013         	goto	l4514
  1196  002608                     u5540:
  1197  002608  0E00               	movlw	0
  1198  00260A  6E28               	movwf	___flge@ff1^0,c
  1199  00260C  0E00               	movlw	0
  1200  00260E  6E29               	movwf	(___flge@ff1+1)^0,c
  1201  002610  0EA0               	movlw	160
  1202  002612  6E2A               	movwf	(___flge@ff1+2)^0,c
  1203  002614  0E3F               	movlw	63
  1204  002616  6E2B               	movwf	(___flge@ff1+3)^0,c
  1205  002618  C088  F02C         	movff	_Voltage_AN0,___flge@ff2
  1206  00261C  C089  F02D         	movff	_Voltage_AN0+1,___flge@ff2+1
  1207  002620  C08A  F02E         	movff	_Voltage_AN0+2,___flge@ff2+2
  1208  002624  C08B  F02F         	movff	_Voltage_AN0+3,___flge@ff2+3
  1209  002628  ECB1  F01A         	call	___flge	;wreg free
  1210  00262C  A0D8               	btfss	status,0,c
  1211  00262E  EF1B  F013         	goto	u5551
  1212  002632  EF1D  F013         	goto	u5550
  1213  002636                     u5551:
  1214  002636  EF30  F013         	goto	l4514
  1215  00263A                     u5550:
  1216  00263A                     
  1217                           ;Main_program_meter.c: 143:     {;Main_program_meter.c: 144:         D1 = 1;
  1218  00263A  0E00               	movlw	0
  1219  00263C  0100               	movlb	0	; () banked
  1220  00263E  6F99               	movwf	(_D1+1)& (0+255),b
  1221  002640  0E01               	movlw	1
  1222  002642  6F98               	movwf	_D1& (0+255),b
  1223                           
  1224                           ;Main_program_meter.c: 145:         D2 = 0;
  1225  002644  0E00               	movlw	0
  1226  002646  6F97               	movwf	(_D2+1)& (0+255),b
  1227  002648  0E00               	movlw	0
  1228  00264A  6F96               	movwf	_D2& (0+255),b
  1229                           
  1230                           ;Main_program_meter.c: 146:         D3 = 0;
  1231  00264C  0E00               	movlw	0
  1232  00264E  6F95               	movwf	(_D3+1)& (0+255),b
  1233  002650  0E00               	movlw	0
  1234  002652  6F94               	movwf	_D3& (0+255),b
  1235                           
  1236                           ;Main_program_meter.c: 147:         D4 = 0;
  1237  002654  0E00               	movlw	0
  1238  002656  6F93               	movwf	(_D4+1)& (0+255),b
  1239  002658  0E00               	movlw	0
  1240  00265A  6F92               	movwf	_D4& (0+255),b
  1241                           
  1242                           ;Main_program_meter.c: 149:     }
  1243  00265C  EFE6  F013         	goto	l4530
  1244  002660                     l4514:
  1245  002660  0E00               	movlw	0
  1246  002662  6E28               	movwf	___flge@ff1^0,c
  1247  002664  0E00               	movlw	0
  1248  002666  6E29               	movwf	(___flge@ff1+1)^0,c
  1249  002668  0EA0               	movlw	160
  1250  00266A  6E2A               	movwf	(___flge@ff1+2)^0,c
  1251  00266C  0E3F               	movlw	63
  1252  00266E  6E2B               	movwf	(___flge@ff1+3)^0,c
  1253  002670  C088  F02C         	movff	_Voltage_AN0,___flge@ff2
  1254  002674  C089  F02D         	movff	_Voltage_AN0+1,___flge@ff2+1
  1255  002678  C08A  F02E         	movff	_Voltage_AN0+2,___flge@ff2+2
  1256  00267C  C08B  F02F         	movff	_Voltage_AN0+3,___flge@ff2+3
  1257  002680  ECB1  F01A         	call	___flge	;wreg free
  1258  002684  B0D8               	btfsc	status,0,c
  1259  002686  EF47  F013         	goto	u5561
  1260  00268A  EF49  F013         	goto	u5560
  1261  00268E                     u5561:
  1262  00268E  EF75  F013         	goto	l4520
  1263  002692                     u5560:
  1264  002692  0E00               	movlw	0
  1265  002694  6E28               	movwf	___flge@ff1^0,c
  1266  002696  0E00               	movlw	0
  1267  002698  6E29               	movwf	(___flge@ff1+1)^0,c
  1268  00269A  0E20               	movlw	32
  1269  00269C  6E2A               	movwf	(___flge@ff1+2)^0,c
  1270  00269E  0E40               	movlw	64
  1271  0026A0  6E2B               	movwf	(___flge@ff1+3)^0,c
  1272  0026A2  C088  F02C         	movff	_Voltage_AN0,___flge@ff2
  1273  0026A6  C089  F02D         	movff	_Voltage_AN0+1,___flge@ff2+1
  1274  0026AA  C08A  F02E         	movff	_Voltage_AN0+2,___flge@ff2+2
  1275  0026AE  C08B  F02F         	movff	_Voltage_AN0+3,___flge@ff2+3
  1276  0026B2  ECB1  F01A         	call	___flge	;wreg free
  1277  0026B6  A0D8               	btfss	status,0,c
  1278  0026B8  EF60  F013         	goto	u5571
  1279  0026BC  EF62  F013         	goto	u5570
  1280  0026C0                     u5571:
  1281  0026C0  EF75  F013         	goto	l4520
  1282  0026C4                     u5570:
  1283  0026C4                     
  1284                           ;Main_program_meter.c: 151:     {;Main_program_meter.c: 152:         D1 = 1;
  1285  0026C4  0E00               	movlw	0
  1286  0026C6  0100               	movlb	0	; () banked
  1287  0026C8  6F99               	movwf	(_D1+1)& (0+255),b
  1288  0026CA  0E01               	movlw	1
  1289  0026CC  6F98               	movwf	_D1& (0+255),b
  1290                           
  1291                           ;Main_program_meter.c: 153:         D2 = 1;
  1292  0026CE  0E00               	movlw	0
  1293  0026D0  6F97               	movwf	(_D2+1)& (0+255),b
  1294  0026D2  0E01               	movlw	1
  1295  0026D4  6F96               	movwf	_D2& (0+255),b
  1296                           
  1297                           ;Main_program_meter.c: 154:         D3 = 0;
  1298  0026D6  0E00               	movlw	0
  1299  0026D8  6F95               	movwf	(_D3+1)& (0+255),b
  1300  0026DA  0E00               	movlw	0
  1301  0026DC  6F94               	movwf	_D3& (0+255),b
  1302                           
  1303                           ;Main_program_meter.c: 155:         D4 = 0;
  1304  0026DE  0E00               	movlw	0
  1305  0026E0  6F93               	movwf	(_D4+1)& (0+255),b
  1306  0026E2  0E00               	movlw	0
  1307  0026E4  6F92               	movwf	_D4& (0+255),b
  1308                           
  1309                           ;Main_program_meter.c: 156:     }
  1310  0026E6  EFE6  F013         	goto	l4530
  1311  0026EA                     l4520:
  1312  0026EA  0E00               	movlw	0
  1313  0026EC  6E28               	movwf	___flge@ff1^0,c
  1314  0026EE  0E00               	movlw	0
  1315  0026F0  6E29               	movwf	(___flge@ff1+1)^0,c
  1316  0026F2  0E20               	movlw	32
  1317  0026F4  6E2A               	movwf	(___flge@ff1+2)^0,c
  1318  0026F6  0E40               	movlw	64
  1319  0026F8  6E2B               	movwf	(___flge@ff1+3)^0,c
  1320  0026FA  C088  F02C         	movff	_Voltage_AN0,___flge@ff2
  1321  0026FE  C089  F02D         	movff	_Voltage_AN0+1,___flge@ff2+1
  1322  002702  C08A  F02E         	movff	_Voltage_AN0+2,___flge@ff2+2
  1323  002706  C08B  F02F         	movff	_Voltage_AN0+3,___flge@ff2+3
  1324  00270A  ECB1  F01A         	call	___flge	;wreg free
  1325  00270E  B0D8               	btfsc	status,0,c
  1326  002710  EF8C  F013         	goto	u5581
  1327  002714  EF8E  F013         	goto	u5580
  1328  002718                     u5581:
  1329  002718  EFBA  F013         	goto	l4526
  1330  00271C                     u5580:
  1331  00271C  0E00               	movlw	0
  1332  00271E  6E28               	movwf	___flge@ff1^0,c
  1333  002720  0E00               	movlw	0
  1334  002722  6E29               	movwf	(___flge@ff1+1)^0,c
  1335  002724  0E70               	movlw	112
  1336  002726  6E2A               	movwf	(___flge@ff1+2)^0,c
  1337  002728  0E40               	movlw	64
  1338  00272A  6E2B               	movwf	(___flge@ff1+3)^0,c
  1339  00272C  C088  F02C         	movff	_Voltage_AN0,___flge@ff2
  1340  002730  C089  F02D         	movff	_Voltage_AN0+1,___flge@ff2+1
  1341  002734  C08A  F02E         	movff	_Voltage_AN0+2,___flge@ff2+2
  1342  002738  C08B  F02F         	movff	_Voltage_AN0+3,___flge@ff2+3
  1343  00273C  ECB1  F01A         	call	___flge	;wreg free
  1344  002740  A0D8               	btfss	status,0,c
  1345  002742  EFA5  F013         	goto	u5591
  1346  002746  EFA7  F013         	goto	u5590
  1347  00274A                     u5591:
  1348  00274A  EFBA  F013         	goto	l4526
  1349  00274E                     u5590:
  1350  00274E                     
  1351                           ;Main_program_meter.c: 158:     {;Main_program_meter.c: 159:         D1 = 1;
  1352  00274E  0E00               	movlw	0
  1353  002750  0100               	movlb	0	; () banked
  1354  002752  6F99               	movwf	(_D1+1)& (0+255),b
  1355  002754  0E01               	movlw	1
  1356  002756  6F98               	movwf	_D1& (0+255),b
  1357                           
  1358                           ;Main_program_meter.c: 160:         D2 = 1;
  1359  002758  0E00               	movlw	0
  1360  00275A  6F97               	movwf	(_D2+1)& (0+255),b
  1361  00275C  0E01               	movlw	1
  1362  00275E  6F96               	movwf	_D2& (0+255),b
  1363                           
  1364                           ;Main_program_meter.c: 161:         D3 = 1;
  1365  002760  0E00               	movlw	0
  1366  002762  6F95               	movwf	(_D3+1)& (0+255),b
  1367  002764  0E01               	movlw	1
  1368  002766  6F94               	movwf	_D3& (0+255),b
  1369                           
  1370                           ;Main_program_meter.c: 162:         D4 = 0;
  1371  002768  0E00               	movlw	0
  1372  00276A  6F93               	movwf	(_D4+1)& (0+255),b
  1373  00276C  0E00               	movlw	0
  1374  00276E  6F92               	movwf	_D4& (0+255),b
  1375                           
  1376                           ;Main_program_meter.c: 163:     }
  1377  002770  EFE6  F013         	goto	l4530
  1378  002774                     l4526:
  1379  002774  0E00               	movlw	0
  1380  002776  6E28               	movwf	___flge@ff1^0,c
  1381  002778  0E00               	movlw	0
  1382  00277A  6E29               	movwf	(___flge@ff1+1)^0,c
  1383  00277C  0E70               	movlw	112
  1384  00277E  6E2A               	movwf	(___flge@ff1+2)^0,c
  1385  002780  0E40               	movlw	64
  1386  002782  6E2B               	movwf	(___flge@ff1+3)^0,c
  1387  002784  C088  F02C         	movff	_Voltage_AN0,___flge@ff2
  1388  002788  C089  F02D         	movff	_Voltage_AN0+1,___flge@ff2+1
  1389  00278C  C08A  F02E         	movff	_Voltage_AN0+2,___flge@ff2+2
  1390  002790  C08B  F02F         	movff	_Voltage_AN0+3,___flge@ff2+3
  1391  002794  ECB1  F01A         	call	___flge	;wreg free
  1392  002798  B0D8               	btfsc	status,0,c
  1393  00279A  EFD1  F013         	goto	u5601
  1394  00279E  EFD3  F013         	goto	u5600
  1395  0027A2                     u5601:
  1396  0027A2  EFE6  F013         	goto	l82
  1397  0027A6                     u5600:
  1398  0027A6                     
  1399                           ;Main_program_meter.c: 165:     {;Main_program_meter.c: 166:         D1 = 1;
  1400  0027A6  0E00               	movlw	0
  1401  0027A8  0100               	movlb	0	; () banked
  1402  0027AA  6F99               	movwf	(_D1+1)& (0+255),b
  1403  0027AC  0E01               	movlw	1
  1404  0027AE  6F98               	movwf	_D1& (0+255),b
  1405                           
  1406                           ;Main_program_meter.c: 167:         D2 = 1;
  1407  0027B0  0E00               	movlw	0
  1408  0027B2  6F97               	movwf	(_D2+1)& (0+255),b
  1409  0027B4  0E01               	movlw	1
  1410  0027B6  6F96               	movwf	_D2& (0+255),b
  1411                           
  1412                           ;Main_program_meter.c: 168:         D3 = 1;
  1413  0027B8  0E00               	movlw	0
  1414  0027BA  6F95               	movwf	(_D3+1)& (0+255),b
  1415  0027BC  0E01               	movlw	1
  1416  0027BE  6F94               	movwf	_D3& (0+255),b
  1417                           
  1418                           ;Main_program_meter.c: 169:         D4 = 1;
  1419  0027C0  0E00               	movlw	0
  1420  0027C2  6F93               	movwf	(_D4+1)& (0+255),b
  1421  0027C4  0E01               	movlw	1
  1422  0027C6  6F92               	movwf	_D4& (0+255),b
  1423  0027C8  EFE6  F013         	goto	l4530
  1424  0027CC                     l82:
  1425  0027CC                     l4530:
  1426                           
  1427                           ;Main_program_meter.c: 171:     PORTCbits.RC0 =! D1;
  1428  0027CC  0100               	movlb	0	; () banked
  1429  0027CE  5198               	movf	_D1& (0+255),w,b
  1430  0027D0  1199               	iorwf	(_D1+1)& (0+255),w,b
  1431  0027D2  B4D8               	btfsc	status,2,c
  1432  0027D4  EFEE  F013         	goto	u5611
  1433  0027D8  EFF2  F013         	goto	u5610
  1434  0027DC                     u5611:
  1435  0027DC  6A34               	clrf	??_logic_CONTROL^0,c
  1436  0027DE  2A34               	incf	??_logic_CONTROL^0,f,c
  1437  0027E0  EFF3  F013         	goto	u5628
  1438  0027E4                     u5610:
  1439  0027E4  6A34               	clrf	??_logic_CONTROL^0,c
  1440  0027E6                     u5628:
  1441  0027E6  5082               	movf	130,w,c	;volatile
  1442  0027E8  1834               	xorwf	??_logic_CONTROL^0,w,c
  1443  0027EA  0BFE               	andlw	-2
  1444  0027EC  1834               	xorwf	??_logic_CONTROL^0,w,c
  1445  0027EE  6E82               	movwf	130,c	;volatile
  1446  0027F0                     
  1447                           ;Main_program_meter.c: 172:     PORTCbits.RC1 =! D2;
  1448  0027F0  0100               	movlb	0	; () banked
  1449  0027F2  5196               	movf	_D2& (0+255),w,b
  1450  0027F4  1197               	iorwf	(_D2+1)& (0+255),w,b
  1451  0027F6  B4D8               	btfsc	status,2,c
  1452  0027F8  EF00  F014         	goto	u5631
  1453  0027FC  EF04  F014         	goto	u5630
  1454  002800                     u5631:
  1455  002800  6A34               	clrf	??_logic_CONTROL^0,c
  1456  002802  2A34               	incf	??_logic_CONTROL^0,f,c
  1457  002804  EF05  F014         	goto	u5648
  1458  002808                     u5630:
  1459  002808  6A34               	clrf	??_logic_CONTROL^0,c
  1460  00280A                     u5648:
  1461  00280A  4634               	rlncf	??_logic_CONTROL^0,f,c
  1462  00280C  5082               	movf	130,w,c	;volatile
  1463  00280E  1834               	xorwf	??_logic_CONTROL^0,w,c
  1464  002810  0BFD               	andlw	-3
  1465  002812  1834               	xorwf	??_logic_CONTROL^0,w,c
  1466  002814  6E82               	movwf	130,c	;volatile
  1467  002816                     
  1468                           ;Main_program_meter.c: 173:     PORTCbits.RC2 =! D3;
  1469  002816  0100               	movlb	0	; () banked
  1470  002818  5194               	movf	_D3& (0+255),w,b
  1471  00281A  1195               	iorwf	(_D3+1)& (0+255),w,b
  1472  00281C  B4D8               	btfsc	status,2,c
  1473  00281E  EF13  F014         	goto	u5651
  1474  002822  EF17  F014         	goto	u5650
  1475  002826                     u5651:
  1476  002826  6A34               	clrf	??_logic_CONTROL^0,c
  1477  002828  2A34               	incf	??_logic_CONTROL^0,f,c
  1478  00282A  EF18  F014         	goto	u5668
  1479  00282E                     u5650:
  1480  00282E  6A34               	clrf	??_logic_CONTROL^0,c
  1481  002830                     u5668:
  1482  002830  4634               	rlncf	??_logic_CONTROL^0,f,c
  1483  002832  4634               	rlncf	??_logic_CONTROL^0,f,c
  1484  002834  5082               	movf	130,w,c	;volatile
  1485  002836  1834               	xorwf	??_logic_CONTROL^0,w,c
  1486  002838  0BFB               	andlw	-5
  1487  00283A  1834               	xorwf	??_logic_CONTROL^0,w,c
  1488  00283C  6E82               	movwf	130,c	;volatile
  1489  00283E                     
  1490                           ;Main_program_meter.c: 174:     PORTCbits.RC3 =! D4;
  1491  00283E  0100               	movlb	0	; () banked
  1492  002840  5192               	movf	_D4& (0+255),w,b
  1493  002842  1193               	iorwf	(_D4+1)& (0+255),w,b
  1494  002844  B4D8               	btfsc	status,2,c
  1495  002846  EF27  F014         	goto	u5671
  1496  00284A  EF2B  F014         	goto	u5670
  1497  00284E                     u5671:
  1498  00284E  6A34               	clrf	??_logic_CONTROL^0,c
  1499  002850  2A34               	incf	??_logic_CONTROL^0,f,c
  1500  002852  EF2C  F014         	goto	u5688
  1501  002856                     u5670:
  1502  002856  6A34               	clrf	??_logic_CONTROL^0,c
  1503  002858                     u5688:
  1504  002858  4634               	rlncf	??_logic_CONTROL^0,f,c
  1505  00285A  4634               	rlncf	??_logic_CONTROL^0,f,c
  1506  00285C  4634               	rlncf	??_logic_CONTROL^0,f,c
  1507  00285E  5082               	movf	130,w,c	;volatile
  1508  002860  1834               	xorwf	??_logic_CONTROL^0,w,c
  1509  002862  0BF7               	andlw	-9
  1510  002864  1834               	xorwf	??_logic_CONTROL^0,w,c
  1511  002866  6E82               	movwf	130,c	;volatile
  1512  002868  0012               	return		;funcret
  1513  00286A                     __end_of_logic_CONTROL:
  1514                           	callstack 0
  1515                           
  1516 ;; *************** function _lcd_init *****************
  1517 ;; Defined at:
  1518 ;;		line 3 in file "LCD4b_EXSTO.c"
  1519 ;; Parameters:    Size  Location     Type
  1520 ;;		None
  1521 ;; Auto vars:     Size  Location     Type
  1522 ;;  i               1    5[COMRAM] unsigned char 
  1523 ;; Return value:  Size  Location     Type
  1524 ;;                  1    wreg      void 
  1525 ;; Registers used:
  1526 ;;		wreg, status,2, status,0, cstack
  1527 ;; Tracked objects:
  1528 ;;		On entry : 0/0
  1529 ;;		On exit  : 0/0
  1530 ;;		Unchanged: 0/0
  1531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1532 ;;      Params:         0       0       0       0       0       0       0
  1533 ;;      Locals:         1       0       0       0       0       0       0
  1534 ;;      Temps:          1       0       0       0       0       0       0
  1535 ;;      Totals:         2       0       0       0       0       0       0
  1536 ;;Total ram usage:        2 bytes
  1537 ;; Hardware stack levels used: 1
  1538 ;; Hardware stack levels required when called: 2
  1539 ;; This function calls:
  1540 ;;		_lcd_cmd
  1541 ;; This function is called by:
  1542 ;;		_main
  1543 ;; This function uses a non-reentrant model
  1544 ;;
  1545                           
  1546                           	psect	text2
  1547  003D68                     __ptext2:
  1548                           	callstack 0
  1549  003D68                     _lcd_init:
  1550                           	callstack 28
  1551  003D68                     
  1552                           ;LCD4b_EXSTO.c: 5:     char i;;LCD4b_EXSTO.c: 7:     TRISD = 0b00000000;
  1553  003D68  0E00               	movlw	0
  1554  003D6A  6E95               	movwf	149,c	;volatile
  1555  003D6C                     
  1556                           ;LCD4b_EXSTO.c: 8:     TRISEbits.TRISE2 = 0;
  1557  003D6C  9496               	bcf	150,2,c	;volatile
  1558  003D6E                     
  1559                           ;LCD4b_EXSTO.c: 9:     TRISEbits.TRISE1 = 0;
  1560  003D6E  9296               	bcf	150,1,c	;volatile
  1561  003D70                     
  1562                           ;LCD4b_EXSTO.c: 10:     TRISEbits.TRISE0 = 0;
  1563  003D70  9096               	bcf	150,0,c	;volatile
  1564                           
  1565                           ;LCD4b_EXSTO.c: 11:     PORTD = 0b00000000;
  1566  003D72  0E00               	movlw	0
  1567  003D74  6E83               	movwf	131,c	;volatile
  1568  003D76                     
  1569                           ;LCD4b_EXSTO.c: 12:     PORTEbits.RE0 = 0;
  1570  003D76  9084               	bcf	132,0,c	;volatile
  1571  003D78                     
  1572                           ;LCD4b_EXSTO.c: 13:     PORTEbits.RE1 = 0;
  1573  003D78  9284               	bcf	132,1,c	;volatile
  1574  003D7A                     
  1575                           ;LCD4b_EXSTO.c: 14:     PORTEbits.RE2 = 0;
  1576  003D7A  9484               	bcf	132,2,c	;volatile
  1577  003D7C                     
  1578                           ;LCD4b_EXSTO.c: 16:     _delay((unsigned long)((15)*(8000000/4000.0)));
  1579  003D7C  0E27               	movlw	39
  1580  003D7E  6E05               	movwf	??_lcd_init^0,c
  1581  003D80  0EF5               	movlw	245
  1582  003D82                     u5717:
  1583  003D82  2EE8               	decfsz	wreg,f,c
  1584  003D84  D7FE               	bra	u5717
  1585  003D86  2E05               	decfsz	??_lcd_init^0,f,c
  1586  003D88  D7FC               	bra	u5717
  1587  003D8A  F000               	nop	
  1588  003D8C                     
  1589                           ;LCD4b_EXSTO.c: 18:     for(i=0;i<=2;i++)
  1590  003D8C  0E00               	movlw	0
  1591  003D8E  6E06               	movwf	lcd_init@i^0,c
  1592  003D90                     l4578:
  1593                           
  1594                           ;LCD4b_EXSTO.c: 19:     {;LCD4b_EXSTO.c: 20:         lcd_cmd(0x30);
  1595  003D90  0E30               	movlw	48
  1596  003D92  ECB2  F01B         	call	_lcd_cmd
  1597  003D96                     
  1598                           ;LCD4b_EXSTO.c: 21:         _delay((unsigned long)((5)*(8000000/4000.0)));
  1599  003D96  0E0D               	movlw	13
  1600  003D98  6E05               	movwf	??_lcd_init^0,c
  1601  003D9A  0EFC               	movlw	252
  1602  003D9C                     u5727:
  1603  003D9C  2EE8               	decfsz	wreg,f,c
  1604  003D9E  D7FE               	bra	u5727
  1605  003DA0  2E05               	decfsz	??_lcd_init^0,f,c
  1606  003DA2  D7FC               	bra	u5727
  1607  003DA4                     
  1608                           ;LCD4b_EXSTO.c: 22:     }
  1609  003DA4  2A06               	incf	lcd_init@i^0,f,c
  1610  003DA6  0E02               	movlw	2
  1611  003DA8  6406               	cpfsgt	lcd_init@i^0,c
  1612  003DAA  EFD9  F01E         	goto	u5691
  1613  003DAE  EFDB  F01E         	goto	u5690
  1614  003DB2                     u5691:
  1615  003DB2  EFC8  F01E         	goto	l4578
  1616  003DB6                     u5690:
  1617  003DB6                     
  1618                           ;LCD4b_EXSTO.c: 24:     lcd_cmd(0x02);
  1619  003DB6  0E02               	movlw	2
  1620  003DB8  ECB2  F01B         	call	_lcd_cmd
  1621  003DBC                     
  1622                           ;LCD4b_EXSTO.c: 25:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1623  003DBC  0E1A               	movlw	26
  1624  003DBE                     u5737:
  1625  003DBE  2EE8               	decfsz	wreg,f,c
  1626  003DC0  D7FE               	bra	u5737
  1627  003DC2  D000               	nop2	
  1628  003DC4                     
  1629                           ;LCD4b_EXSTO.c: 26:     lcd_cmd(0x28);
  1630  003DC4  0E28               	movlw	40
  1631  003DC6  ECB2  F01B         	call	_lcd_cmd
  1632                           
  1633                           ;LCD4b_EXSTO.c: 27:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1634  003DCA  0E1A               	movlw	26
  1635  003DCC                     u5747:
  1636  003DCC  2EE8               	decfsz	wreg,f,c
  1637  003DCE  D7FE               	bra	u5747
  1638  003DD0  D000               	nop2	
  1639  003DD2                     
  1640                           ;LCD4b_EXSTO.c: 28:     lcd_cmd(0x01);
  1641  003DD2  0E01               	movlw	1
  1642  003DD4  ECB2  F01B         	call	_lcd_cmd
  1643  003DD8                     
  1644                           ;LCD4b_EXSTO.c: 29:     _delay((unsigned long)((2)*(8000000/4000.0)));
  1645  003DD8  0E06               	movlw	6
  1646  003DDA  6E05               	movwf	??_lcd_init^0,c
  1647  003DDC  0E30               	movlw	48
  1648  003DDE                     u5757:
  1649  003DDE  2EE8               	decfsz	wreg,f,c
  1650  003DE0  D7FE               	bra	u5757
  1651  003DE2  2E05               	decfsz	??_lcd_init^0,f,c
  1652  003DE4  D7FC               	bra	u5757
  1653  003DE6  D000               	nop2	
  1654                           
  1655                           ;LCD4b_EXSTO.c: 30:     lcd_cmd(0x0C);
  1656  003DE8  0E0C               	movlw	12
  1657  003DEA  ECB2  F01B         	call	_lcd_cmd
  1658  003DEE                     
  1659                           ;LCD4b_EXSTO.c: 31:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1660  003DEE  0E1A               	movlw	26
  1661  003DF0                     u5767:
  1662  003DF0  2EE8               	decfsz	wreg,f,c
  1663  003DF2  D7FE               	bra	u5767
  1664  003DF4  D000               	nop2	
  1665  003DF6                     
  1666                           ;LCD4b_EXSTO.c: 32:     lcd_cmd(0x06);
  1667  003DF6  0E06               	movlw	6
  1668  003DF8  ECB2  F01B         	call	_lcd_cmd
  1669                           
  1670                           ;LCD4b_EXSTO.c: 33:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1671  003DFC  0E1A               	movlw	26
  1672  003DFE                     u5777:
  1673  003DFE  2EE8               	decfsz	wreg,f,c
  1674  003E00  D7FE               	bra	u5777
  1675  003E02  D000               	nop2	
  1676  003E04  0012               	return		;funcret
  1677  003E06                     __end_of_lcd_init:
  1678                           	callstack 0
  1679                           
  1680 ;; *************** function _lcd_SENSOR *****************
  1681 ;; Defined at:
  1682 ;;		line 116 in file "Main_program_meter.c"
  1683 ;; Parameters:    Size  Location     Type
  1684 ;;		None
  1685 ;; Auto vars:     Size  Location     Type
  1686 ;;		None
  1687 ;; Return value:  Size  Location     Type
  1688 ;;                  1    wreg      void 
  1689 ;; Registers used:
  1690 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1691 ;; Tracked objects:
  1692 ;;		On entry : 0/0
  1693 ;;		On exit  : 0/0
  1694 ;;		Unchanged: 0/0
  1695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1696 ;;      Params:         0       0       0       0       0       0       0
  1697 ;;      Locals:         0       0       0       0       0       0       0
  1698 ;;      Temps:          0       0       0       0       0       0       0
  1699 ;;      Totals:         0       0       0       0       0       0       0
  1700 ;;Total ram usage:        0 bytes
  1701 ;; Hardware stack levels used: 1
  1702 ;; Hardware stack levels required when called: 8
  1703 ;; This function calls:
  1704 ;;		_lcd_write
  1705 ;;		_sprintf
  1706 ;; This function is called by:
  1707 ;;		_main
  1708 ;; This function uses a non-reentrant model
  1709 ;;
  1710                           
  1711                           	psect	text3
  1712  003E06                     __ptext3:
  1713                           	callstack 0
  1714  003E06                     _lcd_SENSOR:
  1715                           	callstack 22
  1716  003E06                     
  1717                           ;Main_program_meter.c: 118:     sprintf(VdigBuffer,
  1718  003E06  0E9C               	movlw	low _VdigBuffer
  1719  003E08  0100               	movlb	0	; () banked
  1720  003E0A  6FE4               	movwf	sprintf@s& (0+255),b
  1721  003E0C  0E00               	movlw	high _VdigBuffer
  1722  003E0E  6FE5               	movwf	(sprintf@s+1)& (0+255),b
  1723  003E10  0E20               	movlw	low STR_1
  1724  003E12  6FE6               	movwf	sprintf@fmt& (0+255),b
  1725  003E14  0E06               	movlw	high STR_1
  1726  003E16  6FE7               	movwf	(sprintf@fmt+1)& (0+255),b
  1727  003E18  C09A  F0E8         	movff	_VdigADC_AN0,?_sprintf+4
  1728  003E1C  C09B  F0E9         	movff	_VdigADC_AN0+1,?_sprintf+5
  1729  003E20  ECE2  F01F         	call	_sprintf	;wreg free
  1730                           
  1731                           ;Main_program_meter.c: 122:     sprintf(VoltageBuffer,
  1732  003E24  0E50               	movlw	low _VoltageBuffer
  1733  003E26  0100               	movlb	0	; () banked
  1734  003E28  6FE4               	movwf	sprintf@s& (0+255),b
  1735  003E2A  0E01               	movlw	high _VoltageBuffer
  1736  003E2C  6FE5               	movwf	(sprintf@s+1)& (0+255),b
  1737  003E2E  0E11               	movlw	low STR_2
  1738  003E30  6FE6               	movwf	sprintf@fmt& (0+255),b
  1739  003E32  0E06               	movlw	high STR_2
  1740  003E34  6FE7               	movwf	(sprintf@fmt+1)& (0+255),b
  1741  003E36  C088  F0E8         	movff	_Voltage_AN0,?_sprintf+4
  1742  003E3A  C089  F0E9         	movff	_Voltage_AN0+1,?_sprintf+5
  1743  003E3E  C08A  F0EA         	movff	_Voltage_AN0+2,?_sprintf+6
  1744  003E42  C08B  F0EB         	movff	_Voltage_AN0+3,?_sprintf+7
  1745  003E46  ECE2  F01F         	call	_sprintf	;wreg free
  1746  003E4A                     
  1747                           ;Main_program_meter.c: 126:     lcd_write(1,1,"ADC:   ");
  1748  003E4A  0E01               	movlw	1
  1749  003E4C  6E07               	movwf	lcd_write@col^0,c
  1750  003E4E  0E38               	movlw	low STR_3
  1751  003E50  6E08               	movwf	lcd_write@str^0,c
  1752  003E52  0E06               	movlw	high STR_3
  1753  003E54  6E09               	movwf	(lcd_write@str+1)^0,c
  1754  003E56  0E01               	movlw	1
  1755  003E58  EC64  F01E         	call	_lcd_write
  1756  003E5C                     
  1757                           ;Main_program_meter.c: 127:     lcd_write(1,8,VdigBuffer);
  1758  003E5C  0E08               	movlw	8
  1759  003E5E  6E07               	movwf	lcd_write@col^0,c
  1760  003E60  0E9C               	movlw	low _VdigBuffer
  1761  003E62  6E08               	movwf	lcd_write@str^0,c
  1762  003E64  0E00               	movlw	high _VdigBuffer
  1763  003E66  6E09               	movwf	(lcd_write@str+1)^0,c
  1764  003E68  0E01               	movlw	1
  1765  003E6A  EC64  F01E         	call	_lcd_write
  1766  003E6E                     
  1767                           ;Main_program_meter.c: 128:     lcd_write(2,1,"Volt:   ");
  1768  003E6E  0E01               	movlw	1
  1769  003E70  6E07               	movwf	lcd_write@col^0,c
  1770  003E72  0E2F               	movlw	low STR_4
  1771  003E74  6E08               	movwf	lcd_write@str^0,c
  1772  003E76  0E06               	movlw	high STR_4
  1773  003E78  6E09               	movwf	(lcd_write@str+1)^0,c
  1774  003E7A  0E02               	movlw	2
  1775  003E7C  EC64  F01E         	call	_lcd_write
  1776  003E80                     
  1777                           ;Main_program_meter.c: 129:     lcd_write(2,8,VoltageBuffer);
  1778  003E80  0E08               	movlw	8
  1779  003E82  6E07               	movwf	lcd_write@col^0,c
  1780  003E84  0E50               	movlw	low _VoltageBuffer
  1781  003E86  6E08               	movwf	lcd_write@str^0,c
  1782  003E88  0E01               	movlw	high _VoltageBuffer
  1783  003E8A  6E09               	movwf	(lcd_write@str+1)^0,c
  1784  003E8C  0E02               	movlw	2
  1785  003E8E  EC64  F01E         	call	_lcd_write
  1786  003E92  0012               	return		;funcret
  1787  003E94                     __end_of_lcd_SENSOR:
  1788                           	callstack 0
  1789                           
  1790 ;; *************** function _lcd_LEDS *****************
  1791 ;; Defined at:
  1792 ;;		line 177 in file "Main_program_meter.c"
  1793 ;; Parameters:    Size  Location     Type
  1794 ;;		None
  1795 ;; Auto vars:     Size  Location     Type
  1796 ;;		None
  1797 ;; Return value:  Size  Location     Type
  1798 ;;                  1    wreg      void 
  1799 ;; Registers used:
  1800 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1801 ;; Tracked objects:
  1802 ;;		On entry : 0/0
  1803 ;;		On exit  : 0/0
  1804 ;;		Unchanged: 0/0
  1805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1806 ;;      Params:         0       0       0       0       0       0       0
  1807 ;;      Locals:         0       0       0       0       0       0       0
  1808 ;;      Temps:          0       0       0       0       0       0       0
  1809 ;;      Totals:         0       0       0       0       0       0       0
  1810 ;;Total ram usage:        0 bytes
  1811 ;; Hardware stack levels used: 1
  1812 ;; Hardware stack levels required when called: 8
  1813 ;; This function calls:
  1814 ;;		_lcd_write
  1815 ;;		_sprintf
  1816 ;; This function is called by:
  1817 ;;		_main
  1818 ;; This function uses a non-reentrant model
  1819 ;;
  1820                           
  1821                           	psect	text4
  1822  003352                     __ptext4:
  1823                           	callstack 0
  1824  003352                     _lcd_LEDS:
  1825                           	callstack 22
  1826  003352                     
  1827                           ;Main_program_meter.c: 179:     sprintf(Buffer_D1,
  1828  003352  0EC4               	movlw	low _Buffer_D1
  1829  003354  0100               	movlb	0	; () banked
  1830  003356  6FE4               	movwf	sprintf@s& (0+255),b
  1831  003358  0E00               	movlw	high _Buffer_D1
  1832  00335A  6FE5               	movwf	(sprintf@s+1)& (0+255),b
  1833  00335C  0E5E               	movlw	low STR_5
  1834  00335E  6FE6               	movwf	sprintf@fmt& (0+255),b
  1835  003360  0E06               	movlw	high STR_5
  1836  003362  6FE7               	movwf	(sprintf@fmt+1)& (0+255),b
  1837  003364  C098  F0E8         	movff	_D1,?_sprintf+4
  1838  003368  C099  F0E9         	movff	_D1+1,?_sprintf+5
  1839  00336C  ECE2  F01F         	call	_sprintf	;wreg free
  1840                           
  1841                           ;Main_program_meter.c: 183:     sprintf(Buffer_D2,
  1842  003370  0EBC               	movlw	low _Buffer_D2
  1843  003372  0100               	movlb	0	; () banked
  1844  003374  6FE4               	movwf	sprintf@s& (0+255),b
  1845  003376  0E00               	movlw	high _Buffer_D2
  1846  003378  6FE5               	movwf	(sprintf@s+1)& (0+255),b
  1847  00337A  0E5E               	movlw	low STR_5
  1848  00337C  6FE6               	movwf	sprintf@fmt& (0+255),b
  1849  00337E  0E06               	movlw	high STR_5
  1850  003380  6FE7               	movwf	(sprintf@fmt+1)& (0+255),b
  1851  003382  C096  F0E8         	movff	_D2,?_sprintf+4
  1852  003386  C097  F0E9         	movff	_D2+1,?_sprintf+5
  1853  00338A  ECE2  F01F         	call	_sprintf	;wreg free
  1854                           
  1855                           ;Main_program_meter.c: 187:     sprintf(Buffer_D3,
  1856  00338E  0EB4               	movlw	low _Buffer_D3
  1857  003390  0100               	movlb	0	; () banked
  1858  003392  6FE4               	movwf	sprintf@s& (0+255),b
  1859  003394  0E00               	movlw	high _Buffer_D3
  1860  003396  6FE5               	movwf	(sprintf@s+1)& (0+255),b
  1861  003398  0E5E               	movlw	low STR_5
  1862  00339A  6FE6               	movwf	sprintf@fmt& (0+255),b
  1863  00339C  0E06               	movlw	high STR_5
  1864  00339E  6FE7               	movwf	(sprintf@fmt+1)& (0+255),b
  1865  0033A0  C094  F0E8         	movff	_D3,?_sprintf+4
  1866  0033A4  C095  F0E9         	movff	_D3+1,?_sprintf+5
  1867  0033A8  ECE2  F01F         	call	_sprintf	;wreg free
  1868                           
  1869                           ;Main_program_meter.c: 191:     sprintf(Buffer_D4,
  1870  0033AC  0EAC               	movlw	low _Buffer_D4
  1871  0033AE  0100               	movlb	0	; () banked
  1872  0033B0  6FE4               	movwf	sprintf@s& (0+255),b
  1873  0033B2  0E00               	movlw	high _Buffer_D4
  1874  0033B4  6FE5               	movwf	(sprintf@s+1)& (0+255),b
  1875  0033B6  0E5E               	movlw	low STR_5
  1876  0033B8  6FE6               	movwf	sprintf@fmt& (0+255),b
  1877  0033BA  0E06               	movlw	high STR_5
  1878  0033BC  6FE7               	movwf	(sprintf@fmt+1)& (0+255),b
  1879  0033BE  C092  F0E8         	movff	_D4,?_sprintf+4
  1880  0033C2  C093  F0E9         	movff	_D4+1,?_sprintf+5
  1881  0033C6  ECE2  F01F         	call	_sprintf	;wreg free
  1882  0033CA                     
  1883                           ;Main_program_meter.c: 195:     lcd_write(1,1,"LED 1:");
  1884  0033CA  0E01               	movlw	1
  1885  0033CC  6E07               	movwf	lcd_write@col^0,c
  1886  0033CE  0E50               	movlw	low STR_9
  1887  0033D0  6E08               	movwf	lcd_write@str^0,c
  1888  0033D2  0E06               	movlw	high STR_9
  1889  0033D4  6E09               	movwf	(lcd_write@str+1)^0,c
  1890  0033D6  0E01               	movlw	1
  1891  0033D8  EC64  F01E         	call	_lcd_write
  1892  0033DC                     
  1893                           ;Main_program_meter.c: 196:     lcd_write(1,7,Buffer_D1);
  1894  0033DC  0E07               	movlw	7
  1895  0033DE  6E07               	movwf	lcd_write@col^0,c
  1896  0033E0  0EC4               	movlw	low _Buffer_D1
  1897  0033E2  6E08               	movwf	lcd_write@str^0,c
  1898  0033E4  0E00               	movlw	high _Buffer_D1
  1899  0033E6  6E09               	movwf	(lcd_write@str+1)^0,c
  1900  0033E8  0E01               	movlw	1
  1901  0033EA  EC64  F01E         	call	_lcd_write
  1902  0033EE                     
  1903                           ;Main_program_meter.c: 197:     lcd_write(1,8," LED 2:");
  1904  0033EE  0E08               	movlw	8
  1905  0033F0  6E07               	movwf	lcd_write@col^0,c
  1906  0033F2  0E40               	movlw	low STR_10
  1907  0033F4  6E08               	movwf	lcd_write@str^0,c
  1908  0033F6  0E06               	movlw	high STR_10
  1909  0033F8  6E09               	movwf	(lcd_write@str+1)^0,c
  1910  0033FA  0E01               	movlw	1
  1911  0033FC  EC64  F01E         	call	_lcd_write
  1912  003400                     
  1913                           ;Main_program_meter.c: 198:     lcd_write(1,15,Buffer_D2);
  1914  003400  0E0F               	movlw	15
  1915  003402  6E07               	movwf	lcd_write@col^0,c
  1916  003404  0EBC               	movlw	low _Buffer_D2
  1917  003406  6E08               	movwf	lcd_write@str^0,c
  1918  003408  0E00               	movlw	high _Buffer_D2
  1919  00340A  6E09               	movwf	(lcd_write@str+1)^0,c
  1920  00340C  0E01               	movlw	1
  1921  00340E  EC64  F01E         	call	_lcd_write
  1922  003412                     
  1923                           ;Main_program_meter.c: 199:     lcd_write(2,1,"LED 3:");
  1924  003412  0E01               	movlw	1
  1925  003414  6E07               	movwf	lcd_write@col^0,c
  1926  003416  0E57               	movlw	low STR_11
  1927  003418  6E08               	movwf	lcd_write@str^0,c
  1928  00341A  0E06               	movlw	high STR_11
  1929  00341C  6E09               	movwf	(lcd_write@str+1)^0,c
  1930  00341E  0E02               	movlw	2
  1931  003420  EC64  F01E         	call	_lcd_write
  1932  003424                     
  1933                           ;Main_program_meter.c: 200:     lcd_write(2,7,Buffer_D3);
  1934  003424  0E07               	movlw	7
  1935  003426  6E07               	movwf	lcd_write@col^0,c
  1936  003428  0EB4               	movlw	low _Buffer_D3
  1937  00342A  6E08               	movwf	lcd_write@str^0,c
  1938  00342C  0E00               	movlw	high _Buffer_D3
  1939  00342E  6E09               	movwf	(lcd_write@str+1)^0,c
  1940  003430  0E02               	movlw	2
  1941  003432  EC64  F01E         	call	_lcd_write
  1942  003436                     
  1943                           ;Main_program_meter.c: 201:     lcd_write(2,8," LED 4:");
  1944  003436  0E08               	movlw	8
  1945  003438  6E07               	movwf	lcd_write@col^0,c
  1946  00343A  0E48               	movlw	low STR_12
  1947  00343C  6E08               	movwf	lcd_write@str^0,c
  1948  00343E  0E06               	movlw	high STR_12
  1949  003440  6E09               	movwf	(lcd_write@str+1)^0,c
  1950  003442  0E02               	movlw	2
  1951  003444  EC64  F01E         	call	_lcd_write
  1952  003448                     
  1953                           ;Main_program_meter.c: 202:     lcd_write(2,15,Buffer_D4);
  1954  003448  0E0F               	movlw	15
  1955  00344A  6E07               	movwf	lcd_write@col^0,c
  1956  00344C  0EAC               	movlw	low _Buffer_D4
  1957  00344E  6E08               	movwf	lcd_write@str^0,c
  1958  003450  0E00               	movlw	high _Buffer_D4
  1959  003452  6E09               	movwf	(lcd_write@str+1)^0,c
  1960  003454  0E02               	movlw	2
  1961  003456  EC64  F01E         	call	_lcd_write
  1962  00345A  0012               	return		;funcret
  1963  00345C                     __end_of_lcd_LEDS:
  1964                           	callstack 0
  1965                           
  1966 ;; *************** function _sprintf *****************
  1967 ;; Defined at:
  1968 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_sprintf.c"
  1969 ;; Parameters:    Size  Location     Type
  1970 ;;  s               2   24[BANK0 ] PTR unsigned char 
  1971 ;;		 -> Buffer_D4(8), Buffer_D3(8), Buffer_D2(8), Buffer_D1(8), 
  1972 ;;		 -> VoltageBuffer(16), VdigBuffer(16), 
  1973 ;;  fmt             2   26[BANK0 ] PTR const unsigned char 
  1974 ;;		 -> STR_8(5), STR_7(5), STR_6(5), STR_5(5), 
  1975 ;;		 -> STR_2(15), STR_1(15), 
  1976 ;; Auto vars:     Size  Location     Type
  1977 ;;  f              11   34[BANK0 ] struct _IO_FILE
  1978 ;;  ap              2   32[BANK0 ] PTR void [1]
  1979 ;;		 -> ?_sprintf(2), 
  1980 ;;  ret             2    0        int 
  1981 ;; Return value:  Size  Location     Type
  1982 ;;                  2   24[BANK0 ] int 
  1983 ;; Registers used:
  1984 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1985 ;; Tracked objects:
  1986 ;;		On entry : 0/0
  1987 ;;		On exit  : 0/0
  1988 ;;		Unchanged: 0/0
  1989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1990 ;;      Params:         0       8       0       0       0       0       0
  1991 ;;      Locals:         0      13       0       0       0       0       0
  1992 ;;      Temps:          0       0       0       0       0       0       0
  1993 ;;      Totals:         0      21       0       0       0       0       0
  1994 ;;Total ram usage:       21 bytes
  1995 ;; Hardware stack levels used: 1
  1996 ;; Hardware stack levels required when called: 7
  1997 ;; This function calls:
  1998 ;;		_vfprintf
  1999 ;; This function is called by:
  2000 ;;		_lcd_SENSOR
  2001 ;;		_lcd_LEDS
  2002 ;; This function uses a non-reentrant model
  2003 ;;
  2004                           
  2005                           	psect	text5
  2006  003FC4                     __ptext5:
  2007                           	callstack 0
  2008  003FC4                     _sprintf:
  2009                           	callstack 22
  2010  003FC4  0EE8               	movlw	low (?_sprintf+4)
  2011  003FC6  0100               	movlb	0	; () banked
  2012  003FC8  6FEC               	movwf	sprintf@ap& (0+255),b
  2013  003FCA  0E00               	movlw	high (?_sprintf+4)
  2014  003FCC  6FED               	movwf	(sprintf@ap+1)& (0+255),b
  2015  003FCE  C0E4  F0EE         	movff	sprintf@s,sprintf@f
  2016  003FD2  C0E5  F0EF         	movff	sprintf@s+1,sprintf@f+1
  2017  003FD6                     
  2018                           ; BSR set to: 0
  2019  003FD6  0E00               	movlw	0
  2020  003FD8  6FF2               	movwf	(sprintf@f+4)& (0+255),b
  2021  003FDA  0E00               	movlw	0
  2022  003FDC  6FF1               	movwf	(sprintf@f+3)& (0+255),b
  2023  003FDE                     
  2024                           ; BSR set to: 0
  2025  003FDE  0E00               	movlw	0
  2026  003FE0  6FF8               	movwf	(sprintf@f+10)& (0+255),b
  2027  003FE2  0E00               	movlw	0
  2028  003FE4  6FF7               	movwf	(sprintf@f+9)& (0+255),b
  2029  003FE6                     
  2030                           ; BSR set to: 0
  2031  003FE6  0EEE               	movlw	low sprintf@f
  2032  003FE8  6FDE               	movwf	vfprintf@fp& (0+255),b
  2033  003FEA  0E00               	movlw	high sprintf@f
  2034  003FEC  6FDF               	movwf	(vfprintf@fp+1)& (0+255),b
  2035  003FEE  C0E6  F0E0         	movff	sprintf@fmt,vfprintf@fmt
  2036  003FF2  C0E7  F0E1         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2037  003FF6  0EEC               	movlw	low sprintf@ap
  2038  003FF8  6FE2               	movwf	vfprintf@ap& (0+255),b
  2039  003FFA  0E00               	movlw	high sprintf@ap
  2040  003FFC  6FE3               	movwf	(vfprintf@ap+1)& (0+255),b
  2041  003FFE  EC83  F01F         	call	_vfprintf	;wreg free
  2042  004002  0100               	movlb	0	; () banked
  2043  004004  51F1               	movf	(sprintf@f+3)& (0+255),w,b
  2044  004006  25E4               	addwf	sprintf@s& (0+255),w,b
  2045  004008  6ED9               	movwf	fsr2l,c
  2046  00400A  51F2               	movf	(sprintf@f+4)& (0+255),w,b
  2047  00400C  21E5               	addwfc	(sprintf@s+1)& (0+255),w,b
  2048  00400E  6EDA               	movwf	fsr2h,c
  2049  004010  0E00               	movlw	0
  2050  004012  6EDF               	movwf	indf2,c
  2051  004014                     
  2052                           ; BSR set to: 0
  2053  004014  0012               	return		;funcret
  2054  004016                     __end_of_sprintf:
  2055                           	callstack 0
  2056                           
  2057 ;; *************** function _vfprintf *****************
  2058 ;; Defined at:
  2059 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2060 ;; Parameters:    Size  Location     Type
  2061 ;;  fp              2   18[BANK0 ] PTR struct _IO_FILE
  2062 ;;		 -> sprintf@f(11), 
  2063 ;;  fmt             2   20[BANK0 ] PTR const unsigned char 
  2064 ;;		 -> STR_8(5), STR_7(5), STR_6(5), STR_5(5), 
  2065 ;;		 -> STR_2(15), STR_1(15), 
  2066 ;;  ap              2   22[BANK0 ] PTR PTR void 
  2067 ;;		 -> sprintf@ap(2), 
  2068 ;; Auto vars:     Size  Location     Type
  2069 ;;  cfmt            2  123[COMRAM] PTR unsigned char 
  2070 ;;		 -> STR_8(5), STR_7(5), STR_6(5), STR_5(5), 
  2071 ;;		 -> STR_2(15), STR_1(15), 
  2072 ;; Return value:  Size  Location     Type
  2073 ;;                  2   18[BANK0 ] int 
  2074 ;; Registers used:
  2075 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2076 ;; Tracked objects:
  2077 ;;		On entry : 0/0
  2078 ;;		On exit  : 0/0
  2079 ;;		Unchanged: 0/0
  2080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2081 ;;      Params:         0       6       0       0       0       0       0
  2082 ;;      Locals:         2       0       0       0       0       0       0
  2083 ;;      Temps:          0       0       0       0       0       0       0
  2084 ;;      Totals:         2       6       0       0       0       0       0
  2085 ;;Total ram usage:        8 bytes
  2086 ;; Hardware stack levels used: 1
  2087 ;; Hardware stack levels required when called: 6
  2088 ;; This function calls:
  2089 ;;		_vfpfcnvrt
  2090 ;; This function is called by:
  2091 ;;		_sprintf
  2092 ;; This function uses a non-reentrant model
  2093 ;;
  2094                           
  2095                           	psect	text6
  2096  003F06                     __ptext6:
  2097                           	callstack 0
  2098  003F06                     _vfprintf:
  2099                           	callstack 22
  2100  003F06                     
  2101                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2102  003F06  C0E0  F07C         	movff	vfprintf@fmt,vfprintf@cfmt
  2103  003F0A  C0E1  F07D         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2104  003F0E                     
  2105                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2106  003F0E  0E00               	movlw	0
  2107  003F10  0100               	movlb	0	; () banked
  2108  003F12  6F8D               	movwf	(_nout+1)& (0+255),b
  2109  003F14  0E00               	movlw	0
  2110  003F16  6F8C               	movwf	_nout& (0+255),b
  2111                           
  2112                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2113  003F18  EFA1  F01F         	goto	l4410
  2114  003F1C                     l4408:
  2115                           
  2116                           ; BSR set to: 0
  2117                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2118  003F1C  C0DE  F072         	movff	vfprintf@fp,vfpfcnvrt@fp
  2119  003F20  C0DF  F073         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2120  003F24  0E7C               	movlw	low vfprintf@cfmt
  2121  003F26  6E74               	movwf	vfpfcnvrt@fmt^0,c
  2122  003F28  0E00               	movlw	high vfprintf@cfmt
  2123  003F2A  6E75               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2124  003F2C  C0E2  F076         	movff	vfprintf@ap,vfpfcnvrt@ap
  2125  003F30  C0E3  F077         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2126  003F34  EC31  F009         	call	_vfpfcnvrt	;wreg free
  2127  003F38  5072               	movf	?_vfpfcnvrt^0,w,c
  2128  003F3A  0100               	movlb	0	; () banked
  2129  003F3C  278C               	addwf	_nout& (0+255),f,b
  2130  003F3E  5073               	movf	(?_vfpfcnvrt+1)^0,w,c
  2131  003F40  238D               	addwfc	(_nout+1)& (0+255),f,b
  2132  003F42                     l4410:
  2133                           
  2134                           ; BSR set to: 0
  2135                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2136  003F42  C07C  FFF6         	movff	vfprintf@cfmt,tblptrl
  2137  003F46  C07D  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2138  003F4A                     	if	0	;tblptru may be non-zero
  2139  003F4A                     	endif
  2140  003F4A                     	if	0	;tblptru may be non-zero
  2141  003F4A                     	endif
  2142  003F4A  0008               	tblrd		*
  2143  003F4C  50F5               	movf	tablat,w,c
  2144  003F4E  0900               	iorlw	0
  2145  003F50  A4D8               	btfss	status,2,c
  2146  003F52  EFAD  F01F         	goto	u5361
  2147  003F56  EFAF  F01F         	goto	u5360
  2148  003F5A                     u5361:
  2149  003F5A  EF8E  F01F         	goto	l4408
  2150  003F5E                     u5360:
  2151  003F5E                     
  2152                           ; BSR set to: 0
  2153                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  2154  003F5E  C08C  F0DE         	movff	_nout,?_vfprintf
  2155  003F62  C08D  F0DF         	movff	_nout+1,?_vfprintf+1
  2156  003F66                     
  2157                           ; BSR set to: 0
  2158  003F66  0012               	return		;funcret
  2159  003F68                     __end_of_vfprintf:
  2160                           	callstack 0
  2161                           
  2162 ;; *************** function _vfpfcnvrt *****************
  2163 ;; Defined at:
  2164 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2165 ;; Parameters:    Size  Location     Type
  2166 ;;  fp              2  113[COMRAM] PTR struct _IO_FILE
  2167 ;;		 -> sprintf@f(11), 
  2168 ;;  fmt             2  115[COMRAM] PTR PTR unsigned char 
  2169 ;;		 -> vfprintf@cfmt(2), 
  2170 ;;  ap              2  117[COMRAM] PTR PTR void 
  2171 ;;		 -> sprintf@ap(2), 
  2172 ;; Auto vars:     Size  Location     Type
  2173 ;;  ll              8    0[BANK0 ] long long 
  2174 ;;  llu             8    0        unsigned long long 
  2175 ;;  f               4   10[BANK0 ] unsigned long long 
  2176 ;;  ct              3   14[BANK0 ] unsigned char [3]
  2177 ;;  vp              3    0        PTR void 
  2178 ;;  cp              3    0        PTR unsigned char 
  2179 ;;  done            2    8[BANK0 ] int 
  2180 ;;  i               2    0        int 
  2181 ;;  c               1   17[BANK0 ] unsigned char 
  2182 ;; Return value:  Size  Location     Type
  2183 ;;                  2  113[COMRAM] int 
  2184 ;; Registers used:
  2185 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2186 ;; Tracked objects:
  2187 ;;		On entry : 0/0
  2188 ;;		On exit  : 0/0
  2189 ;;		Unchanged: 0/0
  2190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2191 ;;      Params:         6       0       0       0       0       0       0
  2192 ;;      Locals:         0      18       0       0       0       0       0
  2193 ;;      Temps:          4       0       0       0       0       0       0
  2194 ;;      Totals:        10      18       0       0       0       0       0
  2195 ;;Total ram usage:       28 bytes
  2196 ;; Hardware stack levels used: 1
  2197 ;; Hardware stack levels required when called: 5
  2198 ;; This function calls:
  2199 ;;		_atoi
  2200 ;;		_dtoa
  2201 ;;		_efgtoa
  2202 ;;		_fputc
  2203 ;;		_isdigit
  2204 ;;		_isupper
  2205 ;;		_strncmp
  2206 ;;		_tolower
  2207 ;; This function is called by:
  2208 ;;		_vfprintf
  2209 ;; This function uses a non-reentrant model
  2210 ;;
  2211                           
  2212                           	psect	text7
  2213  001262                     __ptext7:
  2214                           	callstack 0
  2215  001262                     _vfpfcnvrt:
  2216                           	callstack 22
  2217  001262                     
  2218                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.36\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2219  001262  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2220  001266  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2221  00126A  CFDE FFF6          	movff	postinc2,tblptrl
  2222  00126E  CFDD FFF7          	movff	postdec2,tblptrh
  2223  001272                     	if	0	;tblptru may be non-zero
  2224  001272                     	endif
  2225  001272                     	if	0	;tblptru may be non-zero
  2226  001272                     	endif
  2227  001272  0008               	tblrd		*
  2228  001274  50F5               	movf	tablat,w,c
  2229  001276  0A25               	xorlw	37
  2230  001278  A4D8               	btfss	status,2,c
  2231  00127A  EF41  F009         	goto	u5181
  2232  00127E  EF43  F009         	goto	u5180
  2233  001282                     u5181:
  2234  001282  EF61  F00C         	goto	l4378
  2235  001286                     u5180:
  2236  001286                     
  2237                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2238  001286  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2239  00128A  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2240  00128E  2ADE               	incf	postinc2,f,c
  2241  001290  0E00               	movlw	0
  2242  001292  22DD               	addwfc	postdec2,f,c
  2243  001294                     
  2244                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2245  001294  0E00               	movlw	0
  2246  001296  0100               	movlb	0	; () banked
  2247  001298  6F8F               	movwf	(_width+1)& (0+255),b
  2248  00129A  0E00               	movlw	0
  2249  00129C  6F8E               	movwf	_width& (0+255),b
  2250  00129E  C08E  F07E         	movff	_width,_flags
  2251  0012A2  C08F  F07F         	movff	_width+1,_flags+1
  2252  0012A6                     
  2253                           ; BSR set to: 0
  2254                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2255  0012A6  6990               	setf	_prec& (0+255),b
  2256  0012A8  6991               	setf	(_prec+1)& (0+255),b
  2257  0012AA                     
  2258                           ; BSR set to: 0
  2259                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  2260  0012AA  0E00               	movlw	0
  2261  0012AC  6FD5               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2262  0012AE  0E00               	movlw	0
  2263  0012B0  6FD4               	movwf	vfpfcnvrt@done& (0+255),b
  2264                           
  2265                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  2266  0012B2  EFA1  F009         	goto	l4276
  2267  0012B6                     l4250:
  2268                           
  2269                           ; BSR set to: 0
  2270                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  2271  0012B6  807E               	bsf	_flags^0,0,c
  2272  0012B8                     l4252:
  2273                           
  2274                           ; BSR set to: 0
  2275                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  2276  0012B8  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2277  0012BC  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2278  0012C0  2ADE               	incf	postinc2,f,c
  2279  0012C2  0E00               	movlw	0
  2280  0012C4  22DD               	addwfc	postdec2,f,c
  2281                           
  2282                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  2283  0012C6  EFA1  F009         	goto	l4276
  2284  0012CA                     l4254:
  2285                           
  2286                           ; BSR set to: 0
  2287                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  2288  0012CA  827E               	bsf	_flags^0,1,c
  2289  0012CC  EF5C  F009         	goto	l4252
  2290  0012D0                     l4258:
  2291                           
  2292                           ; BSR set to: 0
  2293                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  2294  0012D0  847E               	bsf	_flags^0,2,c
  2295  0012D2  EF5C  F009         	goto	l4252
  2296  0012D6                     l4262:
  2297                           
  2298                           ; BSR set to: 0
  2299                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  2300  0012D6  867E               	bsf	_flags^0,3,c
  2301  0012D8  EF5C  F009         	goto	l4252
  2302  0012DC                     l4266:
  2303                           
  2304                           ; BSR set to: 0
  2305                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  2306  0012DC  887E               	bsf	_flags^0,4,c
  2307  0012DE  EF5C  F009         	goto	l4252
  2308  0012E2                     l4270:
  2309                           
  2310                           ; BSR set to: 0
  2311                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  2312  0012E2  0E00               	movlw	0
  2313  0012E4  6FD5               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2314  0012E6  0E01               	movlw	1
  2315  0012E8  6FD4               	movwf	vfpfcnvrt@done& (0+255),b
  2316                           
  2317                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  2318  0012EA  EFA1  F009         	goto	l4276
  2319  0012EE                     l4274:
  2320                           
  2321                           ; BSR set to: 0
  2322  0012EE  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2323  0012F2  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2324  0012F6  CFDE FFF6          	movff	postinc2,tblptrl
  2325  0012FA  CFDD FFF7          	movff	postdec2,tblptrh
  2326  0012FE                     	if	0	;tblptru may be non-zero
  2327  0012FE                     	endif
  2328  0012FE                     	if	0	;tblptru may be non-zero
  2329  0012FE                     	endif
  2330  0012FE  0008               	tblrd		*
  2331  001300  50F5               	movf	tablat,w,c
  2332  001302  6E78               	movwf	??_vfpfcnvrt^0,c
  2333  001304  6A79               	clrf	(??_vfpfcnvrt+1)^0,c
  2334                           
  2335                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2336                           ; Switch size 1, requested type "simple"
  2337                           ; Number of cases is 1, Range of values is 0 to 0
  2338                           ; switch strategies available:
  2339                           ; Name         Instructions Cycles
  2340                           ; simple_byte            4     3 (average)
  2341                           ;	Chosen strategy is simple_byte
  2342  001306  5079               	movf	(??_vfpfcnvrt+1)^0,w,c
  2343  001308  0A00               	xorlw	0	; case 0
  2344  00130A  B4D8               	btfsc	status,2,c
  2345  00130C  EF8A  F009         	goto	l4686
  2346  001310  EF71  F009         	goto	l4270
  2347  001314                     l4686:
  2348                           
  2349                           ; BSR set to: 0
  2350                           ; Switch size 1, requested type "simple"
  2351                           ; Number of cases is 5, Range of values is 32 to 48
  2352                           ; switch strategies available:
  2353                           ; Name         Instructions Cycles
  2354                           ; simple_byte           16     9 (average)
  2355                           ;	Chosen strategy is simple_byte
  2356  001314  5078               	movf	??_vfpfcnvrt^0,w,c
  2357  001316  0A20               	xorlw	32	; case 32
  2358  001318  B4D8               	btfsc	status,2,c
  2359  00131A  EF6B  F009         	goto	l4262
  2360  00131E  0A03               	xorlw	3	; case 35
  2361  001320  B4D8               	btfsc	status,2,c
  2362  001322  EF6E  F009         	goto	l4266
  2363  001326  0A08               	xorlw	8	; case 43
  2364  001328  B4D8               	btfsc	status,2,c
  2365  00132A  EF68  F009         	goto	l4258
  2366  00132E  0A06               	xorlw	6	; case 45
  2367  001330  B4D8               	btfsc	status,2,c
  2368  001332  EF5B  F009         	goto	l4250
  2369  001336  0A1D               	xorlw	29	; case 48
  2370  001338  B4D8               	btfsc	status,2,c
  2371  00133A  EF65  F009         	goto	l4254
  2372  00133E  EF71  F009         	goto	l4270
  2373  001342                     l4276:
  2374                           
  2375                           ; BSR set to: 0
  2376                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  2377  001342  51D4               	movf	vfpfcnvrt@done& (0+255),w,b
  2378  001344  11D5               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  2379  001346  B4D8               	btfsc	status,2,c
  2380  001348  EFA8  F009         	goto	u5191
  2381  00134C  EFAA  F009         	goto	u5190
  2382  001350                     u5191:
  2383  001350  EF77  F009         	goto	l4274
  2384  001354                     u5190:
  2385  001354                     
  2386                           ; BSR set to: 0
  2387                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  2388  001354  A07E               	btfss	_flags^0,0,c
  2389  001356  EFAF  F009         	goto	u5201
  2390  00135A  EFB1  F009         	goto	u5200
  2391  00135E                     u5201:
  2392  00135E  EFB2  F009         	goto	l4280
  2393  001362                     u5200:
  2394  001362                     
  2395                           ; BSR set to: 0
  2396                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  2397  001362  927E               	bcf	_flags^0,1,c
  2398  001364                     l4280:
  2399                           
  2400                           ; BSR set to: 0
  2401                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  2402  001364  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2403  001368  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2404  00136C  CFDE FFF6          	movff	postinc2,tblptrl
  2405  001370  CFDD FFF7          	movff	postdec2,tblptrh
  2406  001374                     	if	0	;tblptru may be non-zero
  2407  001374                     	endif
  2408  001374                     	if	0	;tblptru may be non-zero
  2409  001374                     	endif
  2410  001374  0008               	tblrd		*
  2411  001376  50F5               	movf	tablat,w,c
  2412  001378  0A2A               	xorlw	42
  2413  00137A  A4D8               	btfss	status,2,c
  2414  00137C  EFC2  F009         	goto	u5211
  2415  001380  EFC4  F009         	goto	u5210
  2416  001384                     u5211:
  2417  001384  EFED  F009         	goto	l4288
  2418  001388                     u5210:
  2419  001388                     
  2420                           ; BSR set to: 0
  2421                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  2422  001388  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2423  00138C  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2424  001390  2ADE               	incf	postinc2,f,c
  2425  001392  0E00               	movlw	0
  2426  001394  22DD               	addwfc	postdec2,f,c
  2427                           
  2428                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  2429  001396  C076  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2430  00139A  C077  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2431  00139E  CFDF F078          	movff	indf2,??_vfpfcnvrt
  2432  0013A2  0E02               	movlw	2
  2433  0013A4  26DE               	addwf	postinc2,f,c
  2434  0013A6  CFDF F079          	movff	indf2,??_vfpfcnvrt+1
  2435  0013AA  0E00               	movlw	0
  2436  0013AC  22DD               	addwfc	postdec2,f,c
  2437  0013AE  C078  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2438  0013B2  C079  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2439  0013B6  CFDE F08E          	movff	postinc2,_width
  2440  0013BA  CFDD F08F          	movff	postdec2,_width+1
  2441  0013BE                     
  2442                           ; BSR set to: 0
  2443                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  2444  0013BE  BF8F               	btfsc	(_width+1)& (0+255),7,b
  2445  0013C0  EFE6  F009         	goto	u5220
  2446  0013C4  EFE4  F009         	goto	u5221
  2447  0013C8                     u5221:
  2448  0013C8  EF23  F00A         	goto	l4296
  2449  0013CC                     u5220:
  2450  0013CC                     
  2451                           ; BSR set to: 0
  2452                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  2453  0013CC  807E               	bsf	_flags^0,0,c
  2454                           
  2455                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  2456  0013CE  6D8E               	negf	_width& (0+255),b
  2457  0013D0  1F8F               	comf	(_width+1)& (0+255),f,b
  2458  0013D2  B0D8               	btfsc	status,0,c
  2459  0013D4  2B8F               	incf	(_width+1)& (0+255),f,b
  2460  0013D6  EF23  F00A         	goto	l4296
  2461  0013DA                     l4288:
  2462                           
  2463                           ; BSR set to: 0
  2464                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  2465  0013DA  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2466  0013DE  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2467  0013E2  CFDE F008          	movff	postinc2,atoi@s
  2468  0013E6  CFDD F009          	movff	postdec2,atoi@s+1
  2469  0013EA  ECFE  F018         	call	_atoi	;wreg free
  2470  0013EE  C008  F08E         	movff	?_atoi,_width
  2471  0013F2  C009  F08F         	movff	?_atoi+1,_width+1
  2472                           
  2473                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  2474  0013F6  EF04  F00A         	goto	l4294
  2475  0013FA                     l4290:
  2476                           
  2477                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  2478  0013FA  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2479  0013FE  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2480  001402  2ADE               	incf	postinc2,f,c
  2481  001404  0E00               	movlw	0
  2482  001406  22DD               	addwfc	postdec2,f,c
  2483  001408                     l4294:
  2484  001408  0ED0               	movlw	208
  2485  00140A  6E78               	movwf	??_vfpfcnvrt^0,c
  2486  00140C  0EFF               	movlw	255
  2487  00140E  6E79               	movwf	(??_vfpfcnvrt+1)^0,c
  2488  001410  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2489  001414  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2490  001418  CFDE FFF6          	movff	postinc2,tblptrl
  2491  00141C  CFDD FFF7          	movff	postdec2,tblptrh
  2492  001420                     	if	0	;tblptru may be non-zero
  2493  001420                     	endif
  2494  001420                     	if	0	;tblptru may be non-zero
  2495  001420                     	endif
  2496  001420  0008               	tblrd		*
  2497  001422  50F5               	movf	tablat,w,c
  2498  001424  6E7A               	movwf	(??_vfpfcnvrt+2)^0,c
  2499  001426  6A7B               	clrf	(??_vfpfcnvrt+3)^0,c
  2500  001428  5078               	movf	??_vfpfcnvrt^0,w,c
  2501  00142A  267A               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2502  00142C  5079               	movf	(??_vfpfcnvrt+1)^0,w,c
  2503  00142E  227B               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2504  001430  507B               	movf	(??_vfpfcnvrt+3)^0,w,c
  2505  001432  E109               	bnz	u5230
  2506  001434  0E0A               	movlw	10
  2507  001436  5C7A               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2508  001438  A0D8               	btfss	status,0,c
  2509  00143A  EF21  F00A         	goto	u5231
  2510  00143E  EF23  F00A         	goto	u5230
  2511  001442                     u5231:
  2512  001442  EFFD  F009         	goto	l4290
  2513  001446                     u5230:
  2514  001446                     l4296:
  2515                           
  2516                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  2517  001446  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2518  00144A  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2519  00144E  CFDE FFF6          	movff	postinc2,tblptrl
  2520  001452  CFDD FFF7          	movff	postdec2,tblptrh
  2521  001456                     	if	0	;tblptru may be non-zero
  2522  001456                     	endif
  2523  001456                     	if	0	;tblptru may be non-zero
  2524  001456                     	endif
  2525  001456  0008               	tblrd		*
  2526  001458  50F5               	movf	tablat,w,c
  2527  00145A  0A2E               	xorlw	46
  2528  00145C  A4D8               	btfss	status,2,c
  2529  00145E  EF33  F00A         	goto	u5241
  2530  001462  EF35  F00A         	goto	u5240
  2531  001466                     u5241:
  2532  001466  EFA6  F00A         	goto	l4314
  2533  00146A                     u5240:
  2534  00146A                     
  2535                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  2536  00146A  0E00               	movlw	0
  2537  00146C  0100               	movlb	0	; () banked
  2538  00146E  6F91               	movwf	(_prec+1)& (0+255),b
  2539  001470  0E00               	movlw	0
  2540  001472  6F90               	movwf	_prec& (0+255),b
  2541  001474                     
  2542                           ; BSR set to: 0
  2543                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  2544  001474  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2545  001478  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2546  00147C  2ADE               	incf	postinc2,f,c
  2547  00147E  0E00               	movlw	0
  2548  001480  22DD               	addwfc	postdec2,f,c
  2549  001482                     
  2550                           ; BSR set to: 0
  2551                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  2552  001482  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2553  001486  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2554  00148A  CFDE FFF6          	movff	postinc2,tblptrl
  2555  00148E  CFDD FFF7          	movff	postdec2,tblptrh
  2556  001492                     	if	0	;tblptru may be non-zero
  2557  001492                     	endif
  2558  001492                     	if	0	;tblptru may be non-zero
  2559  001492                     	endif
  2560  001492  0008               	tblrd		*
  2561  001494  50F5               	movf	tablat,w,c
  2562  001496  0A2A               	xorlw	42
  2563  001498  A4D8               	btfss	status,2,c
  2564  00149A  EF51  F00A         	goto	u5251
  2565  00149E  EF53  F00A         	goto	u5250
  2566  0014A2                     u5251:
  2567  0014A2  EF70  F00A         	goto	l4306
  2568  0014A6                     u5250:
  2569  0014A6                     
  2570                           ; BSR set to: 0
  2571                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  2572  0014A6  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2573  0014AA  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2574  0014AE  2ADE               	incf	postinc2,f,c
  2575  0014B0  0E00               	movlw	0
  2576  0014B2  22DD               	addwfc	postdec2,f,c
  2577                           
  2578                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  2579  0014B4  C076  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2580  0014B8  C077  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2581  0014BC  CFDF F078          	movff	indf2,??_vfpfcnvrt
  2582  0014C0  0E02               	movlw	2
  2583  0014C2  26DE               	addwf	postinc2,f,c
  2584  0014C4  CFDF F079          	movff	indf2,??_vfpfcnvrt+1
  2585  0014C8  0E00               	movlw	0
  2586  0014CA  22DD               	addwfc	postdec2,f,c
  2587  0014CC  C078  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2588  0014D0  C079  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2589  0014D4  CFDE F090          	movff	postinc2,_prec
  2590  0014D8  CFDD F091          	movff	postdec2,_prec+1
  2591                           
  2592                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  2593  0014DC  EFA6  F00A         	goto	l4314
  2594  0014E0                     l4306:
  2595                           
  2596                           ; BSR set to: 0
  2597                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  2598  0014E0  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2599  0014E4  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2600  0014E8  CFDE F008          	movff	postinc2,atoi@s
  2601  0014EC  CFDD F009          	movff	postdec2,atoi@s+1
  2602  0014F0  ECFE  F018         	call	_atoi	;wreg free
  2603  0014F4  C008  F090         	movff	?_atoi,_prec
  2604  0014F8  C009  F091         	movff	?_atoi+1,_prec+1
  2605                           
  2606                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  2607  0014FC  EF87  F00A         	goto	l4312
  2608  001500                     l4308:
  2609                           
  2610                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  2611  001500  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2612  001504  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2613  001508  2ADE               	incf	postinc2,f,c
  2614  00150A  0E00               	movlw	0
  2615  00150C  22DD               	addwfc	postdec2,f,c
  2616  00150E                     l4312:
  2617  00150E  0ED0               	movlw	208
  2618  001510  6E78               	movwf	??_vfpfcnvrt^0,c
  2619  001512  0EFF               	movlw	255
  2620  001514  6E79               	movwf	(??_vfpfcnvrt+1)^0,c
  2621  001516  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2622  00151A  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2623  00151E  CFDE FFF6          	movff	postinc2,tblptrl
  2624  001522  CFDD FFF7          	movff	postdec2,tblptrh
  2625  001526                     	if	0	;tblptru may be non-zero
  2626  001526                     	endif
  2627  001526                     	if	0	;tblptru may be non-zero
  2628  001526                     	endif
  2629  001526  0008               	tblrd		*
  2630  001528  50F5               	movf	tablat,w,c
  2631  00152A  6E7A               	movwf	(??_vfpfcnvrt+2)^0,c
  2632  00152C  6A7B               	clrf	(??_vfpfcnvrt+3)^0,c
  2633  00152E  5078               	movf	??_vfpfcnvrt^0,w,c
  2634  001530  267A               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2635  001532  5079               	movf	(??_vfpfcnvrt+1)^0,w,c
  2636  001534  227B               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2637  001536  507B               	movf	(??_vfpfcnvrt+3)^0,w,c
  2638  001538  E109               	bnz	u5260
  2639  00153A  0E0A               	movlw	10
  2640  00153C  5C7A               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2641  00153E  A0D8               	btfss	status,0,c
  2642  001540  EFA4  F00A         	goto	u5261
  2643  001544  EFA6  F00A         	goto	u5260
  2644  001548                     u5261:
  2645  001548  EF80  F00A         	goto	l4308
  2646  00154C                     u5260:
  2647  00154C                     l4314:
  2648                           
  2649                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  2650  00154C  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2651  001550  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2652  001554  CFDE FFF6          	movff	postinc2,tblptrl
  2653  001558  CFDD FFF7          	movff	postdec2,tblptrh
  2654  00155C                     	if	0	;tblptru may be non-zero
  2655  00155C                     	endif
  2656  00155C                     	if	0	;tblptru may be non-zero
  2657  00155C                     	endif
  2658  00155C  0008               	tblrd		*
  2659  00155E  50F5               	movf	tablat,w,c
  2660  001560  6E07               	movwf	tolower@c^0,c
  2661  001562  6A08               	clrf	(tolower@c+1)^0,c
  2662  001564  EC34  F020         	call	_tolower	;wreg free
  2663  001568  5007               	movf	?_tolower^0,w,c
  2664  00156A  0100               	movlb	0	; () banked
  2665  00156C  6FDA               	movwf	vfpfcnvrt@ct& (0+255),b
  2666  00156E                     
  2667                           ; BSR set to: 0
  2668                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  2669  00156E  51DA               	movf	vfpfcnvrt@ct& (0+255),w,b
  2670  001570  B4D8               	btfsc	status,2,c
  2671  001572  EFBD  F00A         	goto	u5271
  2672  001576  EFBF  F00A         	goto	u5270
  2673  00157A                     u5271:
  2674  00157A  EFF9  F00A         	goto	l4324
  2675  00157E                     u5270:
  2676  00157E                     
  2677                           ; BSR set to: 0
  2678                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  2679  00157E  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2680  001582  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2681  001586  CFDE F078          	movff	postinc2,??_vfpfcnvrt
  2682  00158A  CFDD F079          	movff	postdec2,??_vfpfcnvrt+1
  2683  00158E  0E01               	movlw	1
  2684  001590  2678               	addwf	??_vfpfcnvrt^0,f,c
  2685  001592  0E00               	movlw	0
  2686  001594  2279               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2687  001596  C078  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2688  00159A  C079  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2689  00159E                     	if	0	;tblptru may be non-zero
  2690  00159E                     	endif
  2691  00159E                     	if	0	;tblptru may be non-zero
  2692  00159E                     	endif
  2693  00159E  0008               	tblrd		*
  2694  0015A0  50F5               	movf	tablat,w,c
  2695  0015A2  6E07               	movwf	tolower@c^0,c
  2696  0015A4  6A08               	clrf	(tolower@c+1)^0,c
  2697  0015A6  EC34  F020         	call	_tolower	;wreg free
  2698  0015AA  5007               	movf	?_tolower^0,w,c
  2699  0015AC  0100               	movlb	0	; () banked
  2700  0015AE  6FDB               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  2701  0015B0                     
  2702                           ; BSR set to: 0
  2703                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  2704  0015B0  51DB               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  2705  0015B2  B4D8               	btfsc	status,2,c
  2706  0015B4  EFDE  F00A         	goto	u5281
  2707  0015B8  EFE0  F00A         	goto	u5280
  2708  0015BC                     u5281:
  2709  0015BC  EFF9  F00A         	goto	l4324
  2710  0015C0                     u5280:
  2711  0015C0                     
  2712                           ; BSR set to: 0
  2713                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  2714  0015C0  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2715  0015C4  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2716  0015C8  CFDE F078          	movff	postinc2,??_vfpfcnvrt
  2717  0015CC  CFDD F079          	movff	postdec2,??_vfpfcnvrt+1
  2718  0015D0  0E02               	movlw	2
  2719  0015D2  2678               	addwf	??_vfpfcnvrt^0,f,c
  2720  0015D4  0E00               	movlw	0
  2721  0015D6  2279               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2722  0015D8  C078  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2723  0015DC  C079  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2724  0015E0                     	if	0	;tblptru may be non-zero
  2725  0015E0                     	endif
  2726  0015E0                     	if	0	;tblptru may be non-zero
  2727  0015E0                     	endif
  2728  0015E0  0008               	tblrd		*
  2729  0015E2  50F5               	movf	tablat,w,c
  2730  0015E4  6E07               	movwf	tolower@c^0,c
  2731  0015E6  6A08               	clrf	(tolower@c+1)^0,c
  2732  0015E8  EC34  F020         	call	_tolower	;wreg free
  2733  0015EC  5007               	movf	?_tolower^0,w,c
  2734  0015EE  0100               	movlb	0	; () banked
  2735  0015F0  6FDC               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  2736  0015F2                     l4324:
  2737                           
  2738                           ; BSR set to: 0
  2739                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2740  0015F2  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2741  0015F6  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2742  0015FA  CFDE FFF6          	movff	postinc2,tblptrl
  2743  0015FE  CFDD FFF7          	movff	postdec2,tblptrh
  2744  001602                     	if	0	;tblptru may be non-zero
  2745  001602                     	endif
  2746  001602                     	if	0	;tblptru may be non-zero
  2747  001602                     	endif
  2748  001602  0008               	tblrd		*
  2749  001604  50F5               	movf	tablat,w,c
  2750  001606  0A64               	xorlw	100
  2751  001608  B4D8               	btfsc	status,2,c
  2752  00160A  EF09  F00B         	goto	u5291
  2753  00160E  EF0B  F00B         	goto	u5290
  2754  001612                     u5291:
  2755  001612  EF1D  F00B         	goto	l4328
  2756  001616                     u5290:
  2757  001616                     
  2758                           ; BSR set to: 0
  2759  001616  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2760  00161A  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2761  00161E  CFDE FFF6          	movff	postinc2,tblptrl
  2762  001622  CFDD FFF7          	movff	postdec2,tblptrh
  2763  001626                     	if	0	;tblptru may be non-zero
  2764  001626                     	endif
  2765  001626                     	if	0	;tblptru may be non-zero
  2766  001626                     	endif
  2767  001626  0008               	tblrd		*
  2768  001628  50F5               	movf	tablat,w,c
  2769  00162A  0A69               	xorlw	105
  2770  00162C  A4D8               	btfss	status,2,c
  2771  00162E  EF1B  F00B         	goto	u5301
  2772  001632  EF1D  F00B         	goto	u5300
  2773  001636                     u5301:
  2774  001636  EF5D  F00B         	goto	l4334
  2775  00163A                     u5300:
  2776  00163A                     l4328:
  2777                           
  2778                           ; BSR set to: 0
  2779                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  2780  00163A  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2781  00163E  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2782  001642  2ADE               	incf	postinc2,f,c
  2783  001644  0E00               	movlw	0
  2784  001646  22DD               	addwfc	postdec2,f,c
  2785                           
  2786                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2787  001648  C076  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2788  00164C  C077  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2789  001650  CFDF F078          	movff	indf2,??_vfpfcnvrt
  2790  001654  0E02               	movlw	2
  2791  001656  26DE               	addwf	postinc2,f,c
  2792  001658  CFDF F079          	movff	indf2,??_vfpfcnvrt+1
  2793  00165C  0E00               	movlw	0
  2794  00165E  22DD               	addwfc	postdec2,f,c
  2795  001660  C078  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2796  001664  C079  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2797  001668  CFDE F0CC          	movff	postinc2,vfpfcnvrt@ll
  2798  00166C  CFDD F0CD          	movff	postdec2,vfpfcnvrt@ll+1
  2799  001670  0E00               	movlw	0
  2800  001672  BFCD               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  2801  001674  0EFF               	movlw	-1
  2802  001676  6FCE               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  2803  001678  6FCF               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  2804  00167A  6FD0               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  2805  00167C  6FD1               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  2806  00167E  6FD2               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  2807  001680  6FD3               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  2808  001682                     
  2809                           ; BSR set to: 0
  2810                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  2811  001682  C072  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2812  001686  C073  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2813  00168A  C0CC  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  2814  00168E  C0CD  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2815  001692  C0CE  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2816  001696  C0CF  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2817  00169A  C0D0  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2818  00169E  C0D1  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2819  0016A2  C0D2  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2820  0016A6  C0D3  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2821  0016AA  EC35  F014         	call	_dtoa	;wreg free
  2822  0016AE  C01C  F072         	movff	?_dtoa,?_vfpfcnvrt
  2823  0016B2  C01D  F073         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2824  0016B6  EF7C  F00C         	goto	l1024
  2825  0016BA                     l4334:
  2826                           
  2827                           ; BSR set to: 0
  2828                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  2829  0016BA  0E66               	movlw	102
  2830  0016BC  19DA               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  2831  0016BE  A4D8               	btfss	status,2,c
  2832  0016C0  EF64  F00B         	goto	u5311
  2833  0016C4  EF66  F00B         	goto	u5310
  2834  0016C8                     u5311:
  2835  0016C8  EFA6  F00B         	goto	l4346
  2836  0016CC                     u5310:
  2837  0016CC                     
  2838                           ; BSR set to: 0
  2839                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  2840  0016CC  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2841  0016D0  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2842  0016D4  CFDE FFF6          	movff	postinc2,tblptrl
  2843  0016D8  CFDD FFF7          	movff	postdec2,tblptrh
  2844  0016DC                     	if	0	;tblptru may be non-zero
  2845  0016DC                     	endif
  2846  0016DC                     	if	0	;tblptru may be non-zero
  2847  0016DC                     	endif
  2848  0016DC  0008               	tblrd		*
  2849  0016DE  CFF5 F0DD          	movff	tablat,vfpfcnvrt@c
  2850  0016E2                     
  2851                           ; BSR set to: 0
  2852                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  2853  0016E2  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2854  0016E6  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2855  0016EA  2ADE               	incf	postinc2,f,c
  2856  0016EC  0E00               	movlw	0
  2857  0016EE  22DD               	addwfc	postdec2,f,c
  2858  0016F0                     
  2859                           ; BSR set to: 0
  2860                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2861  0016F0  C076  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2862  0016F4  C077  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2863  0016F8  CFDF F078          	movff	indf2,??_vfpfcnvrt
  2864  0016FC  0E04               	movlw	4
  2865  0016FE  26DE               	addwf	postinc2,f,c
  2866  001700  CFDF F079          	movff	indf2,??_vfpfcnvrt+1
  2867  001704  0E00               	movlw	0
  2868  001706  22DD               	addwfc	postdec2,f,c
  2869  001708  C078  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2870  00170C  C079  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2871  001710  CFDE F0D6          	movff	postinc2,vfpfcnvrt@f
  2872  001714  CFDE F0D7          	movff	postinc2,vfpfcnvrt@f+1
  2873  001718  CFDE F0D8          	movff	postinc2,vfpfcnvrt@f+2
  2874  00171C  CFDE F0D9          	movff	postinc2,vfpfcnvrt@f+3
  2875  001720                     l4342:
  2876                           
  2877                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  2878  001720  C072  F034         	movff	vfpfcnvrt@fp,efgtoa@fp
  2879  001724  C073  F035         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2880  001728  C0D6  F036         	movff	vfpfcnvrt@f,efgtoa@f
  2881  00172C  C0D7  F037         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2882  001730  C0D8  F038         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2883  001734  C0D9  F039         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2884  001738  C0DD  F03A         	movff	vfpfcnvrt@c,efgtoa@c
  2885  00173C  EC3C  F003         	call	_efgtoa	;wreg free
  2886  001740  C034  F072         	movff	?_efgtoa,?_vfpfcnvrt
  2887  001744  C035  F073         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2888  001748  EF7C  F00C         	goto	l1024
  2889  00174C                     l4346:
  2890                           
  2891                           ; BSR set to: 0
  2892                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2893  00174C  0EDA               	movlw	low vfpfcnvrt@ct
  2894  00174E  6E01               	movwf	strncmp@_l^0,c
  2895  001750  0E00               	movlw	high vfpfcnvrt@ct
  2896  001752  6E02               	movwf	(strncmp@_l+1)^0,c
  2897  001754  0E73               	movlw	low STR_23
  2898  001756  6E03               	movwf	strncmp@_r^0,c
  2899  001758  0E06               	movlw	high STR_23
  2900  00175A  6E04               	movwf	(strncmp@_r+1)^0,c
  2901  00175C  0E00               	movlw	0
  2902  00175E  6E06               	movwf	(strncmp@n+1)^0,c
  2903  001760  0E02               	movlw	2
  2904  001762  6E05               	movwf	strncmp@n^0,c
  2905  001764  EC24  F01C         	call	_strncmp	;wreg free
  2906  001768  5001               	movf	?_strncmp^0,w,c
  2907  00176A  1002               	iorwf	(?_strncmp+1)^0,w,c
  2908  00176C  A4D8               	btfss	status,2,c
  2909  00176E  EFBB  F00B         	goto	u5321
  2910  001772  EFBD  F00B         	goto	u5320
  2911  001776                     u5321:
  2912  001776  EF2B  F00C         	goto	l4362
  2913  00177A                     u5320:
  2914  00177A                     
  2915                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 952:             
      +                          c = (*fmt)[1];
  2916  00177A  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2917  00177E  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2918  001782  CFDE F078          	movff	postinc2,??_vfpfcnvrt
  2919  001786  CFDD F079          	movff	postdec2,??_vfpfcnvrt+1
  2920  00178A  0E01               	movlw	1
  2921  00178C  2678               	addwf	??_vfpfcnvrt^0,f,c
  2922  00178E  0E00               	movlw	0
  2923  001790  2279               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2924  001792  C078  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2925  001796  C079  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2926  00179A                     	if	0	;tblptru may be non-zero
  2927  00179A                     	endif
  2928  00179A                     	if	0	;tblptru may be non-zero
  2929  00179A                     	endif
  2930  00179A  0008               	tblrd		*
  2931  00179C  CFF5 F0DD          	movff	tablat,vfpfcnvrt@c
  2932  0017A0  0EBF               	movlw	191
  2933  0017A2  6E78               	movwf	??_vfpfcnvrt^0,c
  2934  0017A4  0EFF               	movlw	255
  2935  0017A6  6E79               	movwf	(??_vfpfcnvrt+1)^0,c
  2936  0017A8  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2937  0017AC  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2938  0017B0  CFDE FFF6          	movff	postinc2,tblptrl
  2939  0017B4  CFDD FFF7          	movff	postdec2,tblptrh
  2940  0017B8                     	if	0	;tblptru may be non-zero
  2941  0017B8                     	endif
  2942  0017B8                     	if	0	;tblptru may be non-zero
  2943  0017B8                     	endif
  2944  0017B8  0008               	tblrd		*
  2945  0017BA  50F5               	movf	tablat,w,c
  2946  0017BC  6E7A               	movwf	(??_vfpfcnvrt+2)^0,c
  2947  0017BE  6A7B               	clrf	(??_vfpfcnvrt+3)^0,c
  2948  0017C0  5078               	movf	??_vfpfcnvrt^0,w,c
  2949  0017C2  267A               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2950  0017C4  5079               	movf	(??_vfpfcnvrt+1)^0,w,c
  2951  0017C6  227B               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2952  0017C8  507B               	movf	(??_vfpfcnvrt+3)^0,w,c
  2953  0017CA  E107               	bnz	u5331
  2954  0017CC  0E1A               	movlw	26
  2955  0017CE  5C7A               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2956  0017D0  B0D8               	btfsc	status,0,c
  2957  0017D2  EFED  F00B         	goto	u5331
  2958  0017D6  EFEF  F00B         	goto	u5330
  2959  0017DA                     u5331:
  2960  0017DA  EF09  F00C         	goto	l4356
  2961  0017DE                     u5330:
  2962  0017DE                     
  2963                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2964  0017DE  C076  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2965  0017E2  C077  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2966  0017E6  CFDF F078          	movff	indf2,??_vfpfcnvrt
  2967  0017EA  0E04               	movlw	4
  2968  0017EC  26DE               	addwf	postinc2,f,c
  2969  0017EE  CFDF F079          	movff	indf2,??_vfpfcnvrt+1
  2970  0017F2  0E00               	movlw	0
  2971  0017F4  22DD               	addwfc	postdec2,f,c
  2972  0017F6  C078  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2973  0017FA  C079  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2974  0017FE  CFDE F0D6          	movff	postinc2,vfpfcnvrt@f
  2975  001802  CFDE F0D7          	movff	postinc2,vfpfcnvrt@f+1
  2976  001806  CFDE F0D8          	movff	postinc2,vfpfcnvrt@f+2
  2977  00180A  CFDE F0D9          	movff	postinc2,vfpfcnvrt@f+3
  2978                           
  2979                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  2980  00180E  EF21  F00C         	goto	l1030
  2981  001812                     l4356:
  2982                           
  2983                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2984  001812  C076  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2985  001816  C077  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2986  00181A  CFDF F078          	movff	indf2,??_vfpfcnvrt
  2987  00181E  0E04               	movlw	4
  2988  001820  26DE               	addwf	postinc2,f,c
  2989  001822  CFDF F079          	movff	indf2,??_vfpfcnvrt+1
  2990  001826  0E00               	movlw	0
  2991  001828  22DD               	addwfc	postdec2,f,c
  2992  00182A  C078  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2993  00182E  C079  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2994  001832  CFDE F0D6          	movff	postinc2,vfpfcnvrt@f
  2995  001836  CFDE F0D7          	movff	postinc2,vfpfcnvrt@f+1
  2996  00183A  CFDE F0D8          	movff	postinc2,vfpfcnvrt@f+2
  2997  00183E  CFDE F0D9          	movff	postinc2,vfpfcnvrt@f+3
  2998  001842                     l1030:
  2999                           
  3000                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  3001  001842  0E02               	movlw	2
  3002  001844  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3003  001848  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3004  00184C  26DE               	addwf	postinc2,f,c
  3005  00184E  0E00               	movlw	0
  3006  001850  22DD               	addwfc	postdec2,f,c
  3007  001852  EF90  F00B         	goto	l4342
  3008  001856                     l4362:
  3009                           
  3010                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  3011  001856  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3012  00185A  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3013  00185E  CFDE FFF6          	movff	postinc2,tblptrl
  3014  001862  CFDD FFF7          	movff	postdec2,tblptrh
  3015  001866                     	if	0	;tblptru may be non-zero
  3016  001866                     	endif
  3017  001866                     	if	0	;tblptru may be non-zero
  3018  001866                     	endif
  3019  001866  0008               	tblrd		*
  3020  001868  50F5               	movf	tablat,w,c
  3021  00186A  0A25               	xorlw	37
  3022  00186C  A4D8               	btfss	status,2,c
  3023  00186E  EF3B  F00C         	goto	u5341
  3024  001872  EF3D  F00C         	goto	u5340
  3025  001876                     u5341:
  3026  001876  EF54  F00C         	goto	l4372
  3027  00187A                     u5340:
  3028  00187A                     
  3029                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  3030  00187A  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3031  00187E  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3032  001882  2ADE               	incf	postinc2,f,c
  3033  001884  0E00               	movlw	0
  3034  001886  22DD               	addwfc	postdec2,f,c
  3035  001888                     
  3036                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  3037  001888  0E00               	movlw	0
  3038  00188A  6E02               	movwf	(fputc@c+1)^0,c
  3039  00188C  0E25               	movlw	37
  3040  00188E  6E01               	movwf	fputc@c^0,c
  3041  001890  C072  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3042  001894  C073  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3043  001898  EC8F  F01C         	call	_fputc	;wreg free
  3044  00189C                     l4368:
  3045                           
  3046                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  3047  00189C  0E00               	movlw	0
  3048  00189E  6E73               	movwf	(?_vfpfcnvrt+1)^0,c
  3049  0018A0  0E01               	movlw	1
  3050  0018A2  6E72               	movwf	?_vfpfcnvrt^0,c
  3051  0018A4  EF7C  F00C         	goto	l1024
  3052  0018A8                     l4372:
  3053                           
  3054                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  3055  0018A8  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3056  0018AC  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3057  0018B0  2ADE               	incf	postinc2,f,c
  3058  0018B2  0E00               	movlw	0
  3059  0018B4  22DD               	addwfc	postdec2,f,c
  3060  0018B6                     
  3061                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  3062  0018B6  0E00               	movlw	0
  3063  0018B8  6E73               	movwf	(?_vfpfcnvrt+1)^0,c
  3064  0018BA  0E00               	movlw	0
  3065  0018BC  6E72               	movwf	?_vfpfcnvrt^0,c
  3066  0018BE  EF7C  F00C         	goto	l1024
  3067  0018C2                     l4378:
  3068                           
  3069                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  3070  0018C2  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3071  0018C6  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3072  0018CA  CFDE FFF6          	movff	postinc2,tblptrl
  3073  0018CE  CFDD FFF7          	movff	postdec2,tblptrh
  3074  0018D2                     	if	0	;tblptru may be non-zero
  3075  0018D2                     	endif
  3076  0018D2                     	if	0	;tblptru may be non-zero
  3077  0018D2                     	endif
  3078  0018D2  0008               	tblrd		*
  3079  0018D4  50F5               	movf	tablat,w,c
  3080  0018D6  6E01               	movwf	fputc@c^0,c
  3081  0018D8  6A02               	clrf	(fputc@c+1)^0,c
  3082  0018DA  C072  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3083  0018DE  C073  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3084  0018E2  EC8F  F01C         	call	_fputc	;wreg free
  3085  0018E6                     
  3086                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  3087  0018E6  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3088  0018EA  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3089  0018EE  2ADE               	incf	postinc2,f,c
  3090  0018F0  0E00               	movlw	0
  3091  0018F2  22DD               	addwfc	postdec2,f,c
  3092  0018F4  EF4E  F00C         	goto	l4368
  3093  0018F8                     l1024:
  3094  0018F8  0012               	return		;funcret
  3095  0018FA                     __end_of_vfpfcnvrt:
  3096                           	callstack 0
  3097                           
  3098 ;; *************** function _strncmp *****************
  3099 ;; Defined at:
  3100 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strncmp.c"
  3101 ;; Parameters:    Size  Location     Type
  3102 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  3103 ;;		 -> vfpfcnvrt@ct(3), 
  3104 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  3105 ;;		 -> STR_25(3), 
  3106 ;;  n               2    4[COMRAM] unsigned int 
  3107 ;; Auto vars:     Size  Location     Type
  3108 ;;  r               2    9[COMRAM] PTR const unsigned char 
  3109 ;;		 -> STR_25(3), 
  3110 ;;  l               2    7[COMRAM] PTR const unsigned char 
  3111 ;;		 -> vfpfcnvrt@ct(3), 
  3112 ;; Return value:  Size  Location     Type
  3113 ;;                  2    0[COMRAM] int 
  3114 ;; Registers used:
  3115 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3116 ;; Tracked objects:
  3117 ;;		On entry : 0/0
  3118 ;;		On exit  : 0/0
  3119 ;;		Unchanged: 0/0
  3120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3121 ;;      Params:         6       0       0       0       0       0       0
  3122 ;;      Locals:         4       0       0       0       0       0       0
  3123 ;;      Temps:          1       0       0       0       0       0       0
  3124 ;;      Totals:        11       0       0       0       0       0       0
  3125 ;;Total ram usage:       11 bytes
  3126 ;; Hardware stack levels used: 1
  3127 ;; This function calls:
  3128 ;;		Nothing
  3129 ;; This function is called by:
  3130 ;;		_vfpfcnvrt
  3131 ;; This function uses a non-reentrant model
  3132 ;;
  3133                           
  3134                           	psect	text8
  3135  003848                     __ptext8:
  3136                           	callstack 0
  3137  003848                     _strncmp:
  3138                           	callstack 26
  3139  003848  C001  F008         	movff	strncmp@_l,strncmp@l
  3140  00384C  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  3141  003850  C003  F00A         	movff	strncmp@_r,strncmp@r
  3142  003854  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  3143  003858  0605               	decf	strncmp@n^0,f,c
  3144  00385A  A0D8               	btfss	status,0,c
  3145  00385C  0606               	decf	(strncmp@n+1)^0,f,c
  3146  00385E  2805               	incf	strncmp@n^0,w,c
  3147  003860  E106               	bnz	u5131
  3148  003862  2806               	incf	(strncmp@n+1)^0,w,c
  3149  003864  A4D8               	btfss	status,2,c
  3150  003866  EF37  F01C         	goto	u5131
  3151  00386A  EF39  F01C         	goto	u5130
  3152  00386E                     u5131:
  3153  00386E  EF46  F01C         	goto	l4208
  3154  003872                     u5130:
  3155  003872  0E00               	movlw	0
  3156  003874  6E02               	movwf	(?_strncmp+1)^0,c
  3157  003876  0E00               	movlw	0
  3158  003878  6E01               	movwf	?_strncmp^0,c
  3159  00387A  EF8E  F01C         	goto	l1152
  3160  00387E                     l4206:
  3161  00387E  4A08               	infsnz	strncmp@l^0,f,c
  3162  003880  2A09               	incf	(strncmp@l+1)^0,f,c
  3163  003882  4A0A               	infsnz	strncmp@r^0,f,c
  3164  003884  2A0B               	incf	(strncmp@r+1)^0,f,c
  3165  003886  0605               	decf	strncmp@n^0,f,c
  3166  003888  A0D8               	btfss	status,0,c
  3167  00388A  0606               	decf	(strncmp@n+1)^0,f,c
  3168  00388C                     l4208:
  3169  00388C  C008  FFD9         	movff	strncmp@l,fsr2l
  3170  003890  C009  FFDA         	movff	strncmp@l+1,fsr2h
  3171  003894  50DF               	movf	indf2,w,c
  3172  003896  B4D8               	btfsc	status,2,c
  3173  003898  EF50  F01C         	goto	u5141
  3174  00389C  EF52  F01C         	goto	u5140
  3175  0038A0                     u5141:
  3176  0038A0  EF7D  F01C         	goto	l4216
  3177  0038A4                     u5140:
  3178  0038A4  C00A  FFF6         	movff	strncmp@r,tblptrl
  3179  0038A8  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3180  0038AC                     	if	0	;tblptru may be non-zero
  3181  0038AC                     	endif
  3182  0038AC                     	if	0	;tblptru may be non-zero
  3183  0038AC                     	endif
  3184  0038AC  0008               	tblrd		*
  3185  0038AE  50F5               	movf	tablat,w,c
  3186  0038B0  0900               	iorlw	0
  3187  0038B2  B4D8               	btfsc	status,2,c
  3188  0038B4  EF5E  F01C         	goto	u5151
  3189  0038B8  EF60  F01C         	goto	u5150
  3190  0038BC                     u5151:
  3191  0038BC  EF7D  F01C         	goto	l4216
  3192  0038C0                     u5150:
  3193  0038C0  5005               	movf	strncmp@n^0,w,c
  3194  0038C2  1006               	iorwf	(strncmp@n+1)^0,w,c
  3195  0038C4  B4D8               	btfsc	status,2,c
  3196  0038C6  EF67  F01C         	goto	u5161
  3197  0038CA  EF69  F01C         	goto	u5160
  3198  0038CE                     u5161:
  3199  0038CE  EF7D  F01C         	goto	l4216
  3200  0038D2                     u5160:
  3201  0038D2  C008  FFD9         	movff	strncmp@l,fsr2l
  3202  0038D6  C009  FFDA         	movff	strncmp@l+1,fsr2h
  3203  0038DA  50DF               	movf	indf2,w,c
  3204  0038DC  6E07               	movwf	??_strncmp^0,c
  3205  0038DE  C00A  FFF6         	movff	strncmp@r,tblptrl
  3206  0038E2  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3207  0038E6                     	if	0	;tblptru may be non-zero
  3208  0038E6                     	endif
  3209  0038E6                     	if	0	;tblptru may be non-zero
  3210  0038E6                     	endif
  3211  0038E6  0008               	tblrd		*
  3212  0038E8  50F5               	movf	tablat,w,c
  3213  0038EA  1807               	xorwf	??_strncmp^0,w,c
  3214  0038EC  B4D8               	btfsc	status,2,c
  3215  0038EE  EF7B  F01C         	goto	u5171
  3216  0038F2  EF7D  F01C         	goto	u5170
  3217  0038F6                     u5171:
  3218  0038F6  EF3F  F01C         	goto	l4206
  3219  0038FA                     u5170:
  3220  0038FA                     l4216:
  3221  0038FA  C008  FFD9         	movff	strncmp@l,fsr2l
  3222  0038FE  C009  FFDA         	movff	strncmp@l+1,fsr2h
  3223  003902  50DF               	movf	indf2,w,c
  3224  003904  6E07               	movwf	??_strncmp^0,c
  3225  003906  C00A  FFF6         	movff	strncmp@r,tblptrl
  3226  00390A  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3227  00390E                     	if	0	;tblptru may be non-zero
  3228  00390E                     	endif
  3229  00390E                     	if	0	;tblptru may be non-zero
  3230  00390E                     	endif
  3231  00390E  0008               	tblrd		*
  3232  003910  50F5               	movf	tablat,w,c
  3233  003912  5C07               	subwf	??_strncmp^0,w,c
  3234  003914  6E01               	movwf	?_strncmp^0,c
  3235  003916  6A02               	clrf	(?_strncmp+1)^0,c
  3236  003918  A0D8               	btfss	status,0,c
  3237  00391A  0602               	decf	(?_strncmp+1)^0,f,c
  3238  00391C                     l1152:
  3239  00391C  0012               	return		;funcret
  3240  00391E                     __end_of_strncmp:
  3241                           	callstack 0
  3242                           
  3243 ;; *************** function _efgtoa *****************
  3244 ;; Defined at:
  3245 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  3246 ;; Parameters:    Size  Location     Type
  3247 ;;  fp              2   51[COMRAM] PTR struct _IO_FILE
  3248 ;;		 -> sprintf@f(11), 
  3249 ;;  f               4   53[COMRAM] PTR struct _IO_FILE
  3250 ;;  c               1   57[COMRAM] unsigned char 
  3251 ;; Auto vars:     Size  Location     Type
  3252 ;;  u               4  109[COMRAM] unsigned char 
  3253 ;;  g               4  101[COMRAM] unsigned char 
  3254 ;;  l               4   95[COMRAM] unsigned char 
  3255 ;;  h               4   91[COMRAM] unsigned char 
  3256 ;;  ou              4   77[COMRAM] unsigned char 
  3257 ;;  n               2  107[COMRAM] int 
  3258 ;;  e               2  105[COMRAM] int 
  3259 ;;  i               2   99[COMRAM] int 
  3260 ;;  w               2   87[COMRAM] int 
  3261 ;;  p               2   85[COMRAM] int 
  3262 ;;  sign            2   83[COMRAM] int 
  3263 ;;  d               2   81[COMRAM] int 
  3264 ;;  m               2   75[COMRAM] int 
  3265 ;;  ne              2   73[COMRAM] int 
  3266 ;;  pp              2   71[COMRAM] int 
  3267 ;;  t               2   69[COMRAM] int 
  3268 ;;  mode            1   90[COMRAM] unsigned char 
  3269 ;;  nmode           1   89[COMRAM] unsigned char 
  3270 ;; Return value:  Size  Location     Type
  3271 ;;                  2   51[COMRAM] int 
  3272 ;; Registers used:
  3273 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3274 ;; Tracked objects:
  3275 ;;		On entry : 0/0
  3276 ;;		On exit  : 0/0
  3277 ;;		Unchanged: 0/0
  3278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3279 ;;      Params:         7       0       0       0       0       0       0
  3280 ;;      Locals:        50       0       0       0       0       0       0
  3281 ;;      Temps:          5       0       0       0       0       0       0
  3282 ;;      Totals:        62       0       0       0       0       0       0
  3283 ;;Total ram usage:       62 bytes
  3284 ;; Hardware stack levels used: 1
  3285 ;; Hardware stack levels required when called: 4
  3286 ;; This function calls:
  3287 ;;		___awdiv
  3288 ;;		___awmod
  3289 ;;		___fladd
  3290 ;;		___fldiv
  3291 ;;		___fleq
  3292 ;;		___flge
  3293 ;;		___flmul
  3294 ;;		___flneg
  3295 ;;		___flsub
  3296 ;;		___fltol
  3297 ;;		___fpclassifyf
  3298 ;;		_floorf
  3299 ;;		_isupper
  3300 ;;		_pad
  3301 ;;		_strcpy
  3302 ;;		_tolower
  3303 ;; This function is called by:
  3304 ;;		_vfpfcnvrt
  3305 ;; This function uses a non-reentrant model
  3306 ;;
  3307                           
  3308                           	psect	text9
  3309  000678                     __ptext9:
  3310                           	callstack 0
  3311  000678                     _efgtoa:
  3312                           	callstack 22
  3313  000678                     
  3314                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.36\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  3315  000678  0E00               	movlw	0
  3316  00067A  6E55               	movwf	(efgtoa@sign+1)^0,c
  3317  00067C  0E00               	movlw	0
  3318  00067E  6E54               	movwf	efgtoa@sign^0,c
  3319  000680                     
  3320                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 340:     g = f;
  3321  000680  C036  F066         	movff	efgtoa@f,efgtoa@g
  3322  000684  C037  F067         	movff	efgtoa@f+1,efgtoa@g+1
  3323  000688  C038  F068         	movff	efgtoa@f+2,efgtoa@g+2
  3324  00068C  C039  F069         	movff	efgtoa@f+3,efgtoa@g+3
  3325  000690                     
  3326                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  3327  000690  BE69               	btfsc	(efgtoa@g+3)^0,7,c
  3328  000692  EF4F  F003         	goto	u4610
  3329  000696  EF4D  F003         	goto	u4611
  3330  00069A                     u4611:
  3331  00069A  EF65  F003         	goto	l3872
  3332  00069E                     u4610:
  3333  00069E                     
  3334                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  3335  00069E  0E00               	movlw	0
  3336  0006A0  6E55               	movwf	(efgtoa@sign+1)^0,c
  3337  0006A2  0E01               	movlw	1
  3338  0006A4  6E54               	movwf	efgtoa@sign^0,c
  3339  0006A6                     
  3340                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  3341  0006A6  C066  F001         	movff	efgtoa@g,___flneg@f1
  3342  0006AA  C067  F002         	movff	efgtoa@g+1,___flneg@f1+1
  3343  0006AE  C068  F003         	movff	efgtoa@g+2,___flneg@f1+2
  3344  0006B2  C069  F004         	movff	efgtoa@g+3,___flneg@f1+3
  3345  0006B6  ECF5  F020         	call	___flneg	;wreg free
  3346  0006BA  C001  F066         	movff	?___flneg,efgtoa@g
  3347  0006BE  C002  F067         	movff	?___flneg+1,efgtoa@g+1
  3348  0006C2  C003  F068         	movff	?___flneg+2,efgtoa@g+2
  3349  0006C6  C004  F069         	movff	?___flneg+3,efgtoa@g+3
  3350  0006CA                     l3872:
  3351                           
  3352                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  3353  0006CA  0E00               	movlw	0
  3354  0006CC  6E6D               	movwf	(efgtoa@n+1)^0,c
  3355  0006CE  0E00               	movlw	0
  3356  0006D0  6E6C               	movwf	efgtoa@n^0,c
  3357  0006D2                     
  3358                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  3359  0006D2  C08E  F058         	movff	_width,efgtoa@w
  3360  0006D6  C08F  F059         	movff	_width+1,efgtoa@w+1
  3361  0006DA                     
  3362                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  3363  0006DA  5054               	movf	efgtoa@sign^0,w,c
  3364  0006DC  1055               	iorwf	(efgtoa@sign+1)^0,w,c
  3365  0006DE  A4D8               	btfss	status,2,c
  3366  0006E0  EF74  F003         	goto	u4621
  3367  0006E4  EF76  F003         	goto	u4620
  3368  0006E8                     u4621:
  3369  0006E8  EF7D  F003         	goto	l3880
  3370  0006EC                     u4620:
  3371  0006EC  A47E               	btfss	_flags^0,2,c
  3372  0006EE  EF7B  F003         	goto	u4631
  3373  0006F2  EF7D  F003         	goto	u4630
  3374  0006F6                     u4631:
  3375  0006F6  EF97  F003         	goto	l3892
  3376  0006FA                     u4630:
  3377  0006FA                     l3880:
  3378                           
  3379                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  3380  0006FA  5054               	movf	efgtoa@sign^0,w,c
  3381  0006FC  1055               	iorwf	(efgtoa@sign+1)^0,w,c
  3382  0006FE  A4D8               	btfss	status,2,c
  3383  000700  EF84  F003         	goto	u4641
  3384  000704  EF86  F003         	goto	u4640
  3385  000708                     u4641:
  3386  000708  EF8C  F003         	goto	l3884
  3387  00070C                     u4640:
  3388  00070C  0E00               	movlw	0
  3389  00070E  6E41               	movwf	(_efgtoa$1158+1)^0,c
  3390  000710  0E2B               	movlw	43
  3391  000712  6E40               	movwf	_efgtoa$1158^0,c
  3392  000714  EF90  F003         	goto	l3886
  3393  000718                     l3884:
  3394  000718  0E00               	movlw	0
  3395  00071A  6E41               	movwf	(_efgtoa$1158+1)^0,c
  3396  00071C  0E2D               	movlw	45
  3397  00071E  6E40               	movwf	_efgtoa$1158^0,c
  3398  000720                     l3886:
  3399  000720  C040  F100         	movff	_efgtoa$1158,_dbuf
  3400  000724                     
  3401                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 351:         ++n;
  3402  000724  4A6C               	infsnz	efgtoa@n^0,f,c
  3403  000726  2A6D               	incf	(efgtoa@n+1)^0,f,c
  3404  000728                     
  3405                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 352:         --w;
  3406  000728  0658               	decf	efgtoa@w^0,f,c
  3407  00072A  A0D8               	btfss	status,0,c
  3408  00072C  0659               	decf	(efgtoa@w+1)^0,f,c
  3409  00072E                     l3892:
  3410                           
  3411                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 356:     if (( __
      +                          fpclassifyf(g) == 1 )) {
  3412  00072E  C066  F001         	movff	efgtoa@g,___fpclassifyf@x
  3413  000732  C067  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3414  000736  C068  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3415  00073A  C069  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3416  00073E  EC33  F01B         	call	___fpclassifyf	;wreg free
  3417  000742  0401               	decf	?___fpclassifyf^0,w,c
  3418  000744  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3419  000746  A4D8               	btfss	status,2,c
  3420  000748  EFA8  F003         	goto	u4651
  3421  00074C  EFAA  F003         	goto	u4650
  3422  000750                     u4651:
  3423  000750  EFF2  F003         	goto	l3910
  3424  000754                     u4650:
  3425  000754  0EBF               	movlw	191
  3426  000756  6E3B               	movwf	??_efgtoa^0,c
  3427  000758  0EFF               	movlw	255
  3428  00075A  6E3C               	movwf	(??_efgtoa+1)^0,c
  3429  00075C  503A               	movf	efgtoa@c^0,w,c
  3430  00075E  6E3D               	movwf	(??_efgtoa+2)^0,c
  3431  000760  6A3E               	clrf	(??_efgtoa+3)^0,c
  3432  000762  503B               	movf	??_efgtoa^0,w,c
  3433  000764  263D               	addwf	(??_efgtoa+2)^0,f,c
  3434  000766  503C               	movf	(??_efgtoa+1)^0,w,c
  3435  000768  223E               	addwfc	(??_efgtoa+3)^0,f,c
  3436  00076A  503E               	movf	(??_efgtoa+3)^0,w,c
  3437  00076C  E107               	bnz	u4661
  3438  00076E  0E1A               	movlw	26
  3439  000770  5C3D               	subwf	(??_efgtoa+2)^0,w,c
  3440  000772  B0D8               	btfsc	status,0,c
  3441  000774  EFBE  F003         	goto	u4661
  3442  000778  EFC0  F003         	goto	u4660
  3443  00077C                     u4661:
  3444  00077C  EFCE  F003         	goto	l3902
  3445  000780                     u4660:
  3446  000780                     
  3447                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  3448  000780  0E00               	movlw	low _dbuf
  3449  000782  246C               	addwf	efgtoa@n^0,w,c
  3450  000784  6E01               	movwf	strcpy@dest^0,c
  3451  000786  0E01               	movlw	high _dbuf
  3452  000788  206D               	addwfc	(efgtoa@n+1)^0,w,c
  3453  00078A  6E02               	movwf	(strcpy@dest+1)^0,c
  3454  00078C  0E63               	movlw	low STR_15
  3455  00078E  6E03               	movwf	strcpy@src^0,c
  3456  000790  0E06               	movlw	high STR_15
  3457  000792  6E04               	movwf	(strcpy@src+1)^0,c
  3458  000794  ECB4  F01F         	call	_strcpy	;wreg free
  3459                           
  3460                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  3461  000798  EFDA  F003         	goto	l3904
  3462  00079C                     l3902:
  3463                           
  3464                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  3465  00079C  0E00               	movlw	low _dbuf
  3466  00079E  246C               	addwf	efgtoa@n^0,w,c
  3467  0007A0  6E01               	movwf	strcpy@dest^0,c
  3468  0007A2  0E01               	movlw	high _dbuf
  3469  0007A4  206D               	addwfc	(efgtoa@n+1)^0,w,c
  3470  0007A6  6E02               	movwf	(strcpy@dest+1)^0,c
  3471  0007A8  0E6B               	movlw	low STR_16
  3472  0007AA  6E03               	movwf	strcpy@src^0,c
  3473  0007AC  0E06               	movlw	high STR_16
  3474  0007AE  6E04               	movwf	(strcpy@src+1)^0,c
  3475  0007B0  ECB4  F01F         	call	_strcpy	;wreg free
  3476  0007B4                     l3904:
  3477                           
  3478                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  3479  0007B4  0EFD               	movlw	253
  3480  0007B6  2658               	addwf	efgtoa@w^0,f,c
  3481  0007B8  0EFF               	movlw	255
  3482  0007BA  2259               	addwfc	(efgtoa@w+1)^0,f,c
  3483  0007BC                     l3906:
  3484                           
  3485                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  3486  0007BC  C034  F011         	movff	efgtoa@fp,pad@fp
  3487  0007C0  C035  F012         	movff	efgtoa@fp+1,pad@fp+1
  3488  0007C4  0E00               	movlw	low _dbuf
  3489  0007C6  6E13               	movwf	pad@buf^0,c
  3490  0007C8  0E01               	movlw	high _dbuf
  3491  0007CA  6E14               	movwf	(pad@buf+1)^0,c
  3492  0007CC  C058  F015         	movff	efgtoa@w,pad@p
  3493  0007D0  C059  F016         	movff	efgtoa@w+1,pad@p+1
  3494  0007D4  EC56  F01D         	call	_pad	;wreg free
  3495  0007D8  C011  F034         	movff	?_pad,?_efgtoa
  3496  0007DC  C012  F035         	movff	?_pad+1,?_efgtoa+1
  3497  0007E0  EF30  F009         	goto	l916
  3498  0007E4                     l3910:
  3499                           
  3500                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 365:     if (( __
      +                          fpclassifyf(g) == 0 )) {
  3501  0007E4  C066  F001         	movff	efgtoa@g,___fpclassifyf@x
  3502  0007E8  C067  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3503  0007EC  C068  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3504  0007F0  C069  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3505  0007F4  EC33  F01B         	call	___fpclassifyf	;wreg free
  3506  0007F8  5001               	movf	?___fpclassifyf^0,w,c
  3507  0007FA  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3508  0007FC  A4D8               	btfss	status,2,c
  3509  0007FE  EF03  F004         	goto	u4671
  3510  000802  EF05  F004         	goto	u4670
  3511  000806                     u4671:
  3512  000806  EF37  F004         	goto	l3928
  3513  00080A                     u4670:
  3514  00080A  0EBF               	movlw	191
  3515  00080C  6E3B               	movwf	??_efgtoa^0,c
  3516  00080E  0EFF               	movlw	255
  3517  000810  6E3C               	movwf	(??_efgtoa+1)^0,c
  3518  000812  503A               	movf	efgtoa@c^0,w,c
  3519  000814  6E3D               	movwf	(??_efgtoa+2)^0,c
  3520  000816  6A3E               	clrf	(??_efgtoa+3)^0,c
  3521  000818  503B               	movf	??_efgtoa^0,w,c
  3522  00081A  263D               	addwf	(??_efgtoa+2)^0,f,c
  3523  00081C  503C               	movf	(??_efgtoa+1)^0,w,c
  3524  00081E  223E               	addwfc	(??_efgtoa+3)^0,f,c
  3525  000820  503E               	movf	(??_efgtoa+3)^0,w,c
  3526  000822  E107               	bnz	u4681
  3527  000824  0E1A               	movlw	26
  3528  000826  5C3D               	subwf	(??_efgtoa+2)^0,w,c
  3529  000828  B0D8               	btfsc	status,0,c
  3530  00082A  EF19  F004         	goto	u4681
  3531  00082E  EF1B  F004         	goto	u4680
  3532  000832                     u4681:
  3533  000832  EF29  F004         	goto	l3920
  3534  000836                     u4680:
  3535  000836                     
  3536                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  3537  000836  0E00               	movlw	low _dbuf
  3538  000838  246C               	addwf	efgtoa@n^0,w,c
  3539  00083A  6E01               	movwf	strcpy@dest^0,c
  3540  00083C  0E01               	movlw	high _dbuf
  3541  00083E  206D               	addwfc	(efgtoa@n+1)^0,w,c
  3542  000840  6E02               	movwf	(strcpy@dest+1)^0,c
  3543  000842  0E67               	movlw	low STR_19
  3544  000844  6E03               	movwf	strcpy@src^0,c
  3545  000846  0E06               	movlw	high STR_19
  3546  000848  6E04               	movwf	(strcpy@src+1)^0,c
  3547  00084A  ECB4  F01F         	call	_strcpy	;wreg free
  3548                           
  3549                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  3550  00084E  EFDA  F003         	goto	l3904
  3551  000852                     l3920:
  3552                           
  3553                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  3554  000852  0E00               	movlw	low _dbuf
  3555  000854  246C               	addwf	efgtoa@n^0,w,c
  3556  000856  6E01               	movwf	strcpy@dest^0,c
  3557  000858  0E01               	movlw	high _dbuf
  3558  00085A  206D               	addwfc	(efgtoa@n+1)^0,w,c
  3559  00085C  6E02               	movwf	(strcpy@dest+1)^0,c
  3560  00085E  0E6F               	movlw	low STR_20
  3561  000860  6E03               	movwf	strcpy@src^0,c
  3562  000862  0E06               	movlw	high STR_20
  3563  000864  6E04               	movwf	(strcpy@src+1)^0,c
  3564  000866  ECB4  F01F         	call	_strcpy	;wreg free
  3565  00086A  EFDA  F003         	goto	l3904
  3566  00086E                     l3928:
  3567                           
  3568                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  3569  00086E  0E00               	movlw	0
  3570  000870  6E6E               	movwf	efgtoa@u^0,c
  3571  000872  0E00               	movlw	0
  3572  000874  6E6F               	movwf	(efgtoa@u+1)^0,c
  3573  000876  0E80               	movlw	128
  3574  000878  6E70               	movwf	(efgtoa@u+2)^0,c
  3575  00087A  0E3F               	movlw	63
  3576  00087C  6E71               	movwf	(efgtoa@u+3)^0,c
  3577                           
  3578                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  3579  00087E  0E00               	movlw	0
  3580  000880  6E6B               	movwf	(efgtoa@e+1)^0,c
  3581  000882  0E00               	movlw	0
  3582  000884  6E6A               	movwf	efgtoa@e^0,c
  3583  000886                     
  3584                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  3585  000886  C066  F001         	movff	efgtoa@g,___fleq@ff1
  3586  00088A  C067  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  3587  00088E  C068  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  3588  000892  C069  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  3589  000896  0E00               	movlw	0
  3590  000898  6E05               	movwf	___fleq@ff2^0,c
  3591  00089A  0E00               	movlw	0
  3592  00089C  6E06               	movwf	(___fleq@ff2+1)^0,c
  3593  00089E  0E00               	movlw	0
  3594  0008A0  6E07               	movwf	(___fleq@ff2+2)^0,c
  3595  0008A2  0E00               	movlw	0
  3596  0008A4  6E08               	movwf	(___fleq@ff2+3)^0,c
  3597  0008A6  EC0F  F01E         	call	___fleq	;wreg free
  3598  0008AA  B0D8               	btfsc	status,0,c
  3599  0008AC  EF5A  F004         	goto	u4691
  3600  0008B0  EF5C  F004         	goto	u4690
  3601  0008B4                     u4691:
  3602  0008B4  EFDD  F004         	goto	l3946
  3603  0008B8                     u4690:
  3604  0008B8  EF7A  F004         	goto	l3938
  3605  0008BC                     l3934:
  3606                           
  3607                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  3608  0008BC  C06E  F00F         	movff	efgtoa@u,___flmul@b
  3609  0008C0  C06F  F010         	movff	efgtoa@u+1,___flmul@b+1
  3610  0008C4  C070  F011         	movff	efgtoa@u+2,___flmul@b+2
  3611  0008C8  C071  F012         	movff	efgtoa@u+3,___flmul@b+3
  3612  0008CC  0E00               	movlw	0
  3613  0008CE  6E13               	movwf	___flmul@a^0,c
  3614  0008D0  0E00               	movlw	0
  3615  0008D2  6E14               	movwf	(___flmul@a+1)^0,c
  3616  0008D4  0E20               	movlw	32
  3617  0008D6  6E15               	movwf	(___flmul@a+2)^0,c
  3618  0008D8  0E41               	movlw	65
  3619  0008DA  6E16               	movwf	(___flmul@a+3)^0,c
  3620  0008DC  ECDD  F00E         	call	___flmul	;wreg free
  3621  0008E0  C00F  F06E         	movff	?___flmul,efgtoa@u
  3622  0008E4  C010  F06F         	movff	?___flmul+1,efgtoa@u+1
  3623  0008E8  C011  F070         	movff	?___flmul+2,efgtoa@u+2
  3624  0008EC  C012  F071         	movff	?___flmul+3,efgtoa@u+3
  3625  0008F0                     
  3626                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  3627  0008F0  4A6A               	infsnz	efgtoa@e^0,f,c
  3628  0008F2  2A6B               	incf	(efgtoa@e+1)^0,f,c
  3629  0008F4                     l3938:
  3630                           
  3631                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  3632  0008F4  C066  F028         	movff	efgtoa@g,___flge@ff1
  3633  0008F8  C067  F029         	movff	efgtoa@g+1,___flge@ff1+1
  3634  0008FC  C068  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  3635  000900  C069  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  3636  000904  0E00               	movlw	0
  3637  000906  6E13               	movwf	___flmul@a^0,c
  3638  000908  0E00               	movlw	0
  3639  00090A  6E14               	movwf	(___flmul@a+1)^0,c
  3640  00090C  0E20               	movlw	32
  3641  00090E  6E15               	movwf	(___flmul@a+2)^0,c
  3642  000910  0E41               	movlw	65
  3643  000912  6E16               	movwf	(___flmul@a+3)^0,c
  3644  000914  C06E  F00F         	movff	efgtoa@u,___flmul@b
  3645  000918  C06F  F010         	movff	efgtoa@u+1,___flmul@b+1
  3646  00091C  C070  F011         	movff	efgtoa@u+2,___flmul@b+2
  3647  000920  C071  F012         	movff	efgtoa@u+3,___flmul@b+3
  3648  000924  ECDD  F00E         	call	___flmul	;wreg free
  3649  000928  C00F  F02C         	movff	?___flmul,___flge@ff2
  3650  00092C  C010  F02D         	movff	?___flmul+1,___flge@ff2+1
  3651  000930  C011  F02E         	movff	?___flmul+2,___flge@ff2+2
  3652  000934  C012  F02F         	movff	?___flmul+3,___flge@ff2+3
  3653  000938  ECB1  F01A         	call	___flge	;wreg free
  3654  00093C  B0D8               	btfsc	status,0,c
  3655  00093E  EFA3  F004         	goto	u4701
  3656  000942  EFA5  F004         	goto	u4700
  3657  000946                     u4701:
  3658  000946  EF5E  F004         	goto	l3934
  3659  00094A                     u4700:
  3660  00094A  EFC4  F004         	goto	l3944
  3661  00094E                     l3940:
  3662                           
  3663                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  3664  00094E  C06E  F001         	movff	efgtoa@u,___fldiv@b
  3665  000952  C06F  F002         	movff	efgtoa@u+1,___fldiv@b+1
  3666  000956  C070  F003         	movff	efgtoa@u+2,___fldiv@b+2
  3667  00095A  C071  F004         	movff	efgtoa@u+3,___fldiv@b+3
  3668  00095E  0E00               	movlw	0
  3669  000960  6E05               	movwf	___fldiv@a^0,c
  3670  000962  0E00               	movlw	0
  3671  000964  6E06               	movwf	(___fldiv@a+1)^0,c
  3672  000966  0E20               	movlw	32
  3673  000968  6E07               	movwf	(___fldiv@a+2)^0,c
  3674  00096A  0E41               	movlw	65
  3675  00096C  6E08               	movwf	(___fldiv@a+3)^0,c
  3676  00096E  ECF2  F010         	call	___fldiv	;wreg free
  3677  000972  C001  F06E         	movff	?___fldiv,efgtoa@u
  3678  000976  C002  F06F         	movff	?___fldiv+1,efgtoa@u+1
  3679  00097A  C003  F070         	movff	?___fldiv+2,efgtoa@u+2
  3680  00097E  C004  F071         	movff	?___fldiv+3,efgtoa@u+3
  3681  000982                     
  3682                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  3683  000982  066A               	decf	efgtoa@e^0,f,c
  3684  000984  A0D8               	btfss	status,0,c
  3685  000986  066B               	decf	(efgtoa@e+1)^0,f,c
  3686  000988                     l3944:
  3687                           
  3688                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  3689  000988  C066  F028         	movff	efgtoa@g,___flge@ff1
  3690  00098C  C067  F029         	movff	efgtoa@g+1,___flge@ff1+1
  3691  000990  C068  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  3692  000994  C069  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  3693  000998  C06E  F02C         	movff	efgtoa@u,___flge@ff2
  3694  00099C  C06F  F02D         	movff	efgtoa@u+1,___flge@ff2+1
  3695  0009A0  C070  F02E         	movff	efgtoa@u+2,___flge@ff2+2
  3696  0009A4  C071  F02F         	movff	efgtoa@u+3,___flge@ff2+3
  3697  0009A8  ECB1  F01A         	call	___flge	;wreg free
  3698  0009AC  A0D8               	btfss	status,0,c
  3699  0009AE  EFDB  F004         	goto	u4711
  3700  0009B2  EFDD  F004         	goto	u4710
  3701  0009B6                     u4711:
  3702  0009B6  EFA7  F004         	goto	l3940
  3703  0009BA                     u4710:
  3704  0009BA                     l3946:
  3705                           
  3706                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  3707  0009BA  C03A  F007         	movff	efgtoa@c,tolower@c
  3708  0009BE  6A08               	clrf	(tolower@c+1)^0,c
  3709  0009C0  EC34  F020         	call	_tolower	;wreg free
  3710  0009C4  5007               	movf	?_tolower^0,w,c
  3711  0009C6  6E5B               	movwf	efgtoa@mode^0,c
  3712  0009C8                     
  3713                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  3714  0009C8  C05B  F05A         	movff	efgtoa@mode,efgtoa@nmode
  3715  0009CC                     
  3716                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  3717  0009CC  0E67               	movlw	103
  3718  0009CE  185B               	xorwf	efgtoa@mode^0,w,c
  3719  0009D0  A4D8               	btfss	status,2,c
  3720  0009D2  EFED  F004         	goto	u4721
  3721  0009D6  EFEF  F004         	goto	u4720
  3722  0009DA                     u4721:
  3723  0009DA  EF16  F005         	goto	l3960
  3724  0009DE                     u4720:
  3725  0009DE                     
  3726                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  3727  0009DE  0100               	movlb	0	; () banked
  3728  0009E0  5190               	movf	_prec& (0+255),w,b
  3729  0009E2  1191               	iorwf	(_prec+1)& (0+255),w,b
  3730  0009E4  A4D8               	btfss	status,2,c
  3731  0009E6  EFF7  F004         	goto	u4731
  3732  0009EA  EFF9  F004         	goto	u4730
  3733  0009EE                     u4731:
  3734  0009EE  EFFD  F004         	goto	l3956
  3735  0009F2                     u4730:
  3736  0009F2                     
  3737                           ; BSR set to: 0
  3738                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  3739  0009F2  0E00               	movlw	0
  3740  0009F4  6F91               	movwf	(_prec+1)& (0+255),b
  3741  0009F6  0E01               	movlw	1
  3742  0009F8  6F90               	movwf	_prec& (0+255),b
  3743  0009FA                     l3956:
  3744                           
  3745                           ; BSR set to: 0
  3746                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  3747  0009FA  BF91               	btfsc	(_prec+1)& (0+255),7,b
  3748  0009FC  EF0A  F005         	goto	u4740
  3749  000A00  5191               	movf	(_prec+1)& (0+255),w,b
  3750  000A02  E106               	bnz	u4741
  3751  000A04  0590               	decf	_prec& (0+255),w,b
  3752  000A06  B0D8               	btfsc	status,0,c
  3753  000A08  EF08  F005         	goto	u4741
  3754  000A0C  EF0A  F005         	goto	u4740
  3755  000A10                     u4741:
  3756  000A10  EF10  F005         	goto	l932
  3757  000A14                     u4740:
  3758  000A14                     l3958:
  3759                           
  3760                           ; BSR set to: 0
  3761  000A14  0E00               	movlw	0
  3762  000A16  6E57               	movwf	(efgtoa@p+1)^0,c
  3763  000A18  0E06               	movlw	6
  3764  000A1A  6E56               	movwf	efgtoa@p^0,c
  3765  000A1C  EF20  F005         	goto	l3966
  3766  000A20                     l932:
  3767                           
  3768                           ; BSR set to: 0
  3769  000A20  C090  F056         	movff	_prec,efgtoa@p
  3770  000A24  C091  F057         	movff	_prec+1,efgtoa@p+1
  3771  000A28  EF20  F005         	goto	l3966
  3772  000A2C                     l3960:
  3773                           
  3774                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  3775  000A2C  0100               	movlb	0	; () banked
  3776  000A2E  BF91               	btfsc	(_prec+1)& (0+255),7,b
  3777  000A30  EF1C  F005         	goto	u4751
  3778  000A34  EF1E  F005         	goto	u4750
  3779  000A38                     u4751:
  3780  000A38  EF0A  F005         	goto	l3958
  3781  000A3C                     u4750:
  3782  000A3C  EF10  F005         	goto	l932
  3783  000A40                     l3966:
  3784                           
  3785                           ; BSR set to: 0
  3786                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  3787  000A40  0E67               	movlw	103
  3788  000A42  185B               	xorwf	efgtoa@mode^0,w,c
  3789  000A44  A4D8               	btfss	status,2,c
  3790  000A46  EF27  F005         	goto	u4761
  3791  000A4A  EF29  F005         	goto	u4760
  3792  000A4E                     u4761:
  3793  000A4E  EF58  F005         	goto	l3976
  3794  000A52                     u4760:
  3795  000A52                     
  3796                           ; BSR set to: 0
  3797                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  3798  000A52  AE6B               	btfss	(efgtoa@e+1)^0,7,c
  3799  000A54  EF37  F005         	goto	u4770
  3800  000A58  0EFC               	movlw	252
  3801  000A5A  5C6A               	subwf	efgtoa@e^0,w,c
  3802  000A5C  0EFF               	movlw	255
  3803  000A5E  586B               	subwfb	(efgtoa@e+1)^0,w,c
  3804  000A60  A0D8               	btfss	status,0,c
  3805  000A62  EF35  F005         	goto	u4771
  3806  000A66  EF37  F005         	goto	u4770
  3807  000A6A                     u4771:
  3808  000A6A  EF56  F005         	goto	l3974
  3809  000A6E                     u4770:
  3810  000A6E                     
  3811                           ; BSR set to: 0
  3812  000A6E  0EFF               	movlw	255
  3813  000A70  6E3B               	movwf	??_efgtoa^0,c
  3814  000A72  0EFF               	movlw	255
  3815  000A74  6E3C               	movwf	(??_efgtoa+1)^0,c
  3816  000A76  C056  F03D         	movff	efgtoa@p,??_efgtoa+2
  3817  000A7A  C057  F03E         	movff	efgtoa@p+1,??_efgtoa+3
  3818  000A7E  503B               	movf	??_efgtoa^0,w,c
  3819  000A80  263D               	addwf	(??_efgtoa+2)^0,f,c
  3820  000A82  503C               	movf	(??_efgtoa+1)^0,w,c
  3821  000A84  223E               	addwfc	(??_efgtoa+3)^0,f,c
  3822  000A86  506A               	movf	efgtoa@e^0,w,c
  3823  000A88  5C3D               	subwf	(??_efgtoa+2)^0,w,c
  3824  000A8A  503E               	movf	(??_efgtoa+3)^0,w,c
  3825  000A8C  0A80               	xorlw	128
  3826  000A8E  6E3F               	movwf	(??_efgtoa+4)^0,c
  3827  000A90  506B               	movf	(efgtoa@e+1)^0,w,c
  3828  000A92  0A80               	xorlw	128
  3829  000A94  583F               	subwfb	(??_efgtoa+4)^0,w,c
  3830  000A96  A0D8               	btfss	status,0,c
  3831  000A98  EF50  F005         	goto	u4781
  3832  000A9C  EF52  F005         	goto	u4780
  3833  000AA0                     u4781:
  3834  000AA0  EF56  F005         	goto	l3974
  3835  000AA4                     u4780:
  3836  000AA4                     
  3837                           ; BSR set to: 0
  3838                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  3839  000AA4  0E66               	movlw	102
  3840  000AA6  6E5A               	movwf	efgtoa@nmode^0,c
  3841                           
  3842                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  3843  000AA8  EF58  F005         	goto	l3976
  3844  000AAC                     l3974:
  3845                           
  3846                           ; BSR set to: 0
  3847                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  3848  000AAC  0E65               	movlw	101
  3849  000AAE  6E5A               	movwf	efgtoa@nmode^0,c
  3850  000AB0                     l3976:
  3851                           
  3852                           ; BSR set to: 0
  3853                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 411:     m = p;
  3854  000AB0  C056  F04C         	movff	efgtoa@p,efgtoa@m
  3855  000AB4  C057  F04D         	movff	efgtoa@p+1,efgtoa@m+1
  3856  000AB8                     
  3857                           ; BSR set to: 0
  3858                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  3859  000AB8  0E67               	movlw	103
  3860  000ABA  185B               	xorwf	efgtoa@mode^0,w,c
  3861  000ABC  A4D8               	btfss	status,2,c
  3862  000ABE  EF63  F005         	goto	u4791
  3863  000AC2  EF65  F005         	goto	u4790
  3864  000AC6                     u4791:
  3865  000AC6  EF75  F005         	goto	l3984
  3866  000ACA                     u4790:
  3867  000ACA                     
  3868                           ; BSR set to: 0
  3869  000ACA  0E66               	movlw	102
  3870  000ACC  185A               	xorwf	efgtoa@nmode^0,w,c
  3871  000ACE  A4D8               	btfss	status,2,c
  3872  000AD0  EF6C  F005         	goto	u4801
  3873  000AD4  EF6E  F005         	goto	u4800
  3874  000AD8                     u4801:
  3875  000AD8  EF77  F005         	goto	l3986
  3876  000ADC                     u4800:
  3877  000ADC                     
  3878                           ; BSR set to: 0
  3879  000ADC  BE6B               	btfsc	(efgtoa@e+1)^0,7,c
  3880  000ADE  EF75  F005         	goto	u4810
  3881  000AE2  EF73  F005         	goto	u4811
  3882  000AE6                     u4811:
  3883  000AE6  EF77  F005         	goto	l3986
  3884  000AEA                     u4810:
  3885  000AEA                     l3984:
  3886                           
  3887                           ; BSR set to: 0
  3888                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 413:         ++m;
  3889  000AEA  4A4C               	infsnz	efgtoa@m^0,f,c
  3890  000AEC  2A4D               	incf	(efgtoa@m+1)^0,f,c
  3891  000AEE                     l3986:
  3892                           
  3893                           ; BSR set to: 0
  3894                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  3895  000AEE  0E66               	movlw	102
  3896  000AF0  185A               	xorwf	efgtoa@nmode^0,w,c
  3897  000AF2  A4D8               	btfss	status,2,c
  3898  000AF4  EF7E  F005         	goto	u4821
  3899  000AF8  EF80  F005         	goto	u4820
  3900  000AFC                     u4821:
  3901  000AFC  EFA0  F005         	goto	l3996
  3902  000B00                     u4820:
  3903  000B00                     
  3904                           ; BSR set to: 0
  3905                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  3906  000B00  BE6B               	btfsc	(efgtoa@e+1)^0,7,c
  3907  000B02  EF87  F005         	goto	u4830
  3908  000B06  EF85  F005         	goto	u4831
  3909  000B0A                     u4831:
  3910  000B0A  EF93  F005         	goto	l3992
  3911  000B0E                     u4830:
  3912  000B0E                     
  3913                           ; BSR set to: 0
  3914                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  3915  000B0E  0E00               	movlw	0
  3916  000B10  6E6E               	movwf	efgtoa@u^0,c
  3917  000B12  0E00               	movlw	0
  3918  000B14  6E6F               	movwf	(efgtoa@u+1)^0,c
  3919  000B16  0E80               	movlw	128
  3920  000B18  6E70               	movwf	(efgtoa@u+2)^0,c
  3921  000B1A  0E3F               	movlw	63
  3922  000B1C  6E71               	movwf	(efgtoa@u+3)^0,c
  3923                           
  3924                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  3925  000B1E  0E00               	movlw	0
  3926  000B20  6E6B               	movwf	(efgtoa@e+1)^0,c
  3927  000B22  0E00               	movlw	0
  3928  000B24  6E6A               	movwf	efgtoa@e^0,c
  3929  000B26                     l3992:
  3930                           
  3931                           ; BSR set to: 0
  3932                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  3933  000B26  0E67               	movlw	103
  3934  000B28  185B               	xorwf	efgtoa@mode^0,w,c
  3935  000B2A  B4D8               	btfsc	status,2,c
  3936  000B2C  EF9A  F005         	goto	u4841
  3937  000B30  EF9C  F005         	goto	u4840
  3938  000B34                     u4841:
  3939  000B34  EFA0  F005         	goto	l3996
  3940  000B38                     u4840:
  3941  000B38                     
  3942                           ; BSR set to: 0
  3943                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  3944  000B38  506A               	movf	efgtoa@e^0,w,c
  3945  000B3A  264C               	addwf	efgtoa@m^0,f,c
  3946  000B3C  506B               	movf	(efgtoa@e+1)^0,w,c
  3947  000B3E  224D               	addwfc	(efgtoa@m+1)^0,f,c
  3948  000B40                     l3996:
  3949                           
  3950                           ; BSR set to: 0
  3951                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  3952  000B40  0E00               	movlw	0
  3953  000B42  6E65               	movwf	(efgtoa@i+1)^0,c
  3954  000B44  0E00               	movlw	0
  3955  000B46  6E64               	movwf	efgtoa@i^0,c
  3956  000B48                     
  3957                           ; BSR set to: 0
  3958                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 429:     h = g;
  3959  000B48  C066  F05C         	movff	efgtoa@g,efgtoa@h
  3960  000B4C  C067  F05D         	movff	efgtoa@g+1,efgtoa@h+1
  3961  000B50  C068  F05E         	movff	efgtoa@g+2,efgtoa@h+2
  3962  000B54  C069  F05F         	movff	efgtoa@g+3,efgtoa@h+3
  3963  000B58                     
  3964                           ; BSR set to: 0
  3965                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  3966  000B58  C06E  F04E         	movff	efgtoa@u,efgtoa@ou
  3967  000B5C  C06F  F04F         	movff	efgtoa@u+1,efgtoa@ou+1
  3968  000B60  C070  F050         	movff	efgtoa@u+2,efgtoa@ou+2
  3969  000B64  C071  F051         	movff	efgtoa@u+3,efgtoa@ou+3
  3970                           
  3971                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3972  000B68  EF30  F006         	goto	l4010
  3973  000B6C                     l4002:
  3974                           
  3975                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  3976  000B6C  C05C  F001         	movff	efgtoa@h,___fldiv@b
  3977  000B70  C05D  F002         	movff	efgtoa@h+1,___fldiv@b+1
  3978  000B74  C05E  F003         	movff	efgtoa@h+2,___fldiv@b+2
  3979  000B78  C05F  F004         	movff	efgtoa@h+3,___fldiv@b+3
  3980  000B7C  C06E  F005         	movff	efgtoa@u,___fldiv@a
  3981  000B80  C06F  F006         	movff	efgtoa@u+1,___fldiv@a+1
  3982  000B84  C070  F007         	movff	efgtoa@u+2,___fldiv@a+2
  3983  000B88  C071  F008         	movff	efgtoa@u+3,___fldiv@a+3
  3984  000B8C  ECF2  F010         	call	___fldiv	;wreg free
  3985  000B90  C001  F01A         	movff	?___fldiv,floorf@x
  3986  000B94  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  3987  000B98  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  3988  000B9C  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  3989  000BA0  ECA5  F015         	call	_floorf	;wreg free
  3990  000BA4  C01A  F060         	movff	?_floorf,efgtoa@l
  3991  000BA8  C01B  F061         	movff	?_floorf+1,efgtoa@l+1
  3992  000BAC  C01C  F062         	movff	?_floorf+2,efgtoa@l+2
  3993  000BB0  C01D  F063         	movff	?_floorf+3,efgtoa@l+3
  3994                           
  3995                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  3996  000BB4  C060  F001         	movff	efgtoa@l,___fltol@f1
  3997  000BB8  C061  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3998  000BBC  C062  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3999  000BC0  C063  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4000  000BC4  EC2E  F01A         	call	___fltol	;wreg free
  4001  000BC8  C001  F052         	movff	?___fltol,efgtoa@d
  4002  000BCC  C002  F053         	movff	?___fltol+1,efgtoa@d+1
  4003  000BD0                     
  4004                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  4005  000BD0  C05C  F028         	movff	efgtoa@h,___flsub@b
  4006  000BD4  C05D  F029         	movff	efgtoa@h+1,___flsub@b+1
  4007  000BD8  C05E  F02A         	movff	efgtoa@h+2,___flsub@b+2
  4008  000BDC  C05F  F02B         	movff	efgtoa@h+3,___flsub@b+3
  4009  000BE0  C06E  F013         	movff	efgtoa@u,___flmul@a
  4010  000BE4  C06F  F014         	movff	efgtoa@u+1,___flmul@a+1
  4011  000BE8  C070  F015         	movff	efgtoa@u+2,___flmul@a+2
  4012  000BEC  C071  F016         	movff	efgtoa@u+3,___flmul@a+3
  4013  000BF0  C060  F00F         	movff	efgtoa@l,___flmul@b
  4014  000BF4  C061  F010         	movff	efgtoa@l+1,___flmul@b+1
  4015  000BF8  C062  F011         	movff	efgtoa@l+2,___flmul@b+2
  4016  000BFC  C063  F012         	movff	efgtoa@l+3,___flmul@b+3
  4017  000C00  ECDD  F00E         	call	___flmul	;wreg free
  4018  000C04  C00F  F02C         	movff	?___flmul,___flsub@a
  4019  000C08  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  4020  000C0C  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  4021  000C10  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  4022  000C14  EC57  F020         	call	___flsub	;wreg free
  4023  000C18  C028  F05C         	movff	?___flsub,efgtoa@h
  4024  000C1C  C029  F05D         	movff	?___flsub+1,efgtoa@h+1
  4025  000C20  C02A  F05E         	movff	?___flsub+2,efgtoa@h+2
  4026  000C24  C02B  F05F         	movff	?___flsub+3,efgtoa@h+3
  4027  000C28                     
  4028                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  4029  000C28  C06E  F001         	movff	efgtoa@u,___fldiv@b
  4030  000C2C  C06F  F002         	movff	efgtoa@u+1,___fldiv@b+1
  4031  000C30  C070  F003         	movff	efgtoa@u+2,___fldiv@b+2
  4032  000C34  C071  F004         	movff	efgtoa@u+3,___fldiv@b+3
  4033  000C38  0E00               	movlw	0
  4034  000C3A  6E05               	movwf	___fldiv@a^0,c
  4035  000C3C  0E00               	movlw	0
  4036  000C3E  6E06               	movwf	(___fldiv@a+1)^0,c
  4037  000C40  0E20               	movlw	32
  4038  000C42  6E07               	movwf	(___fldiv@a+2)^0,c
  4039  000C44  0E41               	movlw	65
  4040  000C46  6E08               	movwf	(___fldiv@a+3)^0,c
  4041  000C48  ECF2  F010         	call	___fldiv	;wreg free
  4042  000C4C  C001  F06E         	movff	?___fldiv,efgtoa@u
  4043  000C50  C002  F06F         	movff	?___fldiv+1,efgtoa@u+1
  4044  000C54  C003  F070         	movff	?___fldiv+2,efgtoa@u+2
  4045  000C58  C004  F071         	movff	?___fldiv+3,efgtoa@u+3
  4046  000C5C                     
  4047                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 436:         ++i;
  4048  000C5C  4A64               	infsnz	efgtoa@i^0,f,c
  4049  000C5E  2A65               	incf	(efgtoa@i+1)^0,f,c
  4050  000C60                     l4010:
  4051                           
  4052                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  4053  000C60  504C               	movf	efgtoa@m^0,w,c
  4054  000C62  5C64               	subwf	efgtoa@i^0,w,c
  4055  000C64  5065               	movf	(efgtoa@i+1)^0,w,c
  4056  000C66  0A80               	xorlw	128
  4057  000C68  6E3B               	movwf	??_efgtoa^0,c
  4058  000C6A  504D               	movf	(efgtoa@m+1)^0,w,c
  4059  000C6C  0A80               	xorlw	128
  4060  000C6E  583B               	subwfb	??_efgtoa^0,w,c
  4061  000C70  A0D8               	btfss	status,0,c
  4062  000C72  EF3D  F006         	goto	u4851
  4063  000C76  EF3F  F006         	goto	u4850
  4064  000C7A                     u4851:
  4065  000C7A  EFB6  F005         	goto	l4002
  4066  000C7E                     u4850:
  4067  000C7E                     
  4068                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  4069  000C7E  C06E  F00F         	movff	efgtoa@u,___flmul@b
  4070  000C82  C06F  F010         	movff	efgtoa@u+1,___flmul@b+1
  4071  000C86  C070  F011         	movff	efgtoa@u+2,___flmul@b+2
  4072  000C8A  C071  F012         	movff	efgtoa@u+3,___flmul@b+3
  4073  000C8E  0E00               	movlw	0
  4074  000C90  6E13               	movwf	___flmul@a^0,c
  4075  000C92  0E00               	movlw	0
  4076  000C94  6E14               	movwf	(___flmul@a+1)^0,c
  4077  000C96  0EA0               	movlw	160
  4078  000C98  6E15               	movwf	(___flmul@a+2)^0,c
  4079  000C9A  0E40               	movlw	64
  4080  000C9C  6E16               	movwf	(___flmul@a+3)^0,c
  4081  000C9E  ECDD  F00E         	call	___flmul	;wreg free
  4082  000CA2  C00F  F060         	movff	?___flmul,efgtoa@l
  4083  000CA6  C010  F061         	movff	?___flmul+1,efgtoa@l+1
  4084  000CAA  C011  F062         	movff	?___flmul+2,efgtoa@l+2
  4085  000CAE  C012  F063         	movff	?___flmul+3,efgtoa@l+3
  4086  000CB2                     
  4087                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  4088  000CB2  C05C  F028         	movff	efgtoa@h,___flge@ff1
  4089  000CB6  C05D  F029         	movff	efgtoa@h+1,___flge@ff1+1
  4090  000CBA  C05E  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  4091  000CBE  C05F  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  4092  000CC2  C060  F02C         	movff	efgtoa@l,___flge@ff2
  4093  000CC6  C061  F02D         	movff	efgtoa@l+1,___flge@ff2+1
  4094  000CCA  C062  F02E         	movff	efgtoa@l+2,___flge@ff2+2
  4095  000CCE  C063  F02F         	movff	efgtoa@l+3,___flge@ff2+3
  4096  000CD2  ECB1  F01A         	call	___flge	;wreg free
  4097  000CD6  B0D8               	btfsc	status,0,c
  4098  000CD8  EF70  F006         	goto	u4861
  4099  000CDC  EF72  F006         	goto	u4860
  4100  000CE0                     u4861:
  4101  000CE0  EF7C  F006         	goto	l4018
  4102  000CE4                     u4860:
  4103  000CE4                     
  4104                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  4105  000CE4  0E00               	movlw	0
  4106  000CE6  6E60               	movwf	efgtoa@l^0,c
  4107  000CE8  0E00               	movlw	0
  4108  000CEA  6E61               	movwf	(efgtoa@l+1)^0,c
  4109  000CEC  0E00               	movlw	0
  4110  000CEE  6E62               	movwf	(efgtoa@l+2)^0,c
  4111  000CF0  0E00               	movlw	0
  4112  000CF2  6E63               	movwf	(efgtoa@l+3)^0,c
  4113                           
  4114                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 443:     } else {
  4115  000CF4  EFA4  F006         	goto	l4024
  4116  000CF8                     l4018:
  4117                           
  4118                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  4119  000CF8  C05C  F001         	movff	efgtoa@h,___fleq@ff1
  4120  000CFC  C05D  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  4121  000D00  C05E  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  4122  000D04  C05F  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  4123  000D08  C060  F005         	movff	efgtoa@l,___fleq@ff2
  4124  000D0C  C061  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  4125  000D10  C062  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  4126  000D14  C063  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  4127  000D18  EC0F  F01E         	call	___fleq	;wreg free
  4128  000D1C  A0D8               	btfss	status,0,c
  4129  000D1E  EF93  F006         	goto	u4871
  4130  000D22  EF95  F006         	goto	u4870
  4131  000D26                     u4871:
  4132  000D26  EFA4  F006         	goto	l4024
  4133  000D2A                     u4870:
  4134  000D2A  B052               	btfsc	efgtoa@d^0,0,c
  4135  000D2C  EF9A  F006         	goto	u4881
  4136  000D30  EF9C  F006         	goto	u4880
  4137  000D34                     u4881:
  4138  000D34  EFA4  F006         	goto	l4024
  4139  000D38                     u4880:
  4140  000D38                     
  4141                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  4142  000D38  0E00               	movlw	0
  4143  000D3A  6E60               	movwf	efgtoa@l^0,c
  4144  000D3C  0E00               	movlw	0
  4145  000D3E  6E61               	movwf	(efgtoa@l+1)^0,c
  4146  000D40  0E00               	movlw	0
  4147  000D42  6E62               	movwf	(efgtoa@l+2)^0,c
  4148  000D44  0E00               	movlw	0
  4149  000D46  6E63               	movwf	(efgtoa@l+3)^0,c
  4150  000D48                     l4024:
  4151                           
  4152                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  4153  000D48  C066  F001         	movff	efgtoa@g,___fladd@b
  4154  000D4C  C067  F002         	movff	efgtoa@g+1,___fladd@b+1
  4155  000D50  C068  F003         	movff	efgtoa@g+2,___fladd@b+2
  4156  000D54  C069  F004         	movff	efgtoa@g+3,___fladd@b+3
  4157  000D58  C060  F005         	movff	efgtoa@l,___fladd@a
  4158  000D5C  C061  F006         	movff	efgtoa@l+1,___fladd@a+1
  4159  000D60  C062  F007         	movff	efgtoa@l+2,___fladd@a+2
  4160  000D64  C063  F008         	movff	efgtoa@l+3,___fladd@a+3
  4161  000D68  EC7D  F00C         	call	___fladd	;wreg free
  4162  000D6C  C001  F05C         	movff	?___fladd,efgtoa@h
  4163  000D70  C002  F05D         	movff	?___fladd+1,efgtoa@h+1
  4164  000D74  C003  F05E         	movff	?___fladd+2,efgtoa@h+2
  4165  000D78  C004  F05F         	movff	?___fladd+3,efgtoa@h+3
  4166  000D7C                     
  4167                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  4168  000D7C  C05C  F028         	movff	efgtoa@h,___flge@ff1
  4169  000D80  C05D  F029         	movff	efgtoa@h+1,___flge@ff1+1
  4170  000D84  C05E  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  4171  000D88  C05F  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  4172  000D8C  0E00               	movlw	0
  4173  000D8E  6E13               	movwf	___flmul@a^0,c
  4174  000D90  0E00               	movlw	0
  4175  000D92  6E14               	movwf	(___flmul@a+1)^0,c
  4176  000D94  0E20               	movlw	32
  4177  000D96  6E15               	movwf	(___flmul@a+2)^0,c
  4178  000D98  0E41               	movlw	65
  4179  000D9A  6E16               	movwf	(___flmul@a+3)^0,c
  4180  000D9C  C04E  F00F         	movff	efgtoa@ou,___flmul@b
  4181  000DA0  C04F  F010         	movff	efgtoa@ou+1,___flmul@b+1
  4182  000DA4  C050  F011         	movff	efgtoa@ou+2,___flmul@b+2
  4183  000DA8  C051  F012         	movff	efgtoa@ou+3,___flmul@b+3
  4184  000DAC  ECDD  F00E         	call	___flmul	;wreg free
  4185  000DB0  C00F  F02C         	movff	?___flmul,___flge@ff2
  4186  000DB4  C010  F02D         	movff	?___flmul+1,___flge@ff2+1
  4187  000DB8  C011  F02E         	movff	?___flmul+2,___flge@ff2+2
  4188  000DBC  C012  F02F         	movff	?___flmul+3,___flge@ff2+3
  4189  000DC0  ECB1  F01A         	call	___flge	;wreg free
  4190  000DC4  A0D8               	btfss	status,0,c
  4191  000DC6  EFE7  F006         	goto	u4891
  4192  000DCA  EFE9  F006         	goto	u4890
  4193  000DCE                     u4891:
  4194  000DCE  EF10  F007         	goto	l4036
  4195  000DD2                     u4890:
  4196  000DD2                     
  4197                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 454:   e++;
  4198  000DD2  4A6A               	infsnz	efgtoa@e^0,f,c
  4199  000DD4  2A6B               	incf	(efgtoa@e+1)^0,f,c
  4200  000DD6                     
  4201                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  4202  000DD6  C04E  F00F         	movff	efgtoa@ou,___flmul@b
  4203  000DDA  C04F  F010         	movff	efgtoa@ou+1,___flmul@b+1
  4204  000DDE  C050  F011         	movff	efgtoa@ou+2,___flmul@b+2
  4205  000DE2  C051  F012         	movff	efgtoa@ou+3,___flmul@b+3
  4206  000DE6  0E00               	movlw	0
  4207  000DE8  6E13               	movwf	___flmul@a^0,c
  4208  000DEA  0E00               	movlw	0
  4209  000DEC  6E14               	movwf	(___flmul@a+1)^0,c
  4210  000DEE  0E20               	movlw	32
  4211  000DF0  6E15               	movwf	(___flmul@a+2)^0,c
  4212  000DF2  0E41               	movlw	65
  4213  000DF4  6E16               	movwf	(___flmul@a+3)^0,c
  4214  000DF6  ECDD  F00E         	call	___flmul	;wreg free
  4215  000DFA  C00F  F04E         	movff	?___flmul,efgtoa@ou
  4216  000DFE  C010  F04F         	movff	?___flmul+1,efgtoa@ou+1
  4217  000E02  C011  F050         	movff	?___flmul+2,efgtoa@ou+2
  4218  000E06  C012  F051         	movff	?___flmul+3,efgtoa@ou+3
  4219  000E0A                     
  4220                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  4221  000E0A  0E66               	movlw	102
  4222  000E0C  185A               	xorwf	efgtoa@nmode^0,w,c
  4223  000E0E  A4D8               	btfss	status,2,c
  4224  000E10  EF0C  F007         	goto	u4901
  4225  000E14  EF0E  F007         	goto	u4900
  4226  000E18                     u4901:
  4227  000E18  EF10  F007         	goto	l4036
  4228  000E1C                     u4900:
  4229  000E1C                     
  4230                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 458:    m++;
  4231  000E1C  4A4C               	infsnz	efgtoa@m^0,f,c
  4232  000E1E  2A4D               	incf	(efgtoa@m+1)^0,f,c
  4233  000E20                     l4036:
  4234                           
  4235                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  4236  000E20  C04E  F06E         	movff	efgtoa@ou,efgtoa@u
  4237  000E24  C04F  F06F         	movff	efgtoa@ou+1,efgtoa@u+1
  4238  000E28  C050  F070         	movff	efgtoa@ou+2,efgtoa@u+2
  4239  000E2C  C051  F071         	movff	efgtoa@ou+3,efgtoa@u+3
  4240  000E30                     
  4241                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  4242  000E30  0E65               	movlw	101
  4243  000E32  185A               	xorwf	efgtoa@nmode^0,w,c
  4244  000E34  B4D8               	btfsc	status,2,c
  4245  000E36  EF1F  F007         	goto	u4911
  4246  000E3A  EF21  F007         	goto	u4910
  4247  000E3E                     u4911:
  4248  000E3E  EF27  F007         	goto	l4042
  4249  000E42                     u4910:
  4250  000E42  C06A  F04A         	movff	efgtoa@e,efgtoa@ne
  4251  000E46  C06B  F04B         	movff	efgtoa@e+1,efgtoa@ne+1
  4252  000E4A  EF2B  F007         	goto	l960
  4253  000E4E                     l4042:
  4254  000E4E  0E00               	movlw	0
  4255  000E50  6E4B               	movwf	(efgtoa@ne+1)^0,c
  4256  000E52  0E00               	movlw	0
  4257  000E54  6E4A               	movwf	efgtoa@ne^0,c
  4258  000E56                     l960:
  4259                           
  4260                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  4261  000E56  0E00               	movlw	0
  4262  000E58  6E49               	movwf	(efgtoa@pp+1)^0,c
  4263  000E5A  0E00               	movlw	0
  4264  000E5C  6E48               	movwf	efgtoa@pp^0,c
  4265                           
  4266                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  4267  000E5E  0E00               	movlw	0
  4268  000E60  6E47               	movwf	(efgtoa@t+1)^0,c
  4269  000E62  0E00               	movlw	0
  4270  000E64  6E46               	movwf	efgtoa@t^0,c
  4271                           
  4272                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  4273  000E66  0E00               	movlw	0
  4274  000E68  6E65               	movwf	(efgtoa@i+1)^0,c
  4275  000E6A  0E00               	movlw	0
  4276  000E6C  6E64               	movwf	efgtoa@i^0,c
  4277                           
  4278                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4279  000E6E  EF24  F008         	goto	l4092
  4280  000E72                     l4044:
  4281                           
  4282                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  4283  000E72  C05C  F001         	movff	efgtoa@h,___fldiv@b
  4284  000E76  C05D  F002         	movff	efgtoa@h+1,___fldiv@b+1
  4285  000E7A  C05E  F003         	movff	efgtoa@h+2,___fldiv@b+2
  4286  000E7E  C05F  F004         	movff	efgtoa@h+3,___fldiv@b+3
  4287  000E82  C06E  F005         	movff	efgtoa@u,___fldiv@a
  4288  000E86  C06F  F006         	movff	efgtoa@u+1,___fldiv@a+1
  4289  000E8A  C070  F007         	movff	efgtoa@u+2,___fldiv@a+2
  4290  000E8E  C071  F008         	movff	efgtoa@u+3,___fldiv@a+3
  4291  000E92  ECF2  F010         	call	___fldiv	;wreg free
  4292  000E96  C001  F01A         	movff	?___fldiv,floorf@x
  4293  000E9A  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  4294  000E9E  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  4295  000EA2  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  4296  000EA6  ECA5  F015         	call	_floorf	;wreg free
  4297  000EAA  C01A  F060         	movff	?_floorf,efgtoa@l
  4298  000EAE  C01B  F061         	movff	?_floorf+1,efgtoa@l+1
  4299  000EB2  C01C  F062         	movff	?_floorf+2,efgtoa@l+2
  4300  000EB6  C01D  F063         	movff	?_floorf+3,efgtoa@l+3
  4301                           
  4302                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  4303  000EBA  C060  F001         	movff	efgtoa@l,___fltol@f1
  4304  000EBE  C061  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4305  000EC2  C062  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4306  000EC6  C063  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4307  000ECA  EC2E  F01A         	call	___fltol	;wreg free
  4308  000ECE  C001  F052         	movff	?___fltol,efgtoa@d
  4309  000ED2  C002  F053         	movff	?___fltol+1,efgtoa@d+1
  4310  000ED6                     
  4311                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  4312  000ED6  B87E               	btfsc	_flags^0,4,c
  4313  000ED8  EF70  F007         	goto	u4921
  4314  000EDC  EF72  F007         	goto	u4920
  4315  000EE0                     u4921:
  4316  000EE0  EF8F  F007         	goto	l4056
  4317  000EE4                     u4920:
  4318  000EE4  5052               	movf	efgtoa@d^0,w,c
  4319  000EE6  1053               	iorwf	(efgtoa@d+1)^0,w,c
  4320  000EE8  A4D8               	btfss	status,2,c
  4321  000EEA  EF79  F007         	goto	u4931
  4322  000EEE  EF7B  F007         	goto	u4930
  4323  000EF2                     u4931:
  4324  000EF2  EF8F  F007         	goto	l4056
  4325  000EF6                     u4930:
  4326  000EF6  0E67               	movlw	103
  4327  000EF8  185B               	xorwf	efgtoa@mode^0,w,c
  4328  000EFA  A4D8               	btfss	status,2,c
  4329  000EFC  EF82  F007         	goto	u4941
  4330  000F00  EF84  F007         	goto	u4940
  4331  000F04                     u4941:
  4332  000F04  EF8F  F007         	goto	l4056
  4333  000F08                     u4940:
  4334  000F08  BE4B               	btfsc	(efgtoa@ne+1)^0,7,c
  4335  000F0A  EF8B  F007         	goto	u4950
  4336  000F0E  EF89  F007         	goto	u4951
  4337  000F12                     u4951:
  4338  000F12  EF8F  F007         	goto	l4056
  4339  000F16                     u4950:
  4340  000F16                     
  4341                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  4342  000F16  4A46               	infsnz	efgtoa@t^0,f,c
  4343  000F18  2A47               	incf	(efgtoa@t+1)^0,f,c
  4344                           
  4345                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  4346  000F1A  EFD9  F007         	goto	l4084
  4347  000F1E                     l4056:
  4348                           
  4349                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  4350  000F1E  5048               	movf	efgtoa@pp^0,w,c
  4351  000F20  1049               	iorwf	(efgtoa@pp+1)^0,w,c
  4352  000F22  A4D8               	btfss	status,2,c
  4353  000F24  EF96  F007         	goto	u4961
  4354  000F28  EF98  F007         	goto	u4960
  4355  000F2C                     u4961:
  4356  000F2C  EFC2  F007         	goto	l4076
  4357  000F30                     u4960:
  4358  000F30  BE4B               	btfsc	(efgtoa@ne+1)^0,7,c
  4359  000F32  EF9F  F007         	goto	u4970
  4360  000F36  EF9D  F007         	goto	u4971
  4361  000F3A                     u4971:
  4362  000F3A  EFC2  F007         	goto	l4076
  4363  000F3E                     u4970:
  4364  000F3E                     
  4365                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  4366  000F3E  0E00               	movlw	low _dbuf
  4367  000F40  246C               	addwf	efgtoa@n^0,w,c
  4368  000F42  6ED9               	movwf	fsr2l,c
  4369  000F44  0E01               	movlw	high _dbuf
  4370  000F46  206D               	addwfc	(efgtoa@n+1)^0,w,c
  4371  000F48  6EDA               	movwf	fsr2h,c
  4372  000F4A  0E2E               	movlw	46
  4373  000F4C  6EDF               	movwf	indf2,c
  4374  000F4E  4A6C               	infsnz	efgtoa@n^0,f,c
  4375  000F50  2A6D               	incf	(efgtoa@n+1)^0,f,c
  4376  000F52                     
  4377                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  4378  000F52  0658               	decf	efgtoa@w^0,f,c
  4379  000F54  A0D8               	btfss	status,0,c
  4380  000F56  0659               	decf	(efgtoa@w+1)^0,f,c
  4381  000F58                     
  4382                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  4383  000F58  0E00               	movlw	0
  4384  000F5A  6E49               	movwf	(efgtoa@pp+1)^0,c
  4385  000F5C  0E01               	movlw	1
  4386  000F5E  6E48               	movwf	efgtoa@pp^0,c
  4387  000F60  EFC2  F007         	goto	l4076
  4388  000F64                     l4068:
  4389                           
  4390                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  4391  000F64  0E00               	movlw	low _dbuf
  4392  000F66  246C               	addwf	efgtoa@n^0,w,c
  4393  000F68  6ED9               	movwf	fsr2l,c
  4394  000F6A  0E01               	movlw	high _dbuf
  4395  000F6C  206D               	addwfc	(efgtoa@n+1)^0,w,c
  4396  000F6E  6EDA               	movwf	fsr2h,c
  4397  000F70  0E30               	movlw	48
  4398  000F72  6EDF               	movwf	indf2,c
  4399  000F74  4A6C               	infsnz	efgtoa@n^0,f,c
  4400  000F76  2A6D               	incf	(efgtoa@n+1)^0,f,c
  4401  000F78                     
  4402                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  4403  000F78  0658               	decf	efgtoa@w^0,f,c
  4404  000F7A  A0D8               	btfss	status,0,c
  4405  000F7C  0659               	decf	(efgtoa@w+1)^0,f,c
  4406  000F7E                     
  4407                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  4408  000F7E  0646               	decf	efgtoa@t^0,f,c
  4409  000F80  A0D8               	btfss	status,0,c
  4410  000F82  0647               	decf	(efgtoa@t+1)^0,f,c
  4411  000F84                     l4076:
  4412                           
  4413                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  4414  000F84  5046               	movf	efgtoa@t^0,w,c
  4415  000F86  1047               	iorwf	(efgtoa@t+1)^0,w,c
  4416  000F88  A4D8               	btfss	status,2,c
  4417  000F8A  EFC9  F007         	goto	u4981
  4418  000F8E  EFCB  F007         	goto	u4980
  4419  000F92                     u4981:
  4420  000F92  EFB2  F007         	goto	l4068
  4421  000F96                     u4980:
  4422  000F96                     
  4423                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  4424  000F96  0E00               	movlw	low _dbuf
  4425  000F98  246C               	addwf	efgtoa@n^0,w,c
  4426  000F9A  6ED9               	movwf	fsr2l,c
  4427  000F9C  0E01               	movlw	high _dbuf
  4428  000F9E  206D               	addwfc	(efgtoa@n+1)^0,w,c
  4429  000FA0  6EDA               	movwf	fsr2h,c
  4430  000FA2  5052               	movf	efgtoa@d^0,w,c
  4431  000FA4  0F30               	addlw	48
  4432  000FA6  6EDF               	movwf	indf2,c
  4433  000FA8  4A6C               	infsnz	efgtoa@n^0,f,c
  4434  000FAA  2A6D               	incf	(efgtoa@n+1)^0,f,c
  4435  000FAC                     
  4436                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  4437  000FAC  0658               	decf	efgtoa@w^0,f,c
  4438  000FAE  A0D8               	btfss	status,0,c
  4439  000FB0  0659               	decf	(efgtoa@w+1)^0,f,c
  4440  000FB2                     l4084:
  4441                           
  4442                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  4443  000FB2  C05C  F028         	movff	efgtoa@h,___flsub@b
  4444  000FB6  C05D  F029         	movff	efgtoa@h+1,___flsub@b+1
  4445  000FBA  C05E  F02A         	movff	efgtoa@h+2,___flsub@b+2
  4446  000FBE  C05F  F02B         	movff	efgtoa@h+3,___flsub@b+3
  4447  000FC2  C06E  F013         	movff	efgtoa@u,___flmul@a
  4448  000FC6  C06F  F014         	movff	efgtoa@u+1,___flmul@a+1
  4449  000FCA  C070  F015         	movff	efgtoa@u+2,___flmul@a+2
  4450  000FCE  C071  F016         	movff	efgtoa@u+3,___flmul@a+3
  4451  000FD2  C060  F00F         	movff	efgtoa@l,___flmul@b
  4452  000FD6  C061  F010         	movff	efgtoa@l+1,___flmul@b+1
  4453  000FDA  C062  F011         	movff	efgtoa@l+2,___flmul@b+2
  4454  000FDE  C063  F012         	movff	efgtoa@l+3,___flmul@b+3
  4455  000FE2  ECDD  F00E         	call	___flmul	;wreg free
  4456  000FE6  C00F  F02C         	movff	?___flmul,___flsub@a
  4457  000FEA  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  4458  000FEE  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  4459  000FF2  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  4460  000FF6  EC57  F020         	call	___flsub	;wreg free
  4461  000FFA  C028  F05C         	movff	?___flsub,efgtoa@h
  4462  000FFE  C029  F05D         	movff	?___flsub+1,efgtoa@h+1
  4463  001002  C02A  F05E         	movff	?___flsub+2,efgtoa@h+2
  4464  001006  C02B  F05F         	movff	?___flsub+3,efgtoa@h+3
  4465  00100A                     
  4466                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  4467  00100A  C06E  F001         	movff	efgtoa@u,___fldiv@b
  4468  00100E  C06F  F002         	movff	efgtoa@u+1,___fldiv@b+1
  4469  001012  C070  F003         	movff	efgtoa@u+2,___fldiv@b+2
  4470  001016  C071  F004         	movff	efgtoa@u+3,___fldiv@b+3
  4471  00101A  0E00               	movlw	0
  4472  00101C  6E05               	movwf	___fldiv@a^0,c
  4473  00101E  0E00               	movlw	0
  4474  001020  6E06               	movwf	(___fldiv@a+1)^0,c
  4475  001022  0E20               	movlw	32
  4476  001024  6E07               	movwf	(___fldiv@a+2)^0,c
  4477  001026  0E41               	movlw	65
  4478  001028  6E08               	movwf	(___fldiv@a+3)^0,c
  4479  00102A  ECF2  F010         	call	___fldiv	;wreg free
  4480  00102E  C001  F06E         	movff	?___fldiv,efgtoa@u
  4481  001032  C002  F06F         	movff	?___fldiv+1,efgtoa@u+1
  4482  001036  C003  F070         	movff	?___fldiv+2,efgtoa@u+2
  4483  00103A  C004  F071         	movff	?___fldiv+3,efgtoa@u+3
  4484  00103E                     
  4485                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  4486  00103E  064A               	decf	efgtoa@ne^0,f,c
  4487  001040  A0D8               	btfss	status,0,c
  4488  001042  064B               	decf	(efgtoa@ne+1)^0,f,c
  4489  001044                     
  4490                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 490:         ++i;
  4491  001044  4A64               	infsnz	efgtoa@i^0,f,c
  4492  001046  2A65               	incf	(efgtoa@i+1)^0,f,c
  4493  001048                     l4092:
  4494                           
  4495                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4496  001048  504C               	movf	efgtoa@m^0,w,c
  4497  00104A  5C64               	subwf	efgtoa@i^0,w,c
  4498  00104C  5065               	movf	(efgtoa@i+1)^0,w,c
  4499  00104E  0A80               	xorlw	128
  4500  001050  6E3B               	movwf	??_efgtoa^0,c
  4501  001052  504D               	movf	(efgtoa@m+1)^0,w,c
  4502  001054  0A80               	xorlw	128
  4503  001056  583B               	subwfb	??_efgtoa^0,w,c
  4504  001058  B0D8               	btfsc	status,0,c
  4505  00105A  EF31  F008         	goto	u4991
  4506  00105E  EF33  F008         	goto	u4990
  4507  001062                     u4991:
  4508  001062  EF41  F008         	goto	l4096
  4509  001066                     u4990:
  4510  001066  BE6D               	btfsc	(efgtoa@n+1)^0,7,c
  4511  001068  EF3F  F008         	goto	u5001
  4512  00106C  506D               	movf	(efgtoa@n+1)^0,w,c
  4513  00106E  E109               	bnz	u5000
  4514  001070  0E4B               	movlw	75
  4515  001072  5C6C               	subwf	efgtoa@n^0,w,c
  4516  001074  A0D8               	btfss	status,0,c
  4517  001076  EF3F  F008         	goto	u5001
  4518  00107A  EF41  F008         	goto	u5000
  4519  00107E                     u5001:
  4520  00107E  EF39  F007         	goto	l4044
  4521  001082                     u5000:
  4522  001082                     l4096:
  4523                           
  4524                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  4525  001082  5048               	movf	efgtoa@pp^0,w,c
  4526  001084  1049               	iorwf	(efgtoa@pp+1)^0,w,c
  4527  001086  A4D8               	btfss	status,2,c
  4528  001088  EF48  F008         	goto	u5011
  4529  00108C  EF4A  F008         	goto	u5010
  4530  001090                     u5011:
  4531  001090  EF5B  F008         	goto	l4104
  4532  001094                     u5010:
  4533  001094  A87E               	btfss	_flags^0,4,c
  4534  001096  EF4F  F008         	goto	u5021
  4535  00109A  EF51  F008         	goto	u5020
  4536  00109E                     u5021:
  4537  00109E  EF5B  F008         	goto	l4104
  4538  0010A2                     u5020:
  4539  0010A2                     
  4540                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  4541  0010A2  0E00               	movlw	low _dbuf
  4542  0010A4  246C               	addwf	efgtoa@n^0,w,c
  4543  0010A6  6ED9               	movwf	fsr2l,c
  4544  0010A8  0E01               	movlw	high _dbuf
  4545  0010AA  206D               	addwfc	(efgtoa@n+1)^0,w,c
  4546  0010AC  6EDA               	movwf	fsr2h,c
  4547  0010AE  0E2E               	movlw	46
  4548  0010B0  6EDF               	movwf	indf2,c
  4549  0010B2  4A6C               	infsnz	efgtoa@n^0,f,c
  4550  0010B4  2A6D               	incf	(efgtoa@n+1)^0,f,c
  4551  0010B6                     l4104:
  4552                           
  4553                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  4554  0010B6  0E00               	movlw	low _dbuf
  4555  0010B8  246C               	addwf	efgtoa@n^0,w,c
  4556  0010BA  6ED9               	movwf	fsr2l,c
  4557  0010BC  0E01               	movlw	high _dbuf
  4558  0010BE  206D               	addwfc	(efgtoa@n+1)^0,w,c
  4559  0010C0  6EDA               	movwf	fsr2h,c
  4560  0010C2  0E00               	movlw	0
  4561  0010C4  6EDF               	movwf	indf2,c
  4562  0010C6                     
  4563                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  4564  0010C6  0E65               	movlw	101
  4565  0010C8  185A               	xorwf	efgtoa@nmode^0,w,c
  4566  0010CA  A4D8               	btfss	status,2,c
  4567  0010CC  EF6A  F008         	goto	u5031
  4568  0010D0  EF6C  F008         	goto	u5030
  4569  0010D4                     u5031:
  4570  0010D4  EFDE  F003         	goto	l3906
  4571  0010D8                     u5030:
  4572  0010D8                     
  4573                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  4574  0010D8  0E00               	movlw	0
  4575  0010DA  6E65               	movwf	(efgtoa@i+1)^0,c
  4576  0010DC  0E4F               	movlw	79
  4577  0010DE  6E64               	movwf	efgtoa@i^0,c
  4578  0010E0                     
  4579                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  4580  0010E0  0E00               	movlw	low _dbuf
  4581  0010E2  2464               	addwf	efgtoa@i^0,w,c
  4582  0010E4  6ED9               	movwf	fsr2l,c
  4583  0010E6  0E01               	movlw	high _dbuf
  4584  0010E8  2065               	addwfc	(efgtoa@i+1)^0,w,c
  4585  0010EA  6EDA               	movwf	fsr2h,c
  4586  0010EC  0E00               	movlw	0
  4587  0010EE  6EDF               	movwf	indf2,c
  4588  0010F0                     
  4589                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  4590  0010F0  0E00               	movlw	0
  4591  0010F2  6E55               	movwf	(efgtoa@sign+1)^0,c
  4592  0010F4  0E00               	movlw	0
  4593  0010F6  6E54               	movwf	efgtoa@sign^0,c
  4594  0010F8                     
  4595                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  4596  0010F8  BE6B               	btfsc	(efgtoa@e+1)^0,7,c
  4597  0010FA  EF83  F008         	goto	u5040
  4598  0010FE  EF81  F008         	goto	u5041
  4599  001102                     u5041:
  4600  001102  EF8B  F008         	goto	l4120
  4601  001106                     u5040:
  4602  001106                     
  4603                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  4604  001106  0E00               	movlw	0
  4605  001108  6E55               	movwf	(efgtoa@sign+1)^0,c
  4606  00110A  0E01               	movlw	1
  4607  00110C  6E54               	movwf	efgtoa@sign^0,c
  4608  00110E                     
  4609                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  4610  00110E  6C6A               	negf	efgtoa@e^0,c
  4611  001110  1E6B               	comf	(efgtoa@e+1)^0,f,c
  4612  001112  B0D8               	btfsc	status,0,c
  4613  001114  2A6B               	incf	(efgtoa@e+1)^0,f,c
  4614  001116                     l4120:
  4615                           
  4616                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  4617  001116  0E00               	movlw	0
  4618  001118  6E57               	movwf	(efgtoa@p+1)^0,c
  4619  00111A  0E02               	movlw	2
  4620  00111C  6E56               	movwf	efgtoa@p^0,c
  4621                           
  4622                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  4623  00111E  EFBB  F008         	goto	l4132
  4624  001122                     l4122:
  4625                           
  4626                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  4627  001122  0664               	decf	efgtoa@i^0,f,c
  4628  001124  A0D8               	btfss	status,0,c
  4629  001126  0665               	decf	(efgtoa@i+1)^0,f,c
  4630  001128                     
  4631                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  4632  001128  0E00               	movlw	low _dbuf
  4633  00112A  2464               	addwf	efgtoa@i^0,w,c
  4634  00112C  6ED9               	movwf	fsr2l,c
  4635  00112E  0E01               	movlw	high _dbuf
  4636  001130  2065               	addwfc	(efgtoa@i+1)^0,w,c
  4637  001132  6EDA               	movwf	fsr2h,c
  4638  001134  C06A  F001         	movff	efgtoa@e,___awmod@dividend
  4639  001138  C06B  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  4640  00113C  0E00               	movlw	0
  4641  00113E  6E04               	movwf	(___awmod@divisor+1)^0,c
  4642  001140  0E0A               	movlw	10
  4643  001142  6E03               	movwf	___awmod@divisor^0,c
  4644  001144  ECB7  F01D         	call	___awmod	;wreg free
  4645  001148  5001               	movf	?___awmod^0,w,c
  4646  00114A  0F30               	addlw	48
  4647  00114C  6EDF               	movwf	indf2,c
  4648  00114E                     
  4649                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  4650  00114E  C06A  F001         	movff	efgtoa@e,___awdiv@dividend
  4651  001152  C06B  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  4652  001156  0E00               	movlw	0
  4653  001158  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4654  00115A  0E0A               	movlw	10
  4655  00115C  6E03               	movwf	___awdiv@divisor^0,c
  4656  00115E  ECF4  F01C         	call	___awdiv	;wreg free
  4657  001162  C001  F06A         	movff	?___awdiv,efgtoa@e
  4658  001166  C002  F06B         	movff	?___awdiv+1,efgtoa@e+1
  4659  00116A                     
  4660                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  4661  00116A  0656               	decf	efgtoa@p^0,f,c
  4662  00116C  A0D8               	btfss	status,0,c
  4663  00116E  0657               	decf	(efgtoa@p+1)^0,f,c
  4664  001170                     
  4665                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  4666  001170  0658               	decf	efgtoa@w^0,f,c
  4667  001172  A0D8               	btfss	status,0,c
  4668  001174  0659               	decf	(efgtoa@w+1)^0,f,c
  4669  001176                     l4132:
  4670                           
  4671                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  4672  001176  506A               	movf	efgtoa@e^0,w,c
  4673  001178  106B               	iorwf	(efgtoa@e+1)^0,w,c
  4674  00117A  A4D8               	btfss	status,2,c
  4675  00117C  EFC2  F008         	goto	u5051
  4676  001180  EFC4  F008         	goto	u5050
  4677  001184                     u5051:
  4678  001184  EF91  F008         	goto	l4122
  4679  001188                     u5050:
  4680  001188  BE57               	btfsc	(efgtoa@p+1)^0,7,c
  4681  00118A  EFD1  F008         	goto	u5060
  4682  00118E  5057               	movf	(efgtoa@p+1)^0,w,c
  4683  001190  E106               	bnz	u5061
  4684  001192  0456               	decf	efgtoa@p^0,w,c
  4685  001194  B0D8               	btfsc	status,0,c
  4686  001196  EFCF  F008         	goto	u5061
  4687  00119A  EFD1  F008         	goto	u5060
  4688  00119E                     u5061:
  4689  00119E  EF91  F008         	goto	l4122
  4690  0011A2                     u5060:
  4691  0011A2                     
  4692                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 514:         --i;
  4693  0011A2  0664               	decf	efgtoa@i^0,f,c
  4694  0011A4  A0D8               	btfss	status,0,c
  4695  0011A6  0665               	decf	(efgtoa@i+1)^0,f,c
  4696  0011A8                     
  4697                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  4698  0011A8  5054               	movf	efgtoa@sign^0,w,c
  4699  0011AA  1055               	iorwf	(efgtoa@sign+1)^0,w,c
  4700  0011AC  A4D8               	btfss	status,2,c
  4701  0011AE  EFDB  F008         	goto	u5071
  4702  0011B2  EFDD  F008         	goto	u5070
  4703  0011B6                     u5071:
  4704  0011B6  EFE3  F008         	goto	l4142
  4705  0011BA                     u5070:
  4706  0011BA  0E00               	movlw	0
  4707  0011BC  6E43               	movwf	(_efgtoa$1165+1)^0,c
  4708  0011BE  0E2B               	movlw	43
  4709  0011C0  6E42               	movwf	_efgtoa$1165^0,c
  4710  0011C2  EFE7  F008         	goto	l4144
  4711  0011C6                     l4142:
  4712  0011C6  0E00               	movlw	0
  4713  0011C8  6E43               	movwf	(_efgtoa$1165+1)^0,c
  4714  0011CA  0E2D               	movlw	45
  4715  0011CC  6E42               	movwf	_efgtoa$1165^0,c
  4716  0011CE                     l4144:
  4717  0011CE  0E00               	movlw	low _dbuf
  4718  0011D0  2464               	addwf	efgtoa@i^0,w,c
  4719  0011D2  6ED9               	movwf	fsr2l,c
  4720  0011D4  0E01               	movlw	high _dbuf
  4721  0011D6  2065               	addwfc	(efgtoa@i+1)^0,w,c
  4722  0011D8  6EDA               	movwf	fsr2h,c
  4723  0011DA  C042  FFDF         	movff	_efgtoa$1165,indf2
  4724  0011DE                     
  4725                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 516:         --w;
  4726  0011DE  0658               	decf	efgtoa@w^0,f,c
  4727  0011E0  A0D8               	btfss	status,0,c
  4728  0011E2  0659               	decf	(efgtoa@w+1)^0,f,c
  4729  0011E4                     
  4730                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 517:         --i;
  4731  0011E4  0664               	decf	efgtoa@i^0,f,c
  4732  0011E6  A0D8               	btfss	status,0,c
  4733  0011E8  0665               	decf	(efgtoa@i+1)^0,f,c
  4734  0011EA  0EBF               	movlw	191
  4735  0011EC  6E3B               	movwf	??_efgtoa^0,c
  4736  0011EE  0EFF               	movlw	255
  4737  0011F0  6E3C               	movwf	(??_efgtoa+1)^0,c
  4738  0011F2  503A               	movf	efgtoa@c^0,w,c
  4739  0011F4  6E3D               	movwf	(??_efgtoa+2)^0,c
  4740  0011F6  6A3E               	clrf	(??_efgtoa+3)^0,c
  4741  0011F8  503B               	movf	??_efgtoa^0,w,c
  4742  0011FA  263D               	addwf	(??_efgtoa+2)^0,f,c
  4743  0011FC  503C               	movf	(??_efgtoa+1)^0,w,c
  4744  0011FE  223E               	addwfc	(??_efgtoa+3)^0,f,c
  4745  001200  503E               	movf	(??_efgtoa+3)^0,w,c
  4746  001202  E109               	bnz	u5080
  4747  001204  0E1A               	movlw	26
  4748  001206  5C3D               	subwf	(??_efgtoa+2)^0,w,c
  4749  001208  A0D8               	btfss	status,0,c
  4750  00120A  EF09  F009         	goto	u5081
  4751  00120E  EF0B  F009         	goto	u5080
  4752  001212                     u5081:
  4753  001212  EF11  F009         	goto	l4156
  4754  001216                     u5080:
  4755  001216  0E00               	movlw	0
  4756  001218  6E45               	movwf	(_efgtoa$1166+1)^0,c
  4757  00121A  0E65               	movlw	101
  4758  00121C  6E44               	movwf	_efgtoa$1166^0,c
  4759  00121E  EF15  F009         	goto	l4158
  4760  001222                     l4156:
  4761  001222  0E00               	movlw	0
  4762  001224  6E45               	movwf	(_efgtoa$1166+1)^0,c
  4763  001226  0E45               	movlw	69
  4764  001228  6E44               	movwf	_efgtoa$1166^0,c
  4765  00122A                     l4158:
  4766  00122A  0E00               	movlw	low _dbuf
  4767  00122C  2464               	addwf	efgtoa@i^0,w,c
  4768  00122E  6ED9               	movwf	fsr2l,c
  4769  001230  0E01               	movlw	high _dbuf
  4770  001232  2065               	addwfc	(efgtoa@i+1)^0,w,c
  4771  001234  6EDA               	movwf	fsr2h,c
  4772  001236  C044  FFDF         	movff	_efgtoa$1166,indf2
  4773  00123A                     
  4774                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 519:         --w;
  4775  00123A  0658               	decf	efgtoa@w^0,f,c
  4776  00123C  A0D8               	btfss	status,0,c
  4777  00123E  0659               	decf	(efgtoa@w+1)^0,f,c
  4778  001240                     
  4779                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  4780  001240  0E00               	movlw	low _dbuf
  4781  001242  246C               	addwf	efgtoa@n^0,w,c
  4782  001244  6E01               	movwf	strcpy@dest^0,c
  4783  001246  0E01               	movlw	high _dbuf
  4784  001248  206D               	addwfc	(efgtoa@n+1)^0,w,c
  4785  00124A  6E02               	movwf	(strcpy@dest+1)^0,c
  4786  00124C  0E00               	movlw	low _dbuf
  4787  00124E  2464               	addwf	efgtoa@i^0,w,c
  4788  001250  6E03               	movwf	strcpy@src^0,c
  4789  001252  0E01               	movlw	high _dbuf
  4790  001254  2065               	addwfc	(efgtoa@i+1)^0,w,c
  4791  001256  6E04               	movwf	(strcpy@src+1)^0,c
  4792  001258  ECB4  F01F         	call	_strcpy	;wreg free
  4793  00125C  EFDE  F003         	goto	l3906
  4794  001260                     l916:
  4795  001260  0012               	return		;funcret
  4796  001262                     __end_of_efgtoa:
  4797                           	callstack 0
  4798                           
  4799 ;; *************** function _tolower *****************
  4800 ;; Defined at:
  4801 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\tolower.c"
  4802 ;; Parameters:    Size  Location     Type
  4803 ;;  c               2    6[COMRAM] int 
  4804 ;; Auto vars:     Size  Location     Type
  4805 ;;		None
  4806 ;; Return value:  Size  Location     Type
  4807 ;;                  2    6[COMRAM] int 
  4808 ;; Registers used:
  4809 ;;		wreg, status,2, status,0
  4810 ;; Tracked objects:
  4811 ;;		On entry : 0/0
  4812 ;;		On exit  : 0/0
  4813 ;;		Unchanged: 0/0
  4814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4815 ;;      Params:         2       0       0       0       0       0       0
  4816 ;;      Locals:         0       0       0       0       0       0       0
  4817 ;;      Temps:          4       0       0       0       0       0       0
  4818 ;;      Totals:         6       0       0       0       0       0       0
  4819 ;;Total ram usage:        6 bytes
  4820 ;; Hardware stack levels used: 1
  4821 ;; Hardware stack levels required when called: 1
  4822 ;; This function calls:
  4823 ;;		_isupper
  4824 ;; This function is called by:
  4825 ;;		_efgtoa
  4826 ;;		_vfpfcnvrt
  4827 ;; This function uses a non-reentrant model
  4828 ;;
  4829                           
  4830                           	psect	text10
  4831  004068                     __ptext10:
  4832                           	callstack 0
  4833  004068                     _tolower:
  4834                           	callstack 25
  4835  004068  0EBF               	movlw	191
  4836  00406A  6E09               	movwf	??_tolower^0,c
  4837  00406C  0EFF               	movlw	255
  4838  00406E  6E0A               	movwf	(??_tolower+1)^0,c
  4839  004070  C007  F00B         	movff	tolower@c,??_tolower+2
  4840  004074  C008  F00C         	movff	tolower@c+1,??_tolower+3
  4841  004078  5009               	movf	??_tolower^0,w,c
  4842  00407A  260B               	addwf	(??_tolower+2)^0,f,c
  4843  00407C  500A               	movf	(??_tolower+1)^0,w,c
  4844  00407E  220C               	addwfc	(??_tolower+3)^0,f,c
  4845  004080  500C               	movf	(??_tolower+3)^0,w,c
  4846  004082  E107               	bnz	u4301
  4847  004084  0E1A               	movlw	26
  4848  004086  5C0B               	subwf	(??_tolower+2)^0,w,c
  4849  004088  B0D8               	btfsc	status,0,c
  4850  00408A  EF49  F020         	goto	u4301
  4851  00408E  EF4B  F020         	goto	u4300
  4852  004092                     u4301:
  4853  004092  EF52  F020         	goto	l1162
  4854  004096                     u4300:
  4855  004096  0E20               	movlw	32
  4856  004098  1007               	iorwf	tolower@c^0,w,c
  4857  00409A  6E07               	movwf	?_tolower^0,c
  4858  00409C  5008               	movf	(tolower@c+1)^0,w,c
  4859  00409E  6E08               	movwf	(?_tolower+1)^0,c
  4860  0040A0  EF56  F020         	goto	l1165
  4861  0040A4                     l1162:
  4862  0040A4  C007  F007         	movff	tolower@c,?_tolower
  4863  0040A8  C008  F008         	movff	tolower@c+1,?_tolower+1
  4864  0040AC                     l1165:
  4865  0040AC  0012               	return		;funcret
  4866  0040AE                     __end_of_tolower:
  4867                           	callstack 0
  4868                           
  4869 ;; *************** function _isupper *****************
  4870 ;; Defined at:
  4871 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isupper.c"
  4872 ;; Parameters:    Size  Location     Type
  4873 ;;  c               2    0[COMRAM] int 
  4874 ;; Auto vars:     Size  Location     Type
  4875 ;;		None
  4876 ;; Return value:  Size  Location     Type
  4877 ;;                  2    0[COMRAM] int 
  4878 ;; Registers used:
  4879 ;;		wreg, status,2, status,0
  4880 ;; Tracked objects:
  4881 ;;		On entry : 0/0
  4882 ;;		On exit  : 0/0
  4883 ;;		Unchanged: 0/0
  4884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4885 ;;      Params:         2       0       0       0       0       0       0
  4886 ;;      Locals:         0       0       0       0       0       0       0
  4887 ;;      Temps:          4       0       0       0       0       0       0
  4888 ;;      Totals:         6       0       0       0       0       0       0
  4889 ;;Total ram usage:        6 bytes
  4890 ;; Hardware stack levels used: 1
  4891 ;; This function calls:
  4892 ;;		Nothing
  4893 ;; This function is called by:
  4894 ;;		_efgtoa
  4895 ;;		_vfpfcnvrt
  4896 ;;		_tolower
  4897 ;; This function uses a non-reentrant model
  4898 ;;
  4899                           
  4900                           	psect	text11
  4901  0041B2                     __ptext11:
  4902                           	callstack 0
  4903  0041B2                     _isupper:
  4904                           	callstack 25
  4905  0041B2  0EBF               	movlw	191
  4906  0041B4  6E03               	movwf	??_isupper^0,c
  4907  0041B6  0EFF               	movlw	255
  4908  0041B8  6E04               	movwf	(??_isupper+1)^0,c
  4909  0041BA  C001  F005         	movff	isupper@c,??_isupper+2
  4910  0041BE  C002  F006         	movff	isupper@c+1,??_isupper+3
  4911  0041C2  5003               	movf	??_isupper^0,w,c
  4912  0041C4  2605               	addwf	(??_isupper+2)^0,f,c
  4913  0041C6  5004               	movf	(??_isupper+1)^0,w,c
  4914  0041C8  2206               	addwfc	(??_isupper+3)^0,f,c
  4915  0041CA  5006               	movf	(??_isupper+3)^0,w,c
  4916  0041CC  E10A               	bnz	u3310
  4917  0041CE  0E1A               	movlw	26
  4918  0041D0  5C05               	subwf	(??_isupper+2)^0,w,c
  4919  0041D2  A0D8               	btfss	status,0,c
  4920  0041D4  EFEE  F020         	goto	u3311
  4921  0041D8  EFF1  F020         	goto	u3310
  4922  0041DC                     u3311:
  4923  0041DC  0E01               	movlw	1
  4924  0041DE  EFF2  F020         	goto	u3320
  4925  0041E2                     u3310:
  4926  0041E2  0E00               	movlw	0
  4927  0041E4                     u3320:
  4928  0041E4  6E01               	movwf	?_isupper^0,c
  4929  0041E6  6A02               	clrf	(?_isupper+1)^0,c
  4930  0041E8  0012               	return		;funcret
  4931  0041EA                     __end_of_isupper:
  4932                           	callstack 0
  4933                           
  4934 ;; *************** function _strcpy *****************
  4935 ;; Defined at:
  4936 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strcpy.c"
  4937 ;; Parameters:    Size  Location     Type
  4938 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4939 ;;		 -> dbuf(80), 
  4940 ;;  src             2    2[COMRAM] PTR const unsigned char 
  4941 ;;		 -> STR_20(4), STR_19(4), STR_16(4), STR_15(4), 
  4942 ;;		 -> dbuf(80), 
  4943 ;; Auto vars:     Size  Location     Type
  4944 ;;  d               2    8[COMRAM] PTR unsigned char 
  4945 ;;		 -> dbuf(80), 
  4946 ;;  s               2    6[COMRAM] PTR const unsigned char 
  4947 ;;		 -> STR_20(4), STR_19(4), STR_16(4), STR_15(4), 
  4948 ;;		 -> dbuf(80), 
  4949 ;; Return value:  Size  Location     Type
  4950 ;;                  2    0[COMRAM] PTR unsigned char 
  4951 ;; Registers used:
  4952 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4953 ;; Tracked objects:
  4954 ;;		On entry : 0/0
  4955 ;;		On exit  : 0/0
  4956 ;;		Unchanged: 0/0
  4957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4958 ;;      Params:         4       0       0       0       0       0       0
  4959 ;;      Locals:         4       0       0       0       0       0       0
  4960 ;;      Temps:          2       0       0       0       0       0       0
  4961 ;;      Totals:        10       0       0       0       0       0       0
  4962 ;;Total ram usage:       10 bytes
  4963 ;; Hardware stack levels used: 1
  4964 ;; This function calls:
  4965 ;;		Nothing
  4966 ;; This function is called by:
  4967 ;;		_efgtoa
  4968 ;; This function uses a non-reentrant model
  4969 ;;
  4970                           
  4971                           	psect	text12
  4972  003F68                     __ptext12:
  4973                           	callstack 0
  4974  003F68                     _strcpy:
  4975                           	callstack 25
  4976  003F68  C003  F007         	movff	strcpy@src,strcpy@s
  4977  003F6C  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  4978  003F70  C001  F009         	movff	strcpy@dest,strcpy@d
  4979  003F74  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  4980  003F78                     l3732:
  4981  003F78  5007               	movf	strcpy@s^0,w,c
  4982  003F7A  6E05               	movwf	??_strcpy^0,c
  4983  003F7C  5008               	movf	(strcpy@s+1)^0,w,c
  4984  003F7E  6E06               	movwf	(??_strcpy+1)^0,c
  4985  003F80  4A07               	infsnz	strcpy@s^0,f,c
  4986  003F82  2A08               	incf	(strcpy@s+1)^0,f,c
  4987  003F84  C005  FFF6         	movff	??_strcpy,tblptrl
  4988  003F88  C006  FFF7         	movff	??_strcpy+1,tblptrh
  4989  003F8C  6AF8               	clrf	tblptru,c
  4990  003F8E  C009  FFD9         	movff	strcpy@d,fsr2l
  4991  003F92  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  4992  003F96  4A09               	infsnz	strcpy@d^0,f,c
  4993  003F98  2A0A               	incf	(strcpy@d+1)^0,f,c
  4994  003F9A  0E05               	movlw	(high __ramtop+-1)
  4995  003F9C  64F7               	cpfsgt	tblptrh,c
  4996  003F9E  D003               	bra	u4287
  4997  003FA0  0008               	tblrd		*
  4998  003FA2  50F5               	movf	tablat,w,c
  4999  003FA4  D005               	bra	u4280
  5000  003FA6                     u4287:
  5001  003FA6  CFF6 FFE1          	movff	tblptrl,fsr1l
  5002  003FAA  CFF7 FFE2          	movff	tblptrh,fsr1h
  5003  003FAE  50E7               	movf	indf1,w,c
  5004  003FB0                     u4280:
  5005  003FB0  6EDF               	movwf	indf2,c
  5006  003FB2  50DF               	movf	indf2,w,c
  5007  003FB4  A4D8               	btfss	status,2,c
  5008  003FB6  EFDF  F01F         	goto	u4291
  5009  003FBA  EFE1  F01F         	goto	u4290
  5010  003FBE                     u4291:
  5011  003FBE  EFBC  F01F         	goto	l3732
  5012  003FC2                     u4290:
  5013  003FC2  0012               	return		;funcret
  5014  003FC4                     __end_of_strcpy:
  5015                           	callstack 0
  5016                           
  5017 ;; *************** function _floorf *****************
  5018 ;; Defined at:
  5019 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\floorf.c"
  5020 ;; Parameters:    Size  Location     Type
  5021 ;;  x               4   25[COMRAM] float 
  5022 ;; Auto vars:     Size  Location     Type
  5023 ;;  u               4   41[COMRAM] struct .
  5024 ;;  m               4   35[COMRAM] unsigned long 
  5025 ;;  e               2   39[COMRAM] int 
  5026 ;; Return value:  Size  Location     Type
  5027 ;;                  4   25[COMRAM] float 
  5028 ;; Registers used:
  5029 ;;		wreg, status,2, status,0
  5030 ;; Tracked objects:
  5031 ;;		On entry : 0/0
  5032 ;;		On exit  : 0/0
  5033 ;;		Unchanged: 0/0
  5034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5035 ;;      Params:         4       0       0       0       0       0       0
  5036 ;;      Locals:        10       0       0       0       0       0       0
  5037 ;;      Temps:          6       0       0       0       0       0       0
  5038 ;;      Totals:        20       0       0       0       0       0       0
  5039 ;;Total ram usage:       20 bytes
  5040 ;; Hardware stack levels used: 1
  5041 ;; This function calls:
  5042 ;;		Nothing
  5043 ;; This function is called by:
  5044 ;;		_efgtoa
  5045 ;; This function uses a non-reentrant model
  5046 ;;
  5047                           
  5048                           	psect	text13
  5049  002B4A                     __ptext13:
  5050                           	callstack 0
  5051  002B4A                     _floorf:
  5052                           	callstack 25
  5053  002B4A  C080  F02A         	movff	floorf@F526,floorf@u
  5054  002B4E  C081  F02B         	movff	floorf@F526+1,floorf@u+1
  5055  002B52  C082  F02C         	movff	floorf@F526+2,floorf@u+2
  5056  002B56  C083  F02D         	movff	floorf@F526+3,floorf@u+3
  5057  002B5A  C01A  F02A         	movff	floorf@x,floorf@u
  5058  002B5E  C01B  F02B         	movff	floorf@x+1,floorf@u+1
  5059  002B62  C01C  F02C         	movff	floorf@x+2,floorf@u+2
  5060  002B66  C01D  F02D         	movff	floorf@x+3,floorf@u+3
  5061  002B6A  0E81               	movlw	129
  5062  002B6C  6E1E               	movwf	??_floorf^0,c
  5063  002B6E  0EFF               	movlw	255
  5064  002B70  6E1F               	movwf	(??_floorf+1)^0,c
  5065  002B72  C02A  F020         	movff	floorf@u,??_floorf+2
  5066  002B76  C02B  F021         	movff	floorf@u+1,??_floorf+3
  5067  002B7A  C02C  F022         	movff	floorf@u+2,??_floorf+4
  5068  002B7E  C02D  F023         	movff	floorf@u+3,??_floorf+5
  5069  002B82  0E18               	movlw	24
  5070  002B84  EFC9  F015         	goto	u4310
  5071  002B88                     u4315:
  5072  002B88  90D8               	bcf	status,0,c
  5073  002B8A  3223               	rrcf	(??_floorf+5)^0,f,c
  5074  002B8C  3222               	rrcf	(??_floorf+4)^0,f,c
  5075  002B8E  3221               	rrcf	(??_floorf+3)^0,f,c
  5076  002B90  3220               	rrcf	(??_floorf+2)^0,f,c
  5077  002B92                     u4310:
  5078  002B92  2EE8               	decfsz	wreg,f,c
  5079  002B94  EFC4  F015         	goto	u4315
  5080  002B98  5020               	movf	(??_floorf+2)^0,w,c
  5081  002B9A  241E               	addwf	??_floorf^0,w,c
  5082  002B9C  6E28               	movwf	floorf@e^0,c
  5083  002B9E  0E00               	movlw	0
  5084  002BA0  201F               	addwfc	(??_floorf+1)^0,w,c
  5085  002BA2  6E29               	movwf	(floorf@e+1)^0,c
  5086  002BA4  BE29               	btfsc	(floorf@e+1)^0,7,c
  5087  002BA6  EFDE  F015         	goto	u4321
  5088  002BAA  5029               	movf	(floorf@e+1)^0,w,c
  5089  002BAC  E109               	bnz	u4320
  5090  002BAE  0E17               	movlw	23
  5091  002BB0  5C28               	subwf	floorf@e^0,w,c
  5092  002BB2  A0D8               	btfss	status,0,c
  5093  002BB4  EFDE  F015         	goto	u4321
  5094  002BB8  EFE0  F015         	goto	u4320
  5095  002BBC                     u4321:
  5096  002BBC  EFEA  F015         	goto	l3750
  5097  002BC0                     u4320:
  5098  002BC0                     l3748:
  5099  002BC0  C01A  F01A         	movff	floorf@x,?_floorf
  5100  002BC4  C01B  F01B         	movff	floorf@x+1,?_floorf+1
  5101  002BC8  C01C  F01C         	movff	floorf@x+2,?_floorf+2
  5102  002BCC  C01D  F01D         	movff	floorf@x+3,?_floorf+3
  5103  002BD0  EFAD  F016         	goto	l1086
  5104  002BD4                     l3750:
  5105  002BD4  BE29               	btfsc	(floorf@e+1)^0,7,c
  5106  002BD6  EFEF  F015         	goto	u4331
  5107  002BDA  EFF1  F015         	goto	u4330
  5108  002BDE                     u4331:
  5109  002BDE  EF61  F016         	goto	l3760
  5110  002BE2                     u4330:
  5111  002BE2  C028  F01E         	movff	floorf@e,??_floorf
  5112  002BE6  0EFF               	movlw	255
  5113  002BE8  6E1F               	movwf	(??_floorf+1)^0,c
  5114  002BEA  0EFF               	movlw	255
  5115  002BEC  6E20               	movwf	(??_floorf+2)^0,c
  5116  002BEE  0E7F               	movlw	127
  5117  002BF0  6E21               	movwf	(??_floorf+3)^0,c
  5118  002BF2  0E00               	movlw	0
  5119  002BF4  6E22               	movwf	(??_floorf+4)^0,c
  5120  002BF6                     u4345:
  5121  002BF6  661E               	tstfsz	??_floorf^0,c
  5122  002BF8  EF00  F016         	goto	u4346
  5123  002BFC  EF08  F016         	goto	u4347
  5124  002C00                     u4346:
  5125  002C00  3422               	rlcf	(??_floorf+4)^0,w,c
  5126  002C02  3222               	rrcf	(??_floorf+4)^0,f,c
  5127  002C04  3221               	rrcf	(??_floorf+3)^0,f,c
  5128  002C06  3220               	rrcf	(??_floorf+2)^0,f,c
  5129  002C08  321F               	rrcf	(??_floorf+1)^0,f,c
  5130  002C0A  2E1E               	decfsz	??_floorf^0,f,c
  5131  002C0C  EFFB  F015         	goto	u4345
  5132  002C10                     u4347:
  5133  002C10  C01F  F024         	movff	??_floorf+1,floorf@m
  5134  002C14  C020  F025         	movff	??_floorf+2,floorf@m+1
  5135  002C18  C021  F026         	movff	??_floorf+3,floorf@m+2
  5136  002C1C  C022  F027         	movff	??_floorf+4,floorf@m+3
  5137  002C20  5024               	movf	floorf@m^0,w,c
  5138  002C22  142A               	andwf	floorf@u^0,w,c
  5139  002C24  6E1E               	movwf	??_floorf^0,c
  5140  002C26  5025               	movf	(floorf@m+1)^0,w,c
  5141  002C28  142B               	andwf	(floorf@u+1)^0,w,c
  5142  002C2A  6E1F               	movwf	(??_floorf+1)^0,c
  5143  002C2C  5026               	movf	(floorf@m+2)^0,w,c
  5144  002C2E  142C               	andwf	(floorf@u+2)^0,w,c
  5145  002C30  6E20               	movwf	(??_floorf+2)^0,c
  5146  002C32  5027               	movf	(floorf@m+3)^0,w,c
  5147  002C34  142D               	andwf	(floorf@u+3)^0,w,c
  5148  002C36  6E21               	movwf	(??_floorf+3)^0,c
  5149  002C38  501E               	movf	??_floorf^0,w,c
  5150  002C3A  101F               	iorwf	(??_floorf+1)^0,w,c
  5151  002C3C  1020               	iorwf	(??_floorf+2)^0,w,c
  5152  002C3E  1021               	iorwf	(??_floorf+3)^0,w,c
  5153  002C40  A4D8               	btfss	status,2,c
  5154  002C42  EF25  F016         	goto	u4351
  5155  002C46  EF27  F016         	goto	u4350
  5156  002C4A                     u4351:
  5157  002C4A  EF29  F016         	goto	l3756
  5158  002C4E                     u4350:
  5159  002C4E  EFE0  F015         	goto	l3748
  5160  002C52                     l3756:
  5161  002C52  C02A  F01E         	movff	floorf@u,??_floorf
  5162  002C56  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  5163  002C5A  C02C  F020         	movff	floorf@u+2,??_floorf+2
  5164  002C5E  C02D  F021         	movff	floorf@u+3,??_floorf+3
  5165  002C62  0E20               	movlw	32
  5166  002C64  EF39  F016         	goto	u4360
  5167  002C68                     u4365:
  5168  002C68  90D8               	bcf	status,0,c
  5169  002C6A  3221               	rrcf	(??_floorf+3)^0,f,c
  5170  002C6C  3220               	rrcf	(??_floorf+2)^0,f,c
  5171  002C6E  321F               	rrcf	(??_floorf+1)^0,f,c
  5172  002C70  321E               	rrcf	??_floorf^0,f,c
  5173  002C72                     u4360:
  5174  002C72  2EE8               	decfsz	wreg,f,c
  5175  002C74  EF34  F016         	goto	u4365
  5176  002C78  501E               	movf	??_floorf^0,w,c
  5177  002C7A  101F               	iorwf	(??_floorf+1)^0,w,c
  5178  002C7C  1020               	iorwf	(??_floorf+2)^0,w,c
  5179  002C7E  1021               	iorwf	(??_floorf+3)^0,w,c
  5180  002C80  B4D8               	btfsc	status,2,c
  5181  002C82  EF45  F016         	goto	u4371
  5182  002C86  EF47  F016         	goto	u4370
  5183  002C8A                     u4371:
  5184  002C8A  EF4F  F016         	goto	l1089
  5185  002C8E                     u4370:
  5186  002C8E  5024               	movf	floorf@m^0,w,c
  5187  002C90  262A               	addwf	floorf@u^0,f,c
  5188  002C92  5025               	movf	(floorf@m+1)^0,w,c
  5189  002C94  222B               	addwfc	(floorf@u+1)^0,f,c
  5190  002C96  5026               	movf	(floorf@m+2)^0,w,c
  5191  002C98  222C               	addwfc	(floorf@u+2)^0,f,c
  5192  002C9A  5027               	movf	(floorf@m+3)^0,w,c
  5193  002C9C  222D               	addwfc	(floorf@u+3)^0,f,c
  5194  002C9E                     l1089:
  5195  002C9E  1C24               	comf	floorf@m^0,w,c
  5196  002CA0  6E1E               	movwf	??_floorf^0,c
  5197  002CA2  1C25               	comf	(floorf@m+1)^0,w,c
  5198  002CA4  6E1F               	movwf	(??_floorf+1)^0,c
  5199  002CA6  1C26               	comf	(floorf@m+2)^0,w,c
  5200  002CA8  6E20               	movwf	(??_floorf+2)^0,c
  5201  002CAA  1C27               	comf	(floorf@m+3)^0,w,c
  5202  002CAC  6E21               	movwf	(??_floorf+3)^0,c
  5203  002CAE  501E               	movf	??_floorf^0,w,c
  5204  002CB0  162A               	andwf	floorf@u^0,f,c
  5205  002CB2  501F               	movf	(??_floorf+1)^0,w,c
  5206  002CB4  162B               	andwf	(floorf@u+1)^0,f,c
  5207  002CB6  5020               	movf	(??_floorf+2)^0,w,c
  5208  002CB8  162C               	andwf	(floorf@u+2)^0,f,c
  5209  002CBA  5021               	movf	(??_floorf+3)^0,w,c
  5210  002CBC  162D               	andwf	(floorf@u+3)^0,f,c
  5211  002CBE  EFA5  F016         	goto	l3768
  5212  002CC2                     l3760:
  5213  002CC2  C02A  F01E         	movff	floorf@u,??_floorf
  5214  002CC6  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  5215  002CCA  C02C  F020         	movff	floorf@u+2,??_floorf+2
  5216  002CCE  C02D  F021         	movff	floorf@u+3,??_floorf+3
  5217  002CD2  0E20               	movlw	32
  5218  002CD4  EF71  F016         	goto	u4380
  5219  002CD8                     u4385:
  5220  002CD8  90D8               	bcf	status,0,c
  5221  002CDA  3221               	rrcf	(??_floorf+3)^0,f,c
  5222  002CDC  3220               	rrcf	(??_floorf+2)^0,f,c
  5223  002CDE  321F               	rrcf	(??_floorf+1)^0,f,c
  5224  002CE0  321E               	rrcf	??_floorf^0,f,c
  5225  002CE2                     u4380:
  5226  002CE2  2EE8               	decfsz	wreg,f,c
  5227  002CE4  EF6C  F016         	goto	u4385
  5228  002CE8  501E               	movf	??_floorf^0,w,c
  5229  002CEA  101F               	iorwf	(??_floorf+1)^0,w,c
  5230  002CEC  1020               	iorwf	(??_floorf+2)^0,w,c
  5231  002CEE  1021               	iorwf	(??_floorf+3)^0,w,c
  5232  002CF0  A4D8               	btfss	status,2,c
  5233  002CF2  EF7D  F016         	goto	u4391
  5234  002CF6  EF7F  F016         	goto	u4390
  5235  002CFA                     u4391:
  5236  002CFA  EF89  F016         	goto	l3764
  5237  002CFE                     u4390:
  5238  002CFE  0E00               	movlw	0
  5239  002D00  6E2A               	movwf	floorf@u^0,c
  5240  002D02  0E00               	movlw	0
  5241  002D04  6E2B               	movwf	(floorf@u+1)^0,c
  5242  002D06  0E00               	movlw	0
  5243  002D08  6E2C               	movwf	(floorf@u+2)^0,c
  5244  002D0A  0E00               	movlw	0
  5245  002D0C  6E2D               	movwf	(floorf@u+3)^0,c
  5246  002D0E  EFA5  F016         	goto	l3768
  5247  002D12                     l3764:
  5248  002D12  90D8               	bcf	status,0,c
  5249  002D14  342A               	rlcf	floorf@u^0,w,c
  5250  002D16  6E1E               	movwf	??_floorf^0,c
  5251  002D18  342B               	rlcf	(floorf@u+1)^0,w,c
  5252  002D1A  6E1F               	movwf	(??_floorf+1)^0,c
  5253  002D1C  342C               	rlcf	(floorf@u+2)^0,w,c
  5254  002D1E  6E20               	movwf	(??_floorf+2)^0,c
  5255  002D20  342D               	rlcf	(floorf@u+3)^0,w,c
  5256  002D22  6E21               	movwf	(??_floorf+3)^0,c
  5257  002D24  501E               	movf	??_floorf^0,w,c
  5258  002D26  101F               	iorwf	(??_floorf+1)^0,w,c
  5259  002D28  1020               	iorwf	(??_floorf+2)^0,w,c
  5260  002D2A  1021               	iorwf	(??_floorf+3)^0,w,c
  5261  002D2C  B4D8               	btfsc	status,2,c
  5262  002D2E  EF9B  F016         	goto	u4401
  5263  002D32  EF9D  F016         	goto	u4400
  5264  002D36                     u4401:
  5265  002D36  EFA5  F016         	goto	l3768
  5266  002D3A                     u4400:
  5267  002D3A  0E00               	movlw	0
  5268  002D3C  6E2A               	movwf	floorf@u^0,c
  5269  002D3E  0E00               	movlw	0
  5270  002D40  6E2B               	movwf	(floorf@u+1)^0,c
  5271  002D42  0E80               	movlw	128
  5272  002D44  6E2C               	movwf	(floorf@u+2)^0,c
  5273  002D46  0EBF               	movlw	191
  5274  002D48  6E2D               	movwf	(floorf@u+3)^0,c
  5275  002D4A                     l3768:
  5276  002D4A  C02A  F01A         	movff	floorf@u,?_floorf
  5277  002D4E  C02B  F01B         	movff	floorf@u+1,?_floorf+1
  5278  002D52  C02C  F01C         	movff	floorf@u+2,?_floorf+2
  5279  002D56  C02D  F01D         	movff	floorf@u+3,?_floorf+3
  5280  002D5A                     l1086:
  5281  002D5A  0012               	return		;funcret
  5282  002D5C                     __end_of_floorf:
  5283                           	callstack 0
  5284                           
  5285 ;; *************** function ___fpclassifyf *****************
  5286 ;; Defined at:
  5287 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__fpclassifyf.c"
  5288 ;; Parameters:    Size  Location     Type
  5289 ;;  x               4    0[COMRAM] float 
  5290 ;; Auto vars:     Size  Location     Type
  5291 ;;  u               4   10[COMRAM] struct .
  5292 ;;  e               2    8[COMRAM] int 
  5293 ;; Return value:  Size  Location     Type
  5294 ;;                  2    0[COMRAM] int 
  5295 ;; Registers used:
  5296 ;;		wreg, status,2, status,0
  5297 ;; Tracked objects:
  5298 ;;		On entry : 0/0
  5299 ;;		On exit  : 0/0
  5300 ;;		Unchanged: 0/0
  5301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5302 ;;      Params:         4       0       0       0       0       0       0
  5303 ;;      Locals:         6       0       0       0       0       0       0
  5304 ;;      Temps:          4       0       0       0       0       0       0
  5305 ;;      Totals:        14       0       0       0       0       0       0
  5306 ;;Total ram usage:       14 bytes
  5307 ;; Hardware stack levels used: 1
  5308 ;; This function calls:
  5309 ;;		Nothing
  5310 ;; This function is called by:
  5311 ;;		_efgtoa
  5312 ;; This function uses a non-reentrant model
  5313 ;;
  5314                           
  5315                           	psect	text14
  5316  003666                     __ptext14:
  5317                           	callstack 0
  5318  003666                     ___fpclassifyf:
  5319                           	callstack 25
  5320  003666  C084  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  5321  00366A  C085  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5322  00366E  C086  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5323  003672  C087  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5324  003676  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  5325  00367A  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5326  00367E  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5327  003682  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5328  003686  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5329  00368A  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5330  00368E  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5331  003692  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5332  003696  0E18               	movlw	24
  5333  003698  EF53  F01B         	goto	u4210
  5334  00369C                     u4215:
  5335  00369C  90D8               	bcf	status,0,c
  5336  00369E  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  5337  0036A0  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  5338  0036A2  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  5339  0036A4  3205               	rrcf	??___fpclassifyf^0,f,c
  5340  0036A6                     u4210:
  5341  0036A6  2EE8               	decfsz	wreg,f,c
  5342  0036A8  EF4E  F01B         	goto	u4215
  5343  0036AC  5005               	movf	??___fpclassifyf^0,w,c
  5344  0036AE  6E09               	movwf	___fpclassifyf@e^0,c
  5345  0036B0  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  5346  0036B2  5009               	movf	___fpclassifyf@e^0,w,c
  5347  0036B4  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5348  0036B6  A4D8               	btfss	status,2,c
  5349  0036B8  EF60  F01B         	goto	u4221
  5350  0036BC  EF62  F01B         	goto	u4220
  5351  0036C0                     u4221:
  5352  0036C0  EF82  F01B         	goto	l3720
  5353  0036C4                     u4220:
  5354  0036C4  90D8               	bcf	status,0,c
  5355  0036C6  340B               	rlcf	___fpclassifyf@u^0,w,c
  5356  0036C8  6E05               	movwf	??___fpclassifyf^0,c
  5357  0036CA  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5358  0036CC  6E06               	movwf	(??___fpclassifyf+1)^0,c
  5359  0036CE  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5360  0036D0  6E07               	movwf	(??___fpclassifyf+2)^0,c
  5361  0036D2  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5362  0036D4  6E08               	movwf	(??___fpclassifyf+3)^0,c
  5363  0036D6  5005               	movf	??___fpclassifyf^0,w,c
  5364  0036D8  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5365  0036DA  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5366  0036DC  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5367  0036DE  A4D8               	btfss	status,2,c
  5368  0036E0  EF74  F01B         	goto	u4231
  5369  0036E4  EF76  F01B         	goto	u4230
  5370  0036E8                     u4231:
  5371  0036E8  EF7C  F01B         	goto	l3716
  5372  0036EC                     u4230:
  5373  0036EC  0E00               	movlw	0
  5374  0036EE  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5375  0036F0  0E02               	movlw	2
  5376  0036F2  6E01               	movwf	?___fpclassifyf^0,c
  5377  0036F4  EFB1  F01B         	goto	l1047
  5378  0036F8                     l3716:
  5379  0036F8  0E00               	movlw	0
  5380  0036FA  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5381  0036FC  0E03               	movlw	3
  5382  0036FE  6E01               	movwf	?___fpclassifyf^0,c
  5383  003700  EFB1  F01B         	goto	l1047
  5384  003704                     l3720:
  5385  003704  2809               	incf	___fpclassifyf@e^0,w,c
  5386  003706  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5387  003708  A4D8               	btfss	status,2,c
  5388  00370A  EF89  F01B         	goto	u4241
  5389  00370E  EF8B  F01B         	goto	u4240
  5390  003712                     u4241:
  5391  003712  EFAD  F01B         	goto	l3726
  5392  003716                     u4240:
  5393  003716  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5394  00371A  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5395  00371E  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5396  003722  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5397  003726  0E09               	movlw	9
  5398  003728                     u4255:
  5399  003728  90D8               	bcf	status,0,c
  5400  00372A  3605               	rlcf	??___fpclassifyf^0,f,c
  5401  00372C  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  5402  00372E  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  5403  003730  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  5404  003732  2EE8               	decfsz	wreg,f,c
  5405  003734  EF94  F01B         	goto	u4255
  5406  003738  5005               	movf	??___fpclassifyf^0,w,c
  5407  00373A  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5408  00373C  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5409  00373E  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5410  003740  B4D8               	btfsc	status,2,c
  5411  003742  EFA5  F01B         	goto	u4261
  5412  003746  EFA8  F01B         	goto	u4260
  5413  00374A                     u4261:
  5414  00374A  0E01               	movlw	1
  5415  00374C  EFA9  F01B         	goto	u4270
  5416  003750                     u4260:
  5417  003750  0E00               	movlw	0
  5418  003752                     u4270:
  5419  003752  6E01               	movwf	?___fpclassifyf^0,c
  5420  003754  6A02               	clrf	(?___fpclassifyf+1)^0,c
  5421  003756  EFB1  F01B         	goto	l1047
  5422  00375A                     l3726:
  5423  00375A  0E00               	movlw	0
  5424  00375C  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5425  00375E  0E04               	movlw	4
  5426  003760  6E01               	movwf	?___fpclassifyf^0,c
  5427  003762                     l1047:
  5428  003762  0012               	return		;funcret
  5429  003764                     __end_of___fpclassifyf:
  5430                           	callstack 0
  5431                           
  5432 ;; *************** function ___fltol *****************
  5433 ;; Defined at:
  5434 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fltol.c"
  5435 ;; Parameters:    Size  Location     Type
  5436 ;;  f1              4    0[COMRAM] int 
  5437 ;; Auto vars:     Size  Location     Type
  5438 ;;  exp1            1    9[COMRAM] unsigned char 
  5439 ;;  sign1           1    8[COMRAM] unsigned char 
  5440 ;; Return value:  Size  Location     Type
  5441 ;;                  4    0[COMRAM] long 
  5442 ;; Registers used:
  5443 ;;		wreg, status,2, status,0
  5444 ;; Tracked objects:
  5445 ;;		On entry : 0/0
  5446 ;;		On exit  : 0/0
  5447 ;;		Unchanged: 0/0
  5448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5449 ;;      Params:         4       0       0       0       0       0       0
  5450 ;;      Locals:         2       0       0       0       0       0       0
  5451 ;;      Temps:          4       0       0       0       0       0       0
  5452 ;;      Totals:        10       0       0       0       0       0       0
  5453 ;;Total ram usage:       10 bytes
  5454 ;; Hardware stack levels used: 1
  5455 ;; This function calls:
  5456 ;;		Nothing
  5457 ;; This function is called by:
  5458 ;;		_efgtoa
  5459 ;; This function uses a non-reentrant model
  5460 ;;
  5461                           
  5462                           	psect	text15
  5463  00345C                     __ptext15:
  5464                           	callstack 0
  5465  00345C                     ___fltol:
  5466                           	callstack 25
  5467  00345C  3403               	rlcf	(___fltol@f1+2)^0,w,c
  5468  00345E  3404               	rlcf	(___fltol@f1+3)^0,w,c
  5469  003460  6E0A               	movwf	___fltol@exp1^0,c
  5470  003462  500A               	movf	___fltol@exp1^0,w,c
  5471  003464  A4D8               	btfss	status,2,c
  5472  003466  EF37  F01A         	goto	u4091
  5473  00346A  EF39  F01A         	goto	u4090
  5474  00346E                     u4091:
  5475  00346E  EF43  F01A         	goto	l3644
  5476  003472                     u4090:
  5477  003472                     l3640:
  5478  003472  0E00               	movlw	0
  5479  003474  6E01               	movwf	?___fltol^0,c
  5480  003476  0E00               	movlw	0
  5481  003478  6E02               	movwf	(?___fltol+1)^0,c
  5482  00347A  0E00               	movlw	0
  5483  00347C  6E03               	movwf	(?___fltol+2)^0,c
  5484  00347E  0E00               	movlw	0
  5485  003480  6E04               	movwf	(?___fltol+3)^0,c
  5486  003482  EFB0  F01A         	goto	l445
  5487  003486                     l3644:
  5488  003486  C001  F005         	movff	___fltol@f1,??___fltol
  5489  00348A  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  5490  00348E  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  5491  003492  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  5492  003496  0E20               	movlw	32
  5493  003498  EF53  F01A         	goto	u4100
  5494  00349C                     u4105:
  5495  00349C  90D8               	bcf	status,0,c
  5496  00349E  3208               	rrcf	(??___fltol+3)^0,f,c
  5497  0034A0  3207               	rrcf	(??___fltol+2)^0,f,c
  5498  0034A2  3206               	rrcf	(??___fltol+1)^0,f,c
  5499  0034A4  3205               	rrcf	??___fltol^0,f,c
  5500  0034A6                     u4100:
  5501  0034A6  2EE8               	decfsz	wreg,f,c
  5502  0034A8  EF4E  F01A         	goto	u4105
  5503  0034AC  5005               	movf	??___fltol^0,w,c
  5504  0034AE  6E09               	movwf	___fltol@sign1^0,c
  5505  0034B0  8E03               	bsf	(___fltol@f1+2)^0,7,c
  5506  0034B2  0EFF               	movlw	255
  5507  0034B4  1601               	andwf	___fltol@f1^0,f,c
  5508  0034B6  0EFF               	movlw	255
  5509  0034B8  1602               	andwf	(___fltol@f1+1)^0,f,c
  5510  0034BA  0EFF               	movlw	255
  5511  0034BC  1603               	andwf	(___fltol@f1+2)^0,f,c
  5512  0034BE  0E00               	movlw	0
  5513  0034C0  1604               	andwf	(___fltol@f1+3)^0,f,c
  5514  0034C2  0E96               	movlw	150
  5515  0034C4  5E0A               	subwf	___fltol@exp1^0,f,c
  5516  0034C6  BE0A               	btfsc	___fltol@exp1^0,7,c
  5517  0034C8  EF6A  F01A         	goto	u4110
  5518  0034CC  EF68  F01A         	goto	u4111
  5519  0034D0                     u4111:
  5520  0034D0  EF80  F01A         	goto	l3664
  5521  0034D4                     u4110:
  5522  0034D4  500A               	movf	___fltol@exp1^0,w,c
  5523  0034D6  0A80               	xorlw	128
  5524  0034D8  0F97               	addlw	151
  5525  0034DA  B0D8               	btfsc	status,0,c
  5526  0034DC  EF72  F01A         	goto	u4121
  5527  0034E0  EF74  F01A         	goto	u4120
  5528  0034E4                     u4121:
  5529  0034E4  EF76  F01A         	goto	l3660
  5530  0034E8                     u4120:
  5531  0034E8  EF39  F01A         	goto	l3640
  5532  0034EC                     l3660:
  5533  0034EC  90D8               	bcf	status,0,c
  5534  0034EE  3204               	rrcf	(___fltol@f1+3)^0,f,c
  5535  0034F0  3203               	rrcf	(___fltol@f1+2)^0,f,c
  5536  0034F2  3202               	rrcf	(___fltol@f1+1)^0,f,c
  5537  0034F4  3201               	rrcf	___fltol@f1^0,f,c
  5538  0034F6  3E0A               	incfsz	___fltol@exp1^0,f,c
  5539  0034F8  EF76  F01A         	goto	l3660
  5540  0034FC  EF98  F01A         	goto	l3674
  5541  003500                     l3664:
  5542  003500  0E1F               	movlw	31
  5543  003502  640A               	cpfsgt	___fltol@exp1^0,c
  5544  003504  EF86  F01A         	goto	u4131
  5545  003508  EF88  F01A         	goto	u4130
  5546  00350C                     u4131:
  5547  00350C  EF90  F01A         	goto	l3672
  5548  003510                     u4130:
  5549  003510  EF39  F01A         	goto	l3640
  5550  003514                     l3670:
  5551  003514  90D8               	bcf	status,0,c
  5552  003516  3601               	rlcf	___fltol@f1^0,f,c
  5553  003518  3602               	rlcf	(___fltol@f1+1)^0,f,c
  5554  00351A  3603               	rlcf	(___fltol@f1+2)^0,f,c
  5555  00351C  3604               	rlcf	(___fltol@f1+3)^0,f,c
  5556  00351E  060A               	decf	___fltol@exp1^0,f,c
  5557  003520                     l3672:
  5558  003520  500A               	movf	___fltol@exp1^0,w,c
  5559  003522  A4D8               	btfss	status,2,c
  5560  003524  EF96  F01A         	goto	u4141
  5561  003528  EF98  F01A         	goto	u4140
  5562  00352C                     u4141:
  5563  00352C  EF8A  F01A         	goto	l3670
  5564  003530                     u4140:
  5565  003530                     l3674:
  5566  003530  5009               	movf	___fltol@sign1^0,w,c
  5567  003532  B4D8               	btfsc	status,2,c
  5568  003534  EF9E  F01A         	goto	u4151
  5569  003538  EFA0  F01A         	goto	u4150
  5570  00353C                     u4151:
  5571  00353C  EFA8  F01A         	goto	l3678
  5572  003540                     u4150:
  5573  003540  1E04               	comf	(___fltol@f1+3)^0,f,c
  5574  003542  1E03               	comf	(___fltol@f1+2)^0,f,c
  5575  003544  1E02               	comf	(___fltol@f1+1)^0,f,c
  5576  003546  6C01               	negf	___fltol@f1^0,c
  5577  003548  0E00               	movlw	0
  5578  00354A  2202               	addwfc	(___fltol@f1+1)^0,f,c
  5579  00354C  2203               	addwfc	(___fltol@f1+2)^0,f,c
  5580  00354E  2204               	addwfc	(___fltol@f1+3)^0,f,c
  5581  003550                     l3678:
  5582  003550  C001  F001         	movff	___fltol@f1,?___fltol
  5583  003554  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  5584  003558  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  5585  00355C  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  5586  003560                     l445:
  5587  003560  0012               	return		;funcret
  5588  003562                     __end_of___fltol:
  5589                           	callstack 0
  5590                           
  5591 ;; *************** function ___flsub *****************
  5592 ;; Defined at:
  5593 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  5594 ;; Parameters:    Size  Location     Type
  5595 ;;  b               4   39[COMRAM] long 
  5596 ;;  a               4   43[COMRAM] long 
  5597 ;; Auto vars:     Size  Location     Type
  5598 ;;		None
  5599 ;; Return value:  Size  Location     Type
  5600 ;;                  4   39[COMRAM] long 
  5601 ;; Registers used:
  5602 ;;		wreg, status,2, status,0, cstack
  5603 ;; Tracked objects:
  5604 ;;		On entry : 0/0
  5605 ;;		On exit  : 0/0
  5606 ;;		Unchanged: 0/0
  5607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5608 ;;      Params:         8       0       0       0       0       0       0
  5609 ;;      Locals:         0       0       0       0       0       0       0
  5610 ;;      Temps:          0       0       0       0       0       0       0
  5611 ;;      Totals:         8       0       0       0       0       0       0
  5612 ;;Total ram usage:        8 bytes
  5613 ;; Hardware stack levels used: 1
  5614 ;; Hardware stack levels required when called: 1
  5615 ;; This function calls:
  5616 ;;		___fladd
  5617 ;; This function is called by:
  5618 ;;		_efgtoa
  5619 ;; This function uses a non-reentrant model
  5620 ;;
  5621                           
  5622                           	psect	text16
  5623  0040AE                     __ptext16:
  5624                           	callstack 0
  5625  0040AE                     ___flsub:
  5626                           	callstack 24
  5627  0040AE  0E00               	movlw	0
  5628  0040B0  1A2C               	xorwf	___flsub@a^0,f,c
  5629  0040B2  0E00               	movlw	0
  5630  0040B4  1A2D               	xorwf	(___flsub@a+1)^0,f,c
  5631  0040B6  0E00               	movlw	0
  5632  0040B8  1A2E               	xorwf	(___flsub@a+2)^0,f,c
  5633  0040BA  0E80               	movlw	128
  5634  0040BC  1A2F               	xorwf	(___flsub@a+3)^0,f,c
  5635  0040BE  C028  F001         	movff	___flsub@b,___fladd@b
  5636  0040C2  C029  F002         	movff	___flsub@b+1,___fladd@b+1
  5637  0040C6  C02A  F003         	movff	___flsub@b+2,___fladd@b+2
  5638  0040CA  C02B  F004         	movff	___flsub@b+3,___fladd@b+3
  5639  0040CE  C02C  F005         	movff	___flsub@a,___fladd@a
  5640  0040D2  C02D  F006         	movff	___flsub@a+1,___fladd@a+1
  5641  0040D6  C02E  F007         	movff	___flsub@a+2,___fladd@a+2
  5642  0040DA  C02F  F008         	movff	___flsub@a+3,___fladd@a+3
  5643  0040DE  EC7D  F00C         	call	___fladd	;wreg free
  5644  0040E2  C001  F028         	movff	?___fladd,?___flsub
  5645  0040E6  C002  F029         	movff	?___fladd+1,?___flsub+1
  5646  0040EA  C003  F02A         	movff	?___fladd+2,?___flsub+2
  5647  0040EE  C004  F02B         	movff	?___fladd+3,?___flsub+3
  5648  0040F2  0012               	return		;funcret
  5649  0040F4                     __end_of___flsub:
  5650                           	callstack 0
  5651                           
  5652 ;; *************** function ___fladd *****************
  5653 ;; Defined at:
  5654 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  5655 ;; Parameters:    Size  Location     Type
  5656 ;;  b               4    0[COMRAM] long 
  5657 ;;  a               4    4[COMRAM] long 
  5658 ;; Auto vars:     Size  Location     Type
  5659 ;;  grs             1   15[COMRAM] unsigned char 
  5660 ;;  bexp            1   14[COMRAM] unsigned char 
  5661 ;;  aexp            1   13[COMRAM] unsigned char 
  5662 ;;  signs           1   12[COMRAM] unsigned char 
  5663 ;; Return value:  Size  Location     Type
  5664 ;;                  4    0[COMRAM] unsigned char 
  5665 ;; Registers used:
  5666 ;;		wreg, status,2, status,0
  5667 ;; Tracked objects:
  5668 ;;		On entry : 0/0
  5669 ;;		On exit  : 0/0
  5670 ;;		Unchanged: 0/0
  5671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5672 ;;      Params:         8       0       0       0       0       0       0
  5673 ;;      Locals:         4       0       0       0       0       0       0
  5674 ;;      Temps:          4       0       0       0       0       0       0
  5675 ;;      Totals:        16       0       0       0       0       0       0
  5676 ;;Total ram usage:       16 bytes
  5677 ;; Hardware stack levels used: 1
  5678 ;; This function calls:
  5679 ;;		Nothing
  5680 ;; This function is called by:
  5681 ;;		___flsub
  5682 ;;		_efgtoa
  5683 ;; This function uses a non-reentrant model
  5684 ;;
  5685                           
  5686                           	psect	text17
  5687  0018FA                     __ptext17:
  5688                           	callstack 0
  5689  0018FA                     ___fladd:
  5690                           	callstack 24
  5691  0018FA  5004               	movf	(___fladd@b+3)^0,w,c
  5692  0018FC  0B80               	andlw	128
  5693  0018FE  6E0D               	movwf	___fladd@signs^0,c
  5694  001900  5004               	movf	(___fladd@b+3)^0,w,c
  5695  001902  2404               	addwf	(___fladd@b+3)^0,w,c
  5696  001904  6E0F               	movwf	___fladd@bexp^0,c
  5697  001906  AE03               	btfss	(___fladd@b+2)^0,7,c
  5698  001908  EF88  F00C         	goto	u2901
  5699  00190C  EF8A  F00C         	goto	u2900
  5700  001910                     u2901:
  5701  001910  EF8B  F00C         	goto	l2934
  5702  001914                     u2900:
  5703  001914  800F               	bsf	___fladd@bexp^0,0,c
  5704  001916                     l2934:
  5705  001916  500F               	movf	___fladd@bexp^0,w,c
  5706  001918  B4D8               	btfsc	status,2,c
  5707  00191A  EF91  F00C         	goto	u2911
  5708  00191E  EF93  F00C         	goto	u2910
  5709  001922                     u2911:
  5710  001922  EFA8  F00C         	goto	l2944
  5711  001926                     u2910:
  5712  001926  280F               	incf	___fladd@bexp^0,w,c
  5713  001928  A4D8               	btfss	status,2,c
  5714  00192A  EF99  F00C         	goto	u2921
  5715  00192E  EF9B  F00C         	goto	u2920
  5716  001932                     u2921:
  5717  001932  EFA3  F00C         	goto	l2940
  5718  001936                     u2920:
  5719  001936  0E00               	movlw	0
  5720  001938  6E01               	movwf	___fladd@b^0,c
  5721  00193A  0E00               	movlw	0
  5722  00193C  6E02               	movwf	(___fladd@b+1)^0,c
  5723  00193E  0E00               	movlw	0
  5724  001940  6E03               	movwf	(___fladd@b+2)^0,c
  5725  001942  0E00               	movlw	0
  5726  001944  6E04               	movwf	(___fladd@b+3)^0,c
  5727  001946                     l2940:
  5728  001946  8E03               	bsf	(___fladd@b+2)^0,7,c
  5729  001948  0E00               	movlw	0
  5730  00194A  6E04               	movwf	(___fladd@b+3)^0,c
  5731  00194C  EFB0  F00C         	goto	l2946
  5732  001950                     l2944:
  5733  001950  0E00               	movlw	0
  5734  001952  6E01               	movwf	___fladd@b^0,c
  5735  001954  0E00               	movlw	0
  5736  001956  6E02               	movwf	(___fladd@b+1)^0,c
  5737  001958  0E00               	movlw	0
  5738  00195A  6E03               	movwf	(___fladd@b+2)^0,c
  5739  00195C  0E00               	movlw	0
  5740  00195E  6E04               	movwf	(___fladd@b+3)^0,c
  5741  001960                     l2946:
  5742  001960  5008               	movf	(___fladd@a+3)^0,w,c
  5743  001962  0B80               	andlw	128
  5744  001964  6E0E               	movwf	___fladd@aexp^0,c
  5745  001966  500D               	movf	___fladd@signs^0,w,c
  5746  001968  180E               	xorwf	___fladd@aexp^0,w,c
  5747  00196A  B4D8               	btfsc	status,2,c
  5748  00196C  EFBA  F00C         	goto	u2931
  5749  001970  EFBC  F00C         	goto	u2930
  5750  001974                     u2931:
  5751  001974  EFBD  F00C         	goto	l2952
  5752  001978                     u2930:
  5753  001978  8C0D               	bsf	___fladd@signs^0,6,c
  5754  00197A                     l2952:
  5755  00197A  5008               	movf	(___fladd@a+3)^0,w,c
  5756  00197C  2408               	addwf	(___fladd@a+3)^0,w,c
  5757  00197E  6E0E               	movwf	___fladd@aexp^0,c
  5758  001980  AE07               	btfss	(___fladd@a+2)^0,7,c
  5759  001982  EFC5  F00C         	goto	u2941
  5760  001986  EFC7  F00C         	goto	u2940
  5761  00198A                     u2941:
  5762  00198A  EFC8  F00C         	goto	l2958
  5763  00198E                     u2940:
  5764  00198E  800E               	bsf	___fladd@aexp^0,0,c
  5765  001990                     l2958:
  5766  001990  500E               	movf	___fladd@aexp^0,w,c
  5767  001992  B4D8               	btfsc	status,2,c
  5768  001994  EFCE  F00C         	goto	u2951
  5769  001998  EFD0  F00C         	goto	u2950
  5770  00199C                     u2951:
  5771  00199C  EFE5  F00C         	goto	l2968
  5772  0019A0                     u2950:
  5773  0019A0  280E               	incf	___fladd@aexp^0,w,c
  5774  0019A2  A4D8               	btfss	status,2,c
  5775  0019A4  EFD6  F00C         	goto	u2961
  5776  0019A8  EFD8  F00C         	goto	u2960
  5777  0019AC                     u2961:
  5778  0019AC  EFE0  F00C         	goto	l2964
  5779  0019B0                     u2960:
  5780  0019B0  0E00               	movlw	0
  5781  0019B2  6E05               	movwf	___fladd@a^0,c
  5782  0019B4  0E00               	movlw	0
  5783  0019B6  6E06               	movwf	(___fladd@a+1)^0,c
  5784  0019B8  0E00               	movlw	0
  5785  0019BA  6E07               	movwf	(___fladd@a+2)^0,c
  5786  0019BC  0E00               	movlw	0
  5787  0019BE  6E08               	movwf	(___fladd@a+3)^0,c
  5788  0019C0                     l2964:
  5789  0019C0  8E07               	bsf	(___fladd@a+2)^0,7,c
  5790  0019C2  0E00               	movlw	0
  5791  0019C4  6E08               	movwf	(___fladd@a+3)^0,c
  5792  0019C6  EFED  F00C         	goto	l2970
  5793  0019CA                     l2968:
  5794  0019CA  0E00               	movlw	0
  5795  0019CC  6E05               	movwf	___fladd@a^0,c
  5796  0019CE  0E00               	movlw	0
  5797  0019D0  6E06               	movwf	(___fladd@a+1)^0,c
  5798  0019D2  0E00               	movlw	0
  5799  0019D4  6E07               	movwf	(___fladd@a+2)^0,c
  5800  0019D6  0E00               	movlw	0
  5801  0019D8  6E08               	movwf	(___fladd@a+3)^0,c
  5802  0019DA                     l2970:
  5803  0019DA  500F               	movf	___fladd@bexp^0,w,c
  5804  0019DC  5C0E               	subwf	___fladd@aexp^0,w,c
  5805  0019DE  B0D8               	btfsc	status,0,c
  5806  0019E0  EFF4  F00C         	goto	u2971
  5807  0019E4  EFF6  F00C         	goto	u2970
  5808  0019E8                     u2971:
  5809  0019E8  EF1D  F00D         	goto	l3006
  5810  0019EC                     u2970:
  5811  0019EC  AC0D               	btfss	___fladd@signs^0,6,c
  5812  0019EE  EFFB  F00C         	goto	u2981
  5813  0019F2  EFFD  F00C         	goto	u2980
  5814  0019F6                     u2981:
  5815  0019F6  EFFF  F00C         	goto	l2976
  5816  0019FA                     u2980:
  5817  0019FA  0E80               	movlw	128
  5818  0019FC  1A0D               	xorwf	___fladd@signs^0,f,c
  5819  0019FE                     l2976:
  5820  0019FE  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  5821  001A02  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5822  001A06  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  5823  001A0A  C001  F010         	movff	___fladd@b,___fladd@grs
  5824  001A0E  C005  F001         	movff	___fladd@a,___fladd@b
  5825  001A12  C010  F005         	movff	___fladd@grs,___fladd@a
  5826  001A16  C002  F010         	movff	___fladd@b+1,___fladd@grs
  5827  001A1A  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  5828  001A1E  C010  F006         	movff	___fladd@grs,___fladd@a+1
  5829  001A22  C003  F010         	movff	___fladd@b+2,___fladd@grs
  5830  001A26  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  5831  001A2A  C010  F007         	movff	___fladd@grs,___fladd@a+2
  5832  001A2E  C004  F010         	movff	___fladd@b+3,___fladd@grs
  5833  001A32  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  5834  001A36  C010  F008         	movff	___fladd@grs,___fladd@a+3
  5835  001A3A                     l3006:
  5836  001A3A  0E00               	movlw	0
  5837  001A3C  6E10               	movwf	___fladd@grs^0,c
  5838  001A3E  500F               	movf	___fladd@bexp^0,w,c
  5839  001A40  C00E  F009         	movff	___fladd@aexp,??___fladd
  5840  001A44  6A0A               	clrf	(??___fladd+1)^0,c
  5841  001A46  5E09               	subwf	??___fladd^0,f,c
  5842  001A48  0E00               	movlw	0
  5843  001A4A  5A0A               	subwfb	(??___fladd+1)^0,f,c
  5844  001A4C  BE0A               	btfsc	(??___fladd+1)^0,7,c
  5845  001A4E  EF32  F00D         	goto	u2991
  5846  001A52  500A               	movf	(??___fladd+1)^0,w,c
  5847  001A54  E109               	bnz	u2990
  5848  001A56  0E1A               	movlw	26
  5849  001A58  5C09               	subwf	??___fladd^0,w,c
  5850  001A5A  A0D8               	btfss	status,0,c
  5851  001A5C  EF32  F00D         	goto	u2991
  5852  001A60  EF34  F00D         	goto	u2990
  5853  001A64                     u2991:
  5854  001A64  EF6B  F00D         	goto	l677
  5855  001A68                     u2990:
  5856  001A68  5001               	movf	___fladd@b^0,w,c
  5857  001A6A  1002               	iorwf	(___fladd@b+1)^0,w,c
  5858  001A6C  1003               	iorwf	(___fladd@b+2)^0,w,c
  5859  001A6E  1004               	iorwf	(___fladd@b+3)^0,w,c
  5860  001A70  A4D8               	btfss	status,2,c
  5861  001A72  EF3D  F00D         	goto	u3001
  5862  001A76  EF40  F00D         	goto	u3000
  5863  001A7A                     u3001:
  5864  001A7A  0E01               	movlw	1
  5865  001A7C  EF41  F00D         	goto	u3010
  5866  001A80                     u3000:
  5867  001A80  0E00               	movlw	0
  5868  001A82                     u3010:
  5869  001A82  6E10               	movwf	___fladd@grs^0,c
  5870  001A84  0E00               	movlw	0
  5871  001A86  6E01               	movwf	___fladd@b^0,c
  5872  001A88  0E00               	movlw	0
  5873  001A8A  6E02               	movwf	(___fladd@b+1)^0,c
  5874  001A8C  0E00               	movlw	0
  5875  001A8E  6E03               	movwf	(___fladd@b+2)^0,c
  5876  001A90  0E00               	movlw	0
  5877  001A92  6E04               	movwf	(___fladd@b+3)^0,c
  5878  001A94  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5879  001A98  EF74  F00D         	goto	l676
  5880  001A9C                     l678:
  5881  001A9C  A010               	btfss	___fladd@grs^0,0,c
  5882  001A9E  EF53  F00D         	goto	u3021
  5883  001AA2  EF55  F00D         	goto	u3020
  5884  001AA6                     u3021:
  5885  001AA6  EF5B  F00D         	goto	l3018
  5886  001AAA                     u3020:
  5887  001AAA  90D8               	bcf	status,0,c
  5888  001AAC  3010               	rrcf	___fladd@grs^0,w,c
  5889  001AAE  0901               	iorlw	1
  5890  001AB0  6E10               	movwf	___fladd@grs^0,c
  5891  001AB2  EF5D  F00D         	goto	l3020
  5892  001AB6                     l3018:
  5893  001AB6  90D8               	bcf	status,0,c
  5894  001AB8  3210               	rrcf	___fladd@grs^0,f,c
  5895  001ABA                     l3020:
  5896  001ABA  A001               	btfss	___fladd@b^0,0,c
  5897  001ABC  EF62  F00D         	goto	u3031
  5898  001AC0  EF64  F00D         	goto	u3030
  5899  001AC4                     u3031:
  5900  001AC4  EF65  F00D         	goto	l3024
  5901  001AC8                     u3030:
  5902  001AC8  8E10               	bsf	___fladd@grs^0,7,c
  5903  001ACA                     l3024:
  5904  001ACA  3404               	rlcf	(___fladd@b+3)^0,w,c
  5905  001ACC  3204               	rrcf	(___fladd@b+3)^0,f,c
  5906  001ACE  3203               	rrcf	(___fladd@b+2)^0,f,c
  5907  001AD0  3202               	rrcf	(___fladd@b+1)^0,f,c
  5908  001AD2  3201               	rrcf	___fladd@b^0,f,c
  5909  001AD4  2A0F               	incf	___fladd@bexp^0,f,c
  5910  001AD6                     l677:
  5911  001AD6  500E               	movf	___fladd@aexp^0,w,c
  5912  001AD8  5C0F               	subwf	___fladd@bexp^0,w,c
  5913  001ADA  A0D8               	btfss	status,0,c
  5914  001ADC  EF72  F00D         	goto	u3041
  5915  001AE0  EF74  F00D         	goto	u3040
  5916  001AE4                     u3041:
  5917  001AE4  EF4E  F00D         	goto	l678
  5918  001AE8                     u3040:
  5919  001AE8                     l676:
  5920  001AE8  BC0D               	btfsc	___fladd@signs^0,6,c
  5921  001AEA  EF79  F00D         	goto	u3051
  5922  001AEE  EF7B  F00D         	goto	u3050
  5923  001AF2                     u3051:
  5924  001AF2  EFBB  F00D         	goto	l3052
  5925  001AF6                     u3050:
  5926  001AF6  500F               	movf	___fladd@bexp^0,w,c
  5927  001AF8  A4D8               	btfss	status,2,c
  5928  001AFA  EF81  F00D         	goto	u3061
  5929  001AFE  EF83  F00D         	goto	u3060
  5930  001B02                     u3061:
  5931  001B02  EF8D  F00D         	goto	l3034
  5932  001B06                     u3060:
  5933  001B06  0E00               	movlw	0
  5934  001B08  6E01               	movwf	?___fladd^0,c
  5935  001B0A  0E00               	movlw	0
  5936  001B0C  6E02               	movwf	(?___fladd+1)^0,c
  5937  001B0E  0E00               	movlw	0
  5938  001B10  6E03               	movwf	(?___fladd+2)^0,c
  5939  001B12  0E00               	movlw	0
  5940  001B14  6E04               	movwf	(?___fladd+3)^0,c
  5941  001B16  EFDC  F00E         	goto	l685
  5942  001B1A                     l3034:
  5943  001B1A  5005               	movf	___fladd@a^0,w,c
  5944  001B1C  2601               	addwf	___fladd@b^0,f,c
  5945  001B1E  5006               	movf	(___fladd@a+1)^0,w,c
  5946  001B20  2202               	addwfc	(___fladd@b+1)^0,f,c
  5947  001B22  5007               	movf	(___fladd@a+2)^0,w,c
  5948  001B24  2203               	addwfc	(___fladd@b+2)^0,f,c
  5949  001B26  5008               	movf	(___fladd@a+3)^0,w,c
  5950  001B28  2204               	addwfc	(___fladd@b+3)^0,f,c
  5951  001B2A  A004               	btfss	(___fladd@b+3)^0,0,c
  5952  001B2C  EF9A  F00D         	goto	u3071
  5953  001B30  EF9C  F00D         	goto	u3070
  5954  001B34                     u3071:
  5955  001B34  EF48  F00E         	goto	l3088
  5956  001B38                     u3070:
  5957  001B38  A010               	btfss	___fladd@grs^0,0,c
  5958  001B3A  EFA1  F00D         	goto	u3081
  5959  001B3E  EFA3  F00D         	goto	u3080
  5960  001B42                     u3081:
  5961  001B42  EFA9  F00D         	goto	l3042
  5962  001B46                     u3080:
  5963  001B46  90D8               	bcf	status,0,c
  5964  001B48  3010               	rrcf	___fladd@grs^0,w,c
  5965  001B4A  0901               	iorlw	1
  5966  001B4C  6E10               	movwf	___fladd@grs^0,c
  5967  001B4E  EFAB  F00D         	goto	l3044
  5968  001B52                     l3042:
  5969  001B52  90D8               	bcf	status,0,c
  5970  001B54  3210               	rrcf	___fladd@grs^0,f,c
  5971  001B56                     l3044:
  5972  001B56  A001               	btfss	___fladd@b^0,0,c
  5973  001B58  EFB0  F00D         	goto	u3091
  5974  001B5C  EFB2  F00D         	goto	u3090
  5975  001B60                     u3091:
  5976  001B60  EFB3  F00D         	goto	l3048
  5977  001B64                     u3090:
  5978  001B64  8E10               	bsf	___fladd@grs^0,7,c
  5979  001B66                     l3048:
  5980  001B66  3404               	rlcf	(___fladd@b+3)^0,w,c
  5981  001B68  3204               	rrcf	(___fladd@b+3)^0,f,c
  5982  001B6A  3203               	rrcf	(___fladd@b+2)^0,f,c
  5983  001B6C  3202               	rrcf	(___fladd@b+1)^0,f,c
  5984  001B6E  3201               	rrcf	___fladd@b^0,f,c
  5985  001B70  2A0F               	incf	___fladd@bexp^0,f,c
  5986  001B72  EF48  F00E         	goto	l3088
  5987  001B76                     l3052:
  5988  001B76  5005               	movf	___fladd@a^0,w,c
  5989  001B78  5C01               	subwf	___fladd@b^0,w,c
  5990  001B7A  5006               	movf	(___fladd@a+1)^0,w,c
  5991  001B7C  5802               	subwfb	(___fladd@b+1)^0,w,c
  5992  001B7E  5007               	movf	(___fladd@a+2)^0,w,c
  5993  001B80  5803               	subwfb	(___fladd@b+2)^0,w,c
  5994  001B82  5004               	movf	(___fladd@b+3)^0,w,c
  5995  001B84  0A80               	xorlw	128
  5996  001B86  6E09               	movwf	??___fladd^0,c
  5997  001B88  5008               	movf	(___fladd@a+3)^0,w,c
  5998  001B8A  0A80               	xorlw	128
  5999  001B8C  5809               	subwfb	??___fladd^0,w,c
  6000  001B8E  B0D8               	btfsc	status,0,c
  6001  001B90  EFCC  F00D         	goto	u3101
  6002  001B94  EFCE  F00D         	goto	u3100
  6003  001B98                     u3101:
  6004  001B98  EFF9  F00D         	goto	l3062
  6005  001B9C                     u3100:
  6006  001B9C  5001               	movf	___fladd@b^0,w,c
  6007  001B9E  5C05               	subwf	___fladd@a^0,w,c
  6008  001BA0  6E09               	movwf	??___fladd^0,c
  6009  001BA2  5002               	movf	(___fladd@b+1)^0,w,c
  6010  001BA4  5806               	subwfb	(___fladd@a+1)^0,w,c
  6011  001BA6  6E0A               	movwf	(??___fladd+1)^0,c
  6012  001BA8  5003               	movf	(___fladd@b+2)^0,w,c
  6013  001BAA  5807               	subwfb	(___fladd@a+2)^0,w,c
  6014  001BAC  6E0B               	movwf	(??___fladd+2)^0,c
  6015  001BAE  5004               	movf	(___fladd@b+3)^0,w,c
  6016  001BB0  5808               	subwfb	(___fladd@a+3)^0,w,c
  6017  001BB2  6E0C               	movwf	(??___fladd+3)^0,c
  6018  001BB4  0EFF               	movlw	255
  6019  001BB6  2409               	addwf	??___fladd^0,w,c
  6020  001BB8  6E01               	movwf	___fladd@b^0,c
  6021  001BBA  0EFF               	movlw	255
  6022  001BBC  200A               	addwfc	(??___fladd+1)^0,w,c
  6023  001BBE  6E02               	movwf	(___fladd@b+1)^0,c
  6024  001BC0  0EFF               	movlw	255
  6025  001BC2  200B               	addwfc	(??___fladd+2)^0,w,c
  6026  001BC4  6E03               	movwf	(___fladd@b+2)^0,c
  6027  001BC6  0EFF               	movlw	255
  6028  001BC8  200C               	addwfc	(??___fladd+3)^0,w,c
  6029  001BCA  6E04               	movwf	(___fladd@b+3)^0,c
  6030  001BCC  0E80               	movlw	128
  6031  001BCE  1A0D               	xorwf	___fladd@signs^0,f,c
  6032  001BD0  6C10               	negf	___fladd@grs^0,c
  6033  001BD2  5010               	movf	___fladd@grs^0,w,c
  6034  001BD4  A4D8               	btfss	status,2,c
  6035  001BD6  EFEF  F00D         	goto	u3111
  6036  001BDA  EFF1  F00D         	goto	u3110
  6037  001BDE                     u3111:
  6038  001BDE  EF01  F00E         	goto	l693
  6039  001BE2                     u3110:
  6040  001BE2  0E01               	movlw	1
  6041  001BE4  2601               	addwf	___fladd@b^0,f,c
  6042  001BE6  0E00               	movlw	0
  6043  001BE8  2202               	addwfc	(___fladd@b+1)^0,f,c
  6044  001BEA  2203               	addwfc	(___fladd@b+2)^0,f,c
  6045  001BEC  2204               	addwfc	(___fladd@b+3)^0,f,c
  6046  001BEE  EF01  F00E         	goto	l693
  6047  001BF2                     l3062:
  6048  001BF2  5005               	movf	___fladd@a^0,w,c
  6049  001BF4  5E01               	subwf	___fladd@b^0,f,c
  6050  001BF6  5006               	movf	(___fladd@a+1)^0,w,c
  6051  001BF8  5A02               	subwfb	(___fladd@b+1)^0,f,c
  6052  001BFA  5007               	movf	(___fladd@a+2)^0,w,c
  6053  001BFC  5A03               	subwfb	(___fladd@b+2)^0,f,c
  6054  001BFE  5008               	movf	(___fladd@a+3)^0,w,c
  6055  001C00  5A04               	subwfb	(___fladd@b+3)^0,f,c
  6056  001C02                     l693:
  6057  001C02  5001               	movf	___fladd@b^0,w,c
  6058  001C04  1002               	iorwf	(___fladd@b+1)^0,w,c
  6059  001C06  1003               	iorwf	(___fladd@b+2)^0,w,c
  6060  001C08  1004               	iorwf	(___fladd@b+3)^0,w,c
  6061  001C0A  A4D8               	btfss	status,2,c
  6062  001C0C  EF0A  F00E         	goto	u3121
  6063  001C10  EF0C  F00E         	goto	u3120
  6064  001C14                     u3121:
  6065  001C14  EF41  F00E         	goto	l3086
  6066  001C18                     u3120:
  6067  001C18  5010               	movf	___fladd@grs^0,w,c
  6068  001C1A  A4D8               	btfss	status,2,c
  6069  001C1C  EF12  F00E         	goto	u3131
  6070  001C20  EF14  F00E         	goto	u3130
  6071  001C24                     u3131:
  6072  001C24  EF41  F00E         	goto	l3086
  6073  001C28                     u3130:
  6074  001C28  0E00               	movlw	0
  6075  001C2A  6E01               	movwf	?___fladd^0,c
  6076  001C2C  0E00               	movlw	0
  6077  001C2E  6E02               	movwf	(?___fladd+1)^0,c
  6078  001C30  0E00               	movlw	0
  6079  001C32  6E03               	movwf	(?___fladd+2)^0,c
  6080  001C34  0E00               	movlw	0
  6081  001C36  6E04               	movwf	(?___fladd+3)^0,c
  6082  001C38  EFDC  F00E         	goto	l685
  6083  001C3C                     l3070:
  6084  001C3C  90D8               	bcf	status,0,c
  6085  001C3E  3601               	rlcf	___fladd@b^0,f,c
  6086  001C40  3602               	rlcf	(___fladd@b+1)^0,f,c
  6087  001C42  3603               	rlcf	(___fladd@b+2)^0,f,c
  6088  001C44  3604               	rlcf	(___fladd@b+3)^0,f,c
  6089  001C46  AE10               	btfss	___fladd@grs^0,7,c
  6090  001C48  EF28  F00E         	goto	u3141
  6091  001C4C  EF2A  F00E         	goto	u3140
  6092  001C50                     u3141:
  6093  001C50  EF2B  F00E         	goto	l3076
  6094  001C54                     u3140:
  6095  001C54  8001               	bsf	___fladd@b^0,0,c
  6096  001C56                     l3076:
  6097  001C56  A010               	btfss	___fladd@grs^0,0,c
  6098  001C58  EF30  F00E         	goto	u3151
  6099  001C5C  EF32  F00E         	goto	u3150
  6100  001C60                     u3151:
  6101  001C60  EF36  F00E         	goto	l3080
  6102  001C64                     u3150:
  6103  001C64  80D8               	bsf	status,0,c
  6104  001C66  3610               	rlcf	___fladd@grs^0,f,c
  6105  001C68  EF38  F00E         	goto	l3082
  6106  001C6C                     l3080:
  6107  001C6C  90D8               	bcf	status,0,c
  6108  001C6E  3610               	rlcf	___fladd@grs^0,f,c
  6109  001C70                     l3082:
  6110  001C70  500F               	movf	___fladd@bexp^0,w,c
  6111  001C72  B4D8               	btfsc	status,2,c
  6112  001C74  EF3E  F00E         	goto	u3161
  6113  001C78  EF40  F00E         	goto	u3160
  6114  001C7C                     u3161:
  6115  001C7C  EF41  F00E         	goto	l3086
  6116  001C80                     u3160:
  6117  001C80  060F               	decf	___fladd@bexp^0,f,c
  6118  001C82                     l3086:
  6119  001C82  AE03               	btfss	(___fladd@b+2)^0,7,c
  6120  001C84  EF46  F00E         	goto	u3171
  6121  001C88  EF48  F00E         	goto	u3170
  6122  001C8C                     u3171:
  6123  001C8C  EF1E  F00E         	goto	l3070
  6124  001C90                     u3170:
  6125  001C90                     l3088:
  6126  001C90  0E00               	movlw	0
  6127  001C92  6E0E               	movwf	___fladd@aexp^0,c
  6128  001C94  AE10               	btfss	___fladd@grs^0,7,c
  6129  001C96  EF4F  F00E         	goto	u3181
  6130  001C9A  EF51  F00E         	goto	u3180
  6131  001C9E                     u3181:
  6132  001C9E  EF69  F00E         	goto	l702
  6133  001CA2                     u3180:
  6134  001CA2  C010  F009         	movff	___fladd@grs,??___fladd
  6135  001CA6  0E7F               	movlw	127
  6136  001CA8  1609               	andwf	??___fladd^0,f,c
  6137  001CAA  B4D8               	btfsc	status,2,c
  6138  001CAC  EF5A  F00E         	goto	u3191
  6139  001CB0  EF5C  F00E         	goto	u3190
  6140  001CB4                     u3191:
  6141  001CB4  EF60  F00E         	goto	l703
  6142  001CB8                     u3190:
  6143  001CB8                     l3094:
  6144  001CB8  0E01               	movlw	1
  6145  001CBA  6E0E               	movwf	___fladd@aexp^0,c
  6146  001CBC  EF69  F00E         	goto	l702
  6147  001CC0                     l703:
  6148  001CC0  A001               	btfss	___fladd@b^0,0,c
  6149  001CC2  EF65  F00E         	goto	u3201
  6150  001CC6  EF67  F00E         	goto	u3200
  6151  001CCA                     u3201:
  6152  001CCA  EF69  F00E         	goto	l702
  6153  001CCE                     u3200:
  6154  001CCE  EF5C  F00E         	goto	l3094
  6155  001CD2                     l702:
  6156  001CD2  500E               	movf	___fladd@aexp^0,w,c
  6157  001CD4  B4D8               	btfsc	status,2,c
  6158  001CD6  EF6F  F00E         	goto	u3211
  6159  001CDA  EF71  F00E         	goto	u3210
  6160  001CDE                     u3211:
  6161  001CDE  EF9C  F00E         	goto	l3106
  6162  001CE2                     u3210:
  6163  001CE2  0E01               	movlw	1
  6164  001CE4  2601               	addwf	___fladd@b^0,f,c
  6165  001CE6  0E00               	movlw	0
  6166  001CE8  2202               	addwfc	(___fladd@b+1)^0,f,c
  6167  001CEA  2203               	addwfc	(___fladd@b+2)^0,f,c
  6168  001CEC  2204               	addwfc	(___fladd@b+3)^0,f,c
  6169  001CEE  A004               	btfss	(___fladd@b+3)^0,0,c
  6170  001CF0  EF7C  F00E         	goto	u3221
  6171  001CF4  EF7E  F00E         	goto	u3220
  6172  001CF8                     u3221:
  6173  001CF8  EF9C  F00E         	goto	l3106
  6174  001CFC                     u3220:
  6175  001CFC  C001  F009         	movff	___fladd@b,??___fladd
  6176  001D00  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  6177  001D04  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  6178  001D08  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  6179  001D0C  340C               	rlcf	(??___fladd+3)^0,w,c
  6180  001D0E  320C               	rrcf	(??___fladd+3)^0,f,c
  6181  001D10  320B               	rrcf	(??___fladd+2)^0,f,c
  6182  001D12  320A               	rrcf	(??___fladd+1)^0,f,c
  6183  001D14  3209               	rrcf	??___fladd^0,f,c
  6184  001D16  C009  F001         	movff	??___fladd,___fladd@b
  6185  001D1A  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  6186  001D1E  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  6187  001D22  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  6188  001D26  280F               	incf	___fladd@bexp^0,w,c
  6189  001D28  B4D8               	btfsc	status,2,c
  6190  001D2A  EF99  F00E         	goto	u3231
  6191  001D2E  EF9B  F00E         	goto	u3230
  6192  001D32                     u3231:
  6193  001D32  EF9C  F00E         	goto	l3106
  6194  001D36                     u3230:
  6195  001D36  2A0F               	incf	___fladd@bexp^0,f,c
  6196  001D38                     l3106:
  6197  001D38  280F               	incf	___fladd@bexp^0,w,c
  6198  001D3A  B4D8               	btfsc	status,2,c
  6199  001D3C  EFA2  F00E         	goto	u3241
  6200  001D40  EFA4  F00E         	goto	u3240
  6201  001D44                     u3241:
  6202  001D44  EFAC  F00E         	goto	l3110
  6203  001D48                     u3240:
  6204  001D48  500F               	movf	___fladd@bexp^0,w,c
  6205  001D4A  A4D8               	btfss	status,2,c
  6206  001D4C  EFAA  F00E         	goto	u3251
  6207  001D50  EFAC  F00E         	goto	u3250
  6208  001D54                     u3251:
  6209  001D54  EFBE  F00E         	goto	l3114
  6210  001D58                     u3250:
  6211  001D58                     l3110:
  6212  001D58  0E00               	movlw	0
  6213  001D5A  6E01               	movwf	___fladd@b^0,c
  6214  001D5C  0E00               	movlw	0
  6215  001D5E  6E02               	movwf	(___fladd@b+1)^0,c
  6216  001D60  0E00               	movlw	0
  6217  001D62  6E03               	movwf	(___fladd@b+2)^0,c
  6218  001D64  0E00               	movlw	0
  6219  001D66  6E04               	movwf	(___fladd@b+3)^0,c
  6220  001D68  500F               	movf	___fladd@bexp^0,w,c
  6221  001D6A  A4D8               	btfss	status,2,c
  6222  001D6C  EFBA  F00E         	goto	u3261
  6223  001D70  EFBC  F00E         	goto	u3260
  6224  001D74                     u3261:
  6225  001D74  EFBE  F00E         	goto	l3114
  6226  001D78                     u3260:
  6227  001D78  0E00               	movlw	0
  6228  001D7A  6E0D               	movwf	___fladd@signs^0,c
  6229  001D7C                     l3114:
  6230  001D7C  A00F               	btfss	___fladd@bexp^0,0,c
  6231  001D7E  EFC3  F00E         	goto	u3271
  6232  001D82  EFC5  F00E         	goto	u3270
  6233  001D86                     u3271:
  6234  001D86  EFC8  F00E         	goto	l3118
  6235  001D8A                     u3270:
  6236  001D8A  8E03               	bsf	(___fladd@b+2)^0,7,c
  6237  001D8C  EFC9  F00E         	goto	l3120
  6238  001D90                     l3118:
  6239  001D90  9E03               	bcf	(___fladd@b+2)^0,7,c
  6240  001D92                     l3120:
  6241  001D92  90D8               	bcf	status,0,c
  6242  001D94  300F               	rrcf	___fladd@bexp^0,w,c
  6243  001D96  6E04               	movwf	(___fladd@b+3)^0,c
  6244  001D98  AE0D               	btfss	___fladd@signs^0,7,c
  6245  001D9A  EFD1  F00E         	goto	u3281
  6246  001D9E  EFD3  F00E         	goto	u3280
  6247  001DA2                     u3281:
  6248  001DA2  EFD4  F00E         	goto	l3126
  6249  001DA6                     u3280:
  6250  001DA6  8E04               	bsf	(___fladd@b+3)^0,7,c
  6251  001DA8                     l3126:
  6252  001DA8  C001  F001         	movff	___fladd@b,?___fladd
  6253  001DAC  C002  F002         	movff	___fladd@b+1,?___fladd+1
  6254  001DB0  C003  F003         	movff	___fladd@b+2,?___fladd+2
  6255  001DB4  C004  F004         	movff	___fladd@b+3,?___fladd+3
  6256  001DB8                     l685:
  6257  001DB8  0012               	return		;funcret
  6258  001DBA                     __end_of___fladd:
  6259                           	callstack 0
  6260                           
  6261 ;; *************** function ___flneg *****************
  6262 ;; Defined at:
  6263 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\flneg.c"
  6264 ;; Parameters:    Size  Location     Type
  6265 ;;  f1              4    0[COMRAM] unsigned char 
  6266 ;; Auto vars:     Size  Location     Type
  6267 ;;		None
  6268 ;; Return value:  Size  Location     Type
  6269 ;;                  4    0[COMRAM] unsigned char 
  6270 ;; Registers used:
  6271 ;;		wreg, status,2, status,0
  6272 ;; Tracked objects:
  6273 ;;		On entry : 0/0
  6274 ;;		On exit  : 0/0
  6275 ;;		Unchanged: 0/0
  6276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6277 ;;      Params:         4       0       0       0       0       0       0
  6278 ;;      Locals:         0       0       0       0       0       0       0
  6279 ;;      Temps:          0       0       0       0       0       0       0
  6280 ;;      Totals:         4       0       0       0       0       0       0
  6281 ;;Total ram usage:        4 bytes
  6282 ;; Hardware stack levels used: 1
  6283 ;; This function calls:
  6284 ;;		Nothing
  6285 ;; This function is called by:
  6286 ;;		_efgtoa
  6287 ;; This function uses a non-reentrant model
  6288 ;;
  6289                           
  6290                           	psect	text18
  6291  0041EA                     __ptext18:
  6292                           	callstack 0
  6293  0041EA                     ___flneg:
  6294                           	callstack 25
  6295  0041EA  5001               	movf	___flneg@f1^0,w,c
  6296  0041EC  1002               	iorwf	(___flneg@f1+1)^0,w,c
  6297  0041EE  1003               	iorwf	(___flneg@f1+2)^0,w,c
  6298  0041F0  1004               	iorwf	(___flneg@f1+3)^0,w,c
  6299  0041F2  B4D8               	btfsc	status,2,c
  6300  0041F4  EFFE  F020         	goto	u4081
  6301  0041F8  EF00  F021         	goto	u4080
  6302  0041FC                     u4081:
  6303  0041FC  EF08  F021         	goto	l3634
  6304  004200                     u4080:
  6305  004200  0E00               	movlw	0
  6306  004202  1A01               	xorwf	___flneg@f1^0,f,c
  6307  004204  0E00               	movlw	0
  6308  004206  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  6309  004208  0E00               	movlw	0
  6310  00420A  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  6311  00420C  0E80               	movlw	128
  6312  00420E  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  6313  004210                     l3634:
  6314  004210  C001  F001         	movff	___flneg@f1,?___flneg
  6315  004214  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  6316  004218  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  6317  00421C  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  6318  004220  0012               	return		;funcret
  6319  004222                     __end_of___flneg:
  6320                           	callstack 0
  6321                           
  6322 ;; *************** function ___flge *****************
  6323 ;; Defined at:
  6324 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\flge.c"
  6325 ;; Parameters:    Size  Location     Type
  6326 ;;  ff1             4   39[COMRAM] unsigned char 
  6327 ;;  ff2             4   43[COMRAM] unsigned char 
  6328 ;; Auto vars:     Size  Location     Type
  6329 ;;		None
  6330 ;; Return value:  Size  Location     Type
  6331 ;;		None               void
  6332 ;; Registers used:
  6333 ;;		wreg, status,2, status,0
  6334 ;; Tracked objects:
  6335 ;;		On entry : 0/0
  6336 ;;		On exit  : 0/0
  6337 ;;		Unchanged: 0/0
  6338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6339 ;;      Params:         8       0       0       0       0       0       0
  6340 ;;      Locals:         0       0       0       0       0       0       0
  6341 ;;      Temps:          4       0       0       0       0       0       0
  6342 ;;      Totals:        12       0       0       0       0       0       0
  6343 ;;Total ram usage:       12 bytes
  6344 ;; Hardware stack levels used: 1
  6345 ;; This function calls:
  6346 ;;		Nothing
  6347 ;; This function is called by:
  6348 ;;		_logic_CONTROL
  6349 ;;		_efgtoa
  6350 ;; This function uses a non-reentrant model
  6351 ;;
  6352                           
  6353                           	psect	text19
  6354  003562                     __ptext19:
  6355                           	callstack 0
  6356  003562                     ___flge:
  6357                           	callstack 29
  6358  003562  0E00               	movlw	0
  6359  003564  1428               	andwf	___flge@ff1^0,w,c
  6360  003566  6E30               	movwf	??___flge^0,c
  6361  003568  0E00               	movlw	0
  6362  00356A  1429               	andwf	(___flge@ff1+1)^0,w,c
  6363  00356C  6E31               	movwf	(??___flge+1)^0,c
  6364  00356E  0E80               	movlw	128
  6365  003570  142A               	andwf	(___flge@ff1+2)^0,w,c
  6366  003572  6E32               	movwf	(??___flge+2)^0,c
  6367  003574  0E7F               	movlw	127
  6368  003576  142B               	andwf	(___flge@ff1+3)^0,w,c
  6369  003578  6E33               	movwf	(??___flge+3)^0,c
  6370  00357A  5030               	movf	??___flge^0,w,c
  6371  00357C  1031               	iorwf	(??___flge+1)^0,w,c
  6372  00357E  1032               	iorwf	(??___flge+2)^0,w,c
  6373  003580  1033               	iorwf	(??___flge+3)^0,w,c
  6374  003582  A4D8               	btfss	status,2,c
  6375  003584  EFC6  F01A         	goto	u4031
  6376  003588  EFC8  F01A         	goto	u4030
  6377  00358C                     u4031:
  6378  00358C  EFD0  F01A         	goto	l3612
  6379  003590                     u4030:
  6380  003590  0E00               	movlw	0
  6381  003592  6E28               	movwf	___flge@ff1^0,c
  6382  003594  0E00               	movlw	0
  6383  003596  6E29               	movwf	(___flge@ff1+1)^0,c
  6384  003598  0E00               	movlw	0
  6385  00359A  6E2A               	movwf	(___flge@ff1+2)^0,c
  6386  00359C  0E00               	movlw	0
  6387  00359E  6E2B               	movwf	(___flge@ff1+3)^0,c
  6388  0035A0                     l3612:
  6389  0035A0  0E00               	movlw	0
  6390  0035A2  142C               	andwf	___flge@ff2^0,w,c
  6391  0035A4  6E30               	movwf	??___flge^0,c
  6392  0035A6  0E00               	movlw	0
  6393  0035A8  142D               	andwf	(___flge@ff2+1)^0,w,c
  6394  0035AA  6E31               	movwf	(??___flge+1)^0,c
  6395  0035AC  0E80               	movlw	128
  6396  0035AE  142E               	andwf	(___flge@ff2+2)^0,w,c
  6397  0035B0  6E32               	movwf	(??___flge+2)^0,c
  6398  0035B2  0E7F               	movlw	127
  6399  0035B4  142F               	andwf	(___flge@ff2+3)^0,w,c
  6400  0035B6  6E33               	movwf	(??___flge+3)^0,c
  6401  0035B8  5030               	movf	??___flge^0,w,c
  6402  0035BA  1031               	iorwf	(??___flge+1)^0,w,c
  6403  0035BC  1032               	iorwf	(??___flge+2)^0,w,c
  6404  0035BE  1033               	iorwf	(??___flge+3)^0,w,c
  6405  0035C0  A4D8               	btfss	status,2,c
  6406  0035C2  EFE5  F01A         	goto	u4041
  6407  0035C6  EFE7  F01A         	goto	u4040
  6408  0035CA                     u4041:
  6409  0035CA  EFEF  F01A         	goto	l3616
  6410  0035CE                     u4040:
  6411  0035CE  0E00               	movlw	0
  6412  0035D0  6E2C               	movwf	___flge@ff2^0,c
  6413  0035D2  0E00               	movlw	0
  6414  0035D4  6E2D               	movwf	(___flge@ff2+1)^0,c
  6415  0035D6  0E00               	movlw	0
  6416  0035D8  6E2E               	movwf	(___flge@ff2+2)^0,c
  6417  0035DA  0E00               	movlw	0
  6418  0035DC  6E2F               	movwf	(___flge@ff2+3)^0,c
  6419  0035DE                     l3616:
  6420  0035DE  AE2B               	btfss	(___flge@ff1+3)^0,7,c
  6421  0035E0  EFF4  F01A         	goto	u4051
  6422  0035E4  EFF6  F01A         	goto	u4050
  6423  0035E8                     u4051:
  6424  0035E8  EFFF  F01A         	goto	l3620
  6425  0035EC                     u4050:
  6426  0035EC  6C28               	negf	___flge@ff1^0,c
  6427  0035EE  1E29               	comf	(___flge@ff1+1)^0,f,c
  6428  0035F0  B0D8               	btfsc	status,0,c
  6429  0035F2  2A29               	incf	(___flge@ff1+1)^0,f,c
  6430  0035F4  1E2A               	comf	(___flge@ff1+2)^0,f,c
  6431  0035F6  B0D8               	btfsc	status,0,c
  6432  0035F8  2A2A               	incf	(___flge@ff1+2)^0,f,c
  6433  0035FA  0E80               	movlw	128
  6434  0035FC  562B               	subfwb	(___flge@ff1+3)^0,f,c
  6435  0035FE                     l3620:
  6436  0035FE  AE2F               	btfss	(___flge@ff2+3)^0,7,c
  6437  003600  EF04  F01B         	goto	u4061
  6438  003604  EF06  F01B         	goto	u4060
  6439  003608                     u4061:
  6440  003608  EF0F  F01B         	goto	l413
  6441  00360C                     u4060:
  6442  00360C  6C2C               	negf	___flge@ff2^0,c
  6443  00360E  1E2D               	comf	(___flge@ff2+1)^0,f,c
  6444  003610  B0D8               	btfsc	status,0,c
  6445  003612  2A2D               	incf	(___flge@ff2+1)^0,f,c
  6446  003614  1E2E               	comf	(___flge@ff2+2)^0,f,c
  6447  003616  B0D8               	btfsc	status,0,c
  6448  003618  2A2E               	incf	(___flge@ff2+2)^0,f,c
  6449  00361A  0E80               	movlw	128
  6450  00361C  562F               	subfwb	(___flge@ff2+3)^0,f,c
  6451  00361E                     l413:
  6452  00361E  0E00               	movlw	0
  6453  003620  1A28               	xorwf	___flge@ff1^0,f,c
  6454  003622  0E00               	movlw	0
  6455  003624  1A29               	xorwf	(___flge@ff1+1)^0,f,c
  6456  003626  0E00               	movlw	0
  6457  003628  1A2A               	xorwf	(___flge@ff1+2)^0,f,c
  6458  00362A  0E80               	movlw	128
  6459  00362C  1A2B               	xorwf	(___flge@ff1+3)^0,f,c
  6460  00362E  0E00               	movlw	0
  6461  003630  1A2C               	xorwf	___flge@ff2^0,f,c
  6462  003632  0E00               	movlw	0
  6463  003634  1A2D               	xorwf	(___flge@ff2+1)^0,f,c
  6464  003636  0E00               	movlw	0
  6465  003638  1A2E               	xorwf	(___flge@ff2+2)^0,f,c
  6466  00363A  0E80               	movlw	128
  6467  00363C  1A2F               	xorwf	(___flge@ff2+3)^0,f,c
  6468  00363E  502C               	movf	___flge@ff2^0,w,c
  6469  003640  5C28               	subwf	___flge@ff1^0,w,c
  6470  003642  502D               	movf	(___flge@ff2+1)^0,w,c
  6471  003644  5829               	subwfb	(___flge@ff1+1)^0,w,c
  6472  003646  502E               	movf	(___flge@ff2+2)^0,w,c
  6473  003648  582A               	subwfb	(___flge@ff1+2)^0,w,c
  6474  00364A  502F               	movf	(___flge@ff2+3)^0,w,c
  6475  00364C  582B               	subwfb	(___flge@ff1+3)^0,w,c
  6476  00364E  B0D8               	btfsc	status,0,c
  6477  003650  EF2C  F01B         	goto	u4071
  6478  003654  EF2E  F01B         	goto	u4070
  6479  003658                     u4071:
  6480  003658  EF31  F01B         	goto	l3626
  6481  00365C                     u4070:
  6482  00365C  90D8               	bcf	status,0,c
  6483  00365E  EF32  F01B         	goto	l418
  6484  003662                     l3626:
  6485  003662  80D8               	bsf	status,0,c
  6486  003664                     l418:
  6487  003664  0012               	return		;funcret
  6488  003666                     __end_of___flge:
  6489                           	callstack 0
  6490                           
  6491 ;; *************** function ___fleq *****************
  6492 ;; Defined at:
  6493 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fleq.c"
  6494 ;; Parameters:    Size  Location     Type
  6495 ;;  ff1             4    0[COMRAM] unsigned char 
  6496 ;;  ff2             4    4[COMRAM] unsigned char 
  6497 ;; Auto vars:     Size  Location     Type
  6498 ;;		None
  6499 ;; Return value:  Size  Location     Type
  6500 ;;		None               void
  6501 ;; Registers used:
  6502 ;;		wreg, status,2, status,0
  6503 ;; Tracked objects:
  6504 ;;		On entry : 0/0
  6505 ;;		On exit  : 0/0
  6506 ;;		Unchanged: 0/0
  6507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6508 ;;      Params:         8       0       0       0       0       0       0
  6509 ;;      Locals:         0       0       0       0       0       0       0
  6510 ;;      Temps:          4       0       0       0       0       0       0
  6511 ;;      Totals:        12       0       0       0       0       0       0
  6512 ;;Total ram usage:       12 bytes
  6513 ;; Hardware stack levels used: 1
  6514 ;; This function calls:
  6515 ;;		Nothing
  6516 ;; This function is called by:
  6517 ;;		_logic_CONTROL
  6518 ;;		_efgtoa
  6519 ;; This function uses a non-reentrant model
  6520 ;;
  6521                           
  6522                           	psect	text20
  6523  003C1E                     __ptext20:
  6524                           	callstack 0
  6525  003C1E                     ___fleq:
  6526                           	callstack 29
  6527  003C1E  0E00               	movlw	0
  6528  003C20  1401               	andwf	___fleq@ff1^0,w,c
  6529  003C22  6E09               	movwf	??___fleq^0,c
  6530  003C24  0E00               	movlw	0
  6531  003C26  1402               	andwf	(___fleq@ff1+1)^0,w,c
  6532  003C28  6E0A               	movwf	(??___fleq+1)^0,c
  6533  003C2A  0E80               	movlw	128
  6534  003C2C  1403               	andwf	(___fleq@ff1+2)^0,w,c
  6535  003C2E  6E0B               	movwf	(??___fleq+2)^0,c
  6536  003C30  0E7F               	movlw	127
  6537  003C32  1404               	andwf	(___fleq@ff1+3)^0,w,c
  6538  003C34  6E0C               	movwf	(??___fleq+3)^0,c
  6539  003C36  5009               	movf	??___fleq^0,w,c
  6540  003C38  100A               	iorwf	(??___fleq+1)^0,w,c
  6541  003C3A  100B               	iorwf	(??___fleq+2)^0,w,c
  6542  003C3C  100C               	iorwf	(??___fleq+3)^0,w,c
  6543  003C3E  A4D8               	btfss	status,2,c
  6544  003C40  EF24  F01E         	goto	u4001
  6545  003C44  EF26  F01E         	goto	u4000
  6546  003C48                     u4001:
  6547  003C48  EF2E  F01E         	goto	l3596
  6548  003C4C                     u4000:
  6549  003C4C  0E00               	movlw	0
  6550  003C4E  6E01               	movwf	___fleq@ff1^0,c
  6551  003C50  0E00               	movlw	0
  6552  003C52  6E02               	movwf	(___fleq@ff1+1)^0,c
  6553  003C54  0E00               	movlw	0
  6554  003C56  6E03               	movwf	(___fleq@ff1+2)^0,c
  6555  003C58  0E00               	movlw	0
  6556  003C5A  6E04               	movwf	(___fleq@ff1+3)^0,c
  6557  003C5C                     l3596:
  6558  003C5C  0E00               	movlw	0
  6559  003C5E  1405               	andwf	___fleq@ff2^0,w,c
  6560  003C60  6E09               	movwf	??___fleq^0,c
  6561  003C62  0E00               	movlw	0
  6562  003C64  1406               	andwf	(___fleq@ff2+1)^0,w,c
  6563  003C66  6E0A               	movwf	(??___fleq+1)^0,c
  6564  003C68  0E80               	movlw	128
  6565  003C6A  1407               	andwf	(___fleq@ff2+2)^0,w,c
  6566  003C6C  6E0B               	movwf	(??___fleq+2)^0,c
  6567  003C6E  0E7F               	movlw	127
  6568  003C70  1408               	andwf	(___fleq@ff2+3)^0,w,c
  6569  003C72  6E0C               	movwf	(??___fleq+3)^0,c
  6570  003C74  5009               	movf	??___fleq^0,w,c
  6571  003C76  100A               	iorwf	(??___fleq+1)^0,w,c
  6572  003C78  100B               	iorwf	(??___fleq+2)^0,w,c
  6573  003C7A  100C               	iorwf	(??___fleq+3)^0,w,c
  6574  003C7C  A4D8               	btfss	status,2,c
  6575  003C7E  EF43  F01E         	goto	u4011
  6576  003C82  EF45  F01E         	goto	u4010
  6577  003C86                     u4011:
  6578  003C86  EF4D  F01E         	goto	l3600
  6579  003C8A                     u4010:
  6580  003C8A  0E00               	movlw	0
  6581  003C8C  6E05               	movwf	___fleq@ff2^0,c
  6582  003C8E  0E00               	movlw	0
  6583  003C90  6E06               	movwf	(___fleq@ff2+1)^0,c
  6584  003C92  0E00               	movlw	0
  6585  003C94  6E07               	movwf	(___fleq@ff2+2)^0,c
  6586  003C96  0E00               	movlw	0
  6587  003C98  6E08               	movwf	(___fleq@ff2+3)^0,c
  6588  003C9A                     l3600:
  6589  003C9A  5005               	movf	___fleq@ff2^0,w,c
  6590  003C9C  1801               	xorwf	___fleq@ff1^0,w,c
  6591  003C9E  E10F               	bnz	u4020
  6592  003CA0  5006               	movf	(___fleq@ff2+1)^0,w,c
  6593  003CA2  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  6594  003CA4  E10C               	bnz	u4020
  6595  003CA6  5007               	movf	(___fleq@ff2+2)^0,w,c
  6596  003CA8  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  6597  003CAA  E109               	bnz	u4020
  6598  003CAC  5008               	movf	(___fleq@ff2+3)^0,w,c
  6599  003CAE  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  6600  003CB0  B4D8               	btfsc	status,2,c
  6601  003CB2  EF5D  F01E         	goto	u4021
  6602  003CB6  EF5F  F01E         	goto	u4020
  6603  003CBA                     u4021:
  6604  003CBA  EF62  F01E         	goto	l3604
  6605  003CBE                     u4020:
  6606  003CBE  90D8               	bcf	status,0,c
  6607  003CC0  EF63  F01E         	goto	l407
  6608  003CC4                     l3604:
  6609  003CC4  80D8               	bsf	status,0,c
  6610  003CC6                     l407:
  6611  003CC6  0012               	return		;funcret
  6612  003CC8                     __end_of___fleq:
  6613                           	callstack 0
  6614                           
  6615 ;; *************** function ___fldiv *****************
  6616 ;; Defined at:
  6617 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcdiv.c"
  6618 ;; Parameters:    Size  Location     Type
  6619 ;;  b               4    0[COMRAM] unsigned char 
  6620 ;;  a               4    4[COMRAM] unsigned char 
  6621 ;; Auto vars:     Size  Location     Type
  6622 ;;  grs             4   19[COMRAM] unsigned long 
  6623 ;;  rem             4   12[COMRAM] unsigned long 
  6624 ;;  new_exp         2   17[COMRAM] short 
  6625 ;;  aexp            1   24[COMRAM] unsigned char 
  6626 ;;  bexp            1   23[COMRAM] unsigned char 
  6627 ;;  sign            1   16[COMRAM] unsigned char 
  6628 ;; Return value:  Size  Location     Type
  6629 ;;                  4    0[COMRAM] unsigned char 
  6630 ;; Registers used:
  6631 ;;		wreg, status,2, status,0
  6632 ;; Tracked objects:
  6633 ;;		On entry : 0/0
  6634 ;;		On exit  : 0/0
  6635 ;;		Unchanged: 0/0
  6636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6637 ;;      Params:         8       0       0       0       0       0       0
  6638 ;;      Locals:        13       0       0       0       0       0       0
  6639 ;;      Temps:          4       0       0       0       0       0       0
  6640 ;;      Totals:        25       0       0       0       0       0       0
  6641 ;;Total ram usage:       25 bytes
  6642 ;; Hardware stack levels used: 1
  6643 ;; This function calls:
  6644 ;;		Nothing
  6645 ;; This function is called by:
  6646 ;;		_efgtoa
  6647 ;; This function uses a non-reentrant model
  6648 ;;
  6649                           
  6650                           	psect	text21
  6651  0021E4                     __ptext21:
  6652                           	callstack 0
  6653  0021E4                     ___fldiv:
  6654                           	callstack 25
  6655  0021E4  5004               	movf	(___fldiv@b+3)^0,w,c
  6656  0021E6  0B80               	andlw	128
  6657  0021E8  6E11               	movwf	___fldiv@sign^0,c
  6658  0021EA  5004               	movf	(___fldiv@b+3)^0,w,c
  6659  0021EC  2404               	addwf	(___fldiv@b+3)^0,w,c
  6660  0021EE  6E18               	movwf	___fldiv@bexp^0,c
  6661  0021F0  AE03               	btfss	(___fldiv@b+2)^0,7,c
  6662  0021F2  EFFD  F010         	goto	u3461
  6663  0021F6  EFFF  F010         	goto	u3460
  6664  0021FA                     u3461:
  6665  0021FA  EF00  F011         	goto	l3244
  6666  0021FE                     u3460:
  6667  0021FE  8018               	bsf	___fldiv@bexp^0,0,c
  6668  002200                     l3244:
  6669  002200  5018               	movf	___fldiv@bexp^0,w,c
  6670  002202  B4D8               	btfsc	status,2,c
  6671  002204  EF06  F011         	goto	u3471
  6672  002208  EF08  F011         	goto	u3470
  6673  00220C                     u3471:
  6674  00220C  EF1D  F011         	goto	l3254
  6675  002210                     u3470:
  6676  002210  2818               	incf	___fldiv@bexp^0,w,c
  6677  002212  A4D8               	btfss	status,2,c
  6678  002214  EF0E  F011         	goto	u3481
  6679  002218  EF10  F011         	goto	u3480
  6680  00221C                     u3481:
  6681  00221C  EF18  F011         	goto	l3250
  6682  002220                     u3480:
  6683  002220  0E00               	movlw	0
  6684  002222  6E01               	movwf	___fldiv@b^0,c
  6685  002224  0E00               	movlw	0
  6686  002226  6E02               	movwf	(___fldiv@b+1)^0,c
  6687  002228  0E00               	movlw	0
  6688  00222A  6E03               	movwf	(___fldiv@b+2)^0,c
  6689  00222C  0E00               	movlw	0
  6690  00222E  6E04               	movwf	(___fldiv@b+3)^0,c
  6691  002230                     l3250:
  6692  002230  8E03               	bsf	(___fldiv@b+2)^0,7,c
  6693  002232  0E00               	movlw	0
  6694  002234  6E04               	movwf	(___fldiv@b+3)^0,c
  6695  002236  EF25  F011         	goto	l3256
  6696  00223A                     l3254:
  6697  00223A  0E00               	movlw	0
  6698  00223C  6E01               	movwf	___fldiv@b^0,c
  6699  00223E  0E00               	movlw	0
  6700  002240  6E02               	movwf	(___fldiv@b+1)^0,c
  6701  002242  0E00               	movlw	0
  6702  002244  6E03               	movwf	(___fldiv@b+2)^0,c
  6703  002246  0E00               	movlw	0
  6704  002248  6E04               	movwf	(___fldiv@b+3)^0,c
  6705  00224A                     l3256:
  6706  00224A  5008               	movf	(___fldiv@a+3)^0,w,c
  6707  00224C  0B80               	andlw	128
  6708  00224E  1A11               	xorwf	___fldiv@sign^0,f,c
  6709  002250  5008               	movf	(___fldiv@a+3)^0,w,c
  6710  002252  2408               	addwf	(___fldiv@a+3)^0,w,c
  6711  002254  6E19               	movwf	___fldiv@aexp^0,c
  6712  002256  AE07               	btfss	(___fldiv@a+2)^0,7,c
  6713  002258  EF30  F011         	goto	u3491
  6714  00225C  EF32  F011         	goto	u3490
  6715  002260                     u3491:
  6716  002260  EF33  F011         	goto	l3264
  6717  002264                     u3490:
  6718  002264  8019               	bsf	___fldiv@aexp^0,0,c
  6719  002266                     l3264:
  6720  002266  5019               	movf	___fldiv@aexp^0,w,c
  6721  002268  B4D8               	btfsc	status,2,c
  6722  00226A  EF39  F011         	goto	u3501
  6723  00226E  EF3B  F011         	goto	u3500
  6724  002272                     u3501:
  6725  002272  EF50  F011         	goto	l3274
  6726  002276                     u3500:
  6727  002276  2819               	incf	___fldiv@aexp^0,w,c
  6728  002278  A4D8               	btfss	status,2,c
  6729  00227A  EF41  F011         	goto	u3511
  6730  00227E  EF43  F011         	goto	u3510
  6731  002282                     u3511:
  6732  002282  EF4B  F011         	goto	l3270
  6733  002286                     u3510:
  6734  002286  0E00               	movlw	0
  6735  002288  6E05               	movwf	___fldiv@a^0,c
  6736  00228A  0E00               	movlw	0
  6737  00228C  6E06               	movwf	(___fldiv@a+1)^0,c
  6738  00228E  0E00               	movlw	0
  6739  002290  6E07               	movwf	(___fldiv@a+2)^0,c
  6740  002292  0E00               	movlw	0
  6741  002294  6E08               	movwf	(___fldiv@a+3)^0,c
  6742  002296                     l3270:
  6743  002296  8E07               	bsf	(___fldiv@a+2)^0,7,c
  6744  002298  0E00               	movlw	0
  6745  00229A  6E08               	movwf	(___fldiv@a+3)^0,c
  6746  00229C  EF58  F011         	goto	l3276
  6747  0022A0                     l3274:
  6748  0022A0  0E00               	movlw	0
  6749  0022A2  6E05               	movwf	___fldiv@a^0,c
  6750  0022A4  0E00               	movlw	0
  6751  0022A6  6E06               	movwf	(___fldiv@a+1)^0,c
  6752  0022A8  0E00               	movlw	0
  6753  0022AA  6E07               	movwf	(___fldiv@a+2)^0,c
  6754  0022AC  0E00               	movlw	0
  6755  0022AE  6E08               	movwf	(___fldiv@a+3)^0,c
  6756  0022B0                     l3276:
  6757  0022B0  5005               	movf	___fldiv@a^0,w,c
  6758  0022B2  1006               	iorwf	(___fldiv@a+1)^0,w,c
  6759  0022B4  1007               	iorwf	(___fldiv@a+2)^0,w,c
  6760  0022B6  1008               	iorwf	(___fldiv@a+3)^0,w,c
  6761  0022B8  A4D8               	btfss	status,2,c
  6762  0022BA  EF61  F011         	goto	u3521
  6763  0022BE  EF63  F011         	goto	u3520
  6764  0022C2                     u3521:
  6765  0022C2  EF7B  F011         	goto	l3288
  6766  0022C6                     u3520:
  6767  0022C6  0E00               	movlw	0
  6768  0022C8  6E01               	movwf	___fldiv@b^0,c
  6769  0022CA  0E00               	movlw	0
  6770  0022CC  6E02               	movwf	(___fldiv@b+1)^0,c
  6771  0022CE  0E00               	movlw	0
  6772  0022D0  6E03               	movwf	(___fldiv@b+2)^0,c
  6773  0022D2  0E00               	movlw	0
  6774  0022D4  6E04               	movwf	(___fldiv@b+3)^0,c
  6775  0022D6  0E80               	movlw	128
  6776  0022D8  1203               	iorwf	(___fldiv@b+2)^0,f,c
  6777  0022DA  0E7F               	movlw	127
  6778  0022DC  1204               	iorwf	(___fldiv@b+3)^0,f,c
  6779  0022DE                     l3282:
  6780  0022DE  5011               	movf	___fldiv@sign^0,w,c
  6781  0022E0  1204               	iorwf	(___fldiv@b+3)^0,f,c
  6782  0022E2  C001  F001         	movff	___fldiv@b,?___fldiv
  6783  0022E6  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  6784  0022EA  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  6785  0022EE  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  6786  0022F2  EFBE  F012         	goto	l730
  6787  0022F6                     l3288:
  6788  0022F6  5018               	movf	___fldiv@bexp^0,w,c
  6789  0022F8  A4D8               	btfss	status,2,c
  6790  0022FA  EF81  F011         	goto	u3531
  6791  0022FE  EF83  F011         	goto	u3530
  6792  002302                     u3531:
  6793  002302  EF8D  F011         	goto	l3296
  6794  002306                     u3530:
  6795  002306  0E00               	movlw	0
  6796  002308  6E01               	movwf	?___fldiv^0,c
  6797  00230A  0E00               	movlw	0
  6798  00230C  6E02               	movwf	(?___fldiv+1)^0,c
  6799  00230E  0E00               	movlw	0
  6800  002310  6E03               	movwf	(?___fldiv+2)^0,c
  6801  002312  0E00               	movlw	0
  6802  002314  6E04               	movwf	(?___fldiv+3)^0,c
  6803  002316  EFBE  F012         	goto	l730
  6804  00231A                     l3296:
  6805  00231A  5019               	movf	___fldiv@aexp^0,w,c
  6806  00231C  C018  F009         	movff	___fldiv@bexp,??___fldiv
  6807  002320  6A0A               	clrf	(??___fldiv+1)^0,c
  6808  002322  5E09               	subwf	??___fldiv^0,f,c
  6809  002324  0E00               	movlw	0
  6810  002326  5A0A               	subwfb	(??___fldiv+1)^0,f,c
  6811  002328  0E7F               	movlw	127
  6812  00232A  2409               	addwf	??___fldiv^0,w,c
  6813  00232C  6E12               	movwf	___fldiv@new_exp^0,c
  6814  00232E  0E00               	movlw	0
  6815  002330  200A               	addwfc	(??___fldiv+1)^0,w,c
  6816  002332  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  6817  002334  C001  F00D         	movff	___fldiv@b,___fldiv@rem
  6818  002338  C002  F00E         	movff	___fldiv@b+1,___fldiv@rem+1
  6819  00233C  C003  F00F         	movff	___fldiv@b+2,___fldiv@rem+2
  6820  002340  C004  F010         	movff	___fldiv@b+3,___fldiv@rem+3
  6821  002344  0E00               	movlw	0
  6822  002346  6E01               	movwf	___fldiv@b^0,c
  6823  002348  0E00               	movlw	0
  6824  00234A  6E02               	movwf	(___fldiv@b+1)^0,c
  6825  00234C  0E00               	movlw	0
  6826  00234E  6E03               	movwf	(___fldiv@b+2)^0,c
  6827  002350  0E00               	movlw	0
  6828  002352  6E04               	movwf	(___fldiv@b+3)^0,c
  6829  002354  0E00               	movlw	0
  6830  002356  6E14               	movwf	___fldiv@grs^0,c
  6831  002358  0E00               	movlw	0
  6832  00235A  6E15               	movwf	(___fldiv@grs+1)^0,c
  6833  00235C  0E00               	movlw	0
  6834  00235E  6E16               	movwf	(___fldiv@grs+2)^0,c
  6835  002360  0E00               	movlw	0
  6836  002362  6E17               	movwf	(___fldiv@grs+3)^0,c
  6837  002364  0E00               	movlw	0
  6838  002366  6E19               	movwf	___fldiv@aexp^0,c
  6839  002368  EFEE  F011         	goto	l732
  6840  00236C                     l3306:
  6841  00236C  5019               	movf	___fldiv@aexp^0,w,c
  6842  00236E  B4D8               	btfsc	status,2,c
  6843  002370  EFBC  F011         	goto	u3541
  6844  002374  EFBE  F011         	goto	u3540
  6845  002378                     u3541:
  6846  002378  EFD5  F011         	goto	l3314
  6847  00237C                     u3540:
  6848  00237C  90D8               	bcf	status,0,c
  6849  00237E  360D               	rlcf	___fldiv@rem^0,f,c
  6850  002380  360E               	rlcf	(___fldiv@rem+1)^0,f,c
  6851  002382  360F               	rlcf	(___fldiv@rem+2)^0,f,c
  6852  002384  3610               	rlcf	(___fldiv@rem+3)^0,f,c
  6853  002386  90D8               	bcf	status,0,c
  6854  002388  3601               	rlcf	___fldiv@b^0,f,c
  6855  00238A  3602               	rlcf	(___fldiv@b+1)^0,f,c
  6856  00238C  3603               	rlcf	(___fldiv@b+2)^0,f,c
  6857  00238E  3604               	rlcf	(___fldiv@b+3)^0,f,c
  6858  002390  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  6859  002392  EFCD  F011         	goto	u3551
  6860  002396  EFCF  F011         	goto	u3550
  6861  00239A                     u3551:
  6862  00239A  EFD0  F011         	goto	l735
  6863  00239E                     u3550:
  6864  00239E  8001               	bsf	___fldiv@b^0,0,c
  6865  0023A0                     l735:
  6866  0023A0  90D8               	bcf	status,0,c
  6867  0023A2  3614               	rlcf	___fldiv@grs^0,f,c
  6868  0023A4  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  6869  0023A6  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  6870  0023A8  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  6871  0023AA                     l3314:
  6872  0023AA  5005               	movf	___fldiv@a^0,w,c
  6873  0023AC  5C0D               	subwf	___fldiv@rem^0,w,c
  6874  0023AE  5006               	movf	(___fldiv@a+1)^0,w,c
  6875  0023B0  580E               	subwfb	(___fldiv@rem+1)^0,w,c
  6876  0023B2  5007               	movf	(___fldiv@a+2)^0,w,c
  6877  0023B4  580F               	subwfb	(___fldiv@rem+2)^0,w,c
  6878  0023B6  5008               	movf	(___fldiv@a+3)^0,w,c
  6879  0023B8  5810               	subwfb	(___fldiv@rem+3)^0,w,c
  6880  0023BA  A0D8               	btfss	status,0,c
  6881  0023BC  EFE2  F011         	goto	u3561
  6882  0023C0  EFE4  F011         	goto	u3560
  6883  0023C4                     u3561:
  6884  0023C4  EFED  F011         	goto	l3320
  6885  0023C8                     u3560:
  6886  0023C8  8C17               	bsf	(___fldiv@grs+3)^0,6,c
  6887  0023CA  5005               	movf	___fldiv@a^0,w,c
  6888  0023CC  5E0D               	subwf	___fldiv@rem^0,f,c
  6889  0023CE  5006               	movf	(___fldiv@a+1)^0,w,c
  6890  0023D0  5A0E               	subwfb	(___fldiv@rem+1)^0,f,c
  6891  0023D2  5007               	movf	(___fldiv@a+2)^0,w,c
  6892  0023D4  5A0F               	subwfb	(___fldiv@rem+2)^0,f,c
  6893  0023D6  5008               	movf	(___fldiv@a+3)^0,w,c
  6894  0023D8  5A10               	subwfb	(___fldiv@rem+3)^0,f,c
  6895  0023DA                     l3320:
  6896  0023DA  2A19               	incf	___fldiv@aexp^0,f,c
  6897  0023DC                     l732:
  6898  0023DC  0E19               	movlw	25
  6899  0023DE  6419               	cpfsgt	___fldiv@aexp^0,c
  6900  0023E0  EFF4  F011         	goto	u3571
  6901  0023E4  EFF6  F011         	goto	u3570
  6902  0023E8                     u3571:
  6903  0023E8  EFB6  F011         	goto	l3306
  6904  0023EC                     u3570:
  6905  0023EC  500D               	movf	___fldiv@rem^0,w,c
  6906  0023EE  100E               	iorwf	(___fldiv@rem+1)^0,w,c
  6907  0023F0  100F               	iorwf	(___fldiv@rem+2)^0,w,c
  6908  0023F2  1010               	iorwf	(___fldiv@rem+3)^0,w,c
  6909  0023F4  B4D8               	btfsc	status,2,c
  6910  0023F6  EFFF  F011         	goto	u3581
  6911  0023FA  EF01  F012         	goto	u3580
  6912  0023FE                     u3581:
  6913  0023FE  EF19  F012         	goto	l3332
  6914  002402                     u3580:
  6915  002402  8014               	bsf	___fldiv@grs^0,0,c
  6916  002404  EF19  F012         	goto	l3332
  6917  002408                     l3326:
  6918  002408  90D8               	bcf	status,0,c
  6919  00240A  3601               	rlcf	___fldiv@b^0,f,c
  6920  00240C  3602               	rlcf	(___fldiv@b+1)^0,f,c
  6921  00240E  3603               	rlcf	(___fldiv@b+2)^0,f,c
  6922  002410  3604               	rlcf	(___fldiv@b+3)^0,f,c
  6923  002412  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  6924  002414  EF0E  F012         	goto	u3591
  6925  002418  EF10  F012         	goto	u3590
  6926  00241C                     u3591:
  6927  00241C  EF11  F012         	goto	l741
  6928  002420                     u3590:
  6929  002420  8001               	bsf	___fldiv@b^0,0,c
  6930  002422                     l741:
  6931  002422  90D8               	bcf	status,0,c
  6932  002424  3614               	rlcf	___fldiv@grs^0,f,c
  6933  002426  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  6934  002428  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  6935  00242A  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  6936  00242C  0612               	decf	___fldiv@new_exp^0,f,c
  6937  00242E  A0D8               	btfss	status,0,c
  6938  002430  0613               	decf	(___fldiv@new_exp+1)^0,f,c
  6939  002432                     l3332:
  6940  002432  AE03               	btfss	(___fldiv@b+2)^0,7,c
  6941  002434  EF1E  F012         	goto	u3601
  6942  002438  EF20  F012         	goto	u3600
  6943  00243C                     u3601:
  6944  00243C  EF04  F012         	goto	l3326
  6945  002440                     u3600:
  6946  002440  0E00               	movlw	0
  6947  002442  6E19               	movwf	___fldiv@aexp^0,c
  6948  002444  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  6949  002446  EF27  F012         	goto	u3611
  6950  00244A  EF29  F012         	goto	u3610
  6951  00244E                     u3611:
  6952  00244E  EF4D  F012         	goto	l743
  6953  002452                     u3610:
  6954  002452  0EFF               	movlw	255
  6955  002454  1414               	andwf	___fldiv@grs^0,w,c
  6956  002456  6E09               	movwf	??___fldiv^0,c
  6957  002458  0EFF               	movlw	255
  6958  00245A  1415               	andwf	(___fldiv@grs+1)^0,w,c
  6959  00245C  6E0A               	movwf	(??___fldiv+1)^0,c
  6960  00245E  0EFF               	movlw	255
  6961  002460  1416               	andwf	(___fldiv@grs+2)^0,w,c
  6962  002462  6E0B               	movwf	(??___fldiv+2)^0,c
  6963  002464  0E7F               	movlw	127
  6964  002466  1417               	andwf	(___fldiv@grs+3)^0,w,c
  6965  002468  6E0C               	movwf	(??___fldiv+3)^0,c
  6966  00246A  5009               	movf	??___fldiv^0,w,c
  6967  00246C  100A               	iorwf	(??___fldiv+1)^0,w,c
  6968  00246E  100B               	iorwf	(??___fldiv+2)^0,w,c
  6969  002470  100C               	iorwf	(??___fldiv+3)^0,w,c
  6970  002472  B4D8               	btfsc	status,2,c
  6971  002474  EF3E  F012         	goto	u3621
  6972  002478  EF40  F012         	goto	u3620
  6973  00247C                     u3621:
  6974  00247C  EF44  F012         	goto	l744
  6975  002480                     u3620:
  6976  002480                     l3340:
  6977  002480  0E01               	movlw	1
  6978  002482  6E19               	movwf	___fldiv@aexp^0,c
  6979  002484  EF4D  F012         	goto	l743
  6980  002488                     l744:
  6981  002488  A001               	btfss	___fldiv@b^0,0,c
  6982  00248A  EF49  F012         	goto	u3631
  6983  00248E  EF4B  F012         	goto	u3630
  6984  002492                     u3631:
  6985  002492  EF4D  F012         	goto	l743
  6986  002496                     u3630:
  6987  002496  EF40  F012         	goto	l3340
  6988  00249A                     l743:
  6989  00249A  5019               	movf	___fldiv@aexp^0,w,c
  6990  00249C  B4D8               	btfsc	status,2,c
  6991  00249E  EF53  F012         	goto	u3641
  6992  0024A2  EF55  F012         	goto	u3640
  6993  0024A6                     u3641:
  6994  0024A6  EF79  F012         	goto	l3352
  6995  0024AA                     u3640:
  6996  0024AA  0E01               	movlw	1
  6997  0024AC  2601               	addwf	___fldiv@b^0,f,c
  6998  0024AE  0E00               	movlw	0
  6999  0024B0  2202               	addwfc	(___fldiv@b+1)^0,f,c
  7000  0024B2  2203               	addwfc	(___fldiv@b+2)^0,f,c
  7001  0024B4  2204               	addwfc	(___fldiv@b+3)^0,f,c
  7002  0024B6  A004               	btfss	(___fldiv@b+3)^0,0,c
  7003  0024B8  EF60  F012         	goto	u3651
  7004  0024BC  EF62  F012         	goto	u3650
  7005  0024C0                     u3651:
  7006  0024C0  EF79  F012         	goto	l3352
  7007  0024C4                     u3650:
  7008  0024C4  C001  F009         	movff	___fldiv@b,??___fldiv
  7009  0024C8  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
  7010  0024CC  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
  7011  0024D0  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
  7012  0024D4  340C               	rlcf	(??___fldiv+3)^0,w,c
  7013  0024D6  320C               	rrcf	(??___fldiv+3)^0,f,c
  7014  0024D8  320B               	rrcf	(??___fldiv+2)^0,f,c
  7015  0024DA  320A               	rrcf	(??___fldiv+1)^0,f,c
  7016  0024DC  3209               	rrcf	??___fldiv^0,f,c
  7017  0024DE  C009  F001         	movff	??___fldiv,___fldiv@b
  7018  0024E2  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
  7019  0024E6  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
  7020  0024EA  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
  7021  0024EE  4A12               	infsnz	___fldiv@new_exp^0,f,c
  7022  0024F0  2A13               	incf	(___fldiv@new_exp+1)^0,f,c
  7023  0024F2                     l3352:
  7024  0024F2  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7025  0024F4  EF84  F012         	goto	u3661
  7026  0024F8  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  7027  0024FA  E108               	bnz	u3660
  7028  0024FC  2812               	incf	___fldiv@new_exp^0,w,c
  7029  0024FE  A0D8               	btfss	status,0,c
  7030  002500  EF84  F012         	goto	u3661
  7031  002504  EF86  F012         	goto	u3660
  7032  002508                     u3661:
  7033  002508  EF91  F012         	goto	l3356
  7034  00250C                     u3660:
  7035  00250C  0E00               	movlw	0
  7036  00250E  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  7037  002510  6812               	setf	___fldiv@new_exp^0,c
  7038  002512  0E00               	movlw	0
  7039  002514  6E01               	movwf	___fldiv@b^0,c
  7040  002516  0E00               	movlw	0
  7041  002518  6E02               	movwf	(___fldiv@b+1)^0,c
  7042  00251A  0E00               	movlw	0
  7043  00251C  6E03               	movwf	(___fldiv@b+2)^0,c
  7044  00251E  0E00               	movlw	0
  7045  002520  6E04               	movwf	(___fldiv@b+3)^0,c
  7046  002522                     l3356:
  7047  002522  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7048  002524  EF9E  F012         	goto	u3670
  7049  002528  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  7050  00252A  E106               	bnz	u3671
  7051  00252C  0412               	decf	___fldiv@new_exp^0,w,c
  7052  00252E  B0D8               	btfsc	status,0,c
  7053  002530  EF9C  F012         	goto	u3671
  7054  002534  EF9E  F012         	goto	u3670
  7055  002538                     u3671:
  7056  002538  EFAC  F012         	goto	l3360
  7057  00253C                     u3670:
  7058  00253C  0E00               	movlw	0
  7059  00253E  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  7060  002540  0E00               	movlw	0
  7061  002542  6E12               	movwf	___fldiv@new_exp^0,c
  7062  002544  0E00               	movlw	0
  7063  002546  6E01               	movwf	___fldiv@b^0,c
  7064  002548  0E00               	movlw	0
  7065  00254A  6E02               	movwf	(___fldiv@b+1)^0,c
  7066  00254C  0E00               	movlw	0
  7067  00254E  6E03               	movwf	(___fldiv@b+2)^0,c
  7068  002550  0E00               	movlw	0
  7069  002552  6E04               	movwf	(___fldiv@b+3)^0,c
  7070  002554  0E00               	movlw	0
  7071  002556  6E11               	movwf	___fldiv@sign^0,c
  7072  002558                     l3360:
  7073  002558  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
  7074  00255C  A018               	btfss	___fldiv@bexp^0,0,c
  7075  00255E  EFB3  F012         	goto	u3681
  7076  002562  EFB5  F012         	goto	u3680
  7077  002566                     u3681:
  7078  002566  EFB8  F012         	goto	l3366
  7079  00256A                     u3680:
  7080  00256A  8E03               	bsf	(___fldiv@b+2)^0,7,c
  7081  00256C  EFB9  F012         	goto	l3368
  7082  002570                     l3366:
  7083  002570  9E03               	bcf	(___fldiv@b+2)^0,7,c
  7084  002572                     l3368:
  7085  002572  90D8               	bcf	status,0,c
  7086  002574  3018               	rrcf	___fldiv@bexp^0,w,c
  7087  002576  6E04               	movwf	(___fldiv@b+3)^0,c
  7088  002578  EF6F  F011         	goto	l3282
  7089  00257C                     l730:
  7090  00257C  0012               	return		;funcret
  7091  00257E                     __end_of___fldiv:
  7092                           	callstack 0
  7093                           
  7094 ;; *************** function ___awmod *****************
  7095 ;; Defined at:
  7096 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awmod.c"
  7097 ;; Parameters:    Size  Location     Type
  7098 ;;  dividend        2    0[COMRAM] int 
  7099 ;;  divisor         2    2[COMRAM] int 
  7100 ;; Auto vars:     Size  Location     Type
  7101 ;;  sign            1    5[COMRAM] unsigned char 
  7102 ;;  counter         1    4[COMRAM] unsigned char 
  7103 ;; Return value:  Size  Location     Type
  7104 ;;                  2    0[COMRAM] int 
  7105 ;; Registers used:
  7106 ;;		wreg, status,2, status,0
  7107 ;; Tracked objects:
  7108 ;;		On entry : 0/0
  7109 ;;		On exit  : 0/0
  7110 ;;		Unchanged: 0/0
  7111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7112 ;;      Params:         4       0       0       0       0       0       0
  7113 ;;      Locals:         2       0       0       0       0       0       0
  7114 ;;      Temps:          0       0       0       0       0       0       0
  7115 ;;      Totals:         6       0       0       0       0       0       0
  7116 ;;Total ram usage:        6 bytes
  7117 ;; Hardware stack levels used: 1
  7118 ;; This function calls:
  7119 ;;		Nothing
  7120 ;; This function is called by:
  7121 ;;		_efgtoa
  7122 ;; This function uses a non-reentrant model
  7123 ;;
  7124                           
  7125                           	psect	text22
  7126  003B6E                     __ptext22:
  7127                           	callstack 0
  7128  003B6E                     ___awmod:
  7129                           	callstack 25
  7130  003B6E  0E00               	movlw	0
  7131  003B70  6E06               	movwf	___awmod@sign^0,c
  7132  003B72  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  7133  003B74  EFC0  F01D         	goto	u3940
  7134  003B78  EFBE  F01D         	goto	u3941
  7135  003B7C                     u3941:
  7136  003B7C  EFC6  F01D         	goto	l3564
  7137  003B80                     u3940:
  7138  003B80  6C01               	negf	___awmod@dividend^0,c
  7139  003B82  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7140  003B84  B0D8               	btfsc	status,0,c
  7141  003B86  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7142  003B88  0E01               	movlw	1
  7143  003B8A  6E06               	movwf	___awmod@sign^0,c
  7144  003B8C                     l3564:
  7145  003B8C  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  7146  003B8E  EFCD  F01D         	goto	u3950
  7147  003B92  EFCB  F01D         	goto	u3951
  7148  003B96                     u3951:
  7149  003B96  EFD1  F01D         	goto	l3568
  7150  003B9A                     u3950:
  7151  003B9A  6C03               	negf	___awmod@divisor^0,c
  7152  003B9C  1E04               	comf	(___awmod@divisor+1)^0,f,c
  7153  003B9E  B0D8               	btfsc	status,0,c
  7154  003BA0  2A04               	incf	(___awmod@divisor+1)^0,f,c
  7155  003BA2                     l3568:
  7156  003BA2  5003               	movf	___awmod@divisor^0,w,c
  7157  003BA4  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  7158  003BA6  B4D8               	btfsc	status,2,c
  7159  003BA8  EFD8  F01D         	goto	u3961
  7160  003BAC  EFDA  F01D         	goto	u3960
  7161  003BB0                     u3961:
  7162  003BB0  EFFE  F01D         	goto	l3584
  7163  003BB4                     u3960:
  7164  003BB4  0E01               	movlw	1
  7165  003BB6  6E05               	movwf	___awmod@counter^0,c
  7166  003BB8  EFE2  F01D         	goto	l3574
  7167  003BBC                     l3572:
  7168  003BBC  90D8               	bcf	status,0,c
  7169  003BBE  3603               	rlcf	___awmod@divisor^0,f,c
  7170  003BC0  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  7171  003BC2  2A05               	incf	___awmod@counter^0,f,c
  7172  003BC4                     l3574:
  7173  003BC4  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  7174  003BC6  EFE7  F01D         	goto	u3971
  7175  003BCA  EFE9  F01D         	goto	u3970
  7176  003BCE                     u3971:
  7177  003BCE  EFDE  F01D         	goto	l3572
  7178  003BD2                     u3970:
  7179  003BD2                     l3576:
  7180  003BD2  5003               	movf	___awmod@divisor^0,w,c
  7181  003BD4  5C01               	subwf	___awmod@dividend^0,w,c
  7182  003BD6  5004               	movf	(___awmod@divisor+1)^0,w,c
  7183  003BD8  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  7184  003BDA  A0D8               	btfss	status,0,c
  7185  003BDC  EFF2  F01D         	goto	u3981
  7186  003BE0  EFF4  F01D         	goto	u3980
  7187  003BE4                     u3981:
  7188  003BE4  EFF8  F01D         	goto	l3580
  7189  003BE8                     u3980:
  7190  003BE8  5003               	movf	___awmod@divisor^0,w,c
  7191  003BEA  5E01               	subwf	___awmod@dividend^0,f,c
  7192  003BEC  5004               	movf	(___awmod@divisor+1)^0,w,c
  7193  003BEE  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  7194  003BF0                     l3580:
  7195  003BF0  90D8               	bcf	status,0,c
  7196  003BF2  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  7197  003BF4  3203               	rrcf	___awmod@divisor^0,f,c
  7198  003BF6  2E05               	decfsz	___awmod@counter^0,f,c
  7199  003BF8  EFE9  F01D         	goto	l3576
  7200  003BFC                     l3584:
  7201  003BFC  5006               	movf	___awmod@sign^0,w,c
  7202  003BFE  B4D8               	btfsc	status,2,c
  7203  003C00  EF04  F01E         	goto	u3991
  7204  003C04  EF06  F01E         	goto	u3990
  7205  003C08                     u3991:
  7206  003C08  EF0A  F01E         	goto	l3588
  7207  003C0C                     u3990:
  7208  003C0C  6C01               	negf	___awmod@dividend^0,c
  7209  003C0E  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7210  003C10  B0D8               	btfsc	status,0,c
  7211  003C12  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7212  003C14                     l3588:
  7213  003C14  C001  F001         	movff	___awmod@dividend,?___awmod
  7214  003C18  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  7215  003C1C  0012               	return		;funcret
  7216  003C1E                     __end_of___awmod:
  7217                           	callstack 0
  7218                           
  7219 ;; *************** function ___awdiv *****************
  7220 ;; Defined at:
  7221 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
  7222 ;; Parameters:    Size  Location     Type
  7223 ;;  dividend        2    0[COMRAM] int 
  7224 ;;  divisor         2    2[COMRAM] int 
  7225 ;; Auto vars:     Size  Location     Type
  7226 ;;  quotient        2    6[COMRAM] int 
  7227 ;;  sign            1    5[COMRAM] unsigned char 
  7228 ;;  counter         1    4[COMRAM] unsigned char 
  7229 ;; Return value:  Size  Location     Type
  7230 ;;                  2    0[COMRAM] int 
  7231 ;; Registers used:
  7232 ;;		wreg, status,2, status,0
  7233 ;; Tracked objects:
  7234 ;;		On entry : 0/0
  7235 ;;		On exit  : 0/0
  7236 ;;		Unchanged: 0/0
  7237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7238 ;;      Params:         4       0       0       0       0       0       0
  7239 ;;      Locals:         4       0       0       0       0       0       0
  7240 ;;      Temps:          0       0       0       0       0       0       0
  7241 ;;      Totals:         8       0       0       0       0       0       0
  7242 ;;Total ram usage:        8 bytes
  7243 ;; Hardware stack levels used: 1
  7244 ;; This function calls:
  7245 ;;		Nothing
  7246 ;; This function is called by:
  7247 ;;		_efgtoa
  7248 ;; This function uses a non-reentrant model
  7249 ;;
  7250                           
  7251                           	psect	text23
  7252  0039E8                     __ptext23:
  7253                           	callstack 0
  7254  0039E8                     ___awdiv:
  7255                           	callstack 25
  7256  0039E8  0E00               	movlw	0
  7257  0039EA  6E06               	movwf	___awdiv@sign^0,c
  7258  0039EC  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  7259  0039EE  EFFD  F01C         	goto	u3880
  7260  0039F2  EFFB  F01C         	goto	u3881
  7261  0039F6                     u3881:
  7262  0039F6  EF03  F01D         	goto	l3520
  7263  0039FA                     u3880:
  7264  0039FA  6C03               	negf	___awdiv@divisor^0,c
  7265  0039FC  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  7266  0039FE  B0D8               	btfsc	status,0,c
  7267  003A00  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  7268  003A02  0E01               	movlw	1
  7269  003A04  6E06               	movwf	___awdiv@sign^0,c
  7270  003A06                     l3520:
  7271  003A06  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  7272  003A08  EF0A  F01D         	goto	u3890
  7273  003A0C  EF08  F01D         	goto	u3891
  7274  003A10                     u3891:
  7275  003A10  EF10  F01D         	goto	l3526
  7276  003A14                     u3890:
  7277  003A14  6C01               	negf	___awdiv@dividend^0,c
  7278  003A16  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  7279  003A18  B0D8               	btfsc	status,0,c
  7280  003A1A  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  7281  003A1C  0E01               	movlw	1
  7282  003A1E  1A06               	xorwf	___awdiv@sign^0,f,c
  7283  003A20                     l3526:
  7284  003A20  0E00               	movlw	0
  7285  003A22  6E08               	movwf	(___awdiv@quotient+1)^0,c
  7286  003A24  0E00               	movlw	0
  7287  003A26  6E07               	movwf	___awdiv@quotient^0,c
  7288  003A28  5003               	movf	___awdiv@divisor^0,w,c
  7289  003A2A  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  7290  003A2C  B4D8               	btfsc	status,2,c
  7291  003A2E  EF1B  F01D         	goto	u3901
  7292  003A32  EF1D  F01D         	goto	u3900
  7293  003A36                     u3901:
  7294  003A36  EF45  F01D         	goto	l3548
  7295  003A3A                     u3900:
  7296  003A3A  0E01               	movlw	1
  7297  003A3C  6E05               	movwf	___awdiv@counter^0,c
  7298  003A3E  EF25  F01D         	goto	l3534
  7299  003A42                     l3532:
  7300  003A42  90D8               	bcf	status,0,c
  7301  003A44  3603               	rlcf	___awdiv@divisor^0,f,c
  7302  003A46  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  7303  003A48  2A05               	incf	___awdiv@counter^0,f,c
  7304  003A4A                     l3534:
  7305  003A4A  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  7306  003A4C  EF2A  F01D         	goto	u3911
  7307  003A50  EF2C  F01D         	goto	u3910
  7308  003A54                     u3911:
  7309  003A54  EF21  F01D         	goto	l3532
  7310  003A58                     u3910:
  7311  003A58                     l3536:
  7312  003A58  90D8               	bcf	status,0,c
  7313  003A5A  3607               	rlcf	___awdiv@quotient^0,f,c
  7314  003A5C  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  7315  003A5E  5003               	movf	___awdiv@divisor^0,w,c
  7316  003A60  5C01               	subwf	___awdiv@dividend^0,w,c
  7317  003A62  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7318  003A64  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  7319  003A66  A0D8               	btfss	status,0,c
  7320  003A68  EF38  F01D         	goto	u3921
  7321  003A6C  EF3A  F01D         	goto	u3920
  7322  003A70                     u3921:
  7323  003A70  EF3F  F01D         	goto	l3544
  7324  003A74                     u3920:
  7325  003A74  5003               	movf	___awdiv@divisor^0,w,c
  7326  003A76  5E01               	subwf	___awdiv@dividend^0,f,c
  7327  003A78  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7328  003A7A  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  7329  003A7C  8007               	bsf	___awdiv@quotient^0,0,c
  7330  003A7E                     l3544:
  7331  003A7E  90D8               	bcf	status,0,c
  7332  003A80  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  7333  003A82  3203               	rrcf	___awdiv@divisor^0,f,c
  7334  003A84  2E05               	decfsz	___awdiv@counter^0,f,c
  7335  003A86  EF2C  F01D         	goto	l3536
  7336  003A8A                     l3548:
  7337  003A8A  5006               	movf	___awdiv@sign^0,w,c
  7338  003A8C  B4D8               	btfsc	status,2,c
  7339  003A8E  EF4B  F01D         	goto	u3931
  7340  003A92  EF4D  F01D         	goto	u3930
  7341  003A96                     u3931:
  7342  003A96  EF51  F01D         	goto	l3552
  7343  003A9A                     u3930:
  7344  003A9A  6C07               	negf	___awdiv@quotient^0,c
  7345  003A9C  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  7346  003A9E  B0D8               	btfsc	status,0,c
  7347  003AA0  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  7348  003AA2                     l3552:
  7349  003AA2  C007  F001         	movff	___awdiv@quotient,?___awdiv
  7350  003AA6  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  7351  003AAA  0012               	return		;funcret
  7352  003AAC                     __end_of___awdiv:
  7353                           	callstack 0
  7354                           
  7355 ;; *************** function _dtoa *****************
  7356 ;; Defined at:
  7357 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  7358 ;; Parameters:    Size  Location     Type
  7359 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  7360 ;;		 -> sprintf@f(11), 
  7361 ;;  d               8   29[COMRAM] long long 
  7362 ;; Auto vars:     Size  Location     Type
  7363 ;;  n               8   53[COMRAM] long long 
  7364 ;;  i               2   61[COMRAM] int 
  7365 ;;  s               2   51[COMRAM] int 
  7366 ;;  w               2   49[COMRAM] int 
  7367 ;;  p               2   47[COMRAM] int 
  7368 ;; Return value:  Size  Location     Type
  7369 ;;                  2   27[COMRAM] int 
  7370 ;; Registers used:
  7371 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7372 ;; Tracked objects:
  7373 ;;		On entry : 0/0
  7374 ;;		On exit  : 0/0
  7375 ;;		Unchanged: 0/0
  7376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7377 ;;      Params:        10       0       0       0       0       0       0
  7378 ;;      Locals:        18       0       0       0       0       0       0
  7379 ;;      Temps:          8       0       0       0       0       0       0
  7380 ;;      Totals:        36       0       0       0       0       0       0
  7381 ;;Total ram usage:       36 bytes
  7382 ;; Hardware stack levels used: 1
  7383 ;; Hardware stack levels required when called: 4
  7384 ;; This function calls:
  7385 ;;		___aodiv
  7386 ;;		___aomod
  7387 ;;		_abs
  7388 ;;		_pad
  7389 ;; This function is called by:
  7390 ;;		_vfpfcnvrt
  7391 ;; This function uses a non-reentrant model
  7392 ;;
  7393                           
  7394                           	psect	text24
  7395  00286A                     __ptext24:
  7396                           	callstack 0
  7397  00286A                     _dtoa:
  7398                           	callstack 22
  7399  00286A                     
  7400                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  7401  00286A  C01E  F036         	movff	dtoa@d,dtoa@n
  7402  00286E  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  7403  002872  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  7404  002876  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  7405  00287A  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  7406  00287E  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  7407  002882  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  7408  002886  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  7409  00288A                     
  7410                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  7411  00288A  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  7412  00288C  EF4A  F014         	goto	u4461
  7413  002890  EF4D  F014         	goto	u4460
  7414  002894                     u4461:
  7415  002894  0E01               	movlw	1
  7416  002896  EF4E  F014         	goto	u4470
  7417  00289A                     u4460:
  7418  00289A  0E00               	movlw	0
  7419  00289C                     u4470:
  7420  00289C  6E34               	movwf	dtoa@s^0,c
  7421  00289E  6A35               	clrf	(dtoa@s+1)^0,c
  7422                           
  7423                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  7424  0028A0  5034               	movf	dtoa@s^0,w,c
  7425  0028A2  1035               	iorwf	(dtoa@s+1)^0,w,c
  7426  0028A4  B4D8               	btfsc	status,2,c
  7427  0028A6  EF57  F014         	goto	u4481
  7428  0028AA  EF59  F014         	goto	u4480
  7429  0028AE                     u4481:
  7430  0028AE  EF69  F014         	goto	l3806
  7431  0028B2                     u4480:
  7432  0028B2                     
  7433                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  7434  0028B2  1E3D               	comf	(dtoa@n+7)^0,f,c
  7435  0028B4  1E3C               	comf	(dtoa@n+6)^0,f,c
  7436  0028B6  1E3B               	comf	(dtoa@n+5)^0,f,c
  7437  0028B8  1E3A               	comf	(dtoa@n+4)^0,f,c
  7438  0028BA  1E39               	comf	(dtoa@n+3)^0,f,c
  7439  0028BC  1E38               	comf	(dtoa@n+2)^0,f,c
  7440  0028BE  1E37               	comf	(dtoa@n+1)^0,f,c
  7441  0028C0  6C36               	negf	dtoa@n^0,c
  7442  0028C2  0E00               	movlw	0
  7443  0028C4  2237               	addwfc	(dtoa@n+1)^0,f,c
  7444  0028C6  2238               	addwfc	(dtoa@n+2)^0,f,c
  7445  0028C8  2239               	addwfc	(dtoa@n+3)^0,f,c
  7446  0028CA  223A               	addwfc	(dtoa@n+4)^0,f,c
  7447  0028CC  223B               	addwfc	(dtoa@n+5)^0,f,c
  7448  0028CE  223C               	addwfc	(dtoa@n+6)^0,f,c
  7449  0028D0  223D               	addwfc	(dtoa@n+7)^0,f,c
  7450  0028D2                     l3806:
  7451                           
  7452                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  7453  0028D2  0100               	movlb	0	; () banked
  7454  0028D4  BF91               	btfsc	(_prec+1)& (0+255),7,b
  7455  0028D6  EF6F  F014         	goto	u4491
  7456  0028DA  EF71  F014         	goto	u4490
  7457  0028DE                     u4491:
  7458  0028DE  EF72  F014         	goto	l3810
  7459  0028E2                     u4490:
  7460  0028E2                     
  7461                           ; BSR set to: 0
  7462                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  7463  0028E2  927E               	bcf	_flags^0,1,c
  7464  0028E4                     l3810:
  7465                           
  7466                           ; BSR set to: 0
  7467                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  7468  0028E4  BF91               	btfsc	(_prec+1)& (0+255),7,b
  7469  0028E6  EF7F  F014         	goto	u4500
  7470  0028EA  5191               	movf	(_prec+1)& (0+255),w,b
  7471  0028EC  E106               	bnz	u4501
  7472  0028EE  0590               	decf	_prec& (0+255),w,b
  7473  0028F0  B0D8               	btfsc	status,0,c
  7474  0028F2  EF7D  F014         	goto	u4501
  7475  0028F6  EF7F  F014         	goto	u4500
  7476  0028FA                     u4501:
  7477  0028FA  EF85  F014         	goto	l880
  7478  0028FE                     u4500:
  7479  0028FE                     
  7480                           ; BSR set to: 0
  7481  0028FE  0E00               	movlw	0
  7482  002900  6E31               	movwf	(dtoa@p+1)^0,c
  7483  002902  0E01               	movlw	1
  7484  002904  6E30               	movwf	dtoa@p^0,c
  7485  002906  EF89  F014         	goto	l882
  7486  00290A                     l880:
  7487                           
  7488                           ; BSR set to: 0
  7489  00290A  C090  F030         	movff	_prec,dtoa@p
  7490  00290E  C091  F031         	movff	_prec+1,dtoa@p+1
  7491  002912                     l882:
  7492                           
  7493                           ; BSR set to: 0
  7494                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  7495  002912  C08E  F032         	movff	_width,dtoa@w
  7496  002916  C08F  F033         	movff	_width+1,dtoa@w+1
  7497  00291A                     
  7498                           ; BSR set to: 0
  7499                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  7500  00291A  5034               	movf	dtoa@s^0,w,c
  7501  00291C  1035               	iorwf	(dtoa@s+1)^0,w,c
  7502  00291E  A4D8               	btfss	status,2,c
  7503  002920  EF94  F014         	goto	u4511
  7504  002924  EF96  F014         	goto	u4510
  7505  002928                     u4511:
  7506  002928  EF9D  F014         	goto	l3818
  7507  00292C                     u4510:
  7508  00292C                     
  7509                           ; BSR set to: 0
  7510  00292C  A47E               	btfss	_flags^0,2,c
  7511  00292E  EF9B  F014         	goto	u4521
  7512  002932  EF9D  F014         	goto	u4520
  7513  002936                     u4521:
  7514  002936  EFA0  F014         	goto	l3820
  7515  00293A                     u4520:
  7516  00293A                     l3818:
  7517                           
  7518                           ; BSR set to: 0
  7519                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 306:         --w;
  7520  00293A  0632               	decf	dtoa@w^0,f,c
  7521  00293C  A0D8               	btfss	status,0,c
  7522  00293E  0633               	decf	(dtoa@w+1)^0,f,c
  7523  002940                     l3820:
  7524                           
  7525                           ; BSR set to: 0
  7526                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  7527  002940  0E00               	movlw	0
  7528  002942  6E3F               	movwf	(dtoa@i+1)^0,c
  7529  002944  0E4F               	movlw	79
  7530  002946  6E3E               	movwf	dtoa@i^0,c
  7531  002948                     
  7532                           ; BSR set to: 0
  7533                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  7534  002948  0E00               	movlw	0
  7535  00294A  0101               	movlb	1	; () banked
  7536  00294C  6F4F               	movwf	(_dbuf+79)& (0+255),b
  7537                           
  7538                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7539  00294E  EF25  F015         	goto	l3834
  7540  002952                     l3824:
  7541                           
  7542                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 313:         --i;
  7543  002952  063E               	decf	dtoa@i^0,f,c
  7544  002954  A0D8               	btfss	status,0,c
  7545  002956  063F               	decf	(dtoa@i+1)^0,f,c
  7546  002958                     
  7547                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  7548  002958  0E00               	movlw	low _dbuf
  7549  00295A  243E               	addwf	dtoa@i^0,w,c
  7550  00295C  6ED9               	movwf	fsr2l,c
  7551  00295E  0E01               	movlw	high _dbuf
  7552  002960  203F               	addwfc	(dtoa@i+1)^0,w,c
  7553  002962  6EDA               	movwf	fsr2h,c
  7554  002964  C036  F001         	movff	dtoa@n,___aomod@dividend
  7555  002968  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  7556  00296C  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  7557  002970  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  7558  002974  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  7559  002978  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  7560  00297C  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  7561  002980  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  7562  002984  0E0A               	movlw	10
  7563  002986  6E09               	movwf	___aomod@divisor^0,c
  7564  002988  0E00               	movlw	0
  7565  00298A  6E0A               	movwf	(___aomod@divisor+1)^0,c
  7566  00298C  0E00               	movlw	0
  7567  00298E  6E0B               	movwf	(___aomod@divisor+2)^0,c
  7568  002990  0E00               	movlw	0
  7569  002992  6E0C               	movwf	(___aomod@divisor+3)^0,c
  7570  002994  0E00               	movlw	0
  7571  002996  6E0D               	movwf	(___aomod@divisor+4)^0,c
  7572  002998  0E00               	movlw	0
  7573  00299A  6E0E               	movwf	(___aomod@divisor+5)^0,c
  7574  00299C  0E00               	movlw	0
  7575  00299E  6E0F               	movwf	(___aomod@divisor+6)^0,c
  7576  0029A0  0E00               	movlw	0
  7577  0029A2  6E10               	movwf	(___aomod@divisor+7)^0,c
  7578  0029A4  EC4C  F018         	call	___aomod	;wreg free
  7579  0029A8  C001  F026         	movff	?___aomod,??_dtoa
  7580  0029AC  C002  F027         	movff	?___aomod+1,??_dtoa+1
  7581  0029B0  C003  F028         	movff	?___aomod+2,??_dtoa+2
  7582  0029B4  C004  F029         	movff	?___aomod+3,??_dtoa+3
  7583  0029B8  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  7584  0029BC  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  7585  0029C0  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  7586  0029C4  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  7587  0029C8  C026  F013         	movff	??_dtoa,abs@a
  7588  0029CC  C028  F014         	movff	??_dtoa+2,abs@a+1
  7589  0029D0  EC9C  F020         	call	_abs	;wreg free
  7590  0029D4  5013               	movf	?_abs^0,w,c
  7591  0029D6  0F30               	addlw	48
  7592  0029D8  6EDF               	movwf	indf2,c
  7593  0029DA                     
  7594                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 315:         --p;
  7595  0029DA  0630               	decf	dtoa@p^0,f,c
  7596  0029DC  A0D8               	btfss	status,0,c
  7597  0029DE  0631               	decf	(dtoa@p+1)^0,f,c
  7598  0029E0                     
  7599                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 316:         --w;
  7600  0029E0  0632               	decf	dtoa@w^0,f,c
  7601  0029E2  A0D8               	btfss	status,0,c
  7602  0029E4  0633               	decf	(dtoa@w+1)^0,f,c
  7603  0029E6                     
  7604                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  7605  0029E6  C036  F001         	movff	dtoa@n,___aodiv@dividend
  7606  0029EA  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  7607  0029EE  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  7608  0029F2  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  7609  0029F6  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  7610  0029FA  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  7611  0029FE  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  7612  002A02  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  7613  002A06  0E0A               	movlw	10
  7614  002A08  6E09               	movwf	___aodiv@divisor^0,c
  7615  002A0A  0E00               	movlw	0
  7616  002A0C  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  7617  002A0E  0E00               	movlw	0
  7618  002A10  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  7619  002A12  0E00               	movlw	0
  7620  002A14  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  7621  002A16  0E00               	movlw	0
  7622  002A18  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  7623  002A1A  0E00               	movlw	0
  7624  002A1C  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  7625  002A1E  0E00               	movlw	0
  7626  002A20  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  7627  002A22  0E00               	movlw	0
  7628  002A24  6E10               	movwf	(___aodiv@divisor+7)^0,c
  7629  002A26  EC88  F017         	call	___aodiv	;wreg free
  7630  002A2A  C001  F036         	movff	?___aodiv,dtoa@n
  7631  002A2E  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  7632  002A32  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  7633  002A36  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  7634  002A3A  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  7635  002A3E  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  7636  002A42  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  7637  002A46  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  7638  002A4A                     l3834:
  7639                           
  7640                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7641  002A4A  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  7642  002A4C  EF30  F015         	goto	u4531
  7643  002A50  503F               	movf	(dtoa@i+1)^0,w,c
  7644  002A52  E108               	bnz	u4530
  7645  002A54  043E               	decf	dtoa@i^0,w,c
  7646  002A56  A0D8               	btfss	status,0,c
  7647  002A58  EF30  F015         	goto	u4531
  7648  002A5C  EF32  F015         	goto	u4530
  7649  002A60                     u4531:
  7650  002A60  EF62  F015         	goto	l3844
  7651  002A64                     u4530:
  7652  002A64  5036               	movf	dtoa@n^0,w,c
  7653  002A66  1037               	iorwf	(dtoa@n+1)^0,w,c
  7654  002A68  1038               	iorwf	(dtoa@n+2)^0,w,c
  7655  002A6A  1039               	iorwf	(dtoa@n+3)^0,w,c
  7656  002A6C  103A               	iorwf	(dtoa@n+4)^0,w,c
  7657  002A6E  103B               	iorwf	(dtoa@n+5)^0,w,c
  7658  002A70  103C               	iorwf	(dtoa@n+6)^0,w,c
  7659  002A72  103D               	iorwf	(dtoa@n+7)^0,w,c
  7660  002A74  A4D8               	btfss	status,2,c
  7661  002A76  EF3F  F015         	goto	u4541
  7662  002A7A  EF41  F015         	goto	u4540
  7663  002A7E                     u4541:
  7664  002A7E  EFA9  F014         	goto	l3824
  7665  002A82                     u4540:
  7666  002A82  BE31               	btfsc	(dtoa@p+1)^0,7,c
  7667  002A84  EF4E  F015         	goto	u4550
  7668  002A88  5031               	movf	(dtoa@p+1)^0,w,c
  7669  002A8A  E106               	bnz	u4551
  7670  002A8C  0430               	decf	dtoa@p^0,w,c
  7671  002A8E  B0D8               	btfsc	status,0,c
  7672  002A90  EF4C  F015         	goto	u4551
  7673  002A94  EF4E  F015         	goto	u4550
  7674  002A98                     u4551:
  7675  002A98  EFA9  F014         	goto	l3824
  7676  002A9C                     u4550:
  7677  002A9C  BE33               	btfsc	(dtoa@w+1)^0,7,c
  7678  002A9E  EF59  F015         	goto	u4561
  7679  002AA2  5033               	movf	(dtoa@w+1)^0,w,c
  7680  002AA4  E108               	bnz	u4560
  7681  002AA6  0432               	decf	dtoa@w^0,w,c
  7682  002AA8  A0D8               	btfss	status,0,c
  7683  002AAA  EF59  F015         	goto	u4561
  7684  002AAE  EF5B  F015         	goto	u4560
  7685  002AB2                     u4561:
  7686  002AB2  EF62  F015         	goto	l3844
  7687  002AB6                     u4560:
  7688  002AB6  B27E               	btfsc	_flags^0,1,c
  7689  002AB8  EF60  F015         	goto	u4571
  7690  002ABC  EF62  F015         	goto	u4570
  7691  002AC0                     u4571:
  7692  002AC0  EFA9  F014         	goto	l3824
  7693  002AC4                     u4570:
  7694  002AC4                     l3844:
  7695                           
  7696                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  7697  002AC4  5034               	movf	dtoa@s^0,w,c
  7698  002AC6  1035               	iorwf	(dtoa@s+1)^0,w,c
  7699  002AC8  A4D8               	btfss	status,2,c
  7700  002ACA  EF69  F015         	goto	u4581
  7701  002ACE  EF6B  F015         	goto	u4580
  7702  002AD2                     u4581:
  7703  002AD2  EF72  F015         	goto	l3848
  7704  002AD6                     u4580:
  7705  002AD6  A47E               	btfss	_flags^0,2,c
  7706  002AD8  EF70  F015         	goto	u4591
  7707  002ADC  EF72  F015         	goto	u4590
  7708  002AE0                     u4591:
  7709  002AE0  EF90  F015         	goto	l3858
  7710  002AE4                     u4590:
  7711  002AE4                     l3848:
  7712                           
  7713                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 322:         --i;
  7714  002AE4  063E               	decf	dtoa@i^0,f,c
  7715  002AE6  A0D8               	btfss	status,0,c
  7716  002AE8  063F               	decf	(dtoa@i+1)^0,f,c
  7717  002AEA                     
  7718                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  7719  002AEA  5034               	movf	dtoa@s^0,w,c
  7720  002AEC  1035               	iorwf	(dtoa@s+1)^0,w,c
  7721  002AEE  A4D8               	btfss	status,2,c
  7722  002AF0  EF7C  F015         	goto	u4601
  7723  002AF4  EF7E  F015         	goto	u4600
  7724  002AF8                     u4601:
  7725  002AF8  EF84  F015         	goto	l3854
  7726  002AFC                     u4600:
  7727  002AFC  0E00               	movlw	0
  7728  002AFE  6E2F               	movwf	(_dtoa$1134+1)^0,c
  7729  002B00  0E2B               	movlw	43
  7730  002B02  6E2E               	movwf	_dtoa$1134^0,c
  7731  002B04  EF88  F015         	goto	l3856
  7732  002B08                     l3854:
  7733  002B08  0E00               	movlw	0
  7734  002B0A  6E2F               	movwf	(_dtoa$1134+1)^0,c
  7735  002B0C  0E2D               	movlw	45
  7736  002B0E  6E2E               	movwf	_dtoa$1134^0,c
  7737  002B10                     l3856:
  7738  002B10  0E00               	movlw	low _dbuf
  7739  002B12  243E               	addwf	dtoa@i^0,w,c
  7740  002B14  6ED9               	movwf	fsr2l,c
  7741  002B16  0E01               	movlw	high _dbuf
  7742  002B18  203F               	addwfc	(dtoa@i+1)^0,w,c
  7743  002B1A  6EDA               	movwf	fsr2h,c
  7744  002B1C  C02E  FFDF         	movff	_dtoa$1134,indf2
  7745  002B20                     l3858:
  7746                           
  7747                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  7748  002B20  C01C  F011         	movff	dtoa@fp,pad@fp
  7749  002B24  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  7750  002B28  0E00               	movlw	low _dbuf
  7751  002B2A  243E               	addwf	dtoa@i^0,w,c
  7752  002B2C  6E13               	movwf	pad@buf^0,c
  7753  002B2E  0E01               	movlw	high _dbuf
  7754  002B30  203F               	addwfc	(dtoa@i+1)^0,w,c
  7755  002B32  6E14               	movwf	(pad@buf+1)^0,c
  7756  002B34  C032  F015         	movff	dtoa@w,pad@p
  7757  002B38  C033  F016         	movff	dtoa@w+1,pad@p+1
  7758  002B3C  EC56  F01D         	call	_pad	;wreg free
  7759  002B40  C011  F01C         	movff	?_pad,?_dtoa
  7760  002B44  C012  F01D         	movff	?_pad+1,?_dtoa+1
  7761  002B48  0012               	return		;funcret
  7762  002B4A                     __end_of_dtoa:
  7763                           	callstack 0
  7764                           
  7765 ;; *************** function _pad *****************
  7766 ;; Defined at:
  7767 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  7768 ;; Parameters:    Size  Location     Type
  7769 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  7770 ;;		 -> sprintf@f(11), 
  7771 ;;  buf             2   18[COMRAM] PTR unsigned char 
  7772 ;;		 -> dbuf(80), 
  7773 ;;  p               2   20[COMRAM] int 
  7774 ;; Auto vars:     Size  Location     Type
  7775 ;;  w               2   25[COMRAM] int 
  7776 ;;  i               2   23[COMRAM] int 
  7777 ;; Return value:  Size  Location     Type
  7778 ;;                  2   16[COMRAM] int 
  7779 ;; Registers used:
  7780 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7781 ;; Tracked objects:
  7782 ;;		On entry : 0/0
  7783 ;;		On exit  : 0/0
  7784 ;;		Unchanged: 0/0
  7785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7786 ;;      Params:         6       0       0       0       0       0       0
  7787 ;;      Locals:         4       0       0       0       0       0       0
  7788 ;;      Temps:          1       0       0       0       0       0       0
  7789 ;;      Totals:        11       0       0       0       0       0       0
  7790 ;;Total ram usage:       11 bytes
  7791 ;; Hardware stack levels used: 1
  7792 ;; Hardware stack levels required when called: 3
  7793 ;; This function calls:
  7794 ;;		_fputc
  7795 ;;		_fputs
  7796 ;;		_strlen
  7797 ;; This function is called by:
  7798 ;;		_dtoa
  7799 ;;		_efgtoa
  7800 ;; This function uses a non-reentrant model
  7801 ;;
  7802                           
  7803                           	psect	text25
  7804  003AAC                     __ptext25:
  7805                           	callstack 0
  7806  003AAC                     _pad:
  7807                           	callstack 22
  7808  003AAC                     
  7809                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  7810  003AAC  A07E               	btfss	_flags^0,0,c
  7811  003AAE  EF5B  F01D         	goto	u4161
  7812  003AB2  EF5D  F01D         	goto	u4160
  7813  003AB6                     u4161:
  7814  003AB6  EF67  F01D         	goto	l3686
  7815  003ABA                     u4160:
  7816  003ABA                     
  7817                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  7818  003ABA  C013  F00A         	movff	pad@buf,fputs@s
  7819  003ABE  C014  F00B         	movff	pad@buf+1,fputs@s+1
  7820  003AC2  C011  F00C         	movff	pad@fp,fputs@fp
  7821  003AC6  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  7822  003ACA  EC7A  F020         	call	_fputs	;wreg free
  7823  003ACE                     l3686:
  7824                           
  7825                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  7826  003ACE  BE16               	btfsc	(pad@p+1)^0,7,c
  7827  003AD0  EF6C  F01D         	goto	u4171
  7828  003AD4  EF6E  F01D         	goto	u4170
  7829  003AD8                     u4171:
  7830  003AD8  EF74  F01D         	goto	l3690
  7831  003ADC                     u4170:
  7832  003ADC  C015  F01A         	movff	pad@p,pad@w
  7833  003AE0  C016  F01B         	movff	pad@p+1,pad@w+1
  7834  003AE4  EF78  F01D         	goto	l869
  7835  003AE8                     l3690:
  7836  003AE8  0E00               	movlw	0
  7837  003AEA  6E1B               	movwf	(pad@w+1)^0,c
  7838  003AEC  0E00               	movlw	0
  7839  003AEE  6E1A               	movwf	pad@w^0,c
  7840  003AF0                     l869:
  7841                           
  7842                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  7843  003AF0  0E00               	movlw	0
  7844  003AF2  6E19               	movwf	(pad@i+1)^0,c
  7845  003AF4  0E00               	movlw	0
  7846  003AF6  6E18               	movwf	pad@i^0,c
  7847                           
  7848                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7849  003AF8  EF8A  F01D         	goto	l3696
  7850  003AFC                     l3692:
  7851                           
  7852                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  7853  003AFC  0E00               	movlw	0
  7854  003AFE  6E02               	movwf	(fputc@c+1)^0,c
  7855  003B00  0E20               	movlw	32
  7856  003B02  6E01               	movwf	fputc@c^0,c
  7857  003B04  C011  F003         	movff	pad@fp,fputc@fp
  7858  003B08  C012  F004         	movff	pad@fp+1,fputc@fp+1
  7859  003B0C  EC8F  F01C         	call	_fputc	;wreg free
  7860  003B10                     
  7861                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 86:         ++i;
  7862  003B10  4A18               	infsnz	pad@i^0,f,c
  7863  003B12  2A19               	incf	(pad@i+1)^0,f,c
  7864  003B14                     l3696:
  7865                           
  7866                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7867  003B14  501A               	movf	pad@w^0,w,c
  7868  003B16  5C18               	subwf	pad@i^0,w,c
  7869  003B18  5019               	movf	(pad@i+1)^0,w,c
  7870  003B1A  0A80               	xorlw	128
  7871  003B1C  6E17               	movwf	??_pad^0,c
  7872  003B1E  501B               	movf	(pad@w+1)^0,w,c
  7873  003B20  0A80               	xorlw	128
  7874  003B22  5817               	subwfb	??_pad^0,w,c
  7875  003B24  A0D8               	btfss	status,0,c
  7876  003B26  EF97  F01D         	goto	u4181
  7877  003B2A  EF99  F01D         	goto	u4180
  7878  003B2E                     u4181:
  7879  003B2E  EF7E  F01D         	goto	l3692
  7880  003B32                     u4180:
  7881  003B32                     
  7882                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  7883  003B32  B07E               	btfsc	_flags^0,0,c
  7884  003B34  EF9E  F01D         	goto	u4191
  7885  003B38  EFA0  F01D         	goto	u4190
  7886  003B3C                     u4191:
  7887  003B3C  EFAA  F01D         	goto	l3700
  7888  003B40                     u4190:
  7889  003B40                     
  7890                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  7891  003B40  C013  F00A         	movff	pad@buf,fputs@s
  7892  003B44  C014  F00B         	movff	pad@buf+1,fputs@s+1
  7893  003B48  C011  F00C         	movff	pad@fp,fputs@fp
  7894  003B4C  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  7895  003B50  EC7A  F020         	call	_fputs	;wreg free
  7896  003B54                     l3700:
  7897                           
  7898                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  7899  003B54  C013  F001         	movff	pad@buf,strlen@s
  7900  003B58  C014  F002         	movff	pad@buf+1,strlen@s+1
  7901  003B5C  EC2D  F021         	call	_strlen	;wreg free
  7902  003B60  501A               	movf	pad@w^0,w,c
  7903  003B62  2401               	addwf	?_strlen^0,w,c
  7904  003B64  6E11               	movwf	?_pad^0,c
  7905  003B66  501B               	movf	(pad@w+1)^0,w,c
  7906  003B68  2002               	addwfc	(?_strlen+1)^0,w,c
  7907  003B6A  6E12               	movwf	(?_pad+1)^0,c
  7908  003B6C  0012               	return		;funcret
  7909  003B6E                     __end_of_pad:
  7910                           	callstack 0
  7911                           
  7912 ;; *************** function _strlen *****************
  7913 ;; Defined at:
  7914 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  7915 ;; Parameters:    Size  Location     Type
  7916 ;;  s               2    0[COMRAM] PTR const unsigned char 
  7917 ;;		 -> dbuf(80), 
  7918 ;; Auto vars:     Size  Location     Type
  7919 ;;  a               2    2[COMRAM] PTR const unsigned char 
  7920 ;;		 -> dbuf(80), 
  7921 ;; Return value:  Size  Location     Type
  7922 ;;                  2    0[COMRAM] unsigned int 
  7923 ;; Registers used:
  7924 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7925 ;; Tracked objects:
  7926 ;;		On entry : 0/0
  7927 ;;		On exit  : 0/0
  7928 ;;		Unchanged: 0/0
  7929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7930 ;;      Params:         2       0       0       0       0       0       0
  7931 ;;      Locals:         2       0       0       0       0       0       0
  7932 ;;      Temps:          0       0       0       0       0       0       0
  7933 ;;      Totals:         4       0       0       0       0       0       0
  7934 ;;Total ram usage:        4 bytes
  7935 ;; Hardware stack levels used: 1
  7936 ;; This function calls:
  7937 ;;		Nothing
  7938 ;; This function is called by:
  7939 ;;		_pad
  7940 ;; This function uses a non-reentrant model
  7941 ;;
  7942                           
  7943                           	psect	text26
  7944  00425A                     __ptext26:
  7945                           	callstack 0
  7946  00425A                     _strlen:
  7947                           	callstack 24
  7948  00425A  C001  F003         	movff	strlen@s,strlen@a
  7949  00425E  C002  F004         	movff	strlen@s+1,strlen@a+1
  7950  004262  EF35  F021         	goto	l3142
  7951  004266                     l3140:
  7952  004266  4A01               	infsnz	strlen@s^0,f,c
  7953  004268  2A02               	incf	(strlen@s+1)^0,f,c
  7954  00426A                     l3142:
  7955  00426A  C001  FFD9         	movff	strlen@s,fsr2l
  7956  00426E  C002  FFDA         	movff	strlen@s+1,fsr2h
  7957  004272  50DF               	movf	indf2,w,c
  7958  004274  A4D8               	btfss	status,2,c
  7959  004276  EF3F  F021         	goto	u3301
  7960  00427A  EF41  F021         	goto	u3300
  7961  00427E                     u3301:
  7962  00427E  EF33  F021         	goto	l3140
  7963  004282                     u3300:
  7964  004282  5003               	movf	strlen@a^0,w,c
  7965  004284  5C01               	subwf	strlen@s^0,w,c
  7966  004286  6E01               	movwf	?_strlen^0,c
  7967  004288  5004               	movf	(strlen@a+1)^0,w,c
  7968  00428A  5802               	subwfb	(strlen@s+1)^0,w,c
  7969  00428C  6E02               	movwf	(?_strlen+1)^0,c
  7970  00428E  0012               	return		;funcret
  7971  004290                     __end_of_strlen:
  7972                           	callstack 0
  7973                           
  7974 ;; *************** function _fputs *****************
  7975 ;; Defined at:
  7976 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputs.c"
  7977 ;; Parameters:    Size  Location     Type
  7978 ;;  s               2    9[COMRAM] PTR const unsigned char 
  7979 ;;		 -> dbuf(80), 
  7980 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  7981 ;;		 -> sprintf@f(11), 
  7982 ;; Auto vars:     Size  Location     Type
  7983 ;;  i               2   14[COMRAM] int 
  7984 ;;  c               1   13[COMRAM] unsigned char 
  7985 ;; Return value:  Size  Location     Type
  7986 ;;                  2    9[COMRAM] int 
  7987 ;; Registers used:
  7988 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7989 ;; Tracked objects:
  7990 ;;		On entry : 0/0
  7991 ;;		On exit  : 0/0
  7992 ;;		Unchanged: 0/0
  7993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7994 ;;      Params:         4       0       0       0       0       0       0
  7995 ;;      Locals:         3       0       0       0       0       0       0
  7996 ;;      Temps:          0       0       0       0       0       0       0
  7997 ;;      Totals:         7       0       0       0       0       0       0
  7998 ;;Total ram usage:        7 bytes
  7999 ;; Hardware stack levels used: 1
  8000 ;; Hardware stack levels required when called: 2
  8001 ;; This function calls:
  8002 ;;		_fputc
  8003 ;; This function is called by:
  8004 ;;		_pad
  8005 ;; This function uses a non-reentrant model
  8006 ;;
  8007                           
  8008                           	psect	text27
  8009  0040F4                     __ptext27:
  8010                           	callstack 0
  8011  0040F4                     _fputs:
  8012                           	callstack 22
  8013  0040F4  0E00               	movlw	0
  8014  0040F6  6E10               	movwf	(fputs@i+1)^0,c
  8015  0040F8  0E00               	movlw	0
  8016  0040FA  6E0F               	movwf	fputs@i^0,c
  8017  0040FC  EF8B  F020         	goto	l3136
  8018  004100                     l3132:
  8019  004100  C00E  F001         	movff	fputs@c,fputc@c
  8020  004104  6A02               	clrf	(fputc@c+1)^0,c
  8021  004106  C00C  F003         	movff	fputs@fp,fputc@fp
  8022  00410A  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  8023  00410E  EC8F  F01C         	call	_fputc	;wreg free
  8024  004112  4A0F               	infsnz	fputs@i^0,f,c
  8025  004114  2A10               	incf	(fputs@i+1)^0,f,c
  8026  004116                     l3136:
  8027  004116  500F               	movf	fputs@i^0,w,c
  8028  004118  240A               	addwf	fputs@s^0,w,c
  8029  00411A  6ED9               	movwf	fsr2l,c
  8030  00411C  5010               	movf	(fputs@i+1)^0,w,c
  8031  00411E  200B               	addwfc	(fputs@s+1)^0,w,c
  8032  004120  6EDA               	movwf	fsr2h,c
  8033  004122  50DF               	movf	indf2,w,c
  8034  004124  6E0E               	movwf	fputs@c^0,c
  8035  004126  500E               	movf	fputs@c^0,w,c
  8036  004128  A4D8               	btfss	status,2,c
  8037  00412A  EF99  F020         	goto	u3291
  8038  00412E  EF9B  F020         	goto	u3290
  8039  004132                     u3291:
  8040  004132  EF80  F020         	goto	l3132
  8041  004136                     u3290:
  8042  004136  0012               	return		;funcret
  8043  004138                     __end_of_fputs:
  8044                           	callstack 0
  8045                           
  8046 ;; *************** function _fputc *****************
  8047 ;; Defined at:
  8048 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputc.c"
  8049 ;; Parameters:    Size  Location     Type
  8050 ;;  c               2    0[COMRAM] int 
  8051 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  8052 ;;		 -> sprintf@f(11), 
  8053 ;; Auto vars:     Size  Location     Type
  8054 ;;		None
  8055 ;; Return value:  Size  Location     Type
  8056 ;;                  2    0[COMRAM] int 
  8057 ;; Registers used:
  8058 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8059 ;; Tracked objects:
  8060 ;;		On entry : 0/0
  8061 ;;		On exit  : 0/0
  8062 ;;		Unchanged: 0/0
  8063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8064 ;;      Params:         4       0       0       0       0       0       0
  8065 ;;      Locals:         0       0       0       0       0       0       0
  8066 ;;      Temps:          5       0       0       0       0       0       0
  8067 ;;      Totals:         9       0       0       0       0       0       0
  8068 ;;Total ram usage:        9 bytes
  8069 ;; Hardware stack levels used: 1
  8070 ;; Hardware stack levels required when called: 1
  8071 ;; This function calls:
  8072 ;;		_putch
  8073 ;; This function is called by:
  8074 ;;		_pad
  8075 ;;		_vfpfcnvrt
  8076 ;;		_fputs
  8077 ;; This function uses a non-reentrant model
  8078 ;;
  8079                           
  8080                           	psect	text28
  8081  00391E                     __ptext28:
  8082                           	callstack 0
  8083  00391E                     _fputc:
  8084                           	callstack 25
  8085  00391E  5003               	movf	fputc@fp^0,w,c
  8086  003920  1004               	iorwf	(fputc@fp+1)^0,w,c
  8087  003922  B4D8               	btfsc	status,2,c
  8088  003924  EF96  F01C         	goto	u2861
  8089  003928  EF98  F01C         	goto	u2860
  8090  00392C                     u2861:
  8091  00392C  EFA1  F01C         	goto	l2918
  8092  003930                     u2860:
  8093  003930  5003               	movf	fputc@fp^0,w,c
  8094  003932  1004               	iorwf	(fputc@fp+1)^0,w,c
  8095  003934  A4D8               	btfss	status,2,c
  8096  003936  EF9F  F01C         	goto	u2871
  8097  00393A  EFA1  F01C         	goto	u2870
  8098  00393E                     u2871:
  8099  00393E  EFA6  F01C         	goto	l2920
  8100  003942                     u2870:
  8101  003942                     l2918:
  8102  003942  5001               	movf	fputc@c^0,w,c
  8103  003944  EC9F  F021         	call	_putch
  8104  003948  EFF3  F01C         	goto	l1125
  8105  00394C                     l2920:
  8106  00394C  EE20 F009          	lfsr	2,9
  8107  003950  5003               	movf	fputc@fp^0,w,c
  8108  003952  26D9               	addwf	fsr2l,f,c
  8109  003954  5004               	movf	(fputc@fp+1)^0,w,c
  8110  003956  22DA               	addwfc	fsr2h,f,c
  8111  003958  50DE               	movf	postinc2,w,c
  8112  00395A  10DE               	iorwf	postinc2,w,c
  8113  00395C  B4D8               	btfsc	status,2,c
  8114  00395E  EFB3  F01C         	goto	u2881
  8115  003962  EFB5  F01C         	goto	u2880
  8116  003966                     u2881:
  8117  003966  EFD0  F01C         	goto	l2924
  8118  00396A                     u2880:
  8119  00396A  EE20 F009          	lfsr	2,9
  8120  00396E  5003               	movf	fputc@fp^0,w,c
  8121  003970  26D9               	addwf	fsr2l,f,c
  8122  003972  5004               	movf	(fputc@fp+1)^0,w,c
  8123  003974  22DA               	addwfc	fsr2h,f,c
  8124  003976  EE10 F003          	lfsr	1,3
  8125  00397A  5003               	movf	fputc@fp^0,w,c
  8126  00397C  26E1               	addwf	fsr1l,f,c
  8127  00397E  5004               	movf	(fputc@fp+1)^0,w,c
  8128  003980  22E2               	addwfc	fsr1h,f,c
  8129  003982  50DE               	movf	postinc2,w,c
  8130  003984  5CE6               	subwf	postinc1,w,c
  8131  003986  50E6               	movf	postinc1,w,c
  8132  003988  0A80               	xorlw	128
  8133  00398A  6E09               	movwf	(??_fputc+4)^0,c
  8134  00398C  50DE               	movf	postinc2,w,c
  8135  00398E  0A80               	xorlw	128
  8136  003990  5809               	subwfb	(??_fputc+4)^0,w,c
  8137  003992  B0D8               	btfsc	status,0,c
  8138  003994  EFCE  F01C         	goto	u2891
  8139  003998  EFD0  F01C         	goto	u2890
  8140  00399C                     u2891:
  8141  00399C  EFF3  F01C         	goto	l1125
  8142  0039A0                     u2890:
  8143  0039A0                     l2924:
  8144  0039A0  EE20 F003          	lfsr	2,3
  8145  0039A4  5003               	movf	fputc@fp^0,w,c
  8146  0039A6  26D9               	addwf	fsr2l,f,c
  8147  0039A8  5004               	movf	(fputc@fp+1)^0,w,c
  8148  0039AA  22DA               	addwfc	fsr2h,f,c
  8149  0039AC  CFDE F005          	movff	postinc2,??_fputc
  8150  0039B0  CFDD F006          	movff	postdec2,??_fputc+1
  8151  0039B4  C003  FFD9         	movff	fputc@fp,fsr2l
  8152  0039B8  C004  FFDA         	movff	fputc@fp+1,fsr2h
  8153  0039BC  CFDE F007          	movff	postinc2,??_fputc+2
  8154  0039C0  CFDD F008          	movff	postdec2,??_fputc+3
  8155  0039C4  5005               	movf	??_fputc^0,w,c
  8156  0039C6  2407               	addwf	(??_fputc+2)^0,w,c
  8157  0039C8  6ED9               	movwf	fsr2l,c
  8158  0039CA  5006               	movf	(??_fputc+1)^0,w,c
  8159  0039CC  2008               	addwfc	(??_fputc+3)^0,w,c
  8160  0039CE  6EDA               	movwf	fsr2h,c
  8161  0039D0  C001  FFDF         	movff	fputc@c,indf2
  8162  0039D4  EE20 F003          	lfsr	2,3
  8163  0039D8  5003               	movf	fputc@fp^0,w,c
  8164  0039DA  26D9               	addwf	fsr2l,f,c
  8165  0039DC  5004               	movf	(fputc@fp+1)^0,w,c
  8166  0039DE  22DA               	addwfc	fsr2h,f,c
  8167  0039E0  2ADE               	incf	postinc2,f,c
  8168  0039E2  0E00               	movlw	0
  8169  0039E4  22DD               	addwfc	postdec2,f,c
  8170  0039E6                     l1125:
  8171  0039E6  0012               	return		;funcret
  8172  0039E8                     __end_of_fputc:
  8173                           	callstack 0
  8174                           
  8175 ;; *************** function _putch *****************
  8176 ;; Defined at:
  8177 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\putch.c"
  8178 ;; Parameters:    Size  Location     Type
  8179 ;;  c               1    wreg     unsigned char 
  8180 ;; Auto vars:     Size  Location     Type
  8181 ;;  c               1    0[COMRAM] unsigned char 
  8182 ;; Return value:  Size  Location     Type
  8183 ;;                  1    wreg      void 
  8184 ;; Registers used:
  8185 ;;		wreg
  8186 ;; Tracked objects:
  8187 ;;		On entry : 0/0
  8188 ;;		On exit  : 0/0
  8189 ;;		Unchanged: 0/0
  8190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8191 ;;      Params:         0       0       0       0       0       0       0
  8192 ;;      Locals:         0       0       0       0       0       0       0
  8193 ;;      Temps:          0       0       0       0       0       0       0
  8194 ;;      Totals:         0       0       0       0       0       0       0
  8195 ;;Total ram usage:        0 bytes
  8196 ;; Hardware stack levels used: 1
  8197 ;; This function calls:
  8198 ;;		Nothing
  8199 ;; This function is called by:
  8200 ;;		_fputc
  8201 ;; This function uses a non-reentrant model
  8202 ;;
  8203                           
  8204                           	psect	text29
  8205  00433E                     __ptext29:
  8206                           	callstack 0
  8207  00433E                     _putch:
  8208                           	callstack 25
  8209  00433E  0012               	return		;funcret
  8210  004340                     __end_of_putch:
  8211                           	callstack 0
  8212                           
  8213 ;; *************** function _abs *****************
  8214 ;; Defined at:
  8215 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\abs.c"
  8216 ;; Parameters:    Size  Location     Type
  8217 ;;  a               2   18[COMRAM] int 
  8218 ;; Auto vars:     Size  Location     Type
  8219 ;;		None
  8220 ;; Return value:  Size  Location     Type
  8221 ;;                  2   18[COMRAM] int 
  8222 ;; Registers used:
  8223 ;;		wreg, status,2, status,0
  8224 ;; Tracked objects:
  8225 ;;		On entry : 0/0
  8226 ;;		On exit  : 0/0
  8227 ;;		Unchanged: 0/0
  8228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8229 ;;      Params:         2       0       0       0       0       0       0
  8230 ;;      Locals:         0       0       0       0       0       0       0
  8231 ;;      Temps:          2       0       0       0       0       0       0
  8232 ;;      Totals:         4       0       0       0       0       0       0
  8233 ;;Total ram usage:        4 bytes
  8234 ;; Hardware stack levels used: 1
  8235 ;; This function calls:
  8236 ;;		Nothing
  8237 ;; This function is called by:
  8238 ;;		_dtoa
  8239 ;; This function uses a non-reentrant model
  8240 ;;
  8241                           
  8242                           	psect	text30
  8243  004138                     __ptext30:
  8244                           	callstack 0
  8245  004138                     _abs:
  8246                           	callstack 25
  8247  004138  BE14               	btfsc	(abs@a+1)^0,7,c
  8248  00413A  EFA9  F020         	goto	u4200
  8249  00413E  5014               	movf	(abs@a+1)^0,w,c
  8250  004140  E106               	bnz	u4201
  8251  004142  0413               	decf	abs@a^0,w,c
  8252  004144  B0D8               	btfsc	status,0,c
  8253  004146  EFA7  F020         	goto	u4201
  8254  00414A  EFA9  F020         	goto	u4200
  8255  00414E                     u4201:
  8256  00414E  EFB7  F020         	goto	l1052
  8257  004152                     u4200:
  8258  004152  C013  F015         	movff	abs@a,??_abs
  8259  004156  C014  F016         	movff	abs@a+1,??_abs+1
  8260  00415A  1E15               	comf	??_abs^0,f,c
  8261  00415C  1E16               	comf	(??_abs+1)^0,f,c
  8262  00415E  4A15               	infsnz	??_abs^0,f,c
  8263  004160  2A16               	incf	(??_abs+1)^0,f,c
  8264  004162  C015  F013         	movff	??_abs,?_abs
  8265  004166  C016  F014         	movff	??_abs+1,?_abs+1
  8266  00416A  EFBB  F020         	goto	l1055
  8267  00416E                     l1052:
  8268  00416E  C013  F013         	movff	abs@a,?_abs
  8269  004172  C014  F014         	movff	abs@a+1,?_abs+1
  8270  004176                     l1055:
  8271  004176  0012               	return		;funcret
  8272  004178                     __end_of_abs:
  8273                           	callstack 0
  8274                           
  8275 ;; *************** function ___aomod *****************
  8276 ;; Defined at:
  8277 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aomod.c"
  8278 ;; Parameters:    Size  Location     Type
  8279 ;;  dividend        8    0[COMRAM] long long 
  8280 ;;  divisor         8    8[COMRAM] long long 
  8281 ;; Auto vars:     Size  Location     Type
  8282 ;;  sign            1   17[COMRAM] unsigned char 
  8283 ;;  counter         1   16[COMRAM] unsigned char 
  8284 ;; Return value:  Size  Location     Type
  8285 ;;                  8    0[COMRAM] long long 
  8286 ;; Registers used:
  8287 ;;		wreg, status,2, status,0
  8288 ;; Tracked objects:
  8289 ;;		On entry : 0/0
  8290 ;;		On exit  : 0/0
  8291 ;;		Unchanged: 0/0
  8292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8293 ;;      Params:        16       0       0       0       0       0       0
  8294 ;;      Locals:         2       0       0       0       0       0       0
  8295 ;;      Temps:          0       0       0       0       0       0       0
  8296 ;;      Totals:        18       0       0       0       0       0       0
  8297 ;;Total ram usage:       18 bytes
  8298 ;; Hardware stack levels used: 1
  8299 ;; This function calls:
  8300 ;;		Nothing
  8301 ;; This function is called by:
  8302 ;;		_dtoa
  8303 ;; This function uses a non-reentrant model
  8304 ;;
  8305                           
  8306                           	psect	text31
  8307  003098                     __ptext31:
  8308                           	callstack 0
  8309  003098                     ___aomod:
  8310                           	callstack 25
  8311  003098  0E00               	movlw	0
  8312  00309A  6E12               	movwf	___aomod@sign^0,c
  8313  00309C  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  8314  00309E  EF55  F018         	goto	u3400
  8315  0030A2  EF53  F018         	goto	u3401
  8316  0030A6                     u3401:
  8317  0030A6  EF67  F018         	goto	l3210
  8318  0030AA                     u3400:
  8319  0030AA  1E08               	comf	(___aomod@dividend+7)^0,f,c
  8320  0030AC  1E07               	comf	(___aomod@dividend+6)^0,f,c
  8321  0030AE  1E06               	comf	(___aomod@dividend+5)^0,f,c
  8322  0030B0  1E05               	comf	(___aomod@dividend+4)^0,f,c
  8323  0030B2  1E04               	comf	(___aomod@dividend+3)^0,f,c
  8324  0030B4  1E03               	comf	(___aomod@dividend+2)^0,f,c
  8325  0030B6  1E02               	comf	(___aomod@dividend+1)^0,f,c
  8326  0030B8  6C01               	negf	___aomod@dividend^0,c
  8327  0030BA  0E00               	movlw	0
  8328  0030BC  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  8329  0030BE  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  8330  0030C0  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  8331  0030C2  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  8332  0030C4  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  8333  0030C6  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  8334  0030C8  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  8335  0030CA  0E01               	movlw	1
  8336  0030CC  6E12               	movwf	___aomod@sign^0,c
  8337  0030CE                     l3210:
  8338  0030CE  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  8339  0030D0  EF6E  F018         	goto	u3410
  8340  0030D4  EF6C  F018         	goto	u3411
  8341  0030D8                     u3411:
  8342  0030D8  EF7E  F018         	goto	l3214
  8343  0030DC                     u3410:
  8344  0030DC  1E10               	comf	(___aomod@divisor+7)^0,f,c
  8345  0030DE  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  8346  0030E0  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  8347  0030E2  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  8348  0030E4  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  8349  0030E6  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  8350  0030E8  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  8351  0030EA  6C09               	negf	___aomod@divisor^0,c
  8352  0030EC  0E00               	movlw	0
  8353  0030EE  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  8354  0030F0  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  8355  0030F2  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  8356  0030F4  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  8357  0030F6  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  8358  0030F8  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  8359  0030FA  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  8360  0030FC                     l3214:
  8361  0030FC  5009               	movf	___aomod@divisor^0,w,c
  8362  0030FE  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  8363  003100  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  8364  003102  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  8365  003104  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  8366  003106  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  8367  003108  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  8368  00310A  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  8369  00310C  B4D8               	btfsc	status,2,c
  8370  00310E  EF8B  F018         	goto	u3421
  8371  003112  EF8D  F018         	goto	u3420
  8372  003116                     u3421:
  8373  003116  EFD5  F018         	goto	l3230
  8374  00311A                     u3420:
  8375  00311A  0E01               	movlw	1
  8376  00311C  6E11               	movwf	___aomod@counter^0,c
  8377  00311E  EF9B  F018         	goto	l3220
  8378  003122                     l3218:
  8379  003122  90D8               	bcf	status,0,c
  8380  003124  3609               	rlcf	___aomod@divisor^0,f,c
  8381  003126  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  8382  003128  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  8383  00312A  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  8384  00312C  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  8385  00312E  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  8386  003130  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  8387  003132  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  8388  003134  2A11               	incf	___aomod@counter^0,f,c
  8389  003136                     l3220:
  8390  003136  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  8391  003138  EFA0  F018         	goto	u3431
  8392  00313C  EFA2  F018         	goto	u3430
  8393  003140                     u3431:
  8394  003140  EF91  F018         	goto	l3218
  8395  003144                     u3430:
  8396  003144                     l3222:
  8397  003144  5009               	movf	___aomod@divisor^0,w,c
  8398  003146  5C01               	subwf	___aomod@dividend^0,w,c
  8399  003148  500A               	movf	(___aomod@divisor+1)^0,w,c
  8400  00314A  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  8401  00314C  500B               	movf	(___aomod@divisor+2)^0,w,c
  8402  00314E  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  8403  003150  500C               	movf	(___aomod@divisor+3)^0,w,c
  8404  003152  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  8405  003154  500D               	movf	(___aomod@divisor+4)^0,w,c
  8406  003156  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  8407  003158  500E               	movf	(___aomod@divisor+5)^0,w,c
  8408  00315A  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  8409  00315C  500F               	movf	(___aomod@divisor+6)^0,w,c
  8410  00315E  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  8411  003160  5010               	movf	(___aomod@divisor+7)^0,w,c
  8412  003162  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  8413  003164  A0D8               	btfss	status,0,c
  8414  003166  EFB7  F018         	goto	u3441
  8415  00316A  EFB9  F018         	goto	u3440
  8416  00316E                     u3441:
  8417  00316E  EFC9  F018         	goto	l3226
  8418  003172                     u3440:
  8419  003172  5009               	movf	___aomod@divisor^0,w,c
  8420  003174  5E01               	subwf	___aomod@dividend^0,f,c
  8421  003176  500A               	movf	(___aomod@divisor+1)^0,w,c
  8422  003178  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  8423  00317A  500B               	movf	(___aomod@divisor+2)^0,w,c
  8424  00317C  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  8425  00317E  500C               	movf	(___aomod@divisor+3)^0,w,c
  8426  003180  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  8427  003182  500D               	movf	(___aomod@divisor+4)^0,w,c
  8428  003184  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  8429  003186  500E               	movf	(___aomod@divisor+5)^0,w,c
  8430  003188  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  8431  00318A  500F               	movf	(___aomod@divisor+6)^0,w,c
  8432  00318C  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  8433  00318E  5010               	movf	(___aomod@divisor+7)^0,w,c
  8434  003190  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  8435  003192                     l3226:
  8436  003192  90D8               	bcf	status,0,c
  8437  003194  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  8438  003196  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  8439  003198  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  8440  00319A  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  8441  00319C  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  8442  00319E  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  8443  0031A0  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  8444  0031A2  3209               	rrcf	___aomod@divisor^0,f,c
  8445  0031A4  2E11               	decfsz	___aomod@counter^0,f,c
  8446  0031A6  EFA2  F018         	goto	l3222
  8447  0031AA                     l3230:
  8448  0031AA  5012               	movf	___aomod@sign^0,w,c
  8449  0031AC  B4D8               	btfsc	status,2,c
  8450  0031AE  EFDB  F018         	goto	u3451
  8451  0031B2  EFDD  F018         	goto	u3450
  8452  0031B6                     u3451:
  8453  0031B6  EFED  F018         	goto	l3234
  8454  0031BA                     u3450:
  8455  0031BA  1E08               	comf	(___aomod@dividend+7)^0,f,c
  8456  0031BC  1E07               	comf	(___aomod@dividend+6)^0,f,c
  8457  0031BE  1E06               	comf	(___aomod@dividend+5)^0,f,c
  8458  0031C0  1E05               	comf	(___aomod@dividend+4)^0,f,c
  8459  0031C2  1E04               	comf	(___aomod@dividend+3)^0,f,c
  8460  0031C4  1E03               	comf	(___aomod@dividend+2)^0,f,c
  8461  0031C6  1E02               	comf	(___aomod@dividend+1)^0,f,c
  8462  0031C8  6C01               	negf	___aomod@dividend^0,c
  8463  0031CA  0E00               	movlw	0
  8464  0031CC  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  8465  0031CE  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  8466  0031D0  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  8467  0031D2  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  8468  0031D4  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  8469  0031D6  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  8470  0031D8  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  8471  0031DA                     l3234:
  8472  0031DA  C001  F001         	movff	___aomod@dividend,?___aomod
  8473  0031DE  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  8474  0031E2  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  8475  0031E6  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  8476  0031EA  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  8477  0031EE  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  8478  0031F2  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  8479  0031F6  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  8480  0031FA  0012               	return		;funcret
  8481  0031FC                     __end_of___aomod:
  8482                           	callstack 0
  8483                           
  8484 ;; *************** function ___aodiv *****************
  8485 ;; Defined at:
  8486 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aodiv.c"
  8487 ;; Parameters:    Size  Location     Type
  8488 ;;  dividend        8    0[COMRAM] long long 
  8489 ;;  divisor         8    8[COMRAM] long long 
  8490 ;; Auto vars:     Size  Location     Type
  8491 ;;  quotient        8   18[COMRAM] long long 
  8492 ;;  sign            1   17[COMRAM] unsigned char 
  8493 ;;  counter         1   16[COMRAM] unsigned char 
  8494 ;; Return value:  Size  Location     Type
  8495 ;;                  8    0[COMRAM] long long 
  8496 ;; Registers used:
  8497 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8498 ;; Tracked objects:
  8499 ;;		On entry : 0/0
  8500 ;;		On exit  : 0/0
  8501 ;;		Unchanged: 0/0
  8502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8503 ;;      Params:        16       0       0       0       0       0       0
  8504 ;;      Locals:        10       0       0       0       0       0       0
  8505 ;;      Temps:          0       0       0       0       0       0       0
  8506 ;;      Totals:        26       0       0       0       0       0       0
  8507 ;;Total ram usage:       26 bytes
  8508 ;; Hardware stack levels used: 1
  8509 ;; This function calls:
  8510 ;;		Nothing
  8511 ;; This function is called by:
  8512 ;;		_dtoa
  8513 ;; This function uses a non-reentrant model
  8514 ;;
  8515                           
  8516                           	psect	text32
  8517  002F10                     __ptext32:
  8518                           	callstack 0
  8519  002F10                     ___aodiv:
  8520                           	callstack 25
  8521  002F10  0E00               	movlw	0
  8522  002F12  6E12               	movwf	___aodiv@sign^0,c
  8523  002F14  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  8524  002F16  EF91  F017         	goto	u3330
  8525  002F1A  EF8F  F017         	goto	u3331
  8526  002F1E                     u3331:
  8527  002F1E  EFA3  F017         	goto	l3166
  8528  002F22                     u3330:
  8529  002F22  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  8530  002F24  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  8531  002F26  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  8532  002F28  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  8533  002F2A  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  8534  002F2C  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  8535  002F2E  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  8536  002F30  6C09               	negf	___aodiv@divisor^0,c
  8537  002F32  0E00               	movlw	0
  8538  002F34  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  8539  002F36  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  8540  002F38  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  8541  002F3A  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  8542  002F3C  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  8543  002F3E  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  8544  002F40  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  8545  002F42  0E01               	movlw	1
  8546  002F44  6E12               	movwf	___aodiv@sign^0,c
  8547  002F46                     l3166:
  8548  002F46  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  8549  002F48  EFAA  F017         	goto	u3340
  8550  002F4C  EFA8  F017         	goto	u3341
  8551  002F50                     u3341:
  8552  002F50  EFBC  F017         	goto	l3172
  8553  002F54                     u3340:
  8554  002F54  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  8555  002F56  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  8556  002F58  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  8557  002F5A  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  8558  002F5C  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  8559  002F5E  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  8560  002F60  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  8561  002F62  6C01               	negf	___aodiv@dividend^0,c
  8562  002F64  0E00               	movlw	0
  8563  002F66  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  8564  002F68  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  8565  002F6A  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  8566  002F6C  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  8567  002F6E  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  8568  002F70  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  8569  002F72  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  8570  002F74  0E01               	movlw	1
  8571  002F76  1A12               	xorwf	___aodiv@sign^0,f,c
  8572  002F78                     l3172:
  8573  002F78  EE20  F013         	lfsr	2,___aodiv@quotient
  8574  002F7C  0E07               	movlw	7
  8575  002F7E                     u3351:
  8576  002F7E  6ADE               	clrf	postinc2,c
  8577  002F80  06E8               	decf	wreg,f,c
  8578  002F82  E2FD               	bc	u3351
  8579  002F84  5009               	movf	___aodiv@divisor^0,w,c
  8580  002F86  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  8581  002F88  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  8582  002F8A  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  8583  002F8C  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  8584  002F8E  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  8585  002F90  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  8586  002F92  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  8587  002F94  B4D8               	btfsc	status,2,c
  8588  002F96  EFCF  F017         	goto	u3361
  8589  002F9A  EFD1  F017         	goto	u3360
  8590  002F9E                     u3361:
  8591  002F9E  EF23  F018         	goto	l3194
  8592  002FA2                     u3360:
  8593  002FA2  0E01               	movlw	1
  8594  002FA4  6E11               	movwf	___aodiv@counter^0,c
  8595  002FA6  EFDF  F017         	goto	l3180
  8596  002FAA                     l3178:
  8597  002FAA  90D8               	bcf	status,0,c
  8598  002FAC  3609               	rlcf	___aodiv@divisor^0,f,c
  8599  002FAE  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  8600  002FB0  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  8601  002FB2  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  8602  002FB4  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  8603  002FB6  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  8604  002FB8  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  8605  002FBA  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  8606  002FBC  2A11               	incf	___aodiv@counter^0,f,c
  8607  002FBE                     l3180:
  8608  002FBE  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  8609  002FC0  EFE4  F017         	goto	u3371
  8610  002FC4  EFE6  F017         	goto	u3370
  8611  002FC8                     u3371:
  8612  002FC8  EFD5  F017         	goto	l3178
  8613  002FCC                     u3370:
  8614  002FCC                     l3182:
  8615  002FCC  90D8               	bcf	status,0,c
  8616  002FCE  3613               	rlcf	___aodiv@quotient^0,f,c
  8617  002FD0  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  8618  002FD2  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  8619  002FD4  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  8620  002FD6  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  8621  002FD8  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  8622  002FDA  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  8623  002FDC  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  8624  002FDE  5009               	movf	___aodiv@divisor^0,w,c
  8625  002FE0  5C01               	subwf	___aodiv@dividend^0,w,c
  8626  002FE2  500A               	movf	(___aodiv@divisor+1)^0,w,c
  8627  002FE4  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  8628  002FE6  500B               	movf	(___aodiv@divisor+2)^0,w,c
  8629  002FE8  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  8630  002FEA  500C               	movf	(___aodiv@divisor+3)^0,w,c
  8631  002FEC  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  8632  002FEE  500D               	movf	(___aodiv@divisor+4)^0,w,c
  8633  002FF0  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  8634  002FF2  500E               	movf	(___aodiv@divisor+5)^0,w,c
  8635  002FF4  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  8636  002FF6  500F               	movf	(___aodiv@divisor+6)^0,w,c
  8637  002FF8  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  8638  002FFA  5010               	movf	(___aodiv@divisor+7)^0,w,c
  8639  002FFC  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  8640  002FFE  A0D8               	btfss	status,0,c
  8641  003000  EF04  F018         	goto	u3381
  8642  003004  EF06  F018         	goto	u3380
  8643  003008                     u3381:
  8644  003008  EF17  F018         	goto	l3190
  8645  00300C                     u3380:
  8646  00300C  5009               	movf	___aodiv@divisor^0,w,c
  8647  00300E  5E01               	subwf	___aodiv@dividend^0,f,c
  8648  003010  500A               	movf	(___aodiv@divisor+1)^0,w,c
  8649  003012  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  8650  003014  500B               	movf	(___aodiv@divisor+2)^0,w,c
  8651  003016  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  8652  003018  500C               	movf	(___aodiv@divisor+3)^0,w,c
  8653  00301A  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  8654  00301C  500D               	movf	(___aodiv@divisor+4)^0,w,c
  8655  00301E  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  8656  003020  500E               	movf	(___aodiv@divisor+5)^0,w,c
  8657  003022  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  8658  003024  500F               	movf	(___aodiv@divisor+6)^0,w,c
  8659  003026  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  8660  003028  5010               	movf	(___aodiv@divisor+7)^0,w,c
  8661  00302A  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  8662  00302C  8013               	bsf	___aodiv@quotient^0,0,c
  8663  00302E                     l3190:
  8664  00302E  90D8               	bcf	status,0,c
  8665  003030  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  8666  003032  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  8667  003034  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  8668  003036  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  8669  003038  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  8670  00303A  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  8671  00303C  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  8672  00303E  3209               	rrcf	___aodiv@divisor^0,f,c
  8673  003040  2E11               	decfsz	___aodiv@counter^0,f,c
  8674  003042  EFE6  F017         	goto	l3182
  8675  003046                     l3194:
  8676  003046  5012               	movf	___aodiv@sign^0,w,c
  8677  003048  B4D8               	btfsc	status,2,c
  8678  00304A  EF29  F018         	goto	u3391
  8679  00304E  EF2B  F018         	goto	u3390
  8680  003052                     u3391:
  8681  003052  EF3B  F018         	goto	l3198
  8682  003056                     u3390:
  8683  003056  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  8684  003058  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  8685  00305A  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  8686  00305C  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  8687  00305E  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  8688  003060  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  8689  003062  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  8690  003064  6C13               	negf	___aodiv@quotient^0,c
  8691  003066  0E00               	movlw	0
  8692  003068  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  8693  00306A  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  8694  00306C  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  8695  00306E  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  8696  003070  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  8697  003072  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  8698  003074  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  8699  003076                     l3198:
  8700  003076  C013  F001         	movff	___aodiv@quotient,?___aodiv
  8701  00307A  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  8702  00307E  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  8703  003082  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  8704  003086  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  8705  00308A  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  8706  00308E  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  8707  003092  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  8708  003096  0012               	return		;funcret
  8709  003098                     __end_of___aodiv:
  8710                           	callstack 0
  8711                           
  8712 ;; *************** function _atoi *****************
  8713 ;; Defined at:
  8714 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\atoi.c"
  8715 ;; Parameters:    Size  Location     Type
  8716 ;;  s               2    7[COMRAM] PTR const unsigned char 
  8717 ;;		 -> STR_8(5), STR_7(5), STR_6(5), STR_5(5), 
  8718 ;;		 -> STR_2(15), STR_1(15), 
  8719 ;; Auto vars:     Size  Location     Type
  8720 ;;  n               2   15[COMRAM] int 
  8721 ;;  neg             2   13[COMRAM] int 
  8722 ;; Return value:  Size  Location     Type
  8723 ;;                  2    7[COMRAM] int 
  8724 ;; Registers used:
  8725 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8726 ;; Tracked objects:
  8727 ;;		On entry : 0/0
  8728 ;;		On exit  : 0/0
  8729 ;;		Unchanged: 0/0
  8730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8731 ;;      Params:         2       0       0       0       0       0       0
  8732 ;;      Locals:         4       0       0       0       0       0       0
  8733 ;;      Temps:          4       0       0       0       0       0       0
  8734 ;;      Totals:        10       0       0       0       0       0       0
  8735 ;;Total ram usage:       10 bytes
  8736 ;; Hardware stack levels used: 1
  8737 ;; Hardware stack levels required when called: 1
  8738 ;; This function calls:
  8739 ;;		___wmul
  8740 ;;		_isdigit
  8741 ;;		_isspace
  8742 ;; This function is called by:
  8743 ;;		_vfpfcnvrt
  8744 ;; This function uses a non-reentrant model
  8745 ;;
  8746                           
  8747                           	psect	text33
  8748  0031FC                     __ptext33:
  8749                           	callstack 0
  8750  0031FC                     _atoi:
  8751                           	callstack 25
  8752  0031FC  0E00               	movlw	0
  8753  0031FE  6E11               	movwf	(atoi@n+1)^0,c
  8754  003200  0E00               	movlw	0
  8755  003202  6E10               	movwf	atoi@n^0,c
  8756  003204  0E00               	movlw	0
  8757  003206  6E0F               	movwf	(atoi@neg+1)^0,c
  8758  003208  0E00               	movlw	0
  8759  00320A  6E0E               	movwf	atoi@neg^0,c
  8760  00320C  EF0A  F019         	goto	l4174
  8761  003210                     l4170:
  8762  003210  4A08               	infsnz	atoi@s^0,f,c
  8763  003212  2A09               	incf	(atoi@s+1)^0,f,c
  8764  003214                     l4174:
  8765  003214  C008  FFF6         	movff	atoi@s,tblptrl
  8766  003218  C009  FFF7         	movff	atoi@s+1,tblptrh
  8767  00321C                     	if	0	;tblptru may be non-zero
  8768  00321C                     	endif
  8769  00321C                     	if	0	;tblptru may be non-zero
  8770  00321C                     	endif
  8771  00321C  0008               	tblrd		*
  8772  00321E  50F5               	movf	tablat,w,c
  8773  003220  0A20               	xorlw	32
  8774  003222  B4D8               	btfsc	status,2,c
  8775  003224  EF16  F019         	goto	u5091
  8776  003228  EF18  F019         	goto	u5090
  8777  00322C                     u5091:
  8778  00322C  EF08  F019         	goto	l4170
  8779  003230                     u5090:
  8780  003230  0EF7               	movlw	247
  8781  003232  6E0A               	movwf	??_atoi^0,c
  8782  003234  0EFF               	movlw	255
  8783  003236  6E0B               	movwf	(??_atoi+1)^0,c
  8784  003238  C008  FFF6         	movff	atoi@s,tblptrl
  8785  00323C  C009  FFF7         	movff	atoi@s+1,tblptrh
  8786  003240                     	if	0	;tblptru may be non-zero
  8787  003240                     	endif
  8788  003240                     	if	0	;tblptru may be non-zero
  8789  003240                     	endif
  8790  003240  0008               	tblrd		*
  8791  003242  50F5               	movf	tablat,w,c
  8792  003244  6E0C               	movwf	(??_atoi+2)^0,c
  8793  003246  6A0D               	clrf	(??_atoi+3)^0,c
  8794  003248  500A               	movf	??_atoi^0,w,c
  8795  00324A  260C               	addwf	(??_atoi+2)^0,f,c
  8796  00324C  500B               	movf	(??_atoi+1)^0,w,c
  8797  00324E  220D               	addwfc	(??_atoi+3)^0,f,c
  8798  003250  500D               	movf	(??_atoi+3)^0,w,c
  8799  003252  E109               	bnz	u5100
  8800  003254  0E05               	movlw	5
  8801  003256  5C0C               	subwf	(??_atoi+2)^0,w,c
  8802  003258  A0D8               	btfss	status,0,c
  8803  00325A  EF31  F019         	goto	u5101
  8804  00325E  EF33  F019         	goto	u5100
  8805  003262                     u5101:
  8806  003262  EF08  F019         	goto	l4170
  8807  003266                     u5100:
  8808  003266  EF3D  F019         	goto	l4182
  8809  00326A                     l4178:
  8810  00326A  0E00               	movlw	0
  8811  00326C  6E0F               	movwf	(atoi@neg+1)^0,c
  8812  00326E  0E01               	movlw	1
  8813  003270  6E0E               	movwf	atoi@neg^0,c
  8814  003272                     l4180:
  8815  003272  4A08               	infsnz	atoi@s^0,f,c
  8816  003274  2A09               	incf	(atoi@s+1)^0,f,c
  8817  003276  EF72  F019         	goto	l4190
  8818  00327A                     l4182:
  8819  00327A  C008  FFF6         	movff	atoi@s,tblptrl
  8820  00327E  C009  FFF7         	movff	atoi@s+1,tblptrh
  8821  003282                     	if	0	;tblptru may be non-zero
  8822  003282                     	endif
  8823  003282                     	if	0	;tblptru may be non-zero
  8824  003282                     	endif
  8825  003282  0008               	tblrd		*
  8826  003284  50F5               	movf	tablat,w,c
  8827  003286  6E0A               	movwf	??_atoi^0,c
  8828  003288  6A0B               	clrf	(??_atoi+1)^0,c
  8829                           
  8830                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8831                           ; Switch size 1, requested type "simple"
  8832                           ; Number of cases is 1, Range of values is 0 to 0
  8833                           ; switch strategies available:
  8834                           ; Name         Instructions Cycles
  8835                           ; simple_byte            4     3 (average)
  8836                           ;	Chosen strategy is simple_byte
  8837  00328A  500B               	movf	(??_atoi+1)^0,w,c
  8838  00328C  0A00               	xorlw	0	; case 0
  8839  00328E  B4D8               	btfsc	status,2,c
  8840  003290  EF4C  F019         	goto	l4688
  8841  003294  EF72  F019         	goto	l4190
  8842  003298                     l4688:
  8843                           
  8844                           ; Switch size 1, requested type "simple"
  8845                           ; Number of cases is 2, Range of values is 43 to 45
  8846                           ; switch strategies available:
  8847                           ; Name         Instructions Cycles
  8848                           ; simple_byte            7     4 (average)
  8849                           ;	Chosen strategy is simple_byte
  8850  003298  500A               	movf	??_atoi^0,w,c
  8851  00329A  0A2B               	xorlw	43	; case 43
  8852  00329C  B4D8               	btfsc	status,2,c
  8853  00329E  EF39  F019         	goto	l4180
  8854  0032A2  0A06               	xorlw	6	; case 45
  8855  0032A4  B4D8               	btfsc	status,2,c
  8856  0032A6  EF35  F019         	goto	l4178
  8857  0032AA  EF72  F019         	goto	l4190
  8858  0032AE                     l4184:
  8859  0032AE  C010  F001         	movff	atoi@n,___wmul@multiplier
  8860  0032B2  C011  F002         	movff	atoi@n+1,___wmul@multiplier+1
  8861  0032B6  0E00               	movlw	0
  8862  0032B8  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8863  0032BA  0E0A               	movlw	10
  8864  0032BC  6E03               	movwf	___wmul@multiplicand^0,c
  8865  0032BE  EC5B  F021         	call	___wmul	;wreg free
  8866  0032C2  C008  FFF6         	movff	atoi@s,tblptrl
  8867  0032C6  C009  FFF7         	movff	atoi@s+1,tblptrh
  8868  0032CA                     	if	0	;tblptru may be non-zero
  8869  0032CA                     	endif
  8870  0032CA                     	if	0	;tblptru may be non-zero
  8871  0032CA                     	endif
  8872  0032CA  0008               	tblrd		*
  8873  0032CC  50F5               	movf	tablat,w,c
  8874  0032CE  5E01               	subwf	?___wmul^0,f,c
  8875  0032D0  0E00               	movlw	0
  8876  0032D2  5A02               	subwfb	(?___wmul+1)^0,f,c
  8877  0032D4  0E30               	movlw	48
  8878  0032D6  2401               	addwf	?___wmul^0,w,c
  8879  0032D8  6E10               	movwf	atoi@n^0,c
  8880  0032DA  0E00               	movlw	0
  8881  0032DC  2002               	addwfc	(?___wmul+1)^0,w,c
  8882  0032DE  6E11               	movwf	(atoi@n+1)^0,c
  8883  0032E0  EF39  F019         	goto	l4180
  8884  0032E4                     l4190:
  8885  0032E4  0ED0               	movlw	208
  8886  0032E6  6E0A               	movwf	??_atoi^0,c
  8887  0032E8  0EFF               	movlw	255
  8888  0032EA  6E0B               	movwf	(??_atoi+1)^0,c
  8889  0032EC  C008  FFF6         	movff	atoi@s,tblptrl
  8890  0032F0  C009  FFF7         	movff	atoi@s+1,tblptrh
  8891  0032F4                     	if	0	;tblptru may be non-zero
  8892  0032F4                     	endif
  8893  0032F4                     	if	0	;tblptru may be non-zero
  8894  0032F4                     	endif
  8895  0032F4  0008               	tblrd		*
  8896  0032F6  50F5               	movf	tablat,w,c
  8897  0032F8  6E0C               	movwf	(??_atoi+2)^0,c
  8898  0032FA  6A0D               	clrf	(??_atoi+3)^0,c
  8899  0032FC  500A               	movf	??_atoi^0,w,c
  8900  0032FE  260C               	addwf	(??_atoi+2)^0,f,c
  8901  003300  500B               	movf	(??_atoi+1)^0,w,c
  8902  003302  220D               	addwfc	(??_atoi+3)^0,f,c
  8903  003304  500D               	movf	(??_atoi+3)^0,w,c
  8904  003306  E109               	bnz	u5110
  8905  003308  0E0A               	movlw	10
  8906  00330A  5C0C               	subwf	(??_atoi+2)^0,w,c
  8907  00330C  A0D8               	btfss	status,0,c
  8908  00330E  EF8B  F019         	goto	u5111
  8909  003312  EF8D  F019         	goto	u5110
  8910  003316                     u5111:
  8911  003316  EF57  F019         	goto	l4184
  8912  00331A                     u5110:
  8913  00331A  500E               	movf	atoi@neg^0,w,c
  8914  00331C  100F               	iorwf	(atoi@neg+1)^0,w,c
  8915  00331E  A4D8               	btfss	status,2,c
  8916  003320  EF94  F019         	goto	u5121
  8917  003324  EF96  F019         	goto	u5120
  8918  003328                     u5121:
  8919  003328  EFA4  F019         	goto	l1077
  8920  00332C                     u5120:
  8921  00332C  C010  F00A         	movff	atoi@n,??_atoi
  8922  003330  C011  F00B         	movff	atoi@n+1,??_atoi+1
  8923  003334  1E0A               	comf	??_atoi^0,f,c
  8924  003336  1E0B               	comf	(??_atoi+1)^0,f,c
  8925  003338  4A0A               	infsnz	??_atoi^0,f,c
  8926  00333A  2A0B               	incf	(??_atoi+1)^0,f,c
  8927  00333C  C00A  F008         	movff	??_atoi,?_atoi
  8928  003340  C00B  F009         	movff	??_atoi+1,?_atoi+1
  8929  003344  EFA8  F019         	goto	l1080
  8930  003348                     l1077:
  8931  003348  C010  F008         	movff	atoi@n,?_atoi
  8932  00334C  C011  F009         	movff	atoi@n+1,?_atoi+1
  8933  003350                     l1080:
  8934  003350  0012               	return		;funcret
  8935  003352                     __end_of_atoi:
  8936                           	callstack 0
  8937                           
  8938 ;; *************** function _isspace *****************
  8939 ;; Defined at:
  8940 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isspace.c"
  8941 ;; Parameters:    Size  Location     Type
  8942 ;;  c               2    0[COMRAM] int 
  8943 ;; Auto vars:     Size  Location     Type
  8944 ;;		None
  8945 ;; Return value:  Size  Location     Type
  8946 ;;                  2    0[COMRAM] int 
  8947 ;; Registers used:
  8948 ;;		wreg, status,2, status,0
  8949 ;; Tracked objects:
  8950 ;;		On entry : 0/0
  8951 ;;		On exit  : 0/0
  8952 ;;		Unchanged: 0/0
  8953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8954 ;;      Params:         2       0       0       0       0       0       0
  8955 ;;      Locals:         1       0       0       0       0       0       0
  8956 ;;      Temps:          4       0       0       0       0       0       0
  8957 ;;      Totals:         7       0       0       0       0       0       0
  8958 ;;Total ram usage:        7 bytes
  8959 ;; Hardware stack levels used: 1
  8960 ;; This function calls:
  8961 ;;		Nothing
  8962 ;; This function is called by:
  8963 ;;		_atoi
  8964 ;; This function uses a non-reentrant model
  8965 ;;
  8966                           
  8967                           	psect	text34
  8968  004016                     __ptext34:
  8969                           	callstack 0
  8970  004016                     _isspace:
  8971                           	callstack 25
  8972  004016  0E01               	movlw	1
  8973  004018  6E07               	movwf	_isspace$1247^0,c
  8974  00401A  0E20               	movlw	32
  8975  00401C  1801               	xorwf	isspace@c^0,w,c
  8976  00401E  1002               	iorwf	(isspace@c+1)^0,w,c
  8977  004020  B4D8               	btfsc	status,2,c
  8978  004022  EF15  F020         	goto	u4431
  8979  004026  EF17  F020         	goto	u4430
  8980  00402A                     u4431:
  8981  00402A  EF30  F020         	goto	l3784
  8982  00402E                     u4430:
  8983  00402E  0EF7               	movlw	247
  8984  004030  6E03               	movwf	??_isspace^0,c
  8985  004032  0EFF               	movlw	255
  8986  004034  6E04               	movwf	(??_isspace+1)^0,c
  8987  004036  C001  F005         	movff	isspace@c,??_isspace+2
  8988  00403A  C002  F006         	movff	isspace@c+1,??_isspace+3
  8989  00403E  5003               	movf	??_isspace^0,w,c
  8990  004040  2605               	addwf	(??_isspace+2)^0,f,c
  8991  004042  5004               	movf	(??_isspace+1)^0,w,c
  8992  004044  2206               	addwfc	(??_isspace+3)^0,f,c
  8993  004046  5006               	movf	(??_isspace+3)^0,w,c
  8994  004048  E109               	bnz	u4440
  8995  00404A  0E05               	movlw	5
  8996  00404C  5C05               	subwf	(??_isspace+2)^0,w,c
  8997  00404E  A0D8               	btfss	status,0,c
  8998  004050  EF2C  F020         	goto	u4441
  8999  004054  EF2E  F020         	goto	u4440
  9000  004058                     u4441:
  9001  004058  EF30  F020         	goto	l3784
  9002  00405C                     u4440:
  9003  00405C  0E00               	movlw	0
  9004  00405E  6E07               	movwf	_isspace$1247^0,c
  9005  004060                     l3784:
  9006  004060  C007  F001         	movff	_isspace$1247,?_isspace
  9007  004064  6A02               	clrf	(?_isspace+1)^0,c
  9008  004066  0012               	return		;funcret
  9009  004068                     __end_of_isspace:
  9010                           	callstack 0
  9011                           
  9012 ;; *************** function _isdigit *****************
  9013 ;; Defined at:
  9014 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isdigit.c"
  9015 ;; Parameters:    Size  Location     Type
  9016 ;;  c               2    0[COMRAM] int 
  9017 ;; Auto vars:     Size  Location     Type
  9018 ;;		None
  9019 ;; Return value:  Size  Location     Type
  9020 ;;                  2    0[COMRAM] int 
  9021 ;; Registers used:
  9022 ;;		wreg, status,2, status,0
  9023 ;; Tracked objects:
  9024 ;;		On entry : 0/0
  9025 ;;		On exit  : 0/0
  9026 ;;		Unchanged: 0/0
  9027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9028 ;;      Params:         2       0       0       0       0       0       0
  9029 ;;      Locals:         0       0       0       0       0       0       0
  9030 ;;      Temps:          4       0       0       0       0       0       0
  9031 ;;      Totals:         6       0       0       0       0       0       0
  9032 ;;Total ram usage:        6 bytes
  9033 ;; Hardware stack levels used: 1
  9034 ;; This function calls:
  9035 ;;		Nothing
  9036 ;; This function is called by:
  9037 ;;		_vfpfcnvrt
  9038 ;;		_atoi
  9039 ;; This function uses a non-reentrant model
  9040 ;;
  9041                           
  9042                           	psect	text35
  9043  004222                     __ptext35:
  9044                           	callstack 0
  9045  004222                     _isdigit:
  9046                           	callstack 26
  9047  004222  0ED0               	movlw	208
  9048  004224  6E03               	movwf	??_isdigit^0,c
  9049  004226  0EFF               	movlw	255
  9050  004228  6E04               	movwf	(??_isdigit+1)^0,c
  9051  00422A  C001  F005         	movff	isdigit@c,??_isdigit+2
  9052  00422E  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  9053  004232  5003               	movf	??_isdigit^0,w,c
  9054  004234  2605               	addwf	(??_isdigit+2)^0,f,c
  9055  004236  5004               	movf	(??_isdigit+1)^0,w,c
  9056  004238  2206               	addwfc	(??_isdigit+3)^0,f,c
  9057  00423A  5006               	movf	(??_isdigit+3)^0,w,c
  9058  00423C  E10A               	bnz	u4410
  9059  00423E  0E0A               	movlw	10
  9060  004240  5C05               	subwf	(??_isdigit+2)^0,w,c
  9061  004242  A0D8               	btfss	status,0,c
  9062  004244  EF26  F021         	goto	u4411
  9063  004248  EF29  F021         	goto	u4410
  9064  00424C                     u4411:
  9065  00424C  0E01               	movlw	1
  9066  00424E  EF2A  F021         	goto	u4420
  9067  004252                     u4410:
  9068  004252  0E00               	movlw	0
  9069  004254                     u4420:
  9070  004254  6E01               	movwf	?_isdigit^0,c
  9071  004256  6A02               	clrf	(?_isdigit+1)^0,c
  9072  004258  0012               	return		;funcret
  9073  00425A                     __end_of_isdigit:
  9074                           	callstack 0
  9075                           
  9076 ;; *************** function ___wmul *****************
  9077 ;; Defined at:
  9078 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
  9079 ;; Parameters:    Size  Location     Type
  9080 ;;  multiplier      2    0[COMRAM] unsigned int 
  9081 ;;  multiplicand    2    2[COMRAM] unsigned int 
  9082 ;; Auto vars:     Size  Location     Type
  9083 ;;  product         2    4[COMRAM] unsigned int 
  9084 ;; Return value:  Size  Location     Type
  9085 ;;                  2    0[COMRAM] unsigned int 
  9086 ;; Registers used:
  9087 ;;		wreg, status,2, status,0, prodl, prodh
  9088 ;; Tracked objects:
  9089 ;;		On entry : 0/0
  9090 ;;		On exit  : 0/0
  9091 ;;		Unchanged: 0/0
  9092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9093 ;;      Params:         4       0       0       0       0       0       0
  9094 ;;      Locals:         2       0       0       0       0       0       0
  9095 ;;      Temps:          0       0       0       0       0       0       0
  9096 ;;      Totals:         6       0       0       0       0       0       0
  9097 ;;Total ram usage:        6 bytes
  9098 ;; Hardware stack levels used: 1
  9099 ;; This function calls:
  9100 ;;		Nothing
  9101 ;; This function is called by:
  9102 ;;		_atoi
  9103 ;; This function uses a non-reentrant model
  9104 ;;
  9105                           
  9106                           	psect	text36
  9107  0042B6                     __ptext36:
  9108                           	callstack 0
  9109  0042B6                     ___wmul:
  9110                           	callstack 25
  9111  0042B6  5001               	movf	___wmul@multiplier^0,w,c
  9112  0042B8  0203               	mulwf	___wmul@multiplicand^0,c
  9113  0042BA  CFF3 F005          	movff	prodl,___wmul@product
  9114  0042BE  CFF4 F006          	movff	prodh,___wmul@product+1
  9115  0042C2  5001               	movf	___wmul@multiplier^0,w,c
  9116  0042C4  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  9117  0042C6  50F3               	movf	243,w,c
  9118  0042C8  2606               	addwf	(___wmul@product+1)^0,f,c
  9119  0042CA  5002               	movf	(___wmul@multiplier+1)^0,w,c
  9120  0042CC  0203               	mulwf	___wmul@multiplicand^0,c
  9121  0042CE  50F3               	movf	243,w,c
  9122  0042D0  2606               	addwf	(___wmul@product+1)^0,f,c
  9123  0042D2  C005  F001         	movff	___wmul@product,?___wmul
  9124  0042D6  C006  F002         	movff	___wmul@product+1,?___wmul+1
  9125  0042DA  0012               	return		;funcret
  9126  0042DC                     __end_of___wmul:
  9127                           	callstack 0
  9128                           
  9129 ;; *************** function _lcd_write *****************
  9130 ;; Defined at:
  9131 ;;		line 77 in file "LCD4b_EXSTO.c"
  9132 ;; Parameters:    Size  Location     Type
  9133 ;;  lin             1    wreg     unsigned char 
  9134 ;;  col             1    6[COMRAM] unsigned char 
  9135 ;;  str             2    7[COMRAM] PTR unsigned char 
  9136 ;;		 -> STR_14(16), STR_13(16), STR_12(8), STR_11(7), 
  9137 ;;		 -> STR_10(8), STR_9(7), Buffer_D4(8), Buffer_D3(8), 
  9138 ;;		 -> Buffer_D2(8), Buffer_D1(8), STR_4(9), STR_3(8), 
  9139 ;;		 -> VoltageBuffer(16), VdigBuffer(16), 
  9140 ;; Auto vars:     Size  Location     Type
  9141 ;;  lin             1   10[COMRAM] unsigned char 
  9142 ;;  end             1    9[COMRAM] unsigned char 
  9143 ;; Return value:  Size  Location     Type
  9144 ;;                  1    wreg      void 
  9145 ;; Registers used:
  9146 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9147 ;; Tracked objects:
  9148 ;;		On entry : 0/0
  9149 ;;		On exit  : 0/0
  9150 ;;		Unchanged: 0/0
  9151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9152 ;;      Params:         3       0       0       0       0       0       0
  9153 ;;      Locals:         2       0       0       0       0       0       0
  9154 ;;      Temps:          0       0       0       0       0       0       0
  9155 ;;      Totals:         5       0       0       0       0       0       0
  9156 ;;Total ram usage:        5 bytes
  9157 ;; Hardware stack levels used: 1
  9158 ;; Hardware stack levels required when called: 3
  9159 ;; This function calls:
  9160 ;;		_lcd_send_byte
  9161 ;; This function is called by:
  9162 ;;		_lcd_SENSOR
  9163 ;;		_lcd_LEDS
  9164 ;;		_lcd_clear
  9165 ;; This function uses a non-reentrant model
  9166 ;;
  9167                           
  9168                           	psect	text37
  9169  003CC8                     __ptext37:
  9170                           	callstack 0
  9171  003CC8                     _lcd_write:
  9172                           	callstack 26
  9173                           
  9174                           ;incstack = 0
  9175                           ;lcd_write@lin stored from wreg
  9176  003CC8  6E0B               	movwf	lcd_write@lin^0,c
  9177  003CCA                     
  9178                           ;LCD4b_EXSTO.c: 77: void lcd_write(char lin, char col, char *str);LCD4b_EXSTO.c: 78: {;L
      +                          CD4b_EXSTO.c: 79:     char end;;LCD4b_EXSTO.c: 81:     if(lin == 1)
  9179  003CCA  040B               	decf	lcd_write@lin^0,w,c
  9180  003CCC  A4D8               	btfss	status,2,c
  9181  003CCE  EF6B  F01E         	goto	u5371
  9182  003CD2  EF6D  F01E         	goto	u5370
  9183  003CD6                     u5371:
  9184  003CD6  EF72  F01E         	goto	l4428
  9185  003CDA                     u5370:
  9186  003CDA                     
  9187                           ;LCD4b_EXSTO.c: 82:     {;LCD4b_EXSTO.c: 83:         end = col + 0X80 - 1;
  9188  003CDA  5007               	movf	lcd_write@col^0,w,c
  9189  003CDC  0F7F               	addlw	127
  9190  003CDE  6E0A               	movwf	lcd_write@end^0,c
  9191                           
  9192                           ;LCD4b_EXSTO.c: 84:     }
  9193  003CE0  EF7E  F01E         	goto	l4432
  9194  003CE4                     l4428:
  9195  003CE4  0E02               	movlw	2
  9196  003CE6  180B               	xorwf	lcd_write@lin^0,w,c
  9197  003CE8  A4D8               	btfss	status,2,c
  9198  003CEA  EF79  F01E         	goto	u5381
  9199  003CEE  EF7B  F01E         	goto	u5380
  9200  003CF2                     u5381:
  9201  003CF2  EF7E  F01E         	goto	l4432
  9202  003CF6                     u5380:
  9203  003CF6                     
  9204                           ;LCD4b_EXSTO.c: 86:     {;LCD4b_EXSTO.c: 87:         end = col + 0xC0 - 1;
  9205  003CF6  5007               	movf	lcd_write@col^0,w,c
  9206  003CF8  0FBF               	addlw	191
  9207  003CFA  6E0A               	movwf	lcd_write@end^0,c
  9208  003CFC                     l4432:
  9209                           
  9210                           ;LCD4b_EXSTO.c: 89:     lcd_send_byte(0,end);
  9211  003CFC  C00A  F005         	movff	lcd_write@end,lcd_send_byte@data
  9212  003D00  0E00               	movlw	0
  9213  003D02  EC7E  F021         	call	_lcd_send_byte
  9214                           
  9215                           ;LCD4b_EXSTO.c: 91:     while(*str)
  9216  003D06  EF9B  F01E         	goto	l4438
  9217  003D0A                     l4434:
  9218                           
  9219                           ;LCD4b_EXSTO.c: 92:     {;LCD4b_EXSTO.c: 93:         lcd_send_byte(1,*str);
  9220  003D0A  C008  FFF6         	movff	lcd_write@str,tblptrl
  9221  003D0E  C009  FFF7         	movff	lcd_write@str+1,tblptrh
  9222  003D12  6AF8               	clrf	tblptru,c
  9223  003D14  0E05               	movlw	(high __ramtop+-1)
  9224  003D16  64F7               	cpfsgt	tblptrh,c
  9225  003D18  D003               	bra	u5397
  9226  003D1A  0008               	tblrd		*
  9227  003D1C  50F5               	movf	tablat,w,c
  9228  003D1E  D005               	bra	u5390
  9229  003D20                     u5397:
  9230  003D20  CFF6 FFE1          	movff	tblptrl,fsr1l
  9231  003D24  CFF7 FFE2          	movff	tblptrh,fsr1h
  9232  003D28  50E7               	movf	indf1,w,c
  9233  003D2A                     u5390:
  9234  003D2A  6E05               	movwf	lcd_send_byte@data^0,c
  9235  003D2C  0E01               	movlw	1
  9236  003D2E  EC7E  F021         	call	_lcd_send_byte
  9237  003D32                     
  9238                           ;LCD4b_EXSTO.c: 94:         str++;
  9239  003D32  4A08               	infsnz	lcd_write@str^0,f,c
  9240  003D34  2A09               	incf	(lcd_write@str+1)^0,f,c
  9241  003D36                     l4438:
  9242                           
  9243                           ;LCD4b_EXSTO.c: 91:     while(*str)
  9244  003D36  C008  FFF6         	movff	lcd_write@str,tblptrl
  9245  003D3A  C009  FFF7         	movff	lcd_write@str+1,tblptrh
  9246  003D3E  6AF8               	clrf	tblptru,c
  9247  003D40  0E05               	movlw	(high __ramtop+-1)
  9248  003D42  64F7               	cpfsgt	tblptrh,c
  9249  003D44  D003               	bra	u5407
  9250  003D46  0008               	tblrd		*
  9251  003D48  50F5               	movf	tablat,w,c
  9252  003D4A  D005               	bra	u5400
  9253  003D4C                     u5407:
  9254  003D4C  CFF6 FFE1          	movff	tblptrl,fsr1l
  9255  003D50  CFF7 FFE2          	movff	tblptrh,fsr1h
  9256  003D54  50E7               	movf	indf1,w,c
  9257  003D56                     u5400:
  9258  003D56  0900               	iorlw	0
  9259  003D58  A4D8               	btfss	status,2,c
  9260  003D5A  EFB1  F01E         	goto	u5411
  9261  003D5E  EFB3  F01E         	goto	u5410
  9262  003D62                     u5411:
  9263  003D62  EF85  F01E         	goto	l4434
  9264  003D66                     u5410:
  9265  003D66  0012               	return		;funcret
  9266  003D68                     __end_of_lcd_write:
  9267                           	callstack 0
  9268                           
  9269 ;; *************** function _lcd_send_byte *****************
  9270 ;; Defined at:
  9271 ;;		line 63 in file "LCD4b_EXSTO.c"
  9272 ;; Parameters:    Size  Location     Type
  9273 ;;  level           1    wreg     unsigned char 
  9274 ;;  data            1    4[COMRAM] unsigned char 
  9275 ;; Auto vars:     Size  Location     Type
  9276 ;;  level           1    5[COMRAM] unsigned char 
  9277 ;; Return value:  Size  Location     Type
  9278 ;;                  1    wreg      void 
  9279 ;; Registers used:
  9280 ;;		wreg, status,2, status,0, cstack
  9281 ;; Tracked objects:
  9282 ;;		On entry : 0/0
  9283 ;;		On exit  : 0/0
  9284 ;;		Unchanged: 0/0
  9285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9286 ;;      Params:         1       0       0       0       0       0       0
  9287 ;;      Locals:         1       0       0       0       0       0       0
  9288 ;;      Temps:          0       0       0       0       0       0       0
  9289 ;;      Totals:         2       0       0       0       0       0       0
  9290 ;;Total ram usage:        2 bytes
  9291 ;; Hardware stack levels used: 1
  9292 ;; Hardware stack levels required when called: 2
  9293 ;; This function calls:
  9294 ;;		_lcd_cmd
  9295 ;; This function is called by:
  9296 ;;		_lcd_write
  9297 ;; This function uses a non-reentrant model
  9298 ;;
  9299                           
  9300                           	psect	text38
  9301  0042FC                     __ptext38:
  9302                           	callstack 0
  9303  0042FC                     _lcd_send_byte:
  9304                           	callstack 26
  9305                           
  9306                           ;incstack = 0
  9307                           ;lcd_send_byte@level stored from wreg
  9308  0042FC  6E06               	movwf	lcd_send_byte@level^0,c
  9309  0042FE                     
  9310                           ;LCD4b_EXSTO.c: 63: void lcd_send_byte(char level, char data);LCD4b_EXSTO.c: 64: {;LCD4b
      +                          _EXSTO.c: 65:     PORTEbits.RE0 = level;
  9311  0042FE  B006               	btfsc	lcd_send_byte@level^0,0,c
  9312  004300  D002               	bra	u5355
  9313  004302  9084               	bcf	132,0,c	;volatile
  9314  004304  D001               	bra	u5356
  9315  004306                     u5355:
  9316  004306  8084               	bsf	132,0,c	;volatile
  9317  004308                     u5356:
  9318  004308                     
  9319                           ;LCD4b_EXSTO.c: 66:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  9320  004308  0E42               	movlw	66
  9321  00430A                     u5787:
  9322  00430A  2EE8               	decfsz	wreg,f,c
  9323  00430C  D7FE               	bra	u5787
  9324  00430E  D000               	nop2	
  9325  004310                     
  9326                           ;LCD4b_EXSTO.c: 67:     PORTEbits.RE2 = 0;
  9327  004310  9484               	bcf	132,2,c	;volatile
  9328  004312                     
  9329                           ;LCD4b_EXSTO.c: 68:     lcd_cmd(data);
  9330  004312  5005               	movf	lcd_send_byte@data^0,w,c
  9331  004314  ECB2  F01B         	call	_lcd_cmd
  9332  004318  0012               	return		;funcret
  9333  00431A                     __end_of_lcd_send_byte:
  9334                           	callstack 0
  9335                           
  9336 ;; *************** function _lcd_cmd *****************
  9337 ;; Defined at:
  9338 ;;		line 42 in file "LCD4b_EXSTO.c"
  9339 ;; Parameters:    Size  Location     Type
  9340 ;;  cmd             1    wreg     unsigned char 
  9341 ;; Auto vars:     Size  Location     Type
  9342 ;;  cmd             1    3[COMRAM] unsigned char 
  9343 ;; Return value:  Size  Location     Type
  9344 ;;                  1    wreg      void 
  9345 ;; Registers used:
  9346 ;;		wreg, status,2, status,0, cstack
  9347 ;; Tracked objects:
  9348 ;;		On entry : 0/0
  9349 ;;		On exit  : 0/0
  9350 ;;		Unchanged: 0/0
  9351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9352 ;;      Params:         0       0       0       0       0       0       0
  9353 ;;      Locals:         1       0       0       0       0       0       0
  9354 ;;      Temps:          1       0       0       0       0       0       0
  9355 ;;      Totals:         2       0       0       0       0       0       0
  9356 ;;Total ram usage:        2 bytes
  9357 ;; Hardware stack levels used: 1
  9358 ;; Hardware stack levels required when called: 1
  9359 ;; This function calls:
  9360 ;;		_set_bit
  9361 ;; This function is called by:
  9362 ;;		_lcd_init
  9363 ;;		_lcd_send_byte
  9364 ;; This function uses a non-reentrant model
  9365 ;;
  9366                           
  9367                           	psect	text39
  9368  003764                     __ptext39:
  9369                           	callstack 0
  9370  003764                     _lcd_cmd:
  9371                           	callstack 28
  9372                           
  9373                           ;incstack = 0
  9374                           ;lcd_cmd@cmd stored from wreg
  9375  003764  6E04               	movwf	lcd_cmd@cmd^0,c
  9376  003766                     
  9377                           ;LCD4b_EXSTO.c: 42: void lcd_cmd(char cmd);LCD4b_EXSTO.c: 43: {;LCD4b_EXSTO.c: 44:     P
      +                          ORTDbits.RD4 = set_bit(cmd, 0b00010000);
  9378  003766  0E10               	movlw	16
  9379  003768  6E01               	movwf	set_bit@comp^0,c
  9380  00376A  5004               	movf	lcd_cmd@cmd^0,w,c
  9381  00376C  EC6E  F021         	call	_set_bit
  9382  003770  6E03               	movwf	??_lcd_cmd^0,c
  9383  003772  3A03               	swapf	??_lcd_cmd^0,f,c
  9384  003774  5083               	movf	131,w,c	;volatile
  9385  003776  1803               	xorwf	??_lcd_cmd^0,w,c
  9386  003778  0BEF               	andlw	-17
  9387  00377A  1803               	xorwf	??_lcd_cmd^0,w,c
  9388  00377C  6E83               	movwf	131,c	;volatile
  9389                           
  9390                           ;LCD4b_EXSTO.c: 45:     PORTDbits.RD5 = set_bit(cmd, 0b00100000);
  9391  00377E  0E20               	movlw	32
  9392  003780  6E01               	movwf	set_bit@comp^0,c
  9393  003782  5004               	movf	lcd_cmd@cmd^0,w,c
  9394  003784  EC6E  F021         	call	_set_bit
  9395  003788  6E03               	movwf	??_lcd_cmd^0,c
  9396  00378A  3A03               	swapf	??_lcd_cmd^0,f,c
  9397  00378C  4603               	rlncf	??_lcd_cmd^0,f,c
  9398  00378E  5083               	movf	131,w,c	;volatile
  9399  003790  1803               	xorwf	??_lcd_cmd^0,w,c
  9400  003792  0BDF               	andlw	-33
  9401  003794  1803               	xorwf	??_lcd_cmd^0,w,c
  9402  003796  6E83               	movwf	131,c	;volatile
  9403                           
  9404                           ;LCD4b_EXSTO.c: 46:     PORTDbits.RD6 = set_bit(cmd, 0b01000000);
  9405  003798  0E40               	movlw	64
  9406  00379A  6E01               	movwf	set_bit@comp^0,c
  9407  00379C  5004               	movf	lcd_cmd@cmd^0,w,c
  9408  00379E  EC6E  F021         	call	_set_bit
  9409  0037A2  6E03               	movwf	??_lcd_cmd^0,c
  9410  0037A4  3A03               	swapf	??_lcd_cmd^0,f,c
  9411  0037A6  4603               	rlncf	??_lcd_cmd^0,f,c
  9412  0037A8  4603               	rlncf	??_lcd_cmd^0,f,c
  9413  0037AA  5083               	movf	131,w,c	;volatile
  9414  0037AC  1803               	xorwf	??_lcd_cmd^0,w,c
  9415  0037AE  0BBF               	andlw	-65
  9416  0037B0  1803               	xorwf	??_lcd_cmd^0,w,c
  9417  0037B2  6E83               	movwf	131,c	;volatile
  9418                           
  9419                           ;LCD4b_EXSTO.c: 47:     PORTDbits.RD7 = set_bit(cmd, 0b10000000);
  9420  0037B4  0E80               	movlw	128
  9421  0037B6  6E01               	movwf	set_bit@comp^0,c
  9422  0037B8  5004               	movf	lcd_cmd@cmd^0,w,c
  9423  0037BA  EC6E  F021         	call	_set_bit
  9424  0037BE  6E03               	movwf	??_lcd_cmd^0,c
  9425  0037C0  3203               	rrcf	??_lcd_cmd^0,f,c
  9426  0037C2  3203               	rrcf	??_lcd_cmd^0,f,c
  9427  0037C4  5083               	movf	131,w,c	;volatile
  9428  0037C6  1803               	xorwf	??_lcd_cmd^0,w,c
  9429  0037C8  0B7F               	andlw	-129
  9430  0037CA  1803               	xorwf	??_lcd_cmd^0,w,c
  9431  0037CC  6E83               	movwf	131,c	;volatile
  9432  0037CE                     
  9433                           ;LCD4b_EXSTO.c: 49:     PORTEbits.RE2 = 1;
  9434  0037CE  8484               	bsf	132,2,c	;volatile
  9435  0037D0                     
  9436                           ;LCD4b_EXSTO.c: 50:     PORTEbits.RE2 = 0;
  9437  0037D0  9484               	bcf	132,2,c	;volatile
  9438  0037D2                     
  9439                           ;LCD4b_EXSTO.c: 52:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  9440  0037D2  0E42               	movlw	66
  9441  0037D4                     u5797:
  9442  0037D4  2EE8               	decfsz	wreg,f,c
  9443  0037D6  D7FE               	bra	u5797
  9444  0037D8  D000               	nop2	
  9445  0037DA                     
  9446                           ;LCD4b_EXSTO.c: 54:     PORTDbits.RD4 = set_bit(cmd, 0b00000001);
  9447  0037DA  0E01               	movlw	1
  9448  0037DC  6E01               	movwf	set_bit@comp^0,c
  9449  0037DE  5004               	movf	lcd_cmd@cmd^0,w,c
  9450  0037E0  EC6E  F021         	call	_set_bit
  9451  0037E4  6E03               	movwf	??_lcd_cmd^0,c
  9452  0037E6  3A03               	swapf	??_lcd_cmd^0,f,c
  9453  0037E8  5083               	movf	131,w,c	;volatile
  9454  0037EA  1803               	xorwf	??_lcd_cmd^0,w,c
  9455  0037EC  0BEF               	andlw	-17
  9456  0037EE  1803               	xorwf	??_lcd_cmd^0,w,c
  9457  0037F0  6E83               	movwf	131,c	;volatile
  9458  0037F2                     
  9459                           ;LCD4b_EXSTO.c: 55:     PORTDbits.RD5 = set_bit(cmd, 0b00000010);
  9460  0037F2  0E02               	movlw	2
  9461  0037F4  6E01               	movwf	set_bit@comp^0,c
  9462  0037F6  5004               	movf	lcd_cmd@cmd^0,w,c
  9463  0037F8  EC6E  F021         	call	_set_bit
  9464  0037FC  6E03               	movwf	??_lcd_cmd^0,c
  9465  0037FE  3A03               	swapf	??_lcd_cmd^0,f,c
  9466  003800  4603               	rlncf	??_lcd_cmd^0,f,c
  9467  003802  5083               	movf	131,w,c	;volatile
  9468  003804  1803               	xorwf	??_lcd_cmd^0,w,c
  9469  003806  0BDF               	andlw	-33
  9470  003808  1803               	xorwf	??_lcd_cmd^0,w,c
  9471  00380A  6E83               	movwf	131,c	;volatile
  9472  00380C                     
  9473                           ;LCD4b_EXSTO.c: 56:     PORTDbits.RD6 = set_bit(cmd, 0b00000100);
  9474  00380C  0E04               	movlw	4
  9475  00380E  6E01               	movwf	set_bit@comp^0,c
  9476  003810  5004               	movf	lcd_cmd@cmd^0,w,c
  9477  003812  EC6E  F021         	call	_set_bit
  9478  003816  6E03               	movwf	??_lcd_cmd^0,c
  9479  003818  3A03               	swapf	??_lcd_cmd^0,f,c
  9480  00381A  4603               	rlncf	??_lcd_cmd^0,f,c
  9481  00381C  4603               	rlncf	??_lcd_cmd^0,f,c
  9482  00381E  5083               	movf	131,w,c	;volatile
  9483  003820  1803               	xorwf	??_lcd_cmd^0,w,c
  9484  003822  0BBF               	andlw	-65
  9485  003824  1803               	xorwf	??_lcd_cmd^0,w,c
  9486  003826  6E83               	movwf	131,c	;volatile
  9487  003828                     
  9488                           ;LCD4b_EXSTO.c: 57:     PORTDbits.RD7 = set_bit(cmd, 0b00001000);
  9489  003828  0E08               	movlw	8
  9490  00382A  6E01               	movwf	set_bit@comp^0,c
  9491  00382C  5004               	movf	lcd_cmd@cmd^0,w,c
  9492  00382E  EC6E  F021         	call	_set_bit
  9493  003832  6E03               	movwf	??_lcd_cmd^0,c
  9494  003834  3203               	rrcf	??_lcd_cmd^0,f,c
  9495  003836  3203               	rrcf	??_lcd_cmd^0,f,c
  9496  003838  5083               	movf	131,w,c	;volatile
  9497  00383A  1803               	xorwf	??_lcd_cmd^0,w,c
  9498  00383C  0B7F               	andlw	-129
  9499  00383E  1803               	xorwf	??_lcd_cmd^0,w,c
  9500  003840  6E83               	movwf	131,c	;volatile
  9501  003842                     
  9502                           ;LCD4b_EXSTO.c: 59:     PORTEbits.RE2 = 1;
  9503  003842  8484               	bsf	132,2,c	;volatile
  9504  003844                     
  9505                           ;LCD4b_EXSTO.c: 60:     PORTEbits.RE2 = 0;
  9506  003844  9484               	bcf	132,2,c	;volatile
  9507  003846  0012               	return		;funcret
  9508  003848                     __end_of_lcd_cmd:
  9509                           	callstack 0
  9510                           
  9511 ;; *************** function _set_bit *****************
  9512 ;; Defined at:
  9513 ;;		line 36 in file "LCD4b_EXSTO.c"
  9514 ;; Parameters:    Size  Location     Type
  9515 ;;  cmd             1    wreg     unsigned char 
  9516 ;;  comp            1    0[COMRAM] unsigned char 
  9517 ;; Auto vars:     Size  Location     Type
  9518 ;;  cmd             1    1[COMRAM] unsigned char 
  9519 ;; Return value:  Size  Location     Type
  9520 ;;                  1    wreg      unsigned char 
  9521 ;; Registers used:
  9522 ;;		wreg, status,2, status,0
  9523 ;; Tracked objects:
  9524 ;;		On entry : 0/0
  9525 ;;		On exit  : 0/0
  9526 ;;		Unchanged: 0/0
  9527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9528 ;;      Params:         1       0       0       0       0       0       0
  9529 ;;      Locals:         1       0       0       0       0       0       0
  9530 ;;      Temps:          0       0       0       0       0       0       0
  9531 ;;      Totals:         2       0       0       0       0       0       0
  9532 ;;Total ram usage:        2 bytes
  9533 ;; Hardware stack levels used: 1
  9534 ;; This function calls:
  9535 ;;		Nothing
  9536 ;; This function is called by:
  9537 ;;		_lcd_cmd
  9538 ;; This function uses a non-reentrant model
  9539 ;;
  9540                           
  9541                           	psect	text40
  9542  0042DC                     __ptext40:
  9543                           	callstack 0
  9544  0042DC                     _set_bit:
  9545                           	callstack 28
  9546                           
  9547                           ;incstack = 0
  9548                           ;set_bit@cmd stored from wreg
  9549  0042DC  6E02               	movwf	set_bit@cmd^0,c
  9550  0042DE                     
  9551                           ;LCD4b_EXSTO.c: 36: char set_bit(char cmd, char comp);LCD4b_EXSTO.c: 37: {;LCD4b_EXSTO.c
      +                          : 38:     if((cmd & comp) >= 1) return 1;
  9552  0042DE  5002               	movf	set_bit@cmd^0,w,c
  9553  0042E0  1401               	andwf	set_bit@comp^0,w,c
  9554  0042E2  0900               	iorlw	0
  9555  0042E4  B4D8               	btfsc	status,2,c
  9556  0042E6  EF77  F021         	goto	u4451
  9557  0042EA  EF79  F021         	goto	u4450
  9558  0042EE                     u4451:
  9559  0042EE  EF7C  F021         	goto	l3796
  9560  0042F2                     u4450:
  9561  0042F2  0E01               	movlw	1
  9562  0042F4  EF7D  F021         	goto	l126
  9563  0042F8                     l3796:
  9564  0042F8  0E00               	movlw	0
  9565  0042FA                     l126:
  9566  0042FA  0012               	return		;funcret
  9567  0042FC                     __end_of_set_bit:
  9568                           	callstack 0
  9569                           
  9570 ;; *************** function _conv_AN0 *****************
  9571 ;; Defined at:
  9572 ;;		line 106 in file "Main_program_meter.c"
  9573 ;; Parameters:    Size  Location     Type
  9574 ;;		None
  9575 ;; Auto vars:     Size  Location     Type
  9576 ;;		None
  9577 ;; Return value:  Size  Location     Type
  9578 ;;                  1    wreg      void 
  9579 ;; Registers used:
  9580 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9581 ;; Tracked objects:
  9582 ;;		On entry : 0/0
  9583 ;;		On exit  : 0/0
  9584 ;;		Unchanged: 0/0
  9585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9586 ;;      Params:         0       0       0       0       0       0       0
  9587 ;;      Locals:         0       0       0       0       0       0       0
  9588 ;;      Temps:          2       0       0       0       0       0       0
  9589 ;;      Totals:         2       0       0       0       0       0       0
  9590 ;;Total ram usage:        2 bytes
  9591 ;; Hardware stack levels used: 1
  9592 ;; Hardware stack levels required when called: 1
  9593 ;; This function calls:
  9594 ;;		___flmul
  9595 ;;		___xxtofl
  9596 ;; This function is called by:
  9597 ;;		_main
  9598 ;; This function uses a non-reentrant model
  9599 ;;
  9600                           
  9601                           	psect	text41
  9602  003E94                     __ptext41:
  9603                           	callstack 0
  9604  003E94                     _conv_AN0:
  9605                           	callstack 29
  9606  003E94                     
  9607                           ;Main_program_meter.c: 108:     _delay((unsigned long)((30)*(8000000/4000000.0)));
  9608  003E94  0E14               	movlw	20
  9609  003E96                     u5807:
  9610  003E96  2EE8               	decfsz	wreg,f,c
  9611  003E98  D7FE               	bra	u5807
  9612  003E9A                     
  9613                           ;Main_program_meter.c: 109:     ADCON0bits.GO = 1;
  9614  003E9A  82C2               	bsf	194,1,c	;volatile
  9615  003E9C                     l70:
  9616  003E9C  B2C2               	btfsc	194,1,c	;volatile
  9617  003E9E  EF53  F01F         	goto	u5521
  9618  003EA2  EF55  F01F         	goto	u5520
  9619  003EA6                     u5521:
  9620  003EA6  EF4E  F01F         	goto	l70
  9621  003EAA                     u5520:
  9622  003EAA                     
  9623                           ;Main_program_meter.c: 111:     VdigADC_AN0 = ADRESH;
  9624  003EAA  CFC4 F09A          	movff	4036,_VdigADC_AN0	;volatile
  9625  003EAE  0100               	movlb	0	; () banked
  9626  003EB0  6B9B               	clrf	(_VdigADC_AN0+1)& (0+255),b
  9627  003EB2                     
  9628                           ; BSR set to: 0
  9629                           ;Main_program_meter.c: 112:     VdigADC_AN0 = (VdigADC_AN0 << 8) + ADRESL;
  9630  003EB2  519A               	movf	_VdigADC_AN0& (0+255),w,b
  9631  003EB4  6E28               	movwf	??_conv_AN0^0,c
  9632  003EB6  50C3               	movf	195,w,c	;volatile
  9633  003EB8  6F9A               	movwf	_VdigADC_AN0& (0+255),b
  9634  003EBA  C028  F09B         	movff	??_conv_AN0,_VdigADC_AN0+1
  9635  003EBE                     
  9636                           ; BSR set to: 0
  9637                           ;Main_program_meter.c: 113:     Voltage_AN0 = VdigADC_AN0 * 4.89e-3;
  9638  003EBE  C09A  F001         	movff	_VdigADC_AN0,___xxtofl@val
  9639  003EC2  C09B  F002         	movff	_VdigADC_AN0+1,___xxtofl@val+1
  9640  003EC6  6A03               	clrf	(___xxtofl@val+2)^0,c
  9641  003EC8  6A04               	clrf	(___xxtofl@val+3)^0,c
  9642  003ECA  0E00               	movlw	0
  9643  003ECC  ECAE  F016         	call	___xxtofl
  9644  003ED0  C001  F00F         	movff	?___xxtofl,___flmul@b
  9645  003ED4  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  9646  003ED8  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  9647  003EDC  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  9648  003EE0  0E4B               	movlw	75
  9649  003EE2  6E13               	movwf	___flmul@a^0,c
  9650  003EE4  0E3C               	movlw	60
  9651  003EE6  6E14               	movwf	(___flmul@a+1)^0,c
  9652  003EE8  0EA0               	movlw	160
  9653  003EEA  6E15               	movwf	(___flmul@a+2)^0,c
  9654  003EEC  0E3B               	movlw	59
  9655  003EEE  6E16               	movwf	(___flmul@a+3)^0,c
  9656  003EF0  ECDD  F00E         	call	___flmul	;wreg free
  9657  003EF4  C00F  F088         	movff	?___flmul,_Voltage_AN0
  9658  003EF8  C010  F089         	movff	?___flmul+1,_Voltage_AN0+1
  9659  003EFC  C011  F08A         	movff	?___flmul+2,_Voltage_AN0+2
  9660  003F00  C012  F08B         	movff	?___flmul+3,_Voltage_AN0+3
  9661  003F04  0012               	return		;funcret
  9662  003F06                     __end_of_conv_AN0:
  9663                           	callstack 0
  9664                           
  9665 ;; *************** function ___xxtofl *****************
  9666 ;; Defined at:
  9667 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\xxtofl.c"
  9668 ;; Parameters:    Size  Location     Type
  9669 ;;  sign            1    wreg     unsigned char 
  9670 ;;  val             4    0[COMRAM] long 
  9671 ;; Auto vars:     Size  Location     Type
  9672 ;;  sign            1    8[COMRAM] unsigned char 
  9673 ;;  arg             4   10[COMRAM] unsigned long 
  9674 ;;  exp             1    9[COMRAM] unsigned char 
  9675 ;; Return value:  Size  Location     Type
  9676 ;;                  4    0[COMRAM] unsigned char 
  9677 ;; Registers used:
  9678 ;;		wreg, status,2, status,0
  9679 ;; Tracked objects:
  9680 ;;		On entry : 0/0
  9681 ;;		On exit  : 0/0
  9682 ;;		Unchanged: 0/0
  9683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9684 ;;      Params:         4       0       0       0       0       0       0
  9685 ;;      Locals:         6       0       0       0       0       0       0
  9686 ;;      Temps:          4       0       0       0       0       0       0
  9687 ;;      Totals:        14       0       0       0       0       0       0
  9688 ;;Total ram usage:       14 bytes
  9689 ;; Hardware stack levels used: 1
  9690 ;; This function calls:
  9691 ;;		Nothing
  9692 ;; This function is called by:
  9693 ;;		_conv_AN0
  9694 ;; This function uses a non-reentrant model
  9695 ;;
  9696                           
  9697                           	psect	text42
  9698  002D5C                     __ptext42:
  9699                           	callstack 0
  9700  002D5C                     ___xxtofl:
  9701                           	callstack 29
  9702                           
  9703                           ;incstack = 0
  9704                           ;___xxtofl@sign stored from wreg
  9705  002D5C  6E09               	movwf	___xxtofl@sign^0,c
  9706  002D5E  5009               	movf	___xxtofl@sign^0,w,c
  9707  002D60  B4D8               	btfsc	status,2,c
  9708  002D62  EFB5  F016         	goto	u5421
  9709  002D66  EFB7  F016         	goto	u5420
  9710  002D6A                     u5421:
  9711  002D6A  EFD9  F016         	goto	l803
  9712  002D6E                     u5420:
  9713  002D6E  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  9714  002D70  EFBE  F016         	goto	u5430
  9715  002D74  EFBC  F016         	goto	u5431
  9716  002D78                     u5431:
  9717  002D78  EFD9  F016         	goto	l803
  9718  002D7C                     u5430:
  9719  002D7C  C001  F005         	movff	___xxtofl@val,??___xxtofl
  9720  002D80  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  9721  002D84  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  9722  002D88  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  9723  002D8C  1E05               	comf	??___xxtofl^0,f,c
  9724  002D8E  1E06               	comf	(??___xxtofl+1)^0,f,c
  9725  002D90  1E07               	comf	(??___xxtofl+2)^0,f,c
  9726  002D92  1E08               	comf	(??___xxtofl+3)^0,f,c
  9727  002D94  2A05               	incf	??___xxtofl^0,f,c
  9728  002D96  0E00               	movlw	0
  9729  002D98  2206               	addwfc	(??___xxtofl+1)^0,f,c
  9730  002D9A  2207               	addwfc	(??___xxtofl+2)^0,f,c
  9731  002D9C  2208               	addwfc	(??___xxtofl+3)^0,f,c
  9732  002D9E  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  9733  002DA2  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  9734  002DA6  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  9735  002DAA  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  9736  002DAE  EFE1  F016         	goto	l4446
  9737  002DB2                     l803:
  9738  002DB2  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  9739  002DB6  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  9740  002DBA  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  9741  002DBE  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  9742  002DC2                     l4446:
  9743  002DC2  5001               	movf	___xxtofl@val^0,w,c
  9744  002DC4  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  9745  002DC6  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  9746  002DC8  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  9747  002DCA  A4D8               	btfss	status,2,c
  9748  002DCC  EFEA  F016         	goto	u5441
  9749  002DD0  EFEC  F016         	goto	u5440
  9750  002DD4                     u5441:
  9751  002DD4  EFF6  F016         	goto	l4452
  9752  002DD8                     u5440:
  9753  002DD8  0E00               	movlw	0
  9754  002DDA  6E01               	movwf	?___xxtofl^0,c
  9755  002DDC  0E00               	movlw	0
  9756  002DDE  6E02               	movwf	(?___xxtofl+1)^0,c
  9757  002DE0  0E00               	movlw	0
  9758  002DE2  6E03               	movwf	(?___xxtofl+2)^0,c
  9759  002DE4  0E00               	movlw	0
  9760  002DE6  6E04               	movwf	(?___xxtofl+3)^0,c
  9761  002DE8  EF87  F017         	goto	l806
  9762  002DEC                     l4452:
  9763  002DEC  0E96               	movlw	150
  9764  002DEE  6E0A               	movwf	___xxtofl@exp^0,c
  9765  002DF0  EF00  F017         	goto	l4456
  9766  002DF4                     l4454:
  9767  002DF4  2A0A               	incf	___xxtofl@exp^0,f,c
  9768  002DF6  90D8               	bcf	status,0,c
  9769  002DF8  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  9770  002DFA  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  9771  002DFC  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  9772  002DFE  320B               	rrcf	___xxtofl@arg^0,f,c
  9773  002E00                     l4456:
  9774  002E00  0E00               	movlw	0
  9775  002E02  140B               	andwf	___xxtofl@arg^0,w,c
  9776  002E04  6E05               	movwf	??___xxtofl^0,c
  9777  002E06  0E00               	movlw	0
  9778  002E08  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  9779  002E0A  6E06               	movwf	(??___xxtofl+1)^0,c
  9780  002E0C  0E00               	movlw	0
  9781  002E0E  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  9782  002E10  6E07               	movwf	(??___xxtofl+2)^0,c
  9783  002E12  0EFE               	movlw	254
  9784  002E14  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  9785  002E16  6E08               	movwf	(??___xxtofl+3)^0,c
  9786  002E18  5005               	movf	??___xxtofl^0,w,c
  9787  002E1A  1006               	iorwf	(??___xxtofl+1)^0,w,c
  9788  002E1C  1007               	iorwf	(??___xxtofl+2)^0,w,c
  9789  002E1E  1008               	iorwf	(??___xxtofl+3)^0,w,c
  9790  002E20  A4D8               	btfss	status,2,c
  9791  002E22  EF15  F017         	goto	u5451
  9792  002E26  EF17  F017         	goto	u5450
  9793  002E2A                     u5451:
  9794  002E2A  EFFA  F016         	goto	l4454
  9795  002E2E                     u5450:
  9796  002E2E  EF25  F017         	goto	l810
  9797  002E32                     l4458:
  9798  002E32  2A0A               	incf	___xxtofl@exp^0,f,c
  9799  002E34  0E01               	movlw	1
  9800  002E36  260B               	addwf	___xxtofl@arg^0,f,c
  9801  002E38  0E00               	movlw	0
  9802  002E3A  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  9803  002E3C  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  9804  002E3E  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  9805  002E40  90D8               	bcf	status,0,c
  9806  002E42  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  9807  002E44  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  9808  002E46  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  9809  002E48  320B               	rrcf	___xxtofl@arg^0,f,c
  9810  002E4A                     l810:
  9811  002E4A  0E00               	movlw	0
  9812  002E4C  140B               	andwf	___xxtofl@arg^0,w,c
  9813  002E4E  6E05               	movwf	??___xxtofl^0,c
  9814  002E50  0E00               	movlw	0
  9815  002E52  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  9816  002E54  6E06               	movwf	(??___xxtofl+1)^0,c
  9817  002E56  0E00               	movlw	0
  9818  002E58  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  9819  002E5A  6E07               	movwf	(??___xxtofl+2)^0,c
  9820  002E5C  0EFF               	movlw	255
  9821  002E5E  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  9822  002E60  6E08               	movwf	(??___xxtofl+3)^0,c
  9823  002E62  5005               	movf	??___xxtofl^0,w,c
  9824  002E64  1006               	iorwf	(??___xxtofl+1)^0,w,c
  9825  002E66  1007               	iorwf	(??___xxtofl+2)^0,w,c
  9826  002E68  1008               	iorwf	(??___xxtofl+3)^0,w,c
  9827  002E6A  A4D8               	btfss	status,2,c
  9828  002E6C  EF3A  F017         	goto	u5461
  9829  002E70  EF3C  F017         	goto	u5460
  9830  002E74                     u5461:
  9831  002E74  EF19  F017         	goto	l4458
  9832  002E78                     u5460:
  9833  002E78  EF44  F017         	goto	l4466
  9834  002E7C                     l4464:
  9835  002E7C  060A               	decf	___xxtofl@exp^0,f,c
  9836  002E7E  90D8               	bcf	status,0,c
  9837  002E80  360B               	rlcf	___xxtofl@arg^0,f,c
  9838  002E82  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  9839  002E84  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  9840  002E86  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  9841  002E88                     l4466:
  9842  002E88  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  9843  002E8A  EF49  F017         	goto	u5471
  9844  002E8E  EF4B  F017         	goto	u5470
  9845  002E92                     u5471:
  9846  002E92  EF53  F017         	goto	l817
  9847  002E96                     u5470:
  9848  002E96  0E02               	movlw	2
  9849  002E98  600A               	cpfslt	___xxtofl@exp^0,c
  9850  002E9A  EF51  F017         	goto	u5481
  9851  002E9E  EF53  F017         	goto	u5480
  9852  002EA2                     u5481:
  9853  002EA2  EF3E  F017         	goto	l4464
  9854  002EA6                     u5480:
  9855  002EA6                     l817:
  9856  002EA6  B00A               	btfsc	___xxtofl@exp^0,0,c
  9857  002EA8  EF58  F017         	goto	u5491
  9858  002EAC  EF5A  F017         	goto	u5490
  9859  002EB0                     u5491:
  9860  002EB0  EF5B  F017         	goto	l4472
  9861  002EB4                     u5490:
  9862  002EB4  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  9863  002EB6                     l4472:
  9864  002EB6  90D8               	bcf	status,0,c
  9865  002EB8  320A               	rrcf	___xxtofl@exp^0,f,c
  9866  002EBA  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  9867  002EBE  6A06               	clrf	(??___xxtofl+1)^0,c
  9868  002EC0  6A07               	clrf	(??___xxtofl+2)^0,c
  9869  002EC2  6A08               	clrf	(??___xxtofl+3)^0,c
  9870  002EC4  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  9871  002EC8  6A07               	clrf	(??___xxtofl+2)^0,c
  9872  002ECA  6A06               	clrf	(??___xxtofl+1)^0,c
  9873  002ECC  6A05               	clrf	??___xxtofl^0,c
  9874  002ECE  5005               	movf	??___xxtofl^0,w,c
  9875  002ED0  120B               	iorwf	___xxtofl@arg^0,f,c
  9876  002ED2  5006               	movf	(??___xxtofl+1)^0,w,c
  9877  002ED4  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  9878  002ED6  5007               	movf	(??___xxtofl+2)^0,w,c
  9879  002ED8  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  9880  002EDA  5008               	movf	(??___xxtofl+3)^0,w,c
  9881  002EDC  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  9882  002EDE  5009               	movf	___xxtofl@sign^0,w,c
  9883  002EE0  B4D8               	btfsc	status,2,c
  9884  002EE2  EF75  F017         	goto	u5501
  9885  002EE6  EF77  F017         	goto	u5500
  9886  002EEA                     u5501:
  9887  002EEA  EF7F  F017         	goto	l4482
  9888  002EEE                     u5500:
  9889  002EEE  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  9890  002EF0  EF7E  F017         	goto	u5510
  9891  002EF4  EF7C  F017         	goto	u5511
  9892  002EF8                     u5511:
  9893  002EF8  EF7F  F017         	goto	l4482
  9894  002EFC                     u5510:
  9895  002EFC  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  9896  002EFE                     l4482:
  9897  002EFE  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  9898  002F02  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  9899  002F06  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  9900  002F0A  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  9901  002F0E                     l806:
  9902  002F0E  0012               	return		;funcret
  9903  002F10                     __end_of___xxtofl:
  9904                           	callstack 0
  9905                           
  9906 ;; *************** function ___flmul *****************
  9907 ;; Defined at:
  9908 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcmul.c"
  9909 ;; Parameters:    Size  Location     Type
  9910 ;;  b               4   14[COMRAM] unsigned char 
  9911 ;;  a               4   18[COMRAM] unsigned char 
  9912 ;; Auto vars:     Size  Location     Type
  9913 ;;  prod            4   33[COMRAM] struct .
  9914 ;;  grs             4   27[COMRAM] unsigned long 
  9915 ;;  temp            2   37[COMRAM] struct .
  9916 ;;  bexp            1   32[COMRAM] unsigned char 
  9917 ;;  aexp            1   31[COMRAM] unsigned char 
  9918 ;;  sign            1   26[COMRAM] unsigned char 
  9919 ;; Return value:  Size  Location     Type
  9920 ;;                  4   14[COMRAM] unsigned char 
  9921 ;; Registers used:
  9922 ;;		wreg, status,2, status,0, prodl, prodh
  9923 ;; Tracked objects:
  9924 ;;		On entry : 0/0
  9925 ;;		On exit  : 0/0
  9926 ;;		Unchanged: 0/0
  9927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9928 ;;      Params:         8       0       0       0       0       0       0
  9929 ;;      Locals:        13       0       0       0       0       0       0
  9930 ;;      Temps:          4       0       0       0       0       0       0
  9931 ;;      Totals:        25       0       0       0       0       0       0
  9932 ;;Total ram usage:       25 bytes
  9933 ;; Hardware stack levels used: 1
  9934 ;; This function calls:
  9935 ;;		Nothing
  9936 ;; This function is called by:
  9937 ;;		_conv_AN0
  9938 ;;		_efgtoa
  9939 ;; This function uses a non-reentrant model
  9940 ;;
  9941                           
  9942                           	psect	text43
  9943  001DBA                     __ptext43:
  9944                           	callstack 0
  9945  001DBA                     ___flmul:
  9946                           	callstack 25
  9947  001DBA  5012               	movf	(___flmul@b+3)^0,w,c
  9948  001DBC  0B80               	andlw	128
  9949  001DBE  6E1B               	movwf	___flmul@sign^0,c
  9950  001DC0  5012               	movf	(___flmul@b+3)^0,w,c
  9951  001DC2  2412               	addwf	(___flmul@b+3)^0,w,c
  9952  001DC4  6E21               	movwf	___flmul@bexp^0,c
  9953  001DC6  AE11               	btfss	(___flmul@b+2)^0,7,c
  9954  001DC8  EFE8  F00E         	goto	u3691
  9955  001DCC  EFEA  F00E         	goto	u3690
  9956  001DD0                     u3691:
  9957  001DD0  EFEB  F00E         	goto	l3382
  9958  001DD4                     u3690:
  9959  001DD4  8021               	bsf	___flmul@bexp^0,0,c
  9960  001DD6                     l3382:
  9961  001DD6  5021               	movf	___flmul@bexp^0,w,c
  9962  001DD8  B4D8               	btfsc	status,2,c
  9963  001DDA  EFF1  F00E         	goto	u3701
  9964  001DDE  EFF3  F00E         	goto	u3700
  9965  001DE2                     u3701:
  9966  001DE2  EF06  F00F         	goto	l3390
  9967  001DE6                     u3700:
  9968  001DE6  2821               	incf	___flmul@bexp^0,w,c
  9969  001DE8  A4D8               	btfss	status,2,c
  9970  001DEA  EFF9  F00E         	goto	u3711
  9971  001DEE  EFFB  F00E         	goto	u3710
  9972  001DF2                     u3711:
  9973  001DF2  EF03  F00F         	goto	l3388
  9974  001DF6                     u3710:
  9975  001DF6  0E00               	movlw	0
  9976  001DF8  6E0F               	movwf	___flmul@b^0,c
  9977  001DFA  0E00               	movlw	0
  9978  001DFC  6E10               	movwf	(___flmul@b+1)^0,c
  9979  001DFE  0E00               	movlw	0
  9980  001E00  6E11               	movwf	(___flmul@b+2)^0,c
  9981  001E02  0E00               	movlw	0
  9982  001E04  6E12               	movwf	(___flmul@b+3)^0,c
  9983  001E06                     l3388:
  9984  001E06  8E11               	bsf	(___flmul@b+2)^0,7,c
  9985  001E08  EF0E  F00F         	goto	l3392
  9986  001E0C                     l3390:
  9987  001E0C  0E00               	movlw	0
  9988  001E0E  6E0F               	movwf	___flmul@b^0,c
  9989  001E10  0E00               	movlw	0
  9990  001E12  6E10               	movwf	(___flmul@b+1)^0,c
  9991  001E14  0E00               	movlw	0
  9992  001E16  6E11               	movwf	(___flmul@b+2)^0,c
  9993  001E18  0E00               	movlw	0
  9994  001E1A  6E12               	movwf	(___flmul@b+3)^0,c
  9995  001E1C                     l3392:
  9996  001E1C  5016               	movf	(___flmul@a+3)^0,w,c
  9997  001E1E  0B80               	andlw	128
  9998  001E20  1A1B               	xorwf	___flmul@sign^0,f,c
  9999  001E22  5016               	movf	(___flmul@a+3)^0,w,c
 10000  001E24  2416               	addwf	(___flmul@a+3)^0,w,c
 10001  001E26  6E20               	movwf	___flmul@aexp^0,c
 10002  001E28  AE15               	btfss	(___flmul@a+2)^0,7,c
 10003  001E2A  EF19  F00F         	goto	u3721
 10004  001E2E  EF1B  F00F         	goto	u3720
 10005  001E32                     u3721:
 10006  001E32  EF1C  F00F         	goto	l3400
 10007  001E36                     u3720:
 10008  001E36  8020               	bsf	___flmul@aexp^0,0,c
 10009  001E38                     l3400:
 10010  001E38  5020               	movf	___flmul@aexp^0,w,c
 10011  001E3A  B4D8               	btfsc	status,2,c
 10012  001E3C  EF22  F00F         	goto	u3731
 10013  001E40  EF24  F00F         	goto	u3730
 10014  001E44                     u3731:
 10015  001E44  EF37  F00F         	goto	l3408
 10016  001E48                     u3730:
 10017  001E48  2820               	incf	___flmul@aexp^0,w,c
 10018  001E4A  A4D8               	btfss	status,2,c
 10019  001E4C  EF2A  F00F         	goto	u3741
 10020  001E50  EF2C  F00F         	goto	u3740
 10021  001E54                     u3741:
 10022  001E54  EF34  F00F         	goto	l3406
 10023  001E58                     u3740:
 10024  001E58  0E00               	movlw	0
 10025  001E5A  6E13               	movwf	___flmul@a^0,c
 10026  001E5C  0E00               	movlw	0
 10027  001E5E  6E14               	movwf	(___flmul@a+1)^0,c
 10028  001E60  0E00               	movlw	0
 10029  001E62  6E15               	movwf	(___flmul@a+2)^0,c
 10030  001E64  0E00               	movlw	0
 10031  001E66  6E16               	movwf	(___flmul@a+3)^0,c
 10032  001E68                     l3406:
 10033  001E68  8E15               	bsf	(___flmul@a+2)^0,7,c
 10034  001E6A  EF3F  F00F         	goto	l762
 10035  001E6E                     l3408:
 10036  001E6E  0E00               	movlw	0
 10037  001E70  6E13               	movwf	___flmul@a^0,c
 10038  001E72  0E00               	movlw	0
 10039  001E74  6E14               	movwf	(___flmul@a+1)^0,c
 10040  001E76  0E00               	movlw	0
 10041  001E78  6E15               	movwf	(___flmul@a+2)^0,c
 10042  001E7A  0E00               	movlw	0
 10043  001E7C  6E16               	movwf	(___flmul@a+3)^0,c
 10044  001E7E                     l762:
 10045  001E7E  5020               	movf	___flmul@aexp^0,w,c
 10046  001E80  B4D8               	btfsc	status,2,c
 10047  001E82  EF45  F00F         	goto	u3751
 10048  001E86  EF47  F00F         	goto	u3750
 10049  001E8A                     u3751:
 10050  001E8A  EF4F  F00F         	goto	l3412
 10051  001E8E                     u3750:
 10052  001E8E  5021               	movf	___flmul@bexp^0,w,c
 10053  001E90  A4D8               	btfss	status,2,c
 10054  001E92  EF4D  F00F         	goto	u3761
 10055  001E96  EF4F  F00F         	goto	u3760
 10056  001E9A                     u3761:
 10057  001E9A  EF59  F00F         	goto	l3416
 10058  001E9E                     u3760:
 10059  001E9E                     l3412:
 10060  001E9E  0E00               	movlw	0
 10061  001EA0  6E0F               	movwf	?___flmul^0,c
 10062  001EA2  0E00               	movlw	0
 10063  001EA4  6E10               	movwf	(?___flmul+1)^0,c
 10064  001EA6  0E00               	movlw	0
 10065  001EA8  6E11               	movwf	(?___flmul+2)^0,c
 10066  001EAA  0E00               	movlw	0
 10067  001EAC  6E12               	movwf	(?___flmul+3)^0,c
 10068  001EAE  EFF1  F010         	goto	l766
 10069  001EB2                     l3416:
 10070  001EB2  5015               	movf	(___flmul@a+2)^0,w,c
 10071  001EB4  020F               	mulwf	___flmul@b^0,c
 10072  001EB6  CFF3 F026          	movff	prodl,___flmul@temp
 10073  001EBA  CFF4 F027          	movff	prodh,___flmul@temp+1
 10074  001EBE  5026               	movf	___flmul@temp^0,w,c
 10075  001EC0  6E1C               	movwf	___flmul@grs^0,c
 10076  001EC2  6A1D               	clrf	(___flmul@grs+1)^0,c
 10077  001EC4  6A1E               	clrf	(___flmul@grs+2)^0,c
 10078  001EC6  6A1F               	clrf	(___flmul@grs+3)^0,c
 10079  001EC8  5027               	movf	(___flmul@temp+1)^0,w,c
 10080  001ECA  6E22               	movwf	___flmul@prod^0,c
 10081  001ECC  6A23               	clrf	(___flmul@prod+1)^0,c
 10082  001ECE  6A24               	clrf	(___flmul@prod+2)^0,c
 10083  001ED0  6A25               	clrf	(___flmul@prod+3)^0,c
 10084  001ED2  5014               	movf	(___flmul@a+1)^0,w,c
 10085  001ED4  0210               	mulwf	(___flmul@b+1)^0,c
 10086  001ED6  CFF3 F026          	movff	prodl,___flmul@temp
 10087  001EDA  CFF4 F027          	movff	prodh,___flmul@temp+1
 10088  001EDE  5026               	movf	___flmul@temp^0,w,c
 10089  001EE0  261C               	addwf	___flmul@grs^0,f,c
 10090  001EE2  0E00               	movlw	0
 10091  001EE4  221D               	addwfc	(___flmul@grs+1)^0,f,c
 10092  001EE6  221E               	addwfc	(___flmul@grs+2)^0,f,c
 10093  001EE8  221F               	addwfc	(___flmul@grs+3)^0,f,c
 10094  001EEA  5027               	movf	(___flmul@temp+1)^0,w,c
 10095  001EEC  2622               	addwf	___flmul@prod^0,f,c
 10096  001EEE  0E00               	movlw	0
 10097  001EF0  2223               	addwfc	(___flmul@prod+1)^0,f,c
 10098  001EF2  2224               	addwfc	(___flmul@prod+2)^0,f,c
 10099  001EF4  2225               	addwfc	(___flmul@prod+3)^0,f,c
 10100  001EF6  5013               	movf	___flmul@a^0,w,c
 10101  001EF8  0211               	mulwf	(___flmul@b+2)^0,c
 10102  001EFA  CFF3 F026          	movff	prodl,___flmul@temp
 10103  001EFE  CFF4 F027          	movff	prodh,___flmul@temp+1
 10104  001F02  5026               	movf	___flmul@temp^0,w,c
 10105  001F04  261C               	addwf	___flmul@grs^0,f,c
 10106  001F06  0E00               	movlw	0
 10107  001F08  221D               	addwfc	(___flmul@grs+1)^0,f,c
 10108  001F0A  221E               	addwfc	(___flmul@grs+2)^0,f,c
 10109  001F0C  221F               	addwfc	(___flmul@grs+3)^0,f,c
 10110  001F0E  5027               	movf	(___flmul@temp+1)^0,w,c
 10111  001F10  2622               	addwf	___flmul@prod^0,f,c
 10112  001F12  0E00               	movlw	0
 10113  001F14  2223               	addwfc	(___flmul@prod+1)^0,f,c
 10114  001F16  2224               	addwfc	(___flmul@prod+2)^0,f,c
 10115  001F18  2225               	addwfc	(___flmul@prod+3)^0,f,c
 10116  001F1A  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
 10117  001F1E  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
 10118  001F22  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
 10119  001F26  6A1C               	clrf	___flmul@grs^0,c
 10120  001F28  5013               	movf	___flmul@a^0,w,c
 10121  001F2A  0210               	mulwf	(___flmul@b+1)^0,c
 10122  001F2C  CFF3 F026          	movff	prodl,___flmul@temp
 10123  001F30  CFF4 F027          	movff	prodh,___flmul@temp+1
 10124  001F34  5026               	movf	___flmul@temp^0,w,c
 10125  001F36  261C               	addwf	___flmul@grs^0,f,c
 10126  001F38  5027               	movf	(___flmul@temp+1)^0,w,c
 10127  001F3A  221D               	addwfc	(___flmul@grs+1)^0,f,c
 10128  001F3C  0E00               	movlw	0
 10129  001F3E  221E               	addwfc	(___flmul@grs+2)^0,f,c
 10130  001F40  0E00               	movlw	0
 10131  001F42  221F               	addwfc	(___flmul@grs+3)^0,f,c
 10132  001F44  5014               	movf	(___flmul@a+1)^0,w,c
 10133  001F46  020F               	mulwf	___flmul@b^0,c
 10134  001F48  CFF3 F026          	movff	prodl,___flmul@temp
 10135  001F4C  CFF4 F027          	movff	prodh,___flmul@temp+1
 10136  001F50  5026               	movf	___flmul@temp^0,w,c
 10137  001F52  261C               	addwf	___flmul@grs^0,f,c
 10138  001F54  5027               	movf	(___flmul@temp+1)^0,w,c
 10139  001F56  221D               	addwfc	(___flmul@grs+1)^0,f,c
 10140  001F58  0E00               	movlw	0
 10141  001F5A  221E               	addwfc	(___flmul@grs+2)^0,f,c
 10142  001F5C  0E00               	movlw	0
 10143  001F5E  221F               	addwfc	(___flmul@grs+3)^0,f,c
 10144  001F60  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
 10145  001F64  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
 10146  001F68  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
 10147  001F6C  6A1C               	clrf	___flmul@grs^0,c
 10148  001F6E  5013               	movf	___flmul@a^0,w,c
 10149  001F70  020F               	mulwf	___flmul@b^0,c
 10150  001F72  CFF3 F026          	movff	prodl,___flmul@temp
 10151  001F76  CFF4 F027          	movff	prodh,___flmul@temp+1
 10152  001F7A  5026               	movf	___flmul@temp^0,w,c
 10153  001F7C  261C               	addwf	___flmul@grs^0,f,c
 10154  001F7E  5027               	movf	(___flmul@temp+1)^0,w,c
 10155  001F80  221D               	addwfc	(___flmul@grs+1)^0,f,c
 10156  001F82  0E00               	movlw	0
 10157  001F84  221E               	addwfc	(___flmul@grs+2)^0,f,c
 10158  001F86  0E00               	movlw	0
 10159  001F88  221F               	addwfc	(___flmul@grs+3)^0,f,c
 10160  001F8A  5015               	movf	(___flmul@a+2)^0,w,c
 10161  001F8C  0210               	mulwf	(___flmul@b+1)^0,c
 10162  001F8E  CFF3 F026          	movff	prodl,___flmul@temp
 10163  001F92  CFF4 F027          	movff	prodh,___flmul@temp+1
 10164  001F96  5026               	movf	___flmul@temp^0,w,c
 10165  001F98  2622               	addwf	___flmul@prod^0,f,c
 10166  001F9A  5027               	movf	(___flmul@temp+1)^0,w,c
 10167  001F9C  2223               	addwfc	(___flmul@prod+1)^0,f,c
 10168  001F9E  0E00               	movlw	0
 10169  001FA0  2224               	addwfc	(___flmul@prod+2)^0,f,c
 10170  001FA2  0E00               	movlw	0
 10171  001FA4  2225               	addwfc	(___flmul@prod+3)^0,f,c
 10172  001FA6  5014               	movf	(___flmul@a+1)^0,w,c
 10173  001FA8  0211               	mulwf	(___flmul@b+2)^0,c
 10174  001FAA  CFF3 F026          	movff	prodl,___flmul@temp
 10175  001FAE  CFF4 F027          	movff	prodh,___flmul@temp+1
 10176  001FB2  5026               	movf	___flmul@temp^0,w,c
 10177  001FB4  2622               	addwf	___flmul@prod^0,f,c
 10178  001FB6  5027               	movf	(___flmul@temp+1)^0,w,c
 10179  001FB8  2223               	addwfc	(___flmul@prod+1)^0,f,c
 10180  001FBA  0E00               	movlw	0
 10181  001FBC  2224               	addwfc	(___flmul@prod+2)^0,f,c
 10182  001FBE  0E00               	movlw	0
 10183  001FC0  2225               	addwfc	(___flmul@prod+3)^0,f,c
 10184  001FC2  5015               	movf	(___flmul@a+2)^0,w,c
 10185  001FC4  0211               	mulwf	(___flmul@b+2)^0,c
 10186  001FC6  CFF3 F026          	movff	prodl,___flmul@temp
 10187  001FCA  CFF4 F027          	movff	prodh,___flmul@temp+1
 10188  001FCE  5026               	movf	___flmul@temp^0,w,c
 10189  001FD0  6E17               	movwf	??___flmul^0,c
 10190  001FD2  5027               	movf	(___flmul@temp+1)^0,w,c
 10191  001FD4  6E18               	movwf	(??___flmul+1)^0,c
 10192  001FD6  6A19               	clrf	(??___flmul+2)^0,c
 10193  001FD8  6A1A               	clrf	(??___flmul+3)^0,c
 10194  001FDA  C019  F01A         	movff	??___flmul+2,??___flmul+3
 10195  001FDE  C018  F019         	movff	??___flmul+1,??___flmul+2
 10196  001FE2  C017  F018         	movff	??___flmul,??___flmul+1
 10197  001FE6  6A17               	clrf	??___flmul^0,c
 10198  001FE8  5017               	movf	??___flmul^0,w,c
 10199  001FEA  2622               	addwf	___flmul@prod^0,f,c
 10200  001FEC  5018               	movf	(??___flmul+1)^0,w,c
 10201  001FEE  2223               	addwfc	(___flmul@prod+1)^0,f,c
 10202  001FF0  5019               	movf	(??___flmul+2)^0,w,c
 10203  001FF2  2224               	addwfc	(___flmul@prod+2)^0,f,c
 10204  001FF4  501A               	movf	(??___flmul+3)^0,w,c
 10205  001FF6  2225               	addwfc	(___flmul@prod+3)^0,f,c
 10206  001FF8  C01C  F017         	movff	___flmul@grs,??___flmul
 10207  001FFC  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
 10208  002000  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
 10209  002004  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
 10210  002008  0E19               	movlw	25
 10211  00200A  EF0C  F010         	goto	u3770
 10212  00200E                     u3775:
 10213  00200E  90D8               	bcf	status,0,c
 10214  002010  321A               	rrcf	(??___flmul+3)^0,f,c
 10215  002012  3219               	rrcf	(??___flmul+2)^0,f,c
 10216  002014  3218               	rrcf	(??___flmul+1)^0,f,c
 10217  002016  3217               	rrcf	??___flmul^0,f,c
 10218  002018                     u3770:
 10219  002018  2EE8               	decfsz	wreg,f,c
 10220  00201A  EF07  F010         	goto	u3775
 10221  00201E  5017               	movf	??___flmul^0,w,c
 10222  002020  2622               	addwf	___flmul@prod^0,f,c
 10223  002022  5018               	movf	(??___flmul+1)^0,w,c
 10224  002024  2223               	addwfc	(___flmul@prod+1)^0,f,c
 10225  002026  5019               	movf	(??___flmul+2)^0,w,c
 10226  002028  2224               	addwfc	(___flmul@prod+2)^0,f,c
 10227  00202A  501A               	movf	(??___flmul+3)^0,w,c
 10228  00202C  2225               	addwfc	(___flmul@prod+3)^0,f,c
 10229  00202E  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
 10230  002032  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
 10231  002036  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
 10232  00203A  6A1C               	clrf	___flmul@grs^0,c
 10233  00203C  5020               	movf	___flmul@aexp^0,w,c
 10234  00203E  C021  F017         	movff	___flmul@bexp,??___flmul
 10235  002042  6A18               	clrf	(??___flmul+1)^0,c
 10236  002044  2617               	addwf	??___flmul^0,f,c
 10237  002046  0E00               	movlw	0
 10238  002048  2218               	addwfc	(??___flmul+1)^0,f,c
 10239  00204A  0E82               	movlw	130
 10240  00204C  2417               	addwf	??___flmul^0,w,c
 10241  00204E  6E26               	movwf	___flmul@temp^0,c
 10242  002050  0EFF               	movlw	255
 10243  002052  2018               	addwfc	(??___flmul+1)^0,w,c
 10244  002054  6E27               	movwf	(___flmul@temp+1)^0,c
 10245  002056  EF42  F010         	goto	l3464
 10246  00205A                     l3458:
 10247  00205A  90D8               	bcf	status,0,c
 10248  00205C  3622               	rlcf	___flmul@prod^0,f,c
 10249  00205E  3623               	rlcf	(___flmul@prod+1)^0,f,c
 10250  002060  3624               	rlcf	(___flmul@prod+2)^0,f,c
 10251  002062  3625               	rlcf	(___flmul@prod+3)^0,f,c
 10252  002064  AE1F               	btfss	(___flmul@grs+3)^0,7,c
 10253  002066  EF37  F010         	goto	u3781
 10254  00206A  EF39  F010         	goto	u3780
 10255  00206E                     u3781:
 10256  00206E  EF3A  F010         	goto	l769
 10257  002072                     u3780:
 10258  002072  8022               	bsf	___flmul@prod^0,0,c
 10259  002074                     l769:
 10260  002074  90D8               	bcf	status,0,c
 10261  002076  361C               	rlcf	___flmul@grs^0,f,c
 10262  002078  361D               	rlcf	(___flmul@grs+1)^0,f,c
 10263  00207A  361E               	rlcf	(___flmul@grs+2)^0,f,c
 10264  00207C  361F               	rlcf	(___flmul@grs+3)^0,f,c
 10265  00207E  0626               	decf	___flmul@temp^0,f,c
 10266  002080  A0D8               	btfss	status,0,c
 10267  002082  0627               	decf	(___flmul@temp+1)^0,f,c
 10268  002084                     l3464:
 10269  002084  AE24               	btfss	(___flmul@prod+2)^0,7,c
 10270  002086  EF47  F010         	goto	u3791
 10271  00208A  EF49  F010         	goto	u3790
 10272  00208E                     u3791:
 10273  00208E  EF2D  F010         	goto	l3458
 10274  002092                     u3790:
 10275  002092  0E00               	movlw	0
 10276  002094  6E20               	movwf	___flmul@aexp^0,c
 10277  002096  AE1F               	btfss	(___flmul@grs+3)^0,7,c
 10278  002098  EF50  F010         	goto	u3801
 10279  00209C  EF52  F010         	goto	u3800
 10280  0020A0                     u3801:
 10281  0020A0  EF76  F010         	goto	l771
 10282  0020A4                     u3800:
 10283  0020A4  0EFF               	movlw	255
 10284  0020A6  141C               	andwf	___flmul@grs^0,w,c
 10285  0020A8  6E17               	movwf	??___flmul^0,c
 10286  0020AA  0EFF               	movlw	255
 10287  0020AC  141D               	andwf	(___flmul@grs+1)^0,w,c
 10288  0020AE  6E18               	movwf	(??___flmul+1)^0,c
 10289  0020B0  0EFF               	movlw	255
 10290  0020B2  141E               	andwf	(___flmul@grs+2)^0,w,c
 10291  0020B4  6E19               	movwf	(??___flmul+2)^0,c
 10292  0020B6  0E7F               	movlw	127
 10293  0020B8  141F               	andwf	(___flmul@grs+3)^0,w,c
 10294  0020BA  6E1A               	movwf	(??___flmul+3)^0,c
 10295  0020BC  5017               	movf	??___flmul^0,w,c
 10296  0020BE  1018               	iorwf	(??___flmul+1)^0,w,c
 10297  0020C0  1019               	iorwf	(??___flmul+2)^0,w,c
 10298  0020C2  101A               	iorwf	(??___flmul+3)^0,w,c
 10299  0020C4  B4D8               	btfsc	status,2,c
 10300  0020C6  EF67  F010         	goto	u3811
 10301  0020CA  EF69  F010         	goto	u3810
 10302  0020CE                     u3811:
 10303  0020CE  EF6D  F010         	goto	l772
 10304  0020D2                     u3810:
 10305  0020D2                     l3472:
 10306  0020D2  0E01               	movlw	1
 10307  0020D4  6E20               	movwf	___flmul@aexp^0,c
 10308  0020D6  EF76  F010         	goto	l771
 10309  0020DA                     l772:
 10310  0020DA  A022               	btfss	___flmul@prod^0,0,c
 10311  0020DC  EF72  F010         	goto	u3821
 10312  0020E0  EF74  F010         	goto	u3820
 10313  0020E4                     u3821:
 10314  0020E4  EF76  F010         	goto	l771
 10315  0020E8                     u3820:
 10316  0020E8  EF69  F010         	goto	l3472
 10317  0020EC                     l771:
 10318  0020EC  5020               	movf	___flmul@aexp^0,w,c
 10319  0020EE  B4D8               	btfsc	status,2,c
 10320  0020F0  EF7C  F010         	goto	u3831
 10321  0020F4  EF7E  F010         	goto	u3830
 10322  0020F8                     u3831:
 10323  0020F8  EFA2  F010         	goto	l3484
 10324  0020FC                     u3830:
 10325  0020FC  0E01               	movlw	1
 10326  0020FE  2622               	addwf	___flmul@prod^0,f,c
 10327  002100  0E00               	movlw	0
 10328  002102  2223               	addwfc	(___flmul@prod+1)^0,f,c
 10329  002104  2224               	addwfc	(___flmul@prod+2)^0,f,c
 10330  002106  2225               	addwfc	(___flmul@prod+3)^0,f,c
 10331  002108  A025               	btfss	(___flmul@prod+3)^0,0,c
 10332  00210A  EF89  F010         	goto	u3841
 10333  00210E  EF8B  F010         	goto	u3840
 10334  002112                     u3841:
 10335  002112  EFA2  F010         	goto	l3484
 10336  002116                     u3840:
 10337  002116  C022  F017         	movff	___flmul@prod,??___flmul
 10338  00211A  C023  F018         	movff	___flmul@prod+1,??___flmul+1
 10339  00211E  C024  F019         	movff	___flmul@prod+2,??___flmul+2
 10340  002122  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
 10341  002126  341A               	rlcf	(??___flmul+3)^0,w,c
 10342  002128  321A               	rrcf	(??___flmul+3)^0,f,c
 10343  00212A  3219               	rrcf	(??___flmul+2)^0,f,c
 10344  00212C  3218               	rrcf	(??___flmul+1)^0,f,c
 10345  00212E  3217               	rrcf	??___flmul^0,f,c
 10346  002130  C017  F022         	movff	??___flmul,___flmul@prod
 10347  002134  C018  F023         	movff	??___flmul+1,___flmul@prod+1
 10348  002138  C019  F024         	movff	??___flmul+2,___flmul@prod+2
 10349  00213C  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
 10350  002140  4A26               	infsnz	___flmul@temp^0,f,c
 10351  002142  2A27               	incf	(___flmul@temp+1)^0,f,c
 10352  002144                     l3484:
 10353  002144  BE27               	btfsc	(___flmul@temp+1)^0,7,c
 10354  002146  EFAD  F010         	goto	u3851
 10355  00214A  5027               	movf	(___flmul@temp+1)^0,w,c
 10356  00214C  E108               	bnz	u3850
 10357  00214E  2826               	incf	___flmul@temp^0,w,c
 10358  002150  A0D8               	btfss	status,0,c
 10359  002152  EFAD  F010         	goto	u3851
 10360  002156  EFAF  F010         	goto	u3850
 10361  00215A                     u3851:
 10362  00215A  EFB9  F010         	goto	l3488
 10363  00215E                     u3850:
 10364  00215E  0E00               	movlw	0
 10365  002160  6E22               	movwf	___flmul@prod^0,c
 10366  002162  0E00               	movlw	0
 10367  002164  6E23               	movwf	(___flmul@prod+1)^0,c
 10368  002166  0E80               	movlw	128
 10369  002168  6E24               	movwf	(___flmul@prod+2)^0,c
 10370  00216A  0E7F               	movlw	127
 10371  00216C  6E25               	movwf	(___flmul@prod+3)^0,c
 10372  00216E  EFE7  F010         	goto	l3500
 10373  002172                     l3488:
 10374  002172  BE27               	btfsc	(___flmul@temp+1)^0,7,c
 10375  002174  EFC6  F010         	goto	u3860
 10376  002178  5027               	movf	(___flmul@temp+1)^0,w,c
 10377  00217A  E106               	bnz	u3861
 10378  00217C  0426               	decf	___flmul@temp^0,w,c
 10379  00217E  B0D8               	btfsc	status,0,c
 10380  002180  EFC4  F010         	goto	u3861
 10381  002184  EFC6  F010         	goto	u3860
 10382  002188                     u3861:
 10383  002188  EFD2  F010         	goto	l779
 10384  00218C                     u3860:
 10385  00218C  0E00               	movlw	0
 10386  00218E  6E22               	movwf	___flmul@prod^0,c
 10387  002190  0E00               	movlw	0
 10388  002192  6E23               	movwf	(___flmul@prod+1)^0,c
 10389  002194  0E00               	movlw	0
 10390  002196  6E24               	movwf	(___flmul@prod+2)^0,c
 10391  002198  0E00               	movlw	0
 10392  00219A  6E25               	movwf	(___flmul@prod+3)^0,c
 10393  00219C  0E00               	movlw	0
 10394  00219E  6E1B               	movwf	___flmul@sign^0,c
 10395  0021A0  EFE7  F010         	goto	l3500
 10396  0021A4                     l779:
 10397  0021A4  C026  F021         	movff	___flmul@temp,___flmul@bexp
 10398  0021A8  0EFF               	movlw	255
 10399  0021AA  1622               	andwf	___flmul@prod^0,f,c
 10400  0021AC  0EFF               	movlw	255
 10401  0021AE  1623               	andwf	(___flmul@prod+1)^0,f,c
 10402  0021B0  0E7F               	movlw	127
 10403  0021B2  1624               	andwf	(___flmul@prod+2)^0,f,c
 10404  0021B4  0E00               	movlw	0
 10405  0021B6  1625               	andwf	(___flmul@prod+3)^0,f,c
 10406  0021B8  A021               	btfss	___flmul@bexp^0,0,c
 10407  0021BA  EFE1  F010         	goto	u3871
 10408  0021BE  EFE3  F010         	goto	u3870
 10409  0021C2                     u3871:
 10410  0021C2  EFE4  F010         	goto	l3498
 10411  0021C6                     u3870:
 10412  0021C6  8E24               	bsf	(___flmul@prod+2)^0,7,c
 10413  0021C8                     l3498:
 10414  0021C8  90D8               	bcf	status,0,c
 10415  0021CA  3021               	rrcf	___flmul@bexp^0,w,c
 10416  0021CC  6E25               	movwf	(___flmul@prod+3)^0,c
 10417  0021CE                     l3500:
 10418  0021CE  501B               	movf	___flmul@sign^0,w,c
 10419  0021D0  1225               	iorwf	(___flmul@prod+3)^0,f,c
 10420  0021D2  C022  F00F         	movff	___flmul@prod,?___flmul
 10421  0021D6  C023  F010         	movff	___flmul@prod+1,?___flmul+1
 10422  0021DA  C024  F011         	movff	___flmul@prod+2,?___flmul+2
 10423  0021DE  C025  F012         	movff	___flmul@prod+3,?___flmul+3
 10424  0021E2                     l766:
 10425  0021E2  0012               	return		;funcret
 10426  0021E4                     __end_of___flmul:
 10427                           	callstack 0
 10428                           
 10429 ;; *************** function _config_IO *****************
 10430 ;; Defined at:
 10431 ;;		line 92 in file "Main_program_meter.c"
 10432 ;; Parameters:    Size  Location     Type
 10433 ;;		None
 10434 ;; Auto vars:     Size  Location     Type
 10435 ;;		None
 10436 ;; Return value:  Size  Location     Type
 10437 ;;                  1    wreg      void 
 10438 ;; Registers used:
 10439 ;;		wreg, status,2
 10440 ;; Tracked objects:
 10441 ;;		On entry : 0/0
 10442 ;;		On exit  : 0/0
 10443 ;;		Unchanged: 0/0
 10444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10445 ;;      Params:         0       0       0       0       0       0       0
 10446 ;;      Locals:         0       0       0       0       0       0       0
 10447 ;;      Temps:          0       0       0       0       0       0       0
 10448 ;;      Totals:         0       0       0       0       0       0       0
 10449 ;;Total ram usage:        0 bytes
 10450 ;; Hardware stack levels used: 1
 10451 ;; This function calls:
 10452 ;;		Nothing
 10453 ;; This function is called by:
 10454 ;;		_main
 10455 ;; This function uses a non-reentrant model
 10456 ;;
 10457                           
 10458                           	psect	text44
 10459  004328                     __ptext44:
 10460                           	callstack 0
 10461  004328                     _config_IO:
 10462                           	callstack 30
 10463  004328                     
 10464                           ;Main_program_meter.c: 94:     TRISB = 0X01;
 10465  004328  0E01               	movlw	1
 10466  00432A  6E93               	movwf	147,c	;volatile
 10467                           
 10468                           ;Main_program_meter.c: 95:     TRISC = 0X00;
 10469  00432C  0E00               	movlw	0
 10470  00432E  6E94               	movwf	148,c	;volatile
 10471  004330                     
 10472                           ;Main_program_meter.c: 96:     PORTC = 0XFF;
 10473  004330  6882               	setf	130,c	;volatile
 10474  004332  0012               	return		;funcret
 10475  004334                     __end_of_config_IO:
 10476                           	callstack 0
 10477                           
 10478 ;; *************** function _config_FOSC *****************
 10479 ;; Defined at:
 10480 ;;		line 86 in file "Main_program_meter.c"
 10481 ;; Parameters:    Size  Location     Type
 10482 ;;		None
 10483 ;; Auto vars:     Size  Location     Type
 10484 ;;		None
 10485 ;; Return value:  Size  Location     Type
 10486 ;;                  1    wreg      void 
 10487 ;; Registers used:
 10488 ;;		wreg, status,2
 10489 ;; Tracked objects:
 10490 ;;		On entry : 0/0
 10491 ;;		On exit  : 0/0
 10492 ;;		Unchanged: 0/0
 10493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10494 ;;      Params:         0       0       0       0       0       0       0
 10495 ;;      Locals:         0       0       0       0       0       0       0
 10496 ;;      Temps:          0       0       0       0       0       0       0
 10497 ;;      Totals:         0       0       0       0       0       0       0
 10498 ;;Total ram usage:        0 bytes
 10499 ;; Hardware stack levels used: 1
 10500 ;; This function calls:
 10501 ;;		Nothing
 10502 ;; This function is called by:
 10503 ;;		_main
 10504 ;; This function uses a non-reentrant model
 10505 ;;
 10506                           
 10507                           	psect	text45
 10508  004334                     __ptext45:
 10509                           	callstack 0
 10510  004334                     _config_FOSC:
 10511                           	callstack 30
 10512  004334                     
 10513                           ;Main_program_meter.c: 88:     OSCCON = 0X00;
 10514  004334  0E00               	movlw	0
 10515  004336  6ED3               	movwf	211,c	;volatile
 10516                           
 10517                           ;Main_program_meter.c: 89:     OSCTUNE = 0X00;
 10518  004338  0E00               	movlw	0
 10519  00433A  6E9B               	movwf	155,c	;volatile
 10520  00433C  0012               	return		;funcret
 10521  00433E                     __end_of_config_FOSC:
 10522                           	callstack 0
 10523                           
 10524 ;; *************** function _config_ADC *****************
 10525 ;; Defined at:
 10526 ;;		line 99 in file "Main_program_meter.c"
 10527 ;; Parameters:    Size  Location     Type
 10528 ;;		None
 10529 ;; Auto vars:     Size  Location     Type
 10530 ;;		None
 10531 ;; Return value:  Size  Location     Type
 10532 ;;                  1    wreg      void 
 10533 ;; Registers used:
 10534 ;;		wreg, status,2
 10535 ;; Tracked objects:
 10536 ;;		On entry : 0/0
 10537 ;;		On exit  : 0/0
 10538 ;;		Unchanged: 0/0
 10539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10540 ;;      Params:         0       0       0       0       0       0       0
 10541 ;;      Locals:         0       0       0       0       0       0       0
 10542 ;;      Temps:          0       0       0       0       0       0       0
 10543 ;;      Totals:         0       0       0       0       0       0       0
 10544 ;;Total ram usage:        0 bytes
 10545 ;; Hardware stack levels used: 1
 10546 ;; This function calls:
 10547 ;;		Nothing
 10548 ;; This function is called by:
 10549 ;;		_main
 10550 ;; This function uses a non-reentrant model
 10551 ;;
 10552                           
 10553                           	psect	text46
 10554  00431A                     __ptext46:
 10555                           	callstack 0
 10556  00431A                     _config_ADC:
 10557                           	callstack 30
 10558  00431A                     
 10559                           ;Main_program_meter.c: 101:     ADCON0 = 0X01;
 10560  00431A  0E01               	movlw	1
 10561  00431C  6EC2               	movwf	194,c	;volatile
 10562                           
 10563                           ;Main_program_meter.c: 102:     ADCON1 = 0X0E;
 10564  00431E  0E0E               	movlw	14
 10565  004320  6EC1               	movwf	193,c	;volatile
 10566                           
 10567                           ;Main_program_meter.c: 103:     ADCON2 = 0X87;
 10568  004322  0E87               	movlw	135
 10569  004324  6EC0               	movwf	192,c	;volatile
 10570  004326  0012               	return		;funcret
 10571  004328                     __end_of_config_ADC:
 10572                           	callstack 0
 10573                           
 10574                           	psect	rparam
 10575  0000                     
 10576                           	psect	idloc
 10577                           
 10578                           ;Config register IDLOC0 @ 0x200000
 10579                           ;	unspecified, using default values
 10580  200000                     	org	2097152
 10581  200000  FF                 	db	255
 10582                           
 10583                           ;Config register IDLOC1 @ 0x200001
 10584                           ;	unspecified, using default values
 10585  200001                     	org	2097153
 10586  200001  FF                 	db	255
 10587                           
 10588                           ;Config register IDLOC2 @ 0x200002
 10589                           ;	unspecified, using default values
 10590  200002                     	org	2097154
 10591  200002  FF                 	db	255
 10592                           
 10593                           ;Config register IDLOC3 @ 0x200003
 10594                           ;	unspecified, using default values
 10595  200003                     	org	2097155
 10596  200003  FF                 	db	255
 10597                           
 10598                           ;Config register IDLOC4 @ 0x200004
 10599                           ;	unspecified, using default values
 10600  200004                     	org	2097156
 10601  200004  FF                 	db	255
 10602                           
 10603                           ;Config register IDLOC5 @ 0x200005
 10604                           ;	unspecified, using default values
 10605  200005                     	org	2097157
 10606  200005  FF                 	db	255
 10607                           
 10608                           ;Config register IDLOC6 @ 0x200006
 10609                           ;	unspecified, using default values
 10610  200006                     	org	2097158
 10611  200006  FF                 	db	255
 10612                           
 10613                           ;Config register IDLOC7 @ 0x200007
 10614                           ;	unspecified, using default values
 10615  200007                     	org	2097159
 10616  200007  FF                 	db	255
 10617                           
 10618                           	psect	config
 10619                           
 10620                           ; Padding undefined space
 10621  300000                     	org	3145728
 10622  300000  FF                 	db	255
 10623                           
 10624                           ;Config register CONFIG1H @ 0x300001
 10625                           ;	Oscillator Selection bits
 10626                           ;	OSC = HS, HS oscillator
 10627                           ;	Fail-Safe Clock Monitor Enable bit
 10628                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 10629                           ;	Internal/External Oscillator Switchover bit
 10630                           ;	IESO = OFF, Oscillator Switchover mode disabled
 10631  300001                     	org	3145729
 10632  300001  02                 	db	2
 10633                           
 10634                           ;Config register CONFIG2L @ 0x300002
 10635                           ;	Power-up Timer Enable bit
 10636                           ;	PWRT = OFF, PWRT disabled
 10637                           ;	Brown-out Reset Enable bits
 10638                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
 10639                           ;	Brown Out Reset Voltage bits
 10640                           ;	BORV = 3, Minimum setting
 10641  300002                     	org	3145730
 10642  300002  19                 	db	25
 10643                           
 10644                           ;Config register CONFIG2H @ 0x300003
 10645                           ;	Watchdog Timer Enable bit
 10646                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 10647                           ;	Watchdog Timer Postscale Select bits
 10648                           ;	WDTPS = 32768, 1:32768
 10649  300003                     	org	3145731
 10650  300003  1E                 	db	30
 10651                           
 10652                           ; Padding undefined space
 10653  300004                     	org	3145732
 10654  300004  FF                 	db	255
 10655                           
 10656                           ;Config register CONFIG3H @ 0x300005
 10657                           ;	CCP2 MUX bit
 10658                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
 10659                           ;	PORTB A/D Enable bit
 10660                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
 10661                           ;	Low-Power Timer1 Oscillator Enable bit
 10662                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 10663                           ;	MCLR Pin Enable bit
 10664                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 10665  300005                     	org	3145733
 10666  300005  83                 	db	131
 10667                           
 10668                           ;Config register CONFIG4L @ 0x300006
 10669                           ;	Stack Full/Underflow Reset Enable bit
 10670                           ;	STVREN = ON, Stack full/underflow will cause Reset
 10671                           ;	Single-Supply ICSP Enable bit
 10672                           ;	LVP = OFF, Single-Supply ICSP disabled
 10673                           ;	Extended Instruction Set Enable bit
 10674                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 10675                           ;	Background Debugger Enable bit
 10676                           ;	DEBUG = 0x1, unprogrammed default
 10677  300006                     	org	3145734
 10678  300006  81                 	db	129
 10679                           
 10680                           ; Padding undefined space
 10681  300007                     	org	3145735
 10682  300007  FF                 	db	255
 10683                           
 10684                           ;Config register CONFIG5L @ 0x300008
 10685                           ;	Code Protection bit
 10686                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
 10687                           ;	Code Protection bit
 10688                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
 10689                           ;	Code Protection bit
 10690                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
 10691                           ;	Code Protection bit
 10692                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
 10693  300008                     	org	3145736
 10694  300008  0F                 	db	15
 10695                           
 10696                           ;Config register CONFIG5H @ 0x300009
 10697                           ;	Boot Block Code Protection bit
 10698                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 10699                           ;	Data EEPROM Code Protection bit
 10700                           ;	CPD = OFF, Data EEPROM not code-protected
 10701  300009                     	org	3145737
 10702  300009  C0                 	db	192
 10703                           
 10704                           ;Config register CONFIG6L @ 0x30000A
 10705                           ;	Write Protection bit
 10706                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
 10707                           ;	Write Protection bit
 10708                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
 10709                           ;	Write Protection bit
 10710                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
 10711                           ;	Write Protection bit
 10712                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
 10713  30000A                     	org	3145738
 10714  30000A  0F                 	db	15
 10715                           
 10716                           ;Config register CONFIG6H @ 0x30000B
 10717                           ;	Configuration Register Write Protection bit
 10718                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 10719                           ;	Boot Block Write Protection bit
 10720                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
 10721                           ;	Data EEPROM Write Protection bit
 10722                           ;	WRTD = OFF, Data EEPROM not write-protected
 10723  30000B                     	org	3145739
 10724  30000B  E0                 	db	224
 10725                           
 10726                           ;Config register CONFIG7L @ 0x30000C
 10727                           ;	Table Read Protection bit
 10728                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
 10729                           ;	Table Read Protection bit
 10730                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
 10731                           ;	Table Read Protection bit
 10732                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
 10733                           ;	Table Read Protection bit
 10734                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
 10735  30000C                     	org	3145740
 10736  30000C  0F                 	db	15
 10737                           
 10738                           ;Config register CONFIG7H @ 0x30000D
 10739                           ;	Boot Block Table Read Protection bit
 10740                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 10741  30000D                     	org	3145741
 10742  30000D  40                 	db	64
 10743                           tosu	equ	0xFFF
 10744                           tosh	equ	0xFFE
 10745                           tosl	equ	0xFFD
 10746                           stkptr	equ	0xFFC
 10747                           pclatu	equ	0xFFB
 10748                           pclath	equ	0xFFA
 10749                           pcl	equ	0xFF9
 10750                           tblptru	equ	0xFF8
 10751                           tblptrh	equ	0xFF7
 10752                           tblptrl	equ	0xFF6
 10753                           tablat	equ	0xFF5
 10754                           prodh	equ	0xFF4
 10755                           prodl	equ	0xFF3
 10756                           indf0	equ	0xFEF
 10757                           postinc0	equ	0xFEE
 10758                           postdec0	equ	0xFED
 10759                           preinc0	equ	0xFEC
 10760                           plusw0	equ	0xFEB
 10761                           fsr0h	equ	0xFEA
 10762                           fsr0l	equ	0xFE9
 10763                           wreg	equ	0xFE8
 10764                           indf1	equ	0xFE7
 10765                           postinc1	equ	0xFE6
 10766                           postdec1	equ	0xFE5
 10767                           preinc1	equ	0xFE4
 10768                           plusw1	equ	0xFE3
 10769                           fsr1h	equ	0xFE2
 10770                           fsr1l	equ	0xFE1
 10771                           bsr	equ	0xFE0
 10772                           indf2	equ	0xFDF
 10773                           postinc2	equ	0xFDE
 10774                           postdec2	equ	0xFDD
 10775                           preinc2	equ	0xFDC
 10776                           plusw2	equ	0xFDB
 10777                           fsr2h	equ	0xFDA
 10778                           fsr2l	equ	0xFD9
 10779                           status	equ	0xFD8

Data Sizes:
    Strings     117
    Constant    0
    Data        0
    BSS         174
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    125     127
    BANK0           128     45     121
    BANK1           256      0      96
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_25(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_25(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_20(CODE[4]), STR_19(CODE[4]), STR_16(CODE[4]), STR_15(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_20(CODE[4]), STR_19(CODE[4]), STR_16(CODE[4]), STR_15(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_8(CODE[5]), STR_7(CODE[5]), STR_6(CODE[5]), STR_5(CODE[5]), 
		 -> STR_2(CODE[15]), STR_1(CODE[15]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_8(CODE[5]), STR_7(CODE[5]), STR_6(CODE[5]), STR_5(CODE[5]), 
		 -> STR_2(CODE[15]), STR_1(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 15
		 -> STR_8(CODE[5]), STR_7(CODE[5]), STR_6(CODE[5]), STR_5(CODE[5]), 
		 -> STR_2(CODE[15]), STR_1(CODE[15]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_8(CODE[5]), STR_7(CODE[5]), STR_6(CODE[5]), STR_5(CODE[5]), 
		 -> STR_2(CODE[15]), STR_1(CODE[15]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> Buffer_D4(BANK0[8]), Buffer_D3(BANK0[8]), Buffer_D2(BANK0[8]), Buffer_D1(BANK0[8]), 
		 -> VoltageBuffer(BANK1[16]), VdigBuffer(BANK0[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1009$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1009$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    lcd_write@str	PTR unsigned char  size(2) Largest target is 16
		 -> STR_14(CODE[16]), STR_13(CODE[16]), STR_12(CODE[8]), STR_11(CODE[7]), 
		 -> STR_10(CODE[8]), STR_9(CODE[7]), Buffer_D4(BANK0[8]), Buffer_D3(BANK0[8]), 
		 -> Buffer_D2(BANK0[8]), Buffer_D1(BANK0[8]), STR_4(CODE[9]), STR_3(CODE[8]), 
		 -> VoltageBuffer(BANK1[16]), VdigBuffer(BANK0[16]), 


Critical Paths under _main in COMRAM

    _logic_CONTROL->___flge
    _lcd_init->_lcd_cmd
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _lcd_write->_lcd_send_byte
    _lcd_send_byte->_lcd_cmd
    _lcd_cmd->_set_bit
    _conv_AN0->___flmul
    ___flmul->___xxtofl

Critical Paths under _main in BANK0

    _lcd_SENSOR->_sprintf
    _lcd_LEDS->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   85478
                         _config_ADC
                        _config_FOSC
                          _config_IO
                           _conv_AN0
                           _lcd_LEDS
                         _lcd_SENSOR
                           _lcd_init
                      _logic_CONTROL
 ---------------------------------------------------------------------------------
 (1) _logic_CONTROL                                        1     1      0    2652
                                             51 COMRAM     1     1      0
                             ___fleq
                             ___flge
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0     874
                                              4 COMRAM     2     2      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_SENSOR                                           0     0      0   39373
                          _lcd_write
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _lcd_LEDS                                             0     0      0   39373
                          _lcd_write
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             23    15      8   36064
                                             24 BANK0     21    13      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   34943
                                            123 COMRAM     2     2      0
                                             18 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           44    38      6   34548
                                            113 COMRAM    10     4      6
                                              0 BANK0     18    18      0
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              62    55      7   23588
                                             51 COMRAM    62    55      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              6     4      2     920
                                              6 COMRAM     6     4      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     490
                                             25 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    2889
                                             39 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    1854
                                             39 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     798
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2007
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    5042
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3393
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _atoi                                                10     8      2    1324
                                              7 COMRAM    10     8      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     403
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _lcd_write                                            5     2      3    3309
                                              6 COMRAM     5     2      3
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (3) _lcd_send_byte                                        2     1      1    1024
                                              4 COMRAM     2     1      1
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              2     2      0     828
                                              2 COMRAM     2     2      0
                            _set_bit
 ---------------------------------------------------------------------------------
 (3) _set_bit                                              2     1      1     652
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _conv_AN0                                             2     2      0    3206
                                             39 COMRAM     2     2      0
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    2808
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _config_IO                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_FOSC                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_ADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _config_ADC
   _config_FOSC
   _config_IO
   _conv_AN0
     ___flmul
       ___xxtofl (ARG)
     ___xxtofl
   _lcd_LEDS
     _lcd_write
       _lcd_send_byte
         _lcd_cmd
           _set_bit
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
             _strcpy
             _tolower
               _isupper
           _fputc
           _isdigit
           _isupper
           _strncmp
           _tolower
   _lcd_SENSOR
     _lcd_write
     _sprintf
   _lcd_init
     _lcd_cmd
   _logic_CONTROL
     ___fleq
     ___flge

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      23        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      60       7       37.5%
BITBANK0            80      0       0       4        0.0%
BANK0               80     2D      79       5       94.5%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     7D      7F       1      100.0%
BITBIGSFRh          2C      0       0      16        0.0%
BITBIGSFRlhl        24      0       0      18        0.0%
BITBIGSFRlhhh        E      0       0      17        0.0%
BITBIGSFRlllh        E      0       0      20        0.0%
BITBIGSFRllh         4      0       0      19        0.0%
BITBIGSFRllll        1      0       0      21        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     158      22        0.0%
DATA                 0      0     158       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Mon Oct 24 19:05:59 2022

           ___fldiv@aexp 0019             ___fldiv@bexp 0018             ___fldiv@sign 0011  
                     _D1 0098                       _D2 0096                       _D3 0094  
                     _D4 0092                       l61 433C                       l70 3E9C  
                     l64 4332                       l72 3EAA                       l73 3F04  
                     l82 27CC                       l67 4326                       l91 345A  
                     l76 3E92                       l88 2868           ?_lcd_send_byte 0005  
           ___awdiv@sign 0006      ___wmul@multiplicand 0003                      l130 3846  
                    l122 3E04                      l133 4318                      l126 42FA  
                    l145 3D66                      l148 42DA                      l413 361E  
                    l262 3096                      l422 4220                      l407 3CC6  
                    l418 3664                      l275 31FA                      l445 3560  
                    l702 1CD2                      l703 1CC0                      l392 3C1C  
                    l810 2E4A                      l730 257C                      l803 2DB2  
                    l379 3AAA                      l900 2B48                      l732 23DC  
                    l741 2422                      l806 2F0E                      l718 40F2  
                    l743 249A                      l735 23A0                      l744 2488  
                    l817 2EA6                      l762 1E7E                      l826 4014  
                    l771 20EC                      l772 20DA                      l676 1AE8  
                    l932 0A20                      l916 1260                      l693 1C02  
                    l685 1DB8                      l677 1AD6                      l766 21E2  
                    l678 1A9C                      l872 3B32                      l880 290A  
                    l960 0E56                      l769 2074                      l874 3B6C  
                    l882 2912                      l779 21A4                      l869 3AF0  
                    _abs 4138                      _pad 3AAC             ___awmod@sign 0006  
                    wreg 000FE8             ___flmul@aexp 0020             ___flmul@bexp 0021  
           ___flmul@sign 001B             ___flmul@temp 0026             ___flmul@prod 0022  
           ___fltol@exp1 000A                     l1001 1354                     l1110 41E8  
                   l1030 1842                     l1104 4066                     l1024 18F8  
                   ?_abs 0013                     l1052 416E                     l1036 3F5E  
                   l1125 39E6                     l1133 4136                     l1037 3F66  
                   l1142 3FC2                     l1055 4176                     l1047 3762  
                   l1080 3350                     l1136 433E                     l3000 1A2E  
                   l1152 391C                     l3010 1A68                     l3002 1A32  
                   l1162 40A4                     l1148 428E                     l3100 1CEE  
                   l3020 1ABA                     l3012 1A84                     l3004 1A36  
                   l1077 3348                     l1165 40AC                     l3110 1D58  
                   l3102 1CFC                     l3030 1B06                     l3022 1AC8  
                   l3014 1A94                     l3006 1A3A                     l1086 2D5A  
                   l1096 4258                     l3120 1D92                     l3112 1D78  
                   l3104 1D36                     l3040 1B46                     l3024 1ACA  
                   l3016 1AAA                     l3008 1A3E                     l4000 0B58  
                   l1089 2C9E                     l3210 30CE                     l3202 3098  
                   l3130 40F4                     l3122 1D98                     l3114 1D7C  
                   l3106 1D38                     l3050 1B70                     l3042 1B52  
                   l3034 1B1A                     l3026 1AD4                     l3018 1AB6  
                   l4002 0B6C                     l4010 0C60                     l3220 3136  
                   l3212 30DC                     l3204 309C                     l3132 4100  
                   l3140 4266                     l3300 2344                     l3124 1DA6  
                   l3116 1D8A                     l3108 1D48                     l3060 1BE2  
                   l3044 1B56                     l3036 1B2A                     l3028 1AF6  
                   l3052 1B76                     l4100 10A2                     l4020 0D2A  
                   l4012 0C7E                     l4004 0BD0                     l3222 3144  
                   l3230 31AA                     l3214 30FC                     l3206 30AA  
                   l3134 4112                     l3142 426A                     l3310 2390  
                   l3302 2354                     l3126 1DA8                     l3118 1D90  
                   l3070 1C3C                     l3054 1B9C                     l3062 1BF2  
                   l3046 1B64                     l3038 1B38                     l4110 10E0  
                   l4102 10B2                     l4030 0DD6                     l4022 0D38  
                   l4014 0CB2                     l4006 0C28                     l3400 1E38  
                   l3152 42B6                     l3160 2F14                     l3232 31BA  
                   l3224 3172                     l3216 311A                     l3208 30CA  
                   l3136 4116                     l3144 4282                     l3320 23DA  
                   l3312 239E                     l3304 2364                     l3240 21F0  
                   l3080 1C6C                     l3072 1C46                     l3064 1C18  
                   l3056 1BD0                     l3048 1B66                     l4120 1116  
                   l4112 10F0                     l4104 10B6                     l4040 0E42  
                   l4032 0E0A                     l4024 0D48                     l4016 0CE4  
                   l4008 0C5C                     l4200 3848                     l3410 1E8E  
                   l3402 1E48                     l3154 42D2                     l3170 2F74  
                   l3162 2F22                     l3234 31DA                     l3226 3192  
                   l3218 3122                     l3138 425A                     l3330 2420  
                   l3322 23EC                     l3314 23AA                     l3306 236C  
                   l3250 2230                     l3242 21FE                     l3090 1C94  
                   l3082 1C70                     l3074 1C54                     l3066 1C28  
                   l3058 1BD2                     l4130 1170                     l4122 1122  
                   l4114 10F8                     l4106 10C6                     l4050 0EF6  
                   l4042 0E4E                     l4034 0E1C                     l4026 0D7C  
                   l4018 0CF8                     l4210 38A4                     l4202 3872  
                   l3500 21CE                     l3420 1EC8                     l3412 1E9E  
                   l3404 1E58                     l4220 3766                     l3180 2FBE  
                   l3172 2F78                     l3164 2F42                     l3228 31A4  
                   l3340 2480                     l3324 2402                     l3332 2432  
                   l3316 23C8                     l3308 237C                     l3260 2256  
                   l3252 2232                     l3244 2200                     l3092 1CA2  
                   l3084 1C80                     l3076 1C56                     l3148 41B2  
                   l4140 11BA                     l4124 1128                     l4132 1176  
                   l4116 1106                     l4108 10D8                     l4060 0F3E  
                   l4052 0F08                     l4044 0E72                     l4028 0DD2  
                   l4036 0E20                     l4212 38C0                     l4300 1474  
                   l3502 21D2                     l3430 1F1A                     l3422 1EDE  
                   l3406 1E68                     l4230 37F2                     l4222 37CE  
                   l3190 302E                     l3182 2FCC                     l3174 2F84  
                   l3166 2F46                     l3158 2F10                     l3350 24EE  
                   l3334 2440                     l3326 2408                     l3318 23CA  
                   l3270 2296                     l3262 2264                     l3246 2210  
                   l3254 223A                     l3238 21E4                     l3094 1CB8  
                   l3078 1C64                     l3086 1C82                     l4142 11C6  
                   l4134 1188                     l4126 114E                     l4118 110E  
                   l4070 0F74                     l4062 0F4E                     l4054 0F16  
                   l4046 0ED6                     l4038 0E30                     l4214 38D2  
                   l4206 387E                     l4302 1482                     l3440 1F60  
                   l3432 1F28                     l3424 1EEA                     l3416 1EB2  
                   l3408 1E6E                     l4232 380C                     l4224 37D0  
                   l4400 4310                     l3192 3040                     l3184 2FDE  
                   l3176 2FA2                     l3168 2F54                     l3520 3A06  
                   l3512 39E8                     l3360 2558                     l3344 24AA  
                   l3352 24F2                     l3336 2444                     l3328 2412  
                   l3280 22D6                     l3272 2298                     l3264 2266  
                   l3256 224A                     l3248 2220                     l3600 3C9A  
                   l3088 1C90                     l4160 123A                     l4152 11EA  
                   l4144 11CE                     l4136 11A2                     l4128 116A  
                   l4080 0FA8                     l4072 0F78                     l4064 0F52  
                   l4048 0EE4                     l4056 0F1E                     l4216 38FA  
                   l4208 388C                     l4320 15B0                     l4312 150E  
                   l4304 14A6                     l4240 1262                     l3450 1FCE  
                   l3442 1F7A                     l3434 1F34                     l3426 1F02  
                   l3418 1EBE                     l4234 3828                     l4226 37D2  
                   l4402 4312                     l4170 3210                     l3186 300C  
                   l3178 2FAA                     l3194 3046                     l3530 3A3A  
                   l3522 3A14                     l3514 39EC                     l3362 255C  
                   l3354 250C                     l3346 24B6                     l3338 2452  
                   l3290 2306                     l3282 22DE                     l3266 2276  
                   l3274 22A0                     l3258 2250                     l3602 3CBE  
                   l3610 3590                     l3098 1CE2                     l3506 40AE  
                   l4162 1240                     l4154 1216                     l4146 11DE  
                   l4138 11A8                     l4090 1044                     l4082 0FAC  
                   l4074 0F7E                     l4066 0F58                     l4058 0F30  
                   l4330 1682                     l4322 15C0                     l4306 14E0  
                   l4314 154C                     l4250 12B6                     l4242 1286  
                   l4410 3F42                     l2740 4330                     l3460 2064  
                   l3452 1FF8                     l3444 1F8A                     l3436 1F44  
                   l3428 1F0E                     l3380 1DD4                     l4236 3842  
                   l4228 37DA                     l4180 3272                     l3196 3056  
                   l3188 302C                     l3700 3B54                     l3540 3A74  
                   l3532 3A42                     l3524 3A1C                     l3516 39FA  
                   l3364 256A                     l3356 2522                     l3348 24C4  
                   l3292 2306                     l3284 22E2                     l3276 22B0  
                   l3268 2286                     l3604 3CC4                     l3620 35FE  
                   l3612 35A0                     l3508 40BE                     l4156 1222  
                   l4148 11E4                     l4068 0F64                     l4076 0F84  
                   l4084 0FB2                     l4092 1048                     l4340 16F0  
                   l4324 15F2                     l4316 156E                     l4308 1500  
                   l4252 12B8                     l4244 1294                     l4404 3F06  
                   l4420 4002                     l4412 3FC4                     l4500 3E6E  
                   l2742 431A                     l3470 20A4                     l3462 2072  
                   l3454 202E                     l3446 1FA6                     l3438 1F50  
                   l3390 1E0C                     l3382 1DD6                     l4238 3844  
                   l4430 3CF6                     l4190 32E4                     l4182 327A  
                   l4174 3214                     l3198 3076                     l3550 3A9A  
                   l3542 3A7C                     l3534 3A4A                     l3526 3A20  
                   l3518 3A02                     l3366 2570                     l3358 253C  
                   l3278 22C6                     l3622 360C                     l3614 35CE  
                   l3630 41EA                     l3710 3686                     l4158 122A  
                   l4094 1066                     l4086 100A                     l4078 0F96  
                   l4342 1720                     l4334 16BA                     l4326 1616  
                   l4318 157E                     l4270 12E2                     l4262 12D6  
                   l4254 12CA                     l4246 12A6                     l4406 3F0E  
                   l4414 3FD6                     l4502 3E80                     l4510 2608  
                   l2736 4334                     l3480 2116                     l3472 20D2  
                   l3464 2084                     l3456 203C                     l3448 1FB2  
                   l3392 1E1C                     l3384 1DE6                     l3376 1DBA  
                   l4440 2D5E                     l4432 3CFC                     l4424 3CCA  
                   l4192 331A                     l4184 32AE                     l4176 3230  
                   l4168 31FC                     l3704 4138                     l2920 394C  
                   l3800 286A                     l3552 3AA2                     l3544 3A7E  
                   l3536 3A58                     l3528 3A28                     l3560 3B80  
                   l3368 2572                     l3296 231A                     l3288 22F6  
                   l3624 365C                     l3616 35DE                     l3608 3562  
                   l3632 4200                     l3640 3472                     l3712 36C4  
                   l3720 3704                     l4096 1082                     l4088 103E  
                   l4352 17A0                     l4336 16CC                     l4328 163A  
                   l4280 1364                     l4248 12AA                     l4408 3F1C  
                   l4416 3FDE                     l4520 26EA                     l4512 263A  
                   l4504 257E                     l4600 4178                     l2738 4328  
                   l3490 218C                     l3482 2140                     l3466 2092  
                   l3458 205A                     l3394 1E22                     l3386 1DF6  
                   l3378 1DC6                     l4442 2D6E                     l4434 3D0A  
                   l4426 3CDA                     l4194 332C                     l4178 326A  
                   l3706 4152                     l2922 396A                     l2914 391E  
                   l3810 28E4                     l3802 288A                     l3546 3A84  
                   l3538 3A5E                     l3570 3BB4                     l3562 3B88  
                   l3298 2334                     l3626 3662                     l3618 35EC  
                   l3634 4210                     l2930 1906                     l3650 34C2  
                   l3722 3716                     l3714 36EC                     l3730 3F68  
                   l4098 1094                     l4354 17DE                     l4362 1856  
                   l4338 16E2                     l4346 174C                     l4290 13FA  
                   l4282 1388                     l4274 12EE                     l4266 12DC  
                   l4258 12D0                     l4418 3FE6                     l4522 271C  
                   l4514 2660                     l4530 27CC                     l4506 25B0  
                   l4610 419E                     l4602 4184                     l3492 21A8  
                   l3476 20FC                     l3484 2144                     l3468 2096  
                   l3396 1E28                     l3388 1E06                     l4460 2E34  
                   l4452 2DEC                     l4444 2D7C                     l4436 3D32  
                   l4428 3CE4                     l2924 39A0                     l2916 3930  
                   l3820 2940                     l3812 28FE                     l3804 28B2  
                   l3548 3A8A                     l3580 3BF0                     l3572 3BBC  
                   l3564 3B8C                     l3556 3B6E                     l2940 1946  
                   l2932 1914                     l3660 34EC                     l3652 34C6  
                   l3644 3486                     l3716 36F8                     l3708 3666  
                   l3732 3F78                     l3740 4096                     l3900 0780  
                   l4380 18E6                     l4364 187A                     l4372 18A8  
                   l4356 1812                     l4348 177A                     l4284 13BE  
                   l4276 1342                     l4540 33CA                     l4532 27F0  
                   l4524 274E                     l4516 2692                     l4508 25D6  
                   l4612 41A6                     l4604 4188                     l3494 21B8  
                   l3486 215E                     l3478 2108                     l3398 1E36  
                   l4470 2EB4                     l4462 2E40                     l4454 2DF4  
                   l4446 2DC2                     l4438 3D36                     l2918 3942  
                   l3830 29E0                     l3822 2948                     l3814 291A  
                   l3806 28D2                     l3582 3BF6                     l3574 3BC4  
                   l3566 3B9A                     l3558 3B72                     l2950 1978  
                   l2942 1948                     l2934 1916                     l3670 3514  
                   l3662 34F6                     l3654 34D4                     l3646 34B0  
                   l3638 345C                     l3726 375A                     l3750 2BD4  
                   l3734 4068                     l3902 079C                     l3910 07E4  
                   l4374 18B6                     l4366 1888                     l4294 1408  
                   l4286 13CC                     l4278 1362                     l4550 3424  
                   l4542 33DC                     l4534 2816                     l4526 2774  
                   l4518 26C4                     l4606 418C                     ?_pad 0011  
                   l3496 21C6                     l3488 2172                     l4480 2EFC  
                   l4472 2EB6                     l4464 2E7C                     l4456 2E00  
                   l4448 2DD8                     l3840 2A9C                     l3832 29E6  
                   l3824 2952                     l3816 292C                     l3808 28E2  
                   l3576 3BD2                     l3584 3BFC                     l3568 3BA2  
                   l3592 3C1E                     l2960 19A0                     l2952 197A  
                   l2936 1926                     l2944 1950                     l2928 18FA  
                   l3672 3520                     l3664 3500                     l3648 34B2  
                   l3752 2BE2                     l3760 2CC2                     l3744 2B4A  
                   l3920 0852                     l3904 07B4                     l4368 189C  
                   l4296 1446                     l4288 13DA                     l4552 3436  
                   l4544 33EE                     l4560 3D6E                     l4536 283E  
                   l4528 27A6                     l4608 4190                     l3498 21C8  
                   l4482 2EFE                     l4474 2EBA                     l4466 2E88  
                   l4458 2E32                     l4490 3EB2                     l3690 3AE8  
                   l3682 3AAC                     l3850 2AEA                     l3842 2AB6  
                   l3826 2958                     l3834 2A4A                     l3818 293A  
                   l3586 3C0C                     l3578 3BE8                     l3594 3C4C  
                   l2970 19DA                     l2962 19B0                     l2954 1980  
                   l2946 1960                     l2938 1936                     l3674 3530  
                   l3762 2CFE                     l3746 2B6A                     l3738 4068  
                   l3930 0886                     l3906 07BC                     l4298 146A  
                   l4378 18C2                     l4554 3448                     l4546 3400  
                   l4538 3352                     l4570 3D7C                     l4562 3D70  
                   l4476 2EDE                     l4468 2E96                     l4492 3EBE  
                   l4396 42FE                     l3772 4222                     l3780 402E  
                   l3692 3AFC                     l3684 3ABA                     l3852 2AFC  
                   l3836 2A64                     l3844 2AC4                     l3828 29DA  
                   l3588 3C14                     l3596 3C5C                     l2980 1A06  
                   l2972 19EC                     l2964 19C0                     l2956 198E  
                   l2948 1966                     l3676 3540                     l3764 2D12  
                   l3756 2C52                     l3748 2BC0                     l3940 094E  
                   l3916 080A                     l4548 3412                     l4580 3D96  
                   l4572 3D8C                     l4564 3D76                     l4556 3D68  
                   l4478 2EEE                     l4486 3E94                     l3790 42F2  
                   l4398 4308                     l3782 405C                     l3694 3B10  
                   l3686 3ACE                     l3854 2B08                     l3846 2AD6  
                   l3838 2A82                     l3598 3C8A                     l2990 1A1A  
                   l2982 1A0A                     l2974 19FA                     l2966 19C2  
                   l2958 1990                     l3678 3550                     l3766 2D3A  
                   l3758 2C8E                     l3950 09CC                     l3942 0982  
                   l3934 08BC                     l3918 0836                     l3870 06A6  
                   l3862 0678                     l4494 3E06                     l4590 3DC4  
                   l4582 3DA4                     l4566 3D78                     l4558 3D6C  
                   l4488 3E9A                     l3784 4060                     l3776 4016  
                   l3696 3B14                     l3688 3ADC                     l3856 2B10  
                   l3848 2AE4                     l2992 1A1E                     l2984 1A0E  
                   l2976 19FE                     l2968 19CA                     l3768 2D4A  
                   l3952 09DE                     l3960 0A2C                     l3944 0988  
                   l3936 08F0                     l3928 086E                     l3880 06FA  
                   l3872 06CA                     l3864 0680                     l4496 3E4A  
                   l4592 3DD2                     l4584 3DA6                     l4568 3D7A  
                   l3778 401A                     l3698 3B40                     l3858 2B20  
                   l2994 1A22                     l2986 1A12                     l2978 1A02  
                   l3970 0A6E                     l3954 09F2                     l3938 08F4  
                   l3946 09BA                     l3890 0728                     l3882 070C  
                   l3874 06D2                     l3866 0690                     l4498 3E5C  
                   l4594 3DD8                     l4586 3DB6                     l4578 3D90  
                   l3796 42F8                     l3788 42DE                     l2996 1A26  
                   l2988 1A16                     l3980 0ACA                     l3972 0AA4  
                   l3956 09FA                     l3948 09C8                     l3884 0718  
                   l3892 072E                     l3876 06DA                     l3868 069E  
                   l4596 3DEE                     l4588 3DBC                     l2998 1A2A  
                   l3990 0B0E                     l3982 0ADC                     l3974 0AAC  
                   l3966 0A40                     l3958 0A14                     l3886 0720  
                   l3878 06EC                     l4686 1314                     l4598 3DF6  
                   l4688 3298                     l3992 0B26                     l3984 0AEA  
                   l3968 0A52                     l3976 0AB0                     l3888 0724  
                   l3994 0B38                     l3986 0AEE                     l3978 0AB8  
                   l3898 0754                     l3988 0B00                     l3996 0B40  
                   l3998 0B48                     STR_1 0620                     STR_2 0611  
                   STR_3 0638                     STR_4 062F                     STR_5 065E  
                   STR_6 065E                     STR_7 065E                     STR_8 065E  
                   STR_9 0650                     u3000 1A80                     u3001 1A7A  
                   u3010 1A82                     u3100 1B9C                     u3020 1AAA  
                   u3101 1B98                     u3021 1AA6                     u3110 1BE2  
                   u3030 1AC8                     u3111 1BDE                     u3031 1AC4  
                   u4000 3C4C                     u3200 1CCE                     u3120 1C18  
                   u3040 1AE8                     u4001 3C48                     u3201 1CCA  
                   u3121 1C14                     u3041 1AE4                     u4010 3C8A  
                   u3210 1CE2                     u3130 1C28                     u3050 1AF6  
                   u4011 3C86                     u3211 1CDE                     u3131 1C24  
                   u3051 1AF2                     u3300 4282                     u4020 3CBE  
                   u3220 1CFC                     u3140 1C54                     u3060 1B06  
                   u4100 34A6                     u3301 427E                     u4021 3CBA  
                   u3221 1CF8                     u3141 1C50                     u3061 1B02  
                   u4030 3590                     u3230 1D36                     u3150 1C64  
                   u3070 1B38                     u4110 34D4                     u3310 41E2  
                   u4031 358C                     u3231 1D32                     u3151 1C60  
                   u3071 1B34                     u4111 34D0                     u3311 41DC  
                   u3400 30AA                     u4200 4152                     u4040 35CE  
                   u3240 1D48                     u3160 1C80                     u3080 1B46  
                   u4120 34E8                     u3320 41E4                     u5000 1082  
                   u3401 30A6                     u4201 414E                     u4041 35CA  
                   u3241 1D44                     u3161 1C7C                     u3081 1B42  
                   u4121 34E4                     u4105 349C                     u5001 107E  
                   u3330 2F22                     u3410 30DC                     u4050 35EC  
                   u3250 1D58                     u3170 1C90                     u3090 1B64  
                   u4130 3510                     u4210 36A6                     u5010 1094  
                   u3331 2F1E                     u3411 30D8                     u4051 35E8  
                   u3251 1D54                     u3171 1C8C                     u3091 1B60  
                   u4131 350C                     u5011 1090                     u5100 3266  
                   u3340 2F54                     u3420 311A                     u3500 2276  
                   u4060 360C                     u3260 1D78                     u3180 1CA2  
                   u4140 3530                     u4220 36C4                     u4300 4096  
                   u5020 10A2                     u5101 3262                     u3341 2F50  
                   u3421 3116                     u3501 2272                     u4061 3608  
                   u3261 1D74                     u3181 1C9E                     u4141 352C  
                   u4221 36C0                     u4301 4092                     u5021 109E  
                   u5110 331A                     u3430 3144                     u3510 2286  
                   u4070 365C                     u3270 1D8A                     u3190 1CB8  
                   u4150 3540                     u4230 36EC                     u4310 2B92  
                   u5030 10D8                     u5111 3316                     u3351 2F7E  
                   u3431 3140                     u3511 2282                     u4071 3658  
                   u3271 1D86                     u3191 1CB4                     u4151 353C  
                   u4231 36E8                     u4215 369C                     u5031 10D4  
                   u5120 332C                     u3360 2FA2                     u3440 3172  
                   u4160 3ABA                     u3600 2440                     u3520 22C6  
                   u4080 4200                     u3280 1DA6                     u4240 3716  
                   u4400 2D3A                     u4320 2BC0                     u5040 1106  
                   u5200 1362                     u5121 3328                     u3361 2F9E  
                   u3441 316E                     u4161 3AB6                     u3601 243C  
                   u3521 22C2                     u4081 41FC                     u3281 1DA2  
                   u4241 3712                     u4401 2D36                     u4321 2BBC  
                   u5041 1102                     u5201 135E                     u4410 4252  
                   u3370 2FCC                     u3450 31BA                     u3290 4136  
                   u4170 3ADC                     u3610 2452                     u3530 2306  
                   u4090 3472                     u4330 2BE2                     u5050 1188  
                   u5130 3872                     u5210 1388                     u4411 424C  
                   u3371 2FC8                     u3451 31B6                     u3291 4132  
                   u4171 3AD8                     u3611 244E                     u3531 2302  
                   u4091 346E                     u4331 2BDE                     u4315 2B88  
                   u5051 1184                     u5131 386E                     u5211 1384  
                   u3700 1DE6                     u4420 4254                     u3380 300C  
                   u4180 3B32                     u4500 28FE                     u3620 2480  
                   u3540 237C                     u3460 21FE                     u2900 1914  
                   u4260 3750                     u5060 11A2                     u5140 38A4  
                   u5300 163A                     u5220 13CC                     u3701 1DE2  
                   u3381 3008                     u4181 3B2E                     u4501 28FA  
                   u3621 247C                     u3541 2378                     u3461 21FA  
                   u2901 1910                     u4261 374A                     u5061 119E  
                   u5141 38A0                     u5301 1636                     u5221 13C8  
                   u3710 1DF6                     u4430 402E                     u3390 3056  
                   u4190 3B40                     u4510 292C                     u3630 2496  
                   u3550 239E                     u3470 2210                     u2910 1926  
                   u4270 3752                     u4350 2C4E                     u5070 11BA  
                   u5150 38C0                     u5310 16CC                     u5230 1446  
                   u3711 1DF2                     u4431 402A                     u3391 3052  
                   u4191 3B3C                     u4511 2928                     u3631 2492  
                   u3551 239A                     u3471 220C                     u2911 1922  
                   u4255 3728                     u4351 2C4A                     u5071 11B6  
                   u5151 38BC                     u5311 16C8                     u5231 1442  
                   u3800 20A4                     u3720 1E36                     u5400 3D56  
                   u4440 405C                     u4600 2AFC                     u4520 293A  
                   u3640 24AA                     u3560 23C8                     u3480 2220  
                   u2920 1936                     u4360 2C72                     u4280 3FB0  
                   u5080 1216                     u5160 38D2                     u5320 177A  
                   u5240 146A                     u3801 20A0                     u3721 1E32  
                   u4441 4058                     u4601 2AF8                     u4521 2936  
                   u3641 24A6                     u3561 23C4                     u3481 221C  
                   u2921 1932                     u4345 2BF6                     u5081 1212  
                   u5161 38CE                     u5321 1776                     u5241 1466  
                   u3810 20D2                     u3730 1E48                     u4450 42F2  
                   u5410 3D66                     u5090 3230                     u4530 2A64  
                   u3650 24C4                     u3570 23EC                     u3490 2264  
                   u2930 1978                     u4370 2C8E                     u4346 2C00  
                   u4290 3FC2                     u4610 069E                     u5170 38FA  
                   u5330 17DE                     u5250 14A6                     u3811 20CE  
                   u3731 1E44                     u4451 42EE                     u5411 3D62  
                   u5091 322C                     u4531 2A60                     u3651 24C0  
                   u3571 23E8                     u3491 2260                     u2931 1974  
                   u4371 2C8A                     u4347 2C10                     u4291 3FBE  
                   u4611 069A                     u5171 38F6                     u5331 17DA  
                   u5251 14A2                     u3820 20E8                     u3740 1E58  
                   u5500 2EEE                     u5420 2D6E                     u2860 3930  
                   u4540 2A82                     u4460 289A                     u3900 3A3A  
                   u3660 250C                     u3580 2402                     u2940 198E  
                   u4380 2CE2                     u4700 094A                     u4620 06EC  
                   u5340 187A                     u5260 154C                     u5180 1286  
                   u3821 20E4                     u3741 1E54                     u5501 2EEA  
                   u5421 2D6A                     u2861 392C                     u4541 2A7E  
                   u4461 2894                     u3901 3A36                     u3661 2508  
                   u3581 23FE                     u2941 198A                     u4365 2C68  
                   u4701 0946                     u4621 06E8                     u5341 1876  
                   u5261 1548                     u5181 1282                     u3830 20FC  
                   u3750 1E8E                     u5510 2EFC                     u5430 2D7C  
                   u2870 3942                     u4550 2A9C                     u4470 289C  
                   u3910 3A58                     u3670 253C                     u3590 2420  
                   u2950 19A0                     u4390 2CFE                     u4710 09BA  
                   u4630 06FA                     u5270 157E                     u5190 1354  
                   u3831 20F8                     u3751 1E8A                     u5511 2EF8  
                   u5431 2D78                     u5407 3D4C                     u2871 393E  
                   u4551 2A98                     u3911 3A54                     u3671 2538  
                   u3591 241C                     u2951 199C                     u4391 2CFA  
                   u4287 3FA6                     u4711 09B6                     u4631 06F6  
                   u5271 157A                     u5191 1350                     u3840 2116  
                   u3760 1E9E                     u5440 2DD8                     u5520 3EAA  
                   u2880 396A                     u4560 2AB6                     u4480 28B2  
                   u3920 3A74                     u3680 256A                     u2960 19B0  
                   u4800 0ADC                     u4720 09DE                     u4640 070C  
                   u5280 15C0                     u5360 3F5E                     u5600 27A6  
                   u3841 2112                     u3761 1E9A                     u5441 2DD4  
                   u5521 3EA6                     u2881 3966                     u4561 2AB2  
                   u4481 28AE                     u3921 3A70                     u3681 2566  
                   u2961 19AC                     u4385 2CD8                     u4801 0AD8  
                   u4721 09DA                     u4641 0708                     u5281 15BC  
                   u5361 3F5A                     u5601 27A2                     u3850 215E  
                   u3770 2018                     u3690 1DD4                     u5450 2E2E  
                   u5370 3CDA                     u2890 39A0                     u4570 2AC4  
                   u4490 28E2                     u3930 3A9A                     u2970 19EC  
                   u4810 0AEA                     u4730 09F2                     u4650 0754  
                   u5290 1616                     u5610 27E4                     u5530 25B0  
                   u3851 215A                     u3691 1DD0                     u5451 2E2A  
                   u5355 4306                     u5371 3CD6                     u2891 399C  
                   u4571 2AC0                     u4491 28DE                     u3931 3A96  
                   u2971 19E8                     u4811 0AE6                     u4731 09EE  
                   u4651 0750                     u5291 1612                     u5611 27DC  
                   u5531 25AC                     u3860 218C                     u3780 2072  
                   u5460 2E78                     u5356 4308                     u5380 3CF6  
                   u4580 2AD6                     u3940 3B80                     u2980 19FA  
                   u4900 0E1C                     u4820 0B00                     u4740 0A14  
                   u4660 0780                     u5540 2608                     u5700 419E  
                   u3861 2188                     u3781 206E                     u5461 2E74  
                   u5381 3CF2                     u4581 2AD2                     u3941 3B7C  
                   u2981 19F6                     u4901 0E18                     u4821 0AFC  
                   u4741 0A10                     u4661 077C                     u5541 2604  
                   u5701 419A                     u3870 21C6                     u3790 2092  
                   u5470 2E96                     u5390 3D2A                     u4590 2AE4  
                   u3950 3B9A                     u2990 1A68                     u4910 0E42  
                   u4830 0B0E                     u4750 0A3C                     u4670 080A  
                   u5630 2808                     u5550 263A                     u3871 21C2  
                   u3791 208E                     u3775 200E                     u5471 2E92  
                   u4591 2AE0                     u3951 3B96                     u2991 1A64  
                   u4911 0E3E                     u4831 0B0A                     u4751 0A38  
                   u4671 0806                     u5631 2800                     u5551 2636  
                   u5480 2EA6                     u3880 39FA                     u3960 3BB4  
                   u4920 0EE4                     u4840 0B38                     u4760 0A52  
                   u4680 0836                     u5560 2692                     u5481 2EA2  
                   u3881 39F6                     u3961 3BB0                     u4921 0EE0  
                   u4841 0B34                     u4761 0A4E                     u4681 0832  
                   u5561 268E                     u5490 2EB4                     u3890 3A14  
                   u3970 3BD2                     u4930 0EF6                     u4850 0C7E  
                   u4770 0A6E                     u4690 08B8                     u5650 282E  
                   u5570 26C4                     u5491 2EB0                     u3891 3A10  
                   u3971 3BCE                     u4931 0EF2                     u4851 0C7A  
                   u4771 0A6A                     u4691 08B4                     u5651 2826  
                   u5571 26C0                     u3980 3BE8                     u4940 0F08  
                   u4860 0CE4                     u4780 0AA4                     u5628 27E6  
                   u5580 271C                     u5397 3D20                     u3981 3BE4  
                   u4941 0F04                     u4861 0CE0                     u4781 0AA0  
                   u5717 3D82                     u5581 2718                     u3990 3C0C  
                   u4950 0F16                     u4870 0D2A                     u4790 0ACA  
                   u5670 2856                     u5590 274E                     u5807 3E96  
                   u3991 3C08                     u4951 0F12                     u4871 0D26  
                   u4791 0AC6                     u5727 3D9C                     u5671 284E  
                   u5591 274A                     u4960 0F30                     u4880 0D38  
                   u5648 280A                     u4961 0F2C                     u4881 0D34  
                   u5737 3DBE                     u4970 0F3E                     u4890 0DD2  
                   u5690 3DB6                     u4971 0F3A                     u4891 0DCE  
                   u5747 3DCC                     u5691 3DB2                     u4980 0F96  
                   u5668 2830                     u4981 0F92                     u5757 3DDE  
                   u4990 1066                     u4991 1062                     u5767 3DF0  
                   u5688 2858                     u5777 3DFE                     u5787 430A  
                   u5797 37D4                     abs@a 0013                     _dbuf 0100  
                   _atoi 31FC                     _main 4178                     _dtoa 286A  
                   _prec 0090                     _nout 008C                     pad@i 0018  
                   pad@p 0015                     fsr1h 000FE2                     fsr2h 000FDA  
                   indf1 000FE7                     indf2 000FDF                     fsr1l 000FE1  
                   pad@w 001A                     fsr2l 000FD9            ___fpclassifyf 3666  
                   prodh 000FF4                     prodl 000FF3                     start 0000  
        ___fldiv@new_exp 0012             ___param_bank 000000                    ??_abs 0015  
                  ??_pad 0017            _VoltageBuffer 0150            ___fltol@sign1 0009  
        __end_of___aodiv 3098                    ?_atoi 0008          __end_of___fladd 1DBA  
                  ?_main 0001                    ?_dtoa 001C          __end_of___aomod 31FC  
        __end_of___fldiv 257E          __end_of___awdiv 3AAC          __end_of___flneg 4222  
                  STR_10 0640                    STR_11 0657                    STR_20 066F  
                  STR_12 0648                    STR_13 0601                    STR_23 0673  
                  STR_15 0663                    STR_16 066B                    STR_25 0673  
                  STR_19 0667          __end_of___awmod 3C1E          __end_of___flmul 21E4  
        __end_of___flsub 40F4          __end_of___fltol 3562          ___awdiv@divisor 0003  
        ___awdiv@counter 0005             vfpfcnvrt@fmt 0074                    _PORTC 000F82  
                  _PORTD 000F83                    _TRISB 000F93                    _TRISC 000F94  
                  _TRISD 000F95          __end_of_lcd_cmd 3848                    _flags 007E  
                  _fputc 391E                    _fputs 40F4          __end_of_isdigit 425A  
                  atoi@n 0010                    pad@fp 0011                    atoi@s 0008  
                  _width 008E                    _putch 433E                    dtoa@d 001E  
                  dtoa@i 003E                    dtoa@n 0036                    dtoa@p 0030  
                  dtoa@s 0034                    dtoa@w 0032          __end_of_isspace 4068  
        __end_of_set_bit 42FC          __end_of_isupper 41EA                    tablat 000FF5  
                  status 000FD8          __end_of_sprintf 4016           ?___fpclassifyf 0001  
        __end_of_tolower 40AE          __end_of_strncmp 391E             lcd_write@end 000A  
           lcd_write@col 0007             lcd_write@lin 000B             lcd_write@str 0008  
        __initialization 4290             __end_of_atoi 3352             __end_of_main 41B2  
           __end_of_dtoa 2B4A          ??_lcd_send_byte 0006                   ??_atoi 000A  
                 ??_main 007E                   ??_dtoa 0026            __activetblptr 000002  
                 _ADCON0 000FC2                   _ADCON1 000FC1                   _ADCON2 000FC0  
                 ?_fputc 0001                   ?_fputs 000A                   _ADRESH 000FC4  
                 _ADRESL 000FC3         ___awdiv@dividend 0001                   ?_putch 0001  
                 _OSCCON 000FD3               _VdigBuffer 009C            vfpfcnvrt@done 00D4  
       __end_of___xxtofl 2F10         __end_of_lcd_LEDS 345C         __end_of_conv_AN0 3F06  
           vfprintf@cfmt 007C         __end_of_lcd_init 3E06                   ___flge 3562  
                 ___fleq 3C1E                ??___aodiv 0011                ??___fladd 0009  
              ??___aomod 0011                   ___wmul 42B6                ??___fldiv 0009  
              ??___awdiv 0005                ??___flneg 0005                ??___awmod 0005  
              ??___flmul 0017                ??___flsub 0030                ??___fltol 0005  
                 _efgtoa 0678                   _floorf 2B4A                   clear_0 4296  
                 clear_1 42A2         ___awdiv@quotient 0007          ___awmod@divisor 0003  
                 isa$std 000001          ___awmod@counter 0005                   pad@buf 0013  
              ??_lcd_cmd 0003                   dtoa@fp 001C                   _strcpy 3F68  
                 _strlen 425A                   fputc@c 0001                   fputs@c 000E  
                 fputs@i 000F                   fputs@s 000A                ??_isdigit 0003  
        ___fpclassifyf@e 0009          ___fpclassifyf@u 000B          ___fpclassifyf@x 0001  
           __mediumconst 0000                ??_isspace 0003                ??_set_bit 0002  
                 tblptrh 000FF7                ??_isupper 0003                   tblptrl 000FF6  
                 tblptru 000FF8                   putch@c 0001         __end_of_vfprintf 3F68  
              ??_sprintf 007E                ??_tolower 0009                ??_strncmp 0007  
             ___flge@ff1 0028               ___flge@ff2 002C          ??___fpclassifyf 0005  
           ___xxtofl@arg 000B             ___xxtofl@exp 000A             ___xxtofl@val 0001  
             ___fleq@ff1 0001               ___fleq@ff2 0005               __accesstop 0080  
__end_of__initialization 42AC               ___flneg@f1 0001            ___rparam_used 000001  
             ___fltol@f1 0001           __pcstackCOMRAM 0001            __end_of_fputc 39E8  
          __end_of_fputs 4138            __end_of_putch 4340                  ??_fputc 0005  
                ??_fputs 000E                  ??_putch 0001               __pbssBANK0 0080  
             __pbssBANK1 0100              _VdigADC_AN0 009A                  ?___flge 0028  
                ?___fleq 0001               _lcd_SENSOR 3E06                  ?___wmul 0001  
                ?_efgtoa 0034            _logic_CONTROL 257E                  ?_floorf 001A  
                ?_strcpy 0001                  ?_strlen 0001               _config_ADC 431A  
              ?___xxtofl 0001                ?_lcd_LEDS 0001       lcd_send_byte@level 0006  
                _OSCTUNE 000F9B                ?_conv_AN0 0001                ?_lcd_init 0001  
                __Hparam 0000                  __Lparam 0000        __end_of_config_IO 4334  
                ___aodiv 2F10                  ___fladd 18FA           ?_logic_CONTROL 0001  
                ___aomod 3098                  ___fldiv 21E4                  ___awdiv 39E8  
                ___flneg 41EA                  ___awmod 3B6E                  ___flmul 1DBA  
                ___flsub 40AE                  ___fltol 345C        __end_of_lcd_write 3D68  
              ?_vfprintf 00DE              set_bit@comp 0001             __psmallconst 0600  
                __pcinit 4290                  __ramtop 0600                  __ptext0 4178  
                __ptext1 257E                  __ptext2 3D68                  __ptext3 3E06  
                __ptext4 3352                  __ptext5 3FC4                  __ptext6 3F06  
                __ptext7 1262                  __ptext8 3848                  __ptext9 0678  
                _lcd_cmd 3764                  _isdigit 4222               ??___xxtofl 0005  
       ___awmod@dividend 0001                  _isspace 4016               ??_lcd_LEDS 007E  
                _set_bit 42DC                  _isupper 41B2                  efgtoa@c 003A  
                efgtoa@d 0052                  efgtoa@e 006A                  efgtoa@f 0036  
                efgtoa@g 0066                  efgtoa@h 005C                  efgtoa@i 0064  
                efgtoa@l 0060                  efgtoa@m 004C                  efgtoa@n 006C  
                efgtoa@p 0056                  efgtoa@t 0046                  efgtoa@u 006E  
                efgtoa@w 0058                  atoi@neg 000E               ??_conv_AN0 0028  
                _sprintf 3FC4                  _tolower 4068               ??_lcd_init 0005  
                _strncmp 3848     end_of_initialization 42AC                  floorf@e 0028  
                floorf@m 0024                  floorf@u 002A                  floorf@x 001A  
                fputc@fp 0003            __Lmediumconst 0000                  fputs@fp 000C  
      __end_of_vfpfcnvrt 18FA               efgtoa@mode 005B               efgtoa@sign 0054  
            ?_lcd_SENSOR 0001                  postdec2 000FDD                  postinc0 000FEE  
                postinc1 000FE6                  postinc2 000FDE               ??_vfprintf 007C  
  __end_of_lcd_send_byte 431A                  strcpy@d 0009                  strlen@a 0003  
                strcpy@s 0007                  strlen@s 0001                _PORTBbits 000F81  
              _PORTCbits 000F82                _PORTDbits 000F83                _PORTEbits 000F84  
            ___fladd@grs 0010              ?_config_ADC 0001            ___xxtofl@sign 0009  
              _TRISEbits 000F96               lcd_cmd@cmd 0004              ___fldiv@grs 0014  
            ___fldiv@rem 000D              ___flmul@grs 001C              _Voltage_AN0 0088  
          ??_config_FOSC 0001          ??_logic_CONTROL 0034           __end_of___flge 3666  
         __end_of___fleq 3CC8                _Buffer_D1 00C4                _Buffer_D2 00BC  
              _Buffer_D3 00B4                _Buffer_D4 00AC              vfpfcnvrt@ap 0076  
            vfpfcnvrt@ct 00DA              vfpfcnvrt@fp 0072              vfpfcnvrt@ll 00CC  
         __end_of___wmul 42DC           __end_of_efgtoa 1262           __end_of_floorf 2D5C  
             floorf@F526 0080           __end_of_strcpy 3FC4           __end_of_strlen 4290  
    start_initialization 4290              __end_of_abs 4178              __end_of_pad 3B6E  
  __end_of___fpclassifyf 3764              vfprintf@fmt 00E0                 ??___flge 0030  
               ??___fleq 0009      __end_of_config_FOSC 433E                 ??___wmul 0005  
               ??_efgtoa 003B                 ??_floorf 001E                 ??_strcpy 0005  
               ??_strlen 0003                ___fladd@a 0005                ___fladd@b 0001  
              ___fldiv@a 0005                ___fldiv@b 0001                ___flmul@a 0013  
              ___flmul@b 000F              __pbssCOMRAM 007E                ___flsub@a 002C  
              ___flsub@b 0028            __pcstackBANK0 00CC         ___aodiv@dividend 0001  
            _efgtoa$1165 0042              _efgtoa$1166 0044              _efgtoa$1158 0040  
              _dtoa$1134 002E                 ?___aodiv 0001                 ?___fladd 0001  
               ?___aomod 0001                 ?___fldiv 0001                 ?___awdiv 0001  
       ___aodiv@quotient 0013                 ?___flneg 0001                 ?___awmod 0001  
               ?___flmul 000F                 ?___flsub 0028                 ?___fltol 0001  
              _config_IO 4328        lcd_send_byte@data 0005                 ?_lcd_cmd 0001  
              _lcd_write 3CC8              __smallconst 0600                 ?_isdigit 0001  
               ?_isspace 0001                 ?_set_bit 0001                 ?_isupper 0001  
             set_bit@cmd 0002                 ?_sprintf 00E4                 ?_tolower 0007  
               ?_strncmp 0001           ___wmul@product 0005              _config_FOSC 4334  
           ??_lcd_SENSOR 007E                _vfpfcnvrt 1262               ?_config_IO 0001  
             _ADCON0bits 000FC2               ?_lcd_write 0007        ___wmul@multiplier 0001  
              lcd_init@i 0006             ??_config_ADC 0001             _isspace$1247 0007  
             vfpfcnvrt@c 00DD               vfpfcnvrt@f 00D6       __end_of_lcd_SENSOR 3E94  
               __Hrparam 0000               vfprintf@ap 00E2                 __Lrparam 0000  
             vfprintf@fp 00DE       __end_of_config_ADC 4328               ?_vfpfcnvrt 0072  
        ___aodiv@divisor 0009          ___aodiv@counter 0011       ___fpclassifyf@F465 0084  
             sprintf@fmt 00E6                 ___xxtofl 2D5C                 _lcd_LEDS 3352  
               __ptext10 4068                 __ptext11 41B2                 __ptext20 3C1E  
               __ptext12 3F68                 __ptext21 21E4                 __ptext13 2B4A  
               __ptext30 4138                 __ptext22 3B6E                 __ptext14 3666  
               __ptext31 3098                 __ptext23 39E8                 __ptext15 345C  
               __ptext40 42DC                 __ptext32 2F10                 __ptext24 286A  
               __ptext16 40AE                 __ptext41 3E94                 __ptext33 31FC  
               __ptext25 3AAC                 __ptext17 18FA                 __ptext42 2D5C  
               __ptext34 4016                 __ptext26 425A                 __ptext18 41EA  
               __ptext43 1DBA                 __ptext35 4222                 __ptext27 40F4  
               __ptext19 3562                 __ptext44 4328                 __ptext36 42B6  
               __ptext28 391E                 __ptext45 4334                 __ptext37 3CC8  
               __ptext29 433E                 __ptext46 431A                 __ptext38 42FC  
               __ptext39 3764                 _conv_AN0 3E94                 _lcd_init 3D68  
             strcpy@dest 0001                 efgtoa@fp 0034                 efgtoa@ne 004A  
               efgtoa@pp 0048                 efgtoa@ou 004E                 isa$xinst 000000  
  __end_of_logic_CONTROL 286A                 _vfprintf 3F06              ??_config_IO 0001  
            ??_lcd_write 000A         ___aomod@dividend 0001                 isdigit@c 0001  
              sprintf@ap 00EC                 isspace@c 0001                strcpy@src 0003  
               isupper@c 0001                strncmp@_l 0001                strncmp@_r 0003  
            efgtoa@nmode 005A          ___aomod@divisor 0009              ??_vfpfcnvrt 0078  
        ___aomod@counter 0011            _lcd_send_byte 42FC                 sprintf@f 00EE  
               tolower@c 0007                 sprintf@s 00E4                 strncmp@l 0008  
               strncmp@n 0005                 strncmp@r 000A            ___fladd@signs 000D  
           ___aodiv@sign 0012             ___fladd@aexp 000E             ___fladd@bexp 000F  
           ?_config_FOSC 0001             ___aomod@sign 0012  
