

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sun May 29 22:11:35 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text45,global,reloc=2,class=CODE,delta=1
    58                           	psect	text46,global,reloc=2,class=CODE,delta=1
    59                           	psect	text47,global,reloc=2,class=CODE,delta=1
    60                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    61                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    62                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    63                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    64  0000                     
    65                           ; Version 2.40
    66                           ; Generated 17/11/2021 GMT
    67                           ; 
    68                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    69                           ; All rights reserved.
    70                           ; 
    71                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    72                           ; 
    73                           ; Redistribution and use in source and binary forms, with or without modification, are
    74                           ; permitted provided that the following conditions are met:
    75                           ; 
    76                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    77                           ;        conditions and the following disclaimer.
    78                           ; 
    79                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    80                           ;        of conditions and the following disclaimer in the documentation and/or other
    81                           ;        materials provided with the distribution. Publication is not required when
    82                           ;        this file is used in an embedded application.
    83                           ; 
    84                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    85                           ;        software without specific prior written permission.
    86                           ; 
    87                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    88                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    89                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    90                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    91                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    92                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    93                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    94                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    95                           ; 
    96                           ; 
    97                           ; Code-generator required, PIC18F4520 Definitions
    98                           ; 
    99                           ; SFR Addresses
   100  0000                     _ADRESL	set	4035
   101  0000                     _ADRESH	set	4036
   102  0000                     _PORTDbits	set	3971
   103  0000                     _PORTCbits	set	3970
   104  0000                     _ADCON0bits	set	4034
   105  0000                     _PORTBbits	set	3969
   106  0000                     _PORTC	set	3970
   107  0000                     _TRISB	set	3987
   108  0000                     _OSCTUNE	set	3995
   109  0000                     _OSCCON	set	4051
   110  0000                     _ADCON2	set	4032
   111  0000                     _ADCON1	set	4033
   112  0000                     _ADCON0	set	4034
   113  0000                     _TRISEbits	set	3990
   114  0000                     _TRISD	set	3989
   115  0000                     _TRISC	set	3988
   116  0000                     _PORTEbits	set	3972
   117  0000                     _PORTD	set	3971
   118                           
   119                           	psect	smallconst
   120  000600                     __psmallconst:
   121                           	callstack 0
   122  000600  00                 	db	0
   123  000601                     STR_13:
   124  000601  20                 	db	32
   125  000602  20                 	db	32
   126  000603  20                 	db	32
   127  000604  20                 	db	32
   128  000605  20                 	db	32
   129  000606  20                 	db	32
   130  000607  20                 	db	32
   131  000608  20                 	db	32
   132  000609  20                 	db	32
   133  00060A  20                 	db	32
   134  00060B  20                 	db	32
   135  00060C  20                 	db	32
   136  00060D  20                 	db	32
   137  00060E  20                 	db	32
   138  00060F  20                 	db	32
   139  000610  00                 	db	0
   140  000611                     STR_2:
   141  000611  25                 	db	37
   142  000612  30                 	db	48	;'0'
   143  000613  2E                 	db	46
   144  000614  32                 	db	50	;'2'
   145  000615  66                 	db	102	;'f'
   146  000616  20                 	db	32
   147  000617  56                 	db	86	;'V'
   148  000618  20                 	db	32
   149  000619  20                 	db	32
   150  00061A  20                 	db	32
   151  00061B  20                 	db	32
   152  00061C  20                 	db	32
   153  00061D  20                 	db	32
   154  00061E  20                 	db	32
   155  00061F  00                 	db	0
   156  000620                     STR_1:
   157  000620  25                 	db	37
   158  000621  30                 	db	48	;'0'
   159  000622  31                 	db	49	;'1'
   160  000623  64                 	db	100	;'d'
   161  000624  20                 	db	32
   162  000625  44                 	db	68	;'D'
   163  000626  45                 	db	69	;'E'
   164  000627  43                 	db	67	;'C'
   165  000628  20                 	db	32
   166  000629  20                 	db	32
   167  00062A  20                 	db	32
   168  00062B  20                 	db	32
   169  00062C  20                 	db	32
   170  00062D  20                 	db	32
   171  00062E  00                 	db	0
   172  00062F                     STR_4:
   173  00062F  56                 	db	86	;'V'
   174  000630  6F                 	db	111	;'o'
   175  000631  6C                 	db	108	;'l'
   176  000632  74                 	db	116	;'t'
   177  000633  3A                 	db	58	;':'
   178  000634  20                 	db	32
   179  000635  20                 	db	32
   180  000636  20                 	db	32
   181  000637  00                 	db	0
   182  000638                     STR_3:
   183  000638  41                 	db	65	;'A'
   184  000639  44                 	db	68	;'D'
   185  00063A  43                 	db	67	;'C'
   186  00063B  3A                 	db	58	;':'
   187  00063C  20                 	db	32
   188  00063D  20                 	db	32
   189  00063E  20                 	db	32
   190  00063F  00                 	db	0
   191  000640                     STR_10:
   192  000640  20                 	db	32
   193  000641  4C                 	db	76	;'L'
   194  000642  45                 	db	69	;'E'
   195  000643  44                 	db	68	;'D'
   196  000644  20                 	db	32
   197  000645  32                 	db	50	;'2'
   198  000646  3A                 	db	58	;':'
   199  000647  00                 	db	0
   200  000648                     STR_12:
   201  000648  20                 	db	32
   202  000649  4C                 	db	76	;'L'
   203  00064A  45                 	db	69	;'E'
   204  00064B  44                 	db	68	;'D'
   205  00064C  20                 	db	32
   206  00064D  34                 	db	52	;'4'
   207  00064E  3A                 	db	58	;':'
   208  00064F  00                 	db	0
   209  000650                     STR_9:
   210  000650  4C                 	db	76	;'L'
   211  000651  45                 	db	69	;'E'
   212  000652  44                 	db	68	;'D'
   213  000653  20                 	db	32
   214  000654  31                 	db	49	;'1'
   215  000655  3A                 	db	58	;':'
   216  000656  00                 	db	0
   217  000657                     STR_11:
   218  000657  4C                 	db	76	;'L'
   219  000658  45                 	db	69	;'E'
   220  000659  44                 	db	68	;'D'
   221  00065A  20                 	db	32
   222  00065B  33                 	db	51	;'3'
   223  00065C  3A                 	db	58	;':'
   224  00065D  00                 	db	0
   225  00065E                     STR_5:
   226  00065E  25                 	db	37
   227  00065F  30                 	db	48	;'0'
   228  000660  31                 	db	49	;'1'
   229  000661  64                 	db	100	;'d'
   230  000662  00                 	db	0
   231  000663                     STR_15:
   232  000663  49                 	db	73	;'I'
   233  000664  4E                 	db	78	;'N'
   234  000665  46                 	db	70	;'F'
   235  000666  00                 	db	0
   236  000667                     STR_19:
   237  000667  4E                 	db	78	;'N'
   238  000668  41                 	db	65	;'A'
   239  000669  4E                 	db	78	;'N'
   240  00066A  00                 	db	0
   241  00066B                     STR_16:
   242  00066B  69                 	db	105	;'i'
   243  00066C  6E                 	db	110	;'n'
   244  00066D  66                 	db	102	;'f'
   245  00066E  00                 	db	0
   246  00066F                     STR_20:
   247  00066F  6E                 	db	110	;'n'
   248  000670  61                 	db	97	;'a'
   249  000671  6E                 	db	110	;'n'
   250  000672  00                 	db	0
   251  000673                     STR_23:
   252  000673  6C                 	db	108	;'l'
   253  000674  66                 	db	102	;'f'
   254  000675  00                 	db	0
   255  000676  00                 	db	0	; dummy byte at the end
   256  0000                     
   257                           ; #config settings
   258                           
   259                           	psect	cinit
   260  004294                     __pcinit:
   261                           	callstack 0
   262  004294                     start_initialization:
   263                           	callstack 0
   264  004294                     __initialization:
   265                           	callstack 0
   266                           
   267                           ; Clear objects allocated to BANK1 (96 bytes)
   268  004294  EE01  F000         	lfsr	0,__pbssBANK1
   269  004298  0E60               	movlw	96
   270  00429A                     clear_0:
   271  00429A  6AEE               	clrf	postinc0,c
   272  00429C  06E8               	decf	wreg,f,c
   273  00429E  E1FD               	bnz	clear_0
   274                           
   275                           ; Clear objects allocated to BANK0 (76 bytes)
   276  0042A0  EE00  F080         	lfsr	0,__pbssBANK0
   277  0042A4  0E4C               	movlw	76
   278  0042A6                     clear_1:
   279  0042A6  6AEE               	clrf	postinc0,c
   280  0042A8  06E8               	decf	wreg,f,c
   281  0042AA  E1FD               	bnz	clear_1
   282                           
   283                           ; Clear objects allocated to COMRAM (2 bytes)
   284  0042AC  6A7F               	clrf	(__pbssCOMRAM+1)& (0+255),c
   285  0042AE  6A7E               	clrf	__pbssCOMRAM& (0+255),c
   286  0042B0                     end_of_initialization:
   287                           	callstack 0
   288  0042B0                     __end_of__initialization:
   289                           	callstack 0
   290  0042B0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   291  0042B2  6EF8               	movwf	tblptru,c
   292  0042B4  0100               	movlb	0
   293  0042B6  EFBC  F020         	goto	_main	;jump to C main() function
   294                           
   295                           	psect	bssCOMRAM
   296  00007E                     __pbssCOMRAM:
   297                           	callstack 0
   298  00007E                     _flags:
   299                           	callstack 0
   300  00007E                     	ds	2
   301                           
   302                           	psect	bssBANK0
   303  000080                     __pbssBANK0:
   304                           	callstack 0
   305  000080                     floorf@F526:
   306                           	callstack 0
   307  000080                     	ds	4
   308  000084                     ___fpclassifyf@F465:
   309                           	callstack 0
   310  000084                     	ds	4
   311  000088                     _Voltage_AN0:
   312                           	callstack 0
   313  000088                     	ds	4
   314  00008C                     _nout:
   315                           	callstack 0
   316  00008C                     	ds	2
   317  00008E                     _width:
   318                           	callstack 0
   319  00008E                     	ds	2
   320  000090                     _prec:
   321                           	callstack 0
   322  000090                     	ds	2
   323  000092                     _D4:
   324                           	callstack 0
   325  000092                     	ds	2
   326  000094                     _D3:
   327                           	callstack 0
   328  000094                     	ds	2
   329  000096                     _D2:
   330                           	callstack 0
   331  000096                     	ds	2
   332  000098                     _D1:
   333                           	callstack 0
   334  000098                     	ds	2
   335  00009A                     _VdigADC_AN0:
   336                           	callstack 0
   337  00009A                     	ds	2
   338  00009C                     _VdigBuffer:
   339                           	callstack 0
   340  00009C                     	ds	16
   341  0000AC                     _Buffer_D4:
   342                           	callstack 0
   343  0000AC                     	ds	8
   344  0000B4                     _Buffer_D3:
   345                           	callstack 0
   346  0000B4                     	ds	8
   347  0000BC                     _Buffer_D2:
   348                           	callstack 0
   349  0000BC                     	ds	8
   350  0000C4                     _Buffer_D1:
   351                           	callstack 0
   352  0000C4                     	ds	8
   353                           
   354                           	psect	bssBANK1
   355  000100                     __pbssBANK1:
   356                           	callstack 0
   357  000100                     _dbuf:
   358                           	callstack 0
   359  000100                     	ds	80
   360  000150                     _VoltageBuffer:
   361                           	callstack 0
   362  000150                     	ds	16
   363                           
   364                           	psect	cstackBANK0
   365  0000CC                     __pcstackBANK0:
   366                           	callstack 0
   367  0000CC                     vfpfcnvrt@ll:
   368                           	callstack 0
   369                           
   370                           ; 8 bytes @ 0x0
   371  0000CC                     	ds	8
   372  0000D4                     vfpfcnvrt@done:
   373                           	callstack 0
   374                           
   375                           ; 2 bytes @ 0x8
   376  0000D4                     	ds	2
   377  0000D6                     vfpfcnvrt@f:
   378                           	callstack 0
   379                           
   380                           ; 4 bytes @ 0xA
   381  0000D6                     	ds	4
   382  0000DA                     vfpfcnvrt@ct:
   383                           	callstack 0
   384                           
   385                           ; 3 bytes @ 0xE
   386  0000DA                     	ds	3
   387  0000DD                     vfpfcnvrt@c:
   388                           	callstack 0
   389                           
   390                           ; 1 bytes @ 0x11
   391  0000DD                     	ds	1
   392  0000DE                     ?_vfprintf:
   393                           	callstack 0
   394  0000DE                     vfprintf@fp:
   395                           	callstack 0
   396                           
   397                           ; 2 bytes @ 0x12
   398  0000DE                     	ds	2
   399  0000E0                     vfprintf@fmt:
   400                           	callstack 0
   401                           
   402                           ; 2 bytes @ 0x14
   403  0000E0                     	ds	2
   404  0000E2                     vfprintf@ap:
   405                           	callstack 0
   406                           
   407                           ; 2 bytes @ 0x16
   408  0000E2                     	ds	2
   409  0000E4                     ?_sprintf:
   410                           	callstack 0
   411  0000E4                     sprintf@s:
   412                           	callstack 0
   413                           
   414                           ; 2 bytes @ 0x18
   415  0000E4                     	ds	2
   416  0000E6                     sprintf@fmt:
   417                           	callstack 0
   418                           
   419                           ; 2 bytes @ 0x1A
   420  0000E6                     	ds	6
   421  0000EC                     sprintf@ap:
   422                           	callstack 0
   423                           
   424                           ; 2 bytes @ 0x20
   425  0000EC                     	ds	2
   426  0000EE                     sprintf@f:
   427                           	callstack 0
   428                           
   429                           ; 11 bytes @ 0x22
   430  0000EE                     	ds	11
   431                           
   432                           	psect	cstackCOMRAM
   433  000001                     __pcstackCOMRAM:
   434                           	callstack 0
   435  000001                     ?_strlen:
   436                           	callstack 0
   437  000001                     ?___fpclassifyf:
   438                           	callstack 0
   439  000001                     ?_isupper:
   440                           	callstack 0
   441  000001                     ?_isdigit:
   442                           	callstack 0
   443  000001                     ?_strncmp:
   444                           	callstack 0
   445  000001                     ?_isspace:
   446                           	callstack 0
   447  000001                     ?___wmul:
   448                           	callstack 0
   449  000001                     ?___awdiv:
   450                           	callstack 0
   451  000001                     ?___awmod:
   452                           	callstack 0
   453  000001                     ?___fladd:
   454                           	callstack 0
   455  000001                     ?___fldiv:
   456                           	callstack 0
   457  000001                     ?___flneg:
   458                           	callstack 0
   459  000001                     ?___fltol:
   460                           	callstack 0
   461  000001                     ?___xxtofl:
   462                           	callstack 0
   463  000001                     ?___aodiv:
   464                           	callstack 0
   465  000001                     ?___aomod:
   466                           	callstack 0
   467  000001                     set_bit@comp:
   468                           	callstack 0
   469  000001                     ___wmul@multiplier:
   470                           	callstack 0
   471  000001                     ___awdiv@dividend:
   472                           	callstack 0
   473  000001                     ___awmod@dividend:
   474                           	callstack 0
   475  000001                     isdigit@c:
   476                           	callstack 0
   477  000001                     isspace@c:
   478                           	callstack 0
   479  000001                     isupper@c:
   480                           	callstack 0
   481  000001                     fputc@c:
   482                           	callstack 0
   483  000001                     strcpy@dest:
   484                           	callstack 0
   485  000001                     strlen@s:
   486                           	callstack 0
   487  000001                     strncmp@_l:
   488                           	callstack 0
   489  000001                     ___fleq@ff1:
   490                           	callstack 0
   491  000001                     ___flneg@f1:
   492                           	callstack 0
   493  000001                     ___fltol@f1:
   494                           	callstack 0
   495  000001                     ___fladd@b:
   496                           	callstack 0
   497  000001                     ___fldiv@b:
   498                           	callstack 0
   499  000001                     ___xxtofl@val:
   500                           	callstack 0
   501  000001                     ___fpclassifyf@x:
   502                           	callstack 0
   503  000001                     ___aodiv@dividend:
   504                           	callstack 0
   505  000001                     ___aomod@dividend:
   506                           	callstack 0
   507                           
   508                           ; 8 bytes @ 0x0
   509  000001                     	ds	1
   510  000002                     set_bit@cmd:
   511                           	callstack 0
   512                           
   513                           ; 1 bytes @ 0x1
   514  000002                     	ds	1
   515  000003                     ??_lcd_cmd:
   516  000003                     ??_isupper:
   517  000003                     ??_isdigit:
   518  000003                     ??_isspace:
   519  000003                     ___wmul@multiplicand:
   520                           	callstack 0
   521  000003                     ___awdiv@divisor:
   522                           	callstack 0
   523  000003                     ___awmod@divisor:
   524                           	callstack 0
   525  000003                     fputc@fp:
   526                           	callstack 0
   527  000003                     strcpy@src:
   528                           	callstack 0
   529  000003                     strlen@a:
   530                           	callstack 0
   531  000003                     strncmp@_r:
   532                           	callstack 0
   533                           
   534                           ; 2 bytes @ 0x2
   535  000003                     	ds	1
   536  000004                     lcd_cmd@cmd:
   537                           	callstack 0
   538                           
   539                           ; 1 bytes @ 0x3
   540  000004                     	ds	1
   541  000005                     ??_lcd_init:
   542  000005                     ??_fputc:
   543  000005                     ??___fpclassifyf:
   544  000005                     ??_strcpy:
   545  000005                     ??___fltol:
   546  000005                     ??___xxtofl:
   547  000005                     lcd_send_byte@data:
   548                           	callstack 0
   549  000005                     ___awdiv@counter:
   550                           	callstack 0
   551  000005                     ___awmod@counter:
   552                           	callstack 0
   553  000005                     ___wmul@product:
   554                           	callstack 0
   555  000005                     strncmp@n:
   556                           	callstack 0
   557  000005                     ___fleq@ff2:
   558                           	callstack 0
   559  000005                     ___fladd@a:
   560                           	callstack 0
   561  000005                     ___fldiv@a:
   562                           	callstack 0
   563                           
   564                           ; 4 bytes @ 0x4
   565  000005                     	ds	1
   566  000006                     lcd_init@i:
   567                           	callstack 0
   568  000006                     lcd_send_byte@level:
   569                           	callstack 0
   570  000006                     ___awdiv@sign:
   571                           	callstack 0
   572  000006                     ___awmod@sign:
   573                           	callstack 0
   574                           
   575                           ; 1 bytes @ 0x5
   576  000006                     	ds	1
   577  000007                     ??_strncmp:
   578  000007                     ?_tolower:
   579                           	callstack 0
   580  000007                     lcd_write@col:
   581                           	callstack 0
   582  000007                     _isspace$1251:
   583                           	callstack 0
   584  000007                     ___awdiv@quotient:
   585                           	callstack 0
   586  000007                     strcpy@s:
   587                           	callstack 0
   588  000007                     tolower@c:
   589                           	callstack 0
   590                           
   591                           ; 2 bytes @ 0x6
   592  000007                     	ds	1
   593  000008                     ?_atoi:
   594                           	callstack 0
   595  000008                     lcd_write@str:
   596                           	callstack 0
   597  000008                     atoi@s:
   598                           	callstack 0
   599  000008                     strncmp@l:
   600                           	callstack 0
   601                           
   602                           ; 2 bytes @ 0x7
   603  000008                     	ds	1
   604  000009                     ??___fladd:
   605  000009                     ??___fldiv:
   606  000009                     ??_tolower:
   607  000009                     ??___fleq:
   608  000009                     ___fltol@sign1:
   609                           	callstack 0
   610  000009                     ___xxtofl@sign:
   611                           	callstack 0
   612  000009                     ___fpclassifyf@e:
   613                           	callstack 0
   614  000009                     strcpy@d:
   615                           	callstack 0
   616  000009                     ___aodiv@divisor:
   617                           	callstack 0
   618  000009                     ___aomod@divisor:
   619                           	callstack 0
   620                           
   621                           ; 8 bytes @ 0x8
   622  000009                     	ds	1
   623  00000A                     ??_atoi:
   624  00000A                     lcd_write@end:
   625                           	callstack 0
   626  00000A                     ___fltol@exp1:
   627                           	callstack 0
   628  00000A                     ___xxtofl@exp:
   629                           	callstack 0
   630  00000A                     fputs@s:
   631                           	callstack 0
   632  00000A                     strncmp@r:
   633                           	callstack 0
   634                           
   635                           ; 2 bytes @ 0x9
   636  00000A                     	ds	1
   637  00000B                     lcd_write@lin:
   638                           	callstack 0
   639  00000B                     ___xxtofl@arg:
   640                           	callstack 0
   641  00000B                     ___fpclassifyf@u:
   642                           	callstack 0
   643                           
   644                           ; 4 bytes @ 0xA
   645  00000B                     	ds	1
   646  00000C                     fputs@fp:
   647                           	callstack 0
   648                           
   649                           ; 2 bytes @ 0xB
   650  00000C                     	ds	1
   651  00000D                     ___fladd@signs:
   652                           	callstack 0
   653  00000D                     ___fldiv@rem:
   654                           	callstack 0
   655                           
   656                           ; 4 bytes @ 0xC
   657  00000D                     	ds	1
   658  00000E                     ___fladd@aexp:
   659                           	callstack 0
   660  00000E                     fputs@c:
   661                           	callstack 0
   662  00000E                     atoi@neg:
   663                           	callstack 0
   664                           
   665                           ; 2 bytes @ 0xD
   666  00000E                     	ds	1
   667  00000F                     ?___flmul:
   668                           	callstack 0
   669  00000F                     ___fladd@bexp:
   670                           	callstack 0
   671  00000F                     fputs@i:
   672                           	callstack 0
   673  00000F                     ___flmul@b:
   674                           	callstack 0
   675                           
   676                           ; 4 bytes @ 0xE
   677  00000F                     	ds	1
   678  000010                     ___fladd@grs:
   679                           	callstack 0
   680  000010                     atoi@n:
   681                           	callstack 0
   682                           
   683                           ; 2 bytes @ 0xF
   684  000010                     	ds	1
   685  000011                     ?_pad:
   686                           	callstack 0
   687  000011                     ___aodiv@counter:
   688                           	callstack 0
   689  000011                     ___aomod@counter:
   690                           	callstack 0
   691  000011                     ___fldiv@sign:
   692                           	callstack 0
   693  000011                     pad@fp:
   694                           	callstack 0
   695                           
   696                           ; 2 bytes @ 0x10
   697  000011                     	ds	1
   698  000012                     ___aodiv@sign:
   699                           	callstack 0
   700  000012                     ___aomod@sign:
   701                           	callstack 0
   702  000012                     ___fldiv@new_exp:
   703                           	callstack 0
   704                           
   705                           ; 2 bytes @ 0x11
   706  000012                     	ds	1
   707  000013                     ?_abs:
   708                           	callstack 0
   709  000013                     pad@buf:
   710                           	callstack 0
   711  000013                     abs@a:
   712                           	callstack 0
   713  000013                     ___flmul@a:
   714                           	callstack 0
   715  000013                     ___aodiv@quotient:
   716                           	callstack 0
   717                           
   718                           ; 8 bytes @ 0x12
   719  000013                     	ds	1
   720  000014                     ___fldiv@grs:
   721                           	callstack 0
   722                           
   723                           ; 4 bytes @ 0x13
   724  000014                     	ds	1
   725  000015                     ??_abs:
   726  000015                     pad@p:
   727                           	callstack 0
   728                           
   729                           ; 2 bytes @ 0x14
   730  000015                     	ds	2
   731  000017                     ??___flmul:
   732  000017                     ??_pad:
   733                           
   734                           ; 1 bytes @ 0x16
   735  000017                     	ds	1
   736  000018                     ___fldiv@bexp:
   737                           	callstack 0
   738  000018                     pad@i:
   739                           	callstack 0
   740                           
   741                           ; 2 bytes @ 0x17
   742  000018                     	ds	1
   743  000019                     ___fldiv@aexp:
   744                           	callstack 0
   745                           
   746                           ; 1 bytes @ 0x18
   747  000019                     	ds	1
   748  00001A                     ?_floorf:
   749                           	callstack 0
   750  00001A                     pad@w:
   751                           	callstack 0
   752  00001A                     floorf@x:
   753                           	callstack 0
   754                           
   755                           ; 4 bytes @ 0x19
   756  00001A                     	ds	1
   757  00001B                     ___flmul@sign:
   758                           	callstack 0
   759                           
   760                           ; 1 bytes @ 0x1A
   761  00001B                     	ds	1
   762  00001C                     ?_dtoa:
   763                           	callstack 0
   764  00001C                     dtoa@fp:
   765                           	callstack 0
   766  00001C                     ___flmul@grs:
   767                           	callstack 0
   768                           
   769                           ; 4 bytes @ 0x1B
   770  00001C                     	ds	2
   771  00001E                     ??_floorf:
   772  00001E                     dtoa@d:
   773                           	callstack 0
   774                           
   775                           ; 8 bytes @ 0x1D
   776  00001E                     	ds	2
   777  000020                     ___flmul@aexp:
   778                           	callstack 0
   779                           
   780                           ; 1 bytes @ 0x1F
   781  000020                     	ds	1
   782  000021                     ___flmul@bexp:
   783                           	callstack 0
   784                           
   785                           ; 1 bytes @ 0x20
   786  000021                     	ds	1
   787  000022                     ___flmul@prod:
   788                           	callstack 0
   789                           
   790                           ; 4 bytes @ 0x21
   791  000022                     	ds	2
   792  000024                     floorf@m:
   793                           	callstack 0
   794                           
   795                           ; 4 bytes @ 0x23
   796  000024                     	ds	2
   797  000026                     ??_dtoa:
   798  000026                     ___flmul@temp:
   799                           	callstack 0
   800                           
   801                           ; 2 bytes @ 0x25
   802  000026                     	ds	2
   803  000028                     ??_conv_AN0:
   804  000028                     ?___flsub:
   805                           	callstack 0
   806  000028                     floorf@e:
   807                           	callstack 0
   808  000028                     ___flge@ff1:
   809                           	callstack 0
   810  000028                     ___flsub@b:
   811                           	callstack 0
   812                           
   813                           ; 4 bytes @ 0x27
   814  000028                     	ds	2
   815  00002A                     floorf@u:
   816                           	callstack 0
   817                           
   818                           ; 4 bytes @ 0x29
   819  00002A                     	ds	2
   820  00002C                     ___flge@ff2:
   821                           	callstack 0
   822  00002C                     ___flsub@a:
   823                           	callstack 0
   824                           
   825                           ; 4 bytes @ 0x2B
   826  00002C                     	ds	2
   827  00002E                     _dtoa$1138:
   828                           	callstack 0
   829                           
   830                           ; 2 bytes @ 0x2D
   831  00002E                     	ds	2
   832  000030                     ??___flge:
   833  000030                     dtoa@p:
   834                           	callstack 0
   835                           
   836                           ; 2 bytes @ 0x2F
   837  000030                     	ds	2
   838  000032                     dtoa@w:
   839                           	callstack 0
   840                           
   841                           ; 2 bytes @ 0x31
   842  000032                     	ds	2
   843  000034                     ??_logic_CONTROL:
   844  000034                     ?_efgtoa:
   845                           	callstack 0
   846  000034                     dtoa@s:
   847                           	callstack 0
   848  000034                     efgtoa@fp:
   849                           	callstack 0
   850                           
   851                           ; 2 bytes @ 0x33
   852  000034                     	ds	2
   853  000036                     efgtoa@f:
   854                           	callstack 0
   855  000036                     dtoa@n:
   856                           	callstack 0
   857                           
   858                           ; 8 bytes @ 0x35
   859  000036                     	ds	4
   860  00003A                     efgtoa@c:
   861                           	callstack 0
   862                           
   863                           ; 1 bytes @ 0x39
   864  00003A                     	ds	1
   865  00003B                     ??_efgtoa:
   866                           
   867                           ; 1 bytes @ 0x3A
   868  00003B                     	ds	3
   869  00003E                     dtoa@i:
   870                           	callstack 0
   871                           
   872                           ; 2 bytes @ 0x3D
   873  00003E                     	ds	2
   874  000040                     _efgtoa$1162:
   875                           	callstack 0
   876                           
   877                           ; 2 bytes @ 0x3F
   878  000040                     	ds	2
   879  000042                     _efgtoa$1169:
   880                           	callstack 0
   881                           
   882                           ; 2 bytes @ 0x41
   883  000042                     	ds	2
   884  000044                     _efgtoa$1170:
   885                           	callstack 0
   886                           
   887                           ; 2 bytes @ 0x43
   888  000044                     	ds	2
   889  000046                     efgtoa@t:
   890                           	callstack 0
   891                           
   892                           ; 2 bytes @ 0x45
   893  000046                     	ds	2
   894  000048                     efgtoa@pp:
   895                           	callstack 0
   896                           
   897                           ; 2 bytes @ 0x47
   898  000048                     	ds	2
   899  00004A                     efgtoa@ne:
   900                           	callstack 0
   901                           
   902                           ; 2 bytes @ 0x49
   903  00004A                     	ds	2
   904  00004C                     efgtoa@m:
   905                           	callstack 0
   906                           
   907                           ; 2 bytes @ 0x4B
   908  00004C                     	ds	2
   909  00004E                     efgtoa@ou:
   910                           	callstack 0
   911                           
   912                           ; 4 bytes @ 0x4D
   913  00004E                     	ds	4
   914  000052                     efgtoa@d:
   915                           	callstack 0
   916                           
   917                           ; 2 bytes @ 0x51
   918  000052                     	ds	2
   919  000054                     efgtoa@sign:
   920                           	callstack 0
   921                           
   922                           ; 2 bytes @ 0x53
   923  000054                     	ds	2
   924  000056                     efgtoa@p:
   925                           	callstack 0
   926                           
   927                           ; 2 bytes @ 0x55
   928  000056                     	ds	2
   929  000058                     efgtoa@w:
   930                           	callstack 0
   931                           
   932                           ; 2 bytes @ 0x57
   933  000058                     	ds	2
   934  00005A                     efgtoa@nmode:
   935                           	callstack 0
   936                           
   937                           ; 1 bytes @ 0x59
   938  00005A                     	ds	1
   939  00005B                     efgtoa@mode:
   940                           	callstack 0
   941                           
   942                           ; 1 bytes @ 0x5A
   943  00005B                     	ds	1
   944  00005C                     efgtoa@h:
   945                           	callstack 0
   946                           
   947                           ; 4 bytes @ 0x5B
   948  00005C                     	ds	4
   949  000060                     efgtoa@l:
   950                           	callstack 0
   951                           
   952                           ; 4 bytes @ 0x5F
   953  000060                     	ds	4
   954  000064                     efgtoa@i:
   955                           	callstack 0
   956                           
   957                           ; 2 bytes @ 0x63
   958  000064                     	ds	2
   959  000066                     efgtoa@g:
   960                           	callstack 0
   961                           
   962                           ; 4 bytes @ 0x65
   963  000066                     	ds	4
   964  00006A                     efgtoa@e:
   965                           	callstack 0
   966                           
   967                           ; 2 bytes @ 0x69
   968  00006A                     	ds	2
   969  00006C                     efgtoa@n:
   970                           	callstack 0
   971                           
   972                           ; 2 bytes @ 0x6B
   973  00006C                     	ds	2
   974  00006E                     efgtoa@u:
   975                           	callstack 0
   976                           
   977                           ; 4 bytes @ 0x6D
   978  00006E                     	ds	4
   979  000072                     ?_vfpfcnvrt:
   980                           	callstack 0
   981  000072                     vfpfcnvrt@fp:
   982                           	callstack 0
   983                           
   984                           ; 2 bytes @ 0x71
   985  000072                     	ds	2
   986  000074                     vfpfcnvrt@fmt:
   987                           	callstack 0
   988                           
   989                           ; 2 bytes @ 0x73
   990  000074                     	ds	2
   991  000076                     vfpfcnvrt@ap:
   992                           	callstack 0
   993                           
   994                           ; 2 bytes @ 0x75
   995  000076                     	ds	2
   996  000078                     ??_vfpfcnvrt:
   997                           
   998                           ; 1 bytes @ 0x77
   999  000078                     	ds	4
  1000  00007C                     vfprintf@cfmt:
  1001                           	callstack 0
  1002                           
  1003                           ; 2 bytes @ 0x7B
  1004  00007C                     	ds	2
  1005  00007E                     
  1006                           ; 1 bytes @ 0x7D
  1007 ;;
  1008 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1009 ;;
  1010 ;; *************** function _main *****************
  1011 ;; Defined at:
  1012 ;;		line 205 in file "Main_program_meter.c"
  1013 ;; Parameters:    Size  Location     Type
  1014 ;;		None
  1015 ;; Auto vars:     Size  Location     Type
  1016 ;;		None
  1017 ;; Return value:  Size  Location     Type
  1018 ;;                  1    wreg      void 
  1019 ;; Registers used:
  1020 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1021 ;; Tracked objects:
  1022 ;;		On entry : 0/0
  1023 ;;		On exit  : 0/0
  1024 ;;		Unchanged: 0/0
  1025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1026 ;;      Params:         0       0       0       0       0       0       0
  1027 ;;      Locals:         0       0       0       0       0       0       0
  1028 ;;      Temps:          0       0       0       0       0       0       0
  1029 ;;      Totals:         0       0       0       0       0       0       0
  1030 ;;Total ram usage:        0 bytes
  1031 ;; Hardware stack levels required when called: 9
  1032 ;; This function calls:
  1033 ;;		_config_ADC
  1034 ;;		_config_FOSC
  1035 ;;		_config_IO
  1036 ;;		_conv_AN0
  1037 ;;		_lcd_LEDS
  1038 ;;		_lcd_SENSOR
  1039 ;;		_lcd_clear
  1040 ;;		_lcd_init
  1041 ;;		_logic_CONTROL
  1042 ;; This function is called by:
  1043 ;;		Startup code after reset
  1044 ;; This function uses a non-reentrant model
  1045 ;;
  1046                           
  1047                           	psect	text0
  1048  004178                     __ptext0:
  1049                           	callstack 0
  1050  004178                     _main:
  1051                           	callstack 22
  1052  004178                     
  1053                           ;Main_program_meter.c: 207:     config_FOSC();
  1054  004178  ECAF  F021         	call	_config_FOSC	;wreg free
  1055                           
  1056                           ;Main_program_meter.c: 208:     config_IO();
  1057  00417C  ECA9  F021         	call	_config_IO	;wreg free
  1058                           
  1059                           ;Main_program_meter.c: 209:     config_ADC();
  1060  004180  ECA2  F021         	call	_config_ADC	;wreg free
  1061  004184                     
  1062                           ;Main_program_meter.c: 210:     lcd_init();
  1063  004184  ECB4  F01E         	call	_lcd_init	;wreg free
  1064  004188                     l4610:
  1065                           
  1066                           ;Main_program_meter.c: 213:     {;Main_program_meter.c: 214:         conv_AN0();
  1067  004188  EC4A  F01F         	call	_conv_AN0	;wreg free
  1068  00418C                     
  1069                           ;Main_program_meter.c: 215:         logic_CONTROL();
  1070  00418C  ECBF  F012         	call	_logic_CONTROL	;wreg free
  1071  004190                     
  1072                           ;Main_program_meter.c: 217:         if(PORTBbits.RB0 == 1)
  1073  004190  A081               	btfss	129,0,c	;volatile
  1074  004192  EFCD  F020         	goto	u5701
  1075  004196  EFCF  F020         	goto	u5700
  1076  00419A                     u5701:
  1077  00419A  EFD3  F020         	goto	l4618
  1078  00419E                     u5700:
  1079  00419E                     
  1080                           ;Main_program_meter.c: 218:         {;Main_program_meter.c: 220:             lcd_SENSOR(
      +                          );
  1081  00419E  EC03  F01F         	call	_lcd_SENSOR	;wreg free
  1082                           
  1083                           ;Main_program_meter.c: 221:         }
  1084  0041A2  EFC4  F020         	goto	l4610
  1085  0041A6                     l4618:
  1086                           
  1087                           ;Main_program_meter.c: 223:         {;Main_program_meter.c: 224:            lcd_clear();
  1088  0041A6  EC5D  F021         	call	_lcd_clear	;wreg free
  1089  0041AA                     
  1090                           ;Main_program_meter.c: 225:            lcd_LEDS();
  1091  0041AA  ECA9  F019         	call	_lcd_LEDS	;wreg free
  1092  0041AE  EFC4  F020         	goto	l4610
  1093  0041B2  EF00  F000         	goto	start
  1094  0041B6                     __end_of_main:
  1095                           	callstack 0
  1096                           
  1097 ;; *************** function _logic_CONTROL *****************
  1098 ;; Defined at:
  1099 ;;		line 132 in file "Main_program_meter.c"
  1100 ;; Parameters:    Size  Location     Type
  1101 ;;		None
  1102 ;; Auto vars:     Size  Location     Type
  1103 ;;		None
  1104 ;; Return value:  Size  Location     Type
  1105 ;;                  1    wreg      void 
  1106 ;; Registers used:
  1107 ;;		wreg, status,2, status,0, cstack
  1108 ;; Tracked objects:
  1109 ;;		On entry : 0/0
  1110 ;;		On exit  : 0/0
  1111 ;;		Unchanged: 0/0
  1112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1113 ;;      Params:         0       0       0       0       0       0       0
  1114 ;;      Locals:         0       0       0       0       0       0       0
  1115 ;;      Temps:          1       0       0       0       0       0       0
  1116 ;;      Totals:         1       0       0       0       0       0       0
  1117 ;;Total ram usage:        1 bytes
  1118 ;; Hardware stack levels used: 1
  1119 ;; Hardware stack levels required when called: 1
  1120 ;; This function calls:
  1121 ;;		___fleq
  1122 ;;		___flge
  1123 ;; This function is called by:
  1124 ;;		_main
  1125 ;; This function uses a non-reentrant model
  1126 ;;
  1127                           
  1128                           	psect	text1
  1129  00257E                     __ptext1:
  1130                           	callstack 0
  1131  00257E                     _logic_CONTROL:
  1132                           	callstack 29
  1133  00257E                     
  1134                           ;Main_program_meter.c: 134:     if(Voltage_AN0 == (0))
  1135  00257E  C088  F001         	movff	_Voltage_AN0,___fleq@ff1
  1136  002582  C089  F002         	movff	_Voltage_AN0+1,___fleq@ff1+1
  1137  002586  C08A  F003         	movff	_Voltage_AN0+2,___fleq@ff1+2
  1138  00258A  C08B  F004         	movff	_Voltage_AN0+3,___fleq@ff1+3
  1139  00258E  0E00               	movlw	0
  1140  002590  6E05               	movwf	___fleq@ff2^0,c
  1141  002592  0E00               	movlw	0
  1142  002594  6E06               	movwf	(___fleq@ff2+1)^0,c
  1143  002596  0E00               	movlw	0
  1144  002598  6E07               	movwf	(___fleq@ff2+2)^0,c
  1145  00259A  0E00               	movlw	0
  1146  00259C  6E08               	movwf	(___fleq@ff2+3)^0,c
  1147  00259E  EC0F  F01E         	call	___fleq	;wreg free
  1148  0025A2  A0D8               	btfss	status,0,c
  1149  0025A4  EFD6  F012         	goto	u5531
  1150  0025A8  EFD8  F012         	goto	u5530
  1151  0025AC                     u5531:
  1152  0025AC  EFEB  F012         	goto	l4512
  1153  0025B0                     u5530:
  1154  0025B0                     
  1155                           ;Main_program_meter.c: 135:     {;Main_program_meter.c: 136:         D1 = 0;
  1156  0025B0  0E00               	movlw	0
  1157  0025B2  0100               	movlb	0	; () banked
  1158  0025B4  6F99               	movwf	(_D1+1)& (0+255),b
  1159  0025B6  0E00               	movlw	0
  1160  0025B8  6F98               	movwf	_D1& (0+255),b
  1161                           
  1162                           ;Main_program_meter.c: 137:         D2 = 0;
  1163  0025BA  0E00               	movlw	0
  1164  0025BC  6F97               	movwf	(_D2+1)& (0+255),b
  1165  0025BE  0E00               	movlw	0
  1166  0025C0  6F96               	movwf	_D2& (0+255),b
  1167                           
  1168                           ;Main_program_meter.c: 138:         D3 = 0;
  1169  0025C2  0E00               	movlw	0
  1170  0025C4  6F95               	movwf	(_D3+1)& (0+255),b
  1171  0025C6  0E00               	movlw	0
  1172  0025C8  6F94               	movwf	_D3& (0+255),b
  1173                           
  1174                           ;Main_program_meter.c: 139:         D4 = 0;
  1175  0025CA  0E00               	movlw	0
  1176  0025CC  6F93               	movwf	(_D4+1)& (0+255),b
  1177  0025CE  0E00               	movlw	0
  1178  0025D0  6F92               	movwf	_D4& (0+255),b
  1179                           
  1180                           ;Main_program_meter.c: 141:     }
  1181  0025D2  EFE6  F013         	goto	l4534
  1182  0025D6                     l4512:
  1183  0025D6  0E00               	movlw	0
  1184  0025D8  6E28               	movwf	___flge@ff1^0,c
  1185  0025DA  0E00               	movlw	0
  1186  0025DC  6E29               	movwf	(___flge@ff1+1)^0,c
  1187  0025DE  0E00               	movlw	0
  1188  0025E0  6E2A               	movwf	(___flge@ff1+2)^0,c
  1189  0025E2  0E00               	movlw	0
  1190  0025E4  6E2B               	movwf	(___flge@ff1+3)^0,c
  1191  0025E6  C088  F02C         	movff	_Voltage_AN0,___flge@ff2
  1192  0025EA  C089  F02D         	movff	_Voltage_AN0+1,___flge@ff2+1
  1193  0025EE  C08A  F02E         	movff	_Voltage_AN0+2,___flge@ff2+2
  1194  0025F2  C08B  F02F         	movff	_Voltage_AN0+3,___flge@ff2+3
  1195  0025F6  ECB1  F01A         	call	___flge	;wreg free
  1196  0025FA  B0D8               	btfsc	status,0,c
  1197  0025FC  EF02  F013         	goto	u5541
  1198  002600  EF04  F013         	goto	u5540
  1199  002604                     u5541:
  1200  002604  EF30  F013         	goto	l4518
  1201  002608                     u5540:
  1202  002608  0E00               	movlw	0
  1203  00260A  6E28               	movwf	___flge@ff1^0,c
  1204  00260C  0E00               	movlw	0
  1205  00260E  6E29               	movwf	(___flge@ff1+1)^0,c
  1206  002610  0EA0               	movlw	160
  1207  002612  6E2A               	movwf	(___flge@ff1+2)^0,c
  1208  002614  0E3F               	movlw	63
  1209  002616  6E2B               	movwf	(___flge@ff1+3)^0,c
  1210  002618  C088  F02C         	movff	_Voltage_AN0,___flge@ff2
  1211  00261C  C089  F02D         	movff	_Voltage_AN0+1,___flge@ff2+1
  1212  002620  C08A  F02E         	movff	_Voltage_AN0+2,___flge@ff2+2
  1213  002624  C08B  F02F         	movff	_Voltage_AN0+3,___flge@ff2+3
  1214  002628  ECB1  F01A         	call	___flge	;wreg free
  1215  00262C  A0D8               	btfss	status,0,c
  1216  00262E  EF1B  F013         	goto	u5551
  1217  002632  EF1D  F013         	goto	u5550
  1218  002636                     u5551:
  1219  002636  EF30  F013         	goto	l4518
  1220  00263A                     u5550:
  1221  00263A                     
  1222                           ;Main_program_meter.c: 143:     {;Main_program_meter.c: 144:         D1 = 1;
  1223  00263A  0E00               	movlw	0
  1224  00263C  0100               	movlb	0	; () banked
  1225  00263E  6F99               	movwf	(_D1+1)& (0+255),b
  1226  002640  0E01               	movlw	1
  1227  002642  6F98               	movwf	_D1& (0+255),b
  1228                           
  1229                           ;Main_program_meter.c: 145:         D2 = 0;
  1230  002644  0E00               	movlw	0
  1231  002646  6F97               	movwf	(_D2+1)& (0+255),b
  1232  002648  0E00               	movlw	0
  1233  00264A  6F96               	movwf	_D2& (0+255),b
  1234                           
  1235                           ;Main_program_meter.c: 146:         D3 = 0;
  1236  00264C  0E00               	movlw	0
  1237  00264E  6F95               	movwf	(_D3+1)& (0+255),b
  1238  002650  0E00               	movlw	0
  1239  002652  6F94               	movwf	_D3& (0+255),b
  1240                           
  1241                           ;Main_program_meter.c: 147:         D4 = 0;
  1242  002654  0E00               	movlw	0
  1243  002656  6F93               	movwf	(_D4+1)& (0+255),b
  1244  002658  0E00               	movlw	0
  1245  00265A  6F92               	movwf	_D4& (0+255),b
  1246                           
  1247                           ;Main_program_meter.c: 149:     }
  1248  00265C  EFE6  F013         	goto	l4534
  1249  002660                     l4518:
  1250  002660  0E00               	movlw	0
  1251  002662  6E28               	movwf	___flge@ff1^0,c
  1252  002664  0E00               	movlw	0
  1253  002666  6E29               	movwf	(___flge@ff1+1)^0,c
  1254  002668  0EA0               	movlw	160
  1255  00266A  6E2A               	movwf	(___flge@ff1+2)^0,c
  1256  00266C  0E3F               	movlw	63
  1257  00266E  6E2B               	movwf	(___flge@ff1+3)^0,c
  1258  002670  C088  F02C         	movff	_Voltage_AN0,___flge@ff2
  1259  002674  C089  F02D         	movff	_Voltage_AN0+1,___flge@ff2+1
  1260  002678  C08A  F02E         	movff	_Voltage_AN0+2,___flge@ff2+2
  1261  00267C  C08B  F02F         	movff	_Voltage_AN0+3,___flge@ff2+3
  1262  002680  ECB1  F01A         	call	___flge	;wreg free
  1263  002684  B0D8               	btfsc	status,0,c
  1264  002686  EF47  F013         	goto	u5561
  1265  00268A  EF49  F013         	goto	u5560
  1266  00268E                     u5561:
  1267  00268E  EF75  F013         	goto	l4524
  1268  002692                     u5560:
  1269  002692  0E00               	movlw	0
  1270  002694  6E28               	movwf	___flge@ff1^0,c
  1271  002696  0E00               	movlw	0
  1272  002698  6E29               	movwf	(___flge@ff1+1)^0,c
  1273  00269A  0E20               	movlw	32
  1274  00269C  6E2A               	movwf	(___flge@ff1+2)^0,c
  1275  00269E  0E40               	movlw	64
  1276  0026A0  6E2B               	movwf	(___flge@ff1+3)^0,c
  1277  0026A2  C088  F02C         	movff	_Voltage_AN0,___flge@ff2
  1278  0026A6  C089  F02D         	movff	_Voltage_AN0+1,___flge@ff2+1
  1279  0026AA  C08A  F02E         	movff	_Voltage_AN0+2,___flge@ff2+2
  1280  0026AE  C08B  F02F         	movff	_Voltage_AN0+3,___flge@ff2+3
  1281  0026B2  ECB1  F01A         	call	___flge	;wreg free
  1282  0026B6  A0D8               	btfss	status,0,c
  1283  0026B8  EF60  F013         	goto	u5571
  1284  0026BC  EF62  F013         	goto	u5570
  1285  0026C0                     u5571:
  1286  0026C0  EF75  F013         	goto	l4524
  1287  0026C4                     u5570:
  1288  0026C4                     
  1289                           ;Main_program_meter.c: 151:     {;Main_program_meter.c: 152:         D1 = 1;
  1290  0026C4  0E00               	movlw	0
  1291  0026C6  0100               	movlb	0	; () banked
  1292  0026C8  6F99               	movwf	(_D1+1)& (0+255),b
  1293  0026CA  0E01               	movlw	1
  1294  0026CC  6F98               	movwf	_D1& (0+255),b
  1295                           
  1296                           ;Main_program_meter.c: 153:         D2 = 1;
  1297  0026CE  0E00               	movlw	0
  1298  0026D0  6F97               	movwf	(_D2+1)& (0+255),b
  1299  0026D2  0E01               	movlw	1
  1300  0026D4  6F96               	movwf	_D2& (0+255),b
  1301                           
  1302                           ;Main_program_meter.c: 154:         D3 = 0;
  1303  0026D6  0E00               	movlw	0
  1304  0026D8  6F95               	movwf	(_D3+1)& (0+255),b
  1305  0026DA  0E00               	movlw	0
  1306  0026DC  6F94               	movwf	_D3& (0+255),b
  1307                           
  1308                           ;Main_program_meter.c: 155:         D4 = 0;
  1309  0026DE  0E00               	movlw	0
  1310  0026E0  6F93               	movwf	(_D4+1)& (0+255),b
  1311  0026E2  0E00               	movlw	0
  1312  0026E4  6F92               	movwf	_D4& (0+255),b
  1313                           
  1314                           ;Main_program_meter.c: 156:     }
  1315  0026E6  EFE6  F013         	goto	l4534
  1316  0026EA                     l4524:
  1317  0026EA  0E00               	movlw	0
  1318  0026EC  6E28               	movwf	___flge@ff1^0,c
  1319  0026EE  0E00               	movlw	0
  1320  0026F0  6E29               	movwf	(___flge@ff1+1)^0,c
  1321  0026F2  0E20               	movlw	32
  1322  0026F4  6E2A               	movwf	(___flge@ff1+2)^0,c
  1323  0026F6  0E40               	movlw	64
  1324  0026F8  6E2B               	movwf	(___flge@ff1+3)^0,c
  1325  0026FA  C088  F02C         	movff	_Voltage_AN0,___flge@ff2
  1326  0026FE  C089  F02D         	movff	_Voltage_AN0+1,___flge@ff2+1
  1327  002702  C08A  F02E         	movff	_Voltage_AN0+2,___flge@ff2+2
  1328  002706  C08B  F02F         	movff	_Voltage_AN0+3,___flge@ff2+3
  1329  00270A  ECB1  F01A         	call	___flge	;wreg free
  1330  00270E  B0D8               	btfsc	status,0,c
  1331  002710  EF8C  F013         	goto	u5581
  1332  002714  EF8E  F013         	goto	u5580
  1333  002718                     u5581:
  1334  002718  EFBA  F013         	goto	l4530
  1335  00271C                     u5580:
  1336  00271C  0E00               	movlw	0
  1337  00271E  6E28               	movwf	___flge@ff1^0,c
  1338  002720  0E00               	movlw	0
  1339  002722  6E29               	movwf	(___flge@ff1+1)^0,c
  1340  002724  0E70               	movlw	112
  1341  002726  6E2A               	movwf	(___flge@ff1+2)^0,c
  1342  002728  0E40               	movlw	64
  1343  00272A  6E2B               	movwf	(___flge@ff1+3)^0,c
  1344  00272C  C088  F02C         	movff	_Voltage_AN0,___flge@ff2
  1345  002730  C089  F02D         	movff	_Voltage_AN0+1,___flge@ff2+1
  1346  002734  C08A  F02E         	movff	_Voltage_AN0+2,___flge@ff2+2
  1347  002738  C08B  F02F         	movff	_Voltage_AN0+3,___flge@ff2+3
  1348  00273C  ECB1  F01A         	call	___flge	;wreg free
  1349  002740  A0D8               	btfss	status,0,c
  1350  002742  EFA5  F013         	goto	u5591
  1351  002746  EFA7  F013         	goto	u5590
  1352  00274A                     u5591:
  1353  00274A  EFBA  F013         	goto	l4530
  1354  00274E                     u5590:
  1355  00274E                     
  1356                           ;Main_program_meter.c: 158:     {;Main_program_meter.c: 159:         D1 = 1;
  1357  00274E  0E00               	movlw	0
  1358  002750  0100               	movlb	0	; () banked
  1359  002752  6F99               	movwf	(_D1+1)& (0+255),b
  1360  002754  0E01               	movlw	1
  1361  002756  6F98               	movwf	_D1& (0+255),b
  1362                           
  1363                           ;Main_program_meter.c: 160:         D2 = 1;
  1364  002758  0E00               	movlw	0
  1365  00275A  6F97               	movwf	(_D2+1)& (0+255),b
  1366  00275C  0E01               	movlw	1
  1367  00275E  6F96               	movwf	_D2& (0+255),b
  1368                           
  1369                           ;Main_program_meter.c: 161:         D3 = 1;
  1370  002760  0E00               	movlw	0
  1371  002762  6F95               	movwf	(_D3+1)& (0+255),b
  1372  002764  0E01               	movlw	1
  1373  002766  6F94               	movwf	_D3& (0+255),b
  1374                           
  1375                           ;Main_program_meter.c: 162:         D4 = 0;
  1376  002768  0E00               	movlw	0
  1377  00276A  6F93               	movwf	(_D4+1)& (0+255),b
  1378  00276C  0E00               	movlw	0
  1379  00276E  6F92               	movwf	_D4& (0+255),b
  1380                           
  1381                           ;Main_program_meter.c: 163:     }
  1382  002770  EFE6  F013         	goto	l4534
  1383  002774                     l4530:
  1384  002774  0E00               	movlw	0
  1385  002776  6E28               	movwf	___flge@ff1^0,c
  1386  002778  0E00               	movlw	0
  1387  00277A  6E29               	movwf	(___flge@ff1+1)^0,c
  1388  00277C  0E70               	movlw	112
  1389  00277E  6E2A               	movwf	(___flge@ff1+2)^0,c
  1390  002780  0E40               	movlw	64
  1391  002782  6E2B               	movwf	(___flge@ff1+3)^0,c
  1392  002784  C088  F02C         	movff	_Voltage_AN0,___flge@ff2
  1393  002788  C089  F02D         	movff	_Voltage_AN0+1,___flge@ff2+1
  1394  00278C  C08A  F02E         	movff	_Voltage_AN0+2,___flge@ff2+2
  1395  002790  C08B  F02F         	movff	_Voltage_AN0+3,___flge@ff2+3
  1396  002794  ECB1  F01A         	call	___flge	;wreg free
  1397  002798  B0D8               	btfsc	status,0,c
  1398  00279A  EFD1  F013         	goto	u5601
  1399  00279E  EFD3  F013         	goto	u5600
  1400  0027A2                     u5601:
  1401  0027A2  EFE6  F013         	goto	l84
  1402  0027A6                     u5600:
  1403  0027A6                     
  1404                           ;Main_program_meter.c: 165:     {;Main_program_meter.c: 166:         D1 = 1;
  1405  0027A6  0E00               	movlw	0
  1406  0027A8  0100               	movlb	0	; () banked
  1407  0027AA  6F99               	movwf	(_D1+1)& (0+255),b
  1408  0027AC  0E01               	movlw	1
  1409  0027AE  6F98               	movwf	_D1& (0+255),b
  1410                           
  1411                           ;Main_program_meter.c: 167:         D2 = 1;
  1412  0027B0  0E00               	movlw	0
  1413  0027B2  6F97               	movwf	(_D2+1)& (0+255),b
  1414  0027B4  0E01               	movlw	1
  1415  0027B6  6F96               	movwf	_D2& (0+255),b
  1416                           
  1417                           ;Main_program_meter.c: 168:         D3 = 1;
  1418  0027B8  0E00               	movlw	0
  1419  0027BA  6F95               	movwf	(_D3+1)& (0+255),b
  1420  0027BC  0E01               	movlw	1
  1421  0027BE  6F94               	movwf	_D3& (0+255),b
  1422                           
  1423                           ;Main_program_meter.c: 169:         D4 = 1;
  1424  0027C0  0E00               	movlw	0
  1425  0027C2  6F93               	movwf	(_D4+1)& (0+255),b
  1426  0027C4  0E01               	movlw	1
  1427  0027C6  6F92               	movwf	_D4& (0+255),b
  1428  0027C8  EFE6  F013         	goto	l4534
  1429  0027CC                     l84:
  1430  0027CC                     l4534:
  1431                           
  1432                           ;Main_program_meter.c: 171:     PORTCbits.RC0 =! D1;
  1433  0027CC  0100               	movlb	0	; () banked
  1434  0027CE  5198               	movf	_D1& (0+255),w,b
  1435  0027D0  1199               	iorwf	(_D1+1)& (0+255),w,b
  1436  0027D2  B4D8               	btfsc	status,2,c
  1437  0027D4  EFEE  F013         	goto	u5611
  1438  0027D8  EFF2  F013         	goto	u5610
  1439  0027DC                     u5611:
  1440  0027DC  6A34               	clrf	??_logic_CONTROL^0,c
  1441  0027DE  2A34               	incf	??_logic_CONTROL^0,f,c
  1442  0027E0  EFF3  F013         	goto	u5628
  1443  0027E4                     u5610:
  1444  0027E4  6A34               	clrf	??_logic_CONTROL^0,c
  1445  0027E6                     u5628:
  1446  0027E6  5082               	movf	130,w,c	;volatile
  1447  0027E8  1834               	xorwf	??_logic_CONTROL^0,w,c
  1448  0027EA  0BFE               	andlw	-2
  1449  0027EC  1834               	xorwf	??_logic_CONTROL^0,w,c
  1450  0027EE  6E82               	movwf	130,c	;volatile
  1451  0027F0                     
  1452                           ;Main_program_meter.c: 172:     PORTCbits.RC1 =! D2;
  1453  0027F0  0100               	movlb	0	; () banked
  1454  0027F2  5196               	movf	_D2& (0+255),w,b
  1455  0027F4  1197               	iorwf	(_D2+1)& (0+255),w,b
  1456  0027F6  B4D8               	btfsc	status,2,c
  1457  0027F8  EF00  F014         	goto	u5631
  1458  0027FC  EF04  F014         	goto	u5630
  1459  002800                     u5631:
  1460  002800  6A34               	clrf	??_logic_CONTROL^0,c
  1461  002802  2A34               	incf	??_logic_CONTROL^0,f,c
  1462  002804  EF05  F014         	goto	u5648
  1463  002808                     u5630:
  1464  002808  6A34               	clrf	??_logic_CONTROL^0,c
  1465  00280A                     u5648:
  1466  00280A  4634               	rlncf	??_logic_CONTROL^0,f,c
  1467  00280C  5082               	movf	130,w,c	;volatile
  1468  00280E  1834               	xorwf	??_logic_CONTROL^0,w,c
  1469  002810  0BFD               	andlw	-3
  1470  002812  1834               	xorwf	??_logic_CONTROL^0,w,c
  1471  002814  6E82               	movwf	130,c	;volatile
  1472  002816                     
  1473                           ;Main_program_meter.c: 173:     PORTCbits.RC2 =! D3;
  1474  002816  0100               	movlb	0	; () banked
  1475  002818  5194               	movf	_D3& (0+255),w,b
  1476  00281A  1195               	iorwf	(_D3+1)& (0+255),w,b
  1477  00281C  B4D8               	btfsc	status,2,c
  1478  00281E  EF13  F014         	goto	u5651
  1479  002822  EF17  F014         	goto	u5650
  1480  002826                     u5651:
  1481  002826  6A34               	clrf	??_logic_CONTROL^0,c
  1482  002828  2A34               	incf	??_logic_CONTROL^0,f,c
  1483  00282A  EF18  F014         	goto	u5668
  1484  00282E                     u5650:
  1485  00282E  6A34               	clrf	??_logic_CONTROL^0,c
  1486  002830                     u5668:
  1487  002830  4634               	rlncf	??_logic_CONTROL^0,f,c
  1488  002832  4634               	rlncf	??_logic_CONTROL^0,f,c
  1489  002834  5082               	movf	130,w,c	;volatile
  1490  002836  1834               	xorwf	??_logic_CONTROL^0,w,c
  1491  002838  0BFB               	andlw	-5
  1492  00283A  1834               	xorwf	??_logic_CONTROL^0,w,c
  1493  00283C  6E82               	movwf	130,c	;volatile
  1494  00283E                     
  1495                           ;Main_program_meter.c: 174:     PORTCbits.RC3 =! D4;
  1496  00283E  0100               	movlb	0	; () banked
  1497  002840  5192               	movf	_D4& (0+255),w,b
  1498  002842  1193               	iorwf	(_D4+1)& (0+255),w,b
  1499  002844  B4D8               	btfsc	status,2,c
  1500  002846  EF27  F014         	goto	u5671
  1501  00284A  EF2B  F014         	goto	u5670
  1502  00284E                     u5671:
  1503  00284E  6A34               	clrf	??_logic_CONTROL^0,c
  1504  002850  2A34               	incf	??_logic_CONTROL^0,f,c
  1505  002852  EF2C  F014         	goto	u5688
  1506  002856                     u5670:
  1507  002856  6A34               	clrf	??_logic_CONTROL^0,c
  1508  002858                     u5688:
  1509  002858  4634               	rlncf	??_logic_CONTROL^0,f,c
  1510  00285A  4634               	rlncf	??_logic_CONTROL^0,f,c
  1511  00285C  4634               	rlncf	??_logic_CONTROL^0,f,c
  1512  00285E  5082               	movf	130,w,c	;volatile
  1513  002860  1834               	xorwf	??_logic_CONTROL^0,w,c
  1514  002862  0BF7               	andlw	-9
  1515  002864  1834               	xorwf	??_logic_CONTROL^0,w,c
  1516  002866  6E82               	movwf	130,c	;volatile
  1517  002868  0012               	return		;funcret
  1518  00286A                     __end_of_logic_CONTROL:
  1519                           	callstack 0
  1520                           
  1521 ;; *************** function _lcd_init *****************
  1522 ;; Defined at:
  1523 ;;		line 3 in file "LCD4b_EXSTO.c"
  1524 ;; Parameters:    Size  Location     Type
  1525 ;;		None
  1526 ;; Auto vars:     Size  Location     Type
  1527 ;;  i               1    5[COMRAM] unsigned char 
  1528 ;; Return value:  Size  Location     Type
  1529 ;;                  1    wreg      void 
  1530 ;; Registers used:
  1531 ;;		wreg, status,2, status,0, cstack
  1532 ;; Tracked objects:
  1533 ;;		On entry : 0/0
  1534 ;;		On exit  : 0/0
  1535 ;;		Unchanged: 0/0
  1536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1537 ;;      Params:         0       0       0       0       0       0       0
  1538 ;;      Locals:         1       0       0       0       0       0       0
  1539 ;;      Temps:          1       0       0       0       0       0       0
  1540 ;;      Totals:         2       0       0       0       0       0       0
  1541 ;;Total ram usage:        2 bytes
  1542 ;; Hardware stack levels used: 1
  1543 ;; Hardware stack levels required when called: 2
  1544 ;; This function calls:
  1545 ;;		_lcd_cmd
  1546 ;; This function is called by:
  1547 ;;		_main
  1548 ;; This function uses a non-reentrant model
  1549 ;;
  1550                           
  1551                           	psect	text2
  1552  003D68                     __ptext2:
  1553                           	callstack 0
  1554  003D68                     _lcd_init:
  1555                           	callstack 28
  1556  003D68                     
  1557                           ;LCD4b_EXSTO.c: 5:     char i;;LCD4b_EXSTO.c: 7:     TRISD = 0b00000000;
  1558  003D68  0E00               	movlw	0
  1559  003D6A  6E95               	movwf	149,c	;volatile
  1560  003D6C                     
  1561                           ;LCD4b_EXSTO.c: 8:     TRISEbits.TRISE2 = 0;
  1562  003D6C  9496               	bcf	150,2,c	;volatile
  1563  003D6E                     
  1564                           ;LCD4b_EXSTO.c: 9:     TRISEbits.TRISE1 = 0;
  1565  003D6E  9296               	bcf	150,1,c	;volatile
  1566  003D70                     
  1567                           ;LCD4b_EXSTO.c: 10:     TRISEbits.TRISE0 = 0;
  1568  003D70  9096               	bcf	150,0,c	;volatile
  1569                           
  1570                           ;LCD4b_EXSTO.c: 11:     PORTD = 0b00000000;
  1571  003D72  0E00               	movlw	0
  1572  003D74  6E83               	movwf	131,c	;volatile
  1573  003D76                     
  1574                           ;LCD4b_EXSTO.c: 12:     PORTEbits.RE0 = 0;
  1575  003D76  9084               	bcf	132,0,c	;volatile
  1576  003D78                     
  1577                           ;LCD4b_EXSTO.c: 13:     PORTEbits.RE1 = 0;
  1578  003D78  9284               	bcf	132,1,c	;volatile
  1579  003D7A                     
  1580                           ;LCD4b_EXSTO.c: 14:     PORTEbits.RE2 = 0;
  1581  003D7A  9484               	bcf	132,2,c	;volatile
  1582  003D7C                     
  1583                           ;LCD4b_EXSTO.c: 16:     _delay((unsigned long)((15)*(8000000/4000.0)));
  1584  003D7C  0E27               	movlw	39
  1585  003D7E  6E05               	movwf	??_lcd_init^0,c
  1586  003D80  0EF5               	movlw	245
  1587  003D82                     u5717:
  1588  003D82  2EE8               	decfsz	wreg,f,c
  1589  003D84  D7FE               	bra	u5717
  1590  003D86  2E05               	decfsz	??_lcd_init^0,f,c
  1591  003D88  D7FC               	bra	u5717
  1592  003D8A  F000               	nop	
  1593  003D8C                     
  1594                           ;LCD4b_EXSTO.c: 18:     for(i=0;i<=2;i++)
  1595  003D8C  0E00               	movlw	0
  1596  003D8E  6E06               	movwf	lcd_init@i^0,c
  1597  003D90                     l4582:
  1598                           
  1599                           ;LCD4b_EXSTO.c: 19:     {;LCD4b_EXSTO.c: 20:         lcd_cmd(0x30);
  1600  003D90  0E30               	movlw	48
  1601  003D92  ECB2  F01B         	call	_lcd_cmd
  1602  003D96                     
  1603                           ;LCD4b_EXSTO.c: 21:         _delay((unsigned long)((5)*(8000000/4000.0)));
  1604  003D96  0E0D               	movlw	13
  1605  003D98  6E05               	movwf	??_lcd_init^0,c
  1606  003D9A  0EFC               	movlw	252
  1607  003D9C                     u5727:
  1608  003D9C  2EE8               	decfsz	wreg,f,c
  1609  003D9E  D7FE               	bra	u5727
  1610  003DA0  2E05               	decfsz	??_lcd_init^0,f,c
  1611  003DA2  D7FC               	bra	u5727
  1612  003DA4                     
  1613                           ;LCD4b_EXSTO.c: 22:     }
  1614  003DA4  2A06               	incf	lcd_init@i^0,f,c
  1615  003DA6  0E02               	movlw	2
  1616  003DA8  6406               	cpfsgt	lcd_init@i^0,c
  1617  003DAA  EFD9  F01E         	goto	u5691
  1618  003DAE  EFDB  F01E         	goto	u5690
  1619  003DB2                     u5691:
  1620  003DB2  EFC8  F01E         	goto	l4582
  1621  003DB6                     u5690:
  1622  003DB6                     
  1623                           ;LCD4b_EXSTO.c: 24:     lcd_cmd(0x02);
  1624  003DB6  0E02               	movlw	2
  1625  003DB8  ECB2  F01B         	call	_lcd_cmd
  1626  003DBC                     
  1627                           ;LCD4b_EXSTO.c: 25:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1628  003DBC  0E1A               	movlw	26
  1629  003DBE                     u5737:
  1630  003DBE  2EE8               	decfsz	wreg,f,c
  1631  003DC0  D7FE               	bra	u5737
  1632  003DC2  D000               	nop2	
  1633  003DC4                     
  1634                           ;LCD4b_EXSTO.c: 26:     lcd_cmd(0x28);
  1635  003DC4  0E28               	movlw	40
  1636  003DC6  ECB2  F01B         	call	_lcd_cmd
  1637                           
  1638                           ;LCD4b_EXSTO.c: 27:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1639  003DCA  0E1A               	movlw	26
  1640  003DCC                     u5747:
  1641  003DCC  2EE8               	decfsz	wreg,f,c
  1642  003DCE  D7FE               	bra	u5747
  1643  003DD0  D000               	nop2	
  1644  003DD2                     
  1645                           ;LCD4b_EXSTO.c: 28:     lcd_cmd(0x01);
  1646  003DD2  0E01               	movlw	1
  1647  003DD4  ECB2  F01B         	call	_lcd_cmd
  1648  003DD8                     
  1649                           ;LCD4b_EXSTO.c: 29:     _delay((unsigned long)((2)*(8000000/4000.0)));
  1650  003DD8  0E06               	movlw	6
  1651  003DDA  6E05               	movwf	??_lcd_init^0,c
  1652  003DDC  0E30               	movlw	48
  1653  003DDE                     u5757:
  1654  003DDE  2EE8               	decfsz	wreg,f,c
  1655  003DE0  D7FE               	bra	u5757
  1656  003DE2  2E05               	decfsz	??_lcd_init^0,f,c
  1657  003DE4  D7FC               	bra	u5757
  1658  003DE6  D000               	nop2	
  1659                           
  1660                           ;LCD4b_EXSTO.c: 30:     lcd_cmd(0x0C);
  1661  003DE8  0E0C               	movlw	12
  1662  003DEA  ECB2  F01B         	call	_lcd_cmd
  1663  003DEE                     
  1664                           ;LCD4b_EXSTO.c: 31:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1665  003DEE  0E1A               	movlw	26
  1666  003DF0                     u5767:
  1667  003DF0  2EE8               	decfsz	wreg,f,c
  1668  003DF2  D7FE               	bra	u5767
  1669  003DF4  D000               	nop2	
  1670  003DF6                     
  1671                           ;LCD4b_EXSTO.c: 32:     lcd_cmd(0x06);
  1672  003DF6  0E06               	movlw	6
  1673  003DF8  ECB2  F01B         	call	_lcd_cmd
  1674                           
  1675                           ;LCD4b_EXSTO.c: 33:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1676  003DFC  0E1A               	movlw	26
  1677  003DFE                     u5777:
  1678  003DFE  2EE8               	decfsz	wreg,f,c
  1679  003E00  D7FE               	bra	u5777
  1680  003E02  D000               	nop2	
  1681  003E04  0012               	return		;funcret
  1682  003E06                     __end_of_lcd_init:
  1683                           	callstack 0
  1684                           
  1685 ;; *************** function _lcd_clear *****************
  1686 ;; Defined at:
  1687 ;;		line 71 in file "LCD4b_EXSTO.c"
  1688 ;; Parameters:    Size  Location     Type
  1689 ;;		None
  1690 ;; Auto vars:     Size  Location     Type
  1691 ;;		None
  1692 ;; Return value:  Size  Location     Type
  1693 ;;                  1    wreg      void 
  1694 ;; Registers used:
  1695 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1696 ;; Tracked objects:
  1697 ;;		On entry : 0/0
  1698 ;;		On exit  : 0/0
  1699 ;;		Unchanged: 0/0
  1700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1701 ;;      Params:         0       0       0       0       0       0       0
  1702 ;;      Locals:         0       0       0       0       0       0       0
  1703 ;;      Temps:          0       0       0       0       0       0       0
  1704 ;;      Totals:         0       0       0       0       0       0       0
  1705 ;;Total ram usage:        0 bytes
  1706 ;; Hardware stack levels used: 1
  1707 ;; Hardware stack levels required when called: 4
  1708 ;; This function calls:
  1709 ;;		_lcd_write
  1710 ;; This function is called by:
  1711 ;;		_main
  1712 ;; This function uses a non-reentrant model
  1713 ;;
  1714                           
  1715                           	psect	text3
  1716  0042BA                     __ptext3:
  1717                           	callstack 0
  1718  0042BA                     _lcd_clear:
  1719                           	callstack 26
  1720  0042BA                     
  1721                           ;LCD4b_EXSTO.c: 73:     lcd_write(1,1,"               ");
  1722  0042BA  0E01               	movlw	1
  1723  0042BC  6E07               	movwf	lcd_write@col^0,c
  1724  0042BE  0E01               	movlw	low STR_13
  1725  0042C0  6E08               	movwf	lcd_write@str^0,c
  1726  0042C2  0E06               	movlw	high STR_13
  1727  0042C4  6E09               	movwf	(lcd_write@str+1)^0,c
  1728  0042C6  0E01               	movlw	1
  1729  0042C8  EC64  F01E         	call	_lcd_write
  1730                           
  1731                           ;LCD4b_EXSTO.c: 74:     lcd_write(2,1,"               ");
  1732  0042CC  0E01               	movlw	1
  1733  0042CE  6E07               	movwf	lcd_write@col^0,c
  1734  0042D0  0E01               	movlw	low STR_13
  1735  0042D2  6E08               	movwf	lcd_write@str^0,c
  1736  0042D4  0E06               	movlw	high STR_13
  1737  0042D6  6E09               	movwf	(lcd_write@str+1)^0,c
  1738  0042D8  0E02               	movlw	2
  1739  0042DA  EC64  F01E         	call	_lcd_write
  1740  0042DE  0012               	return		;funcret
  1741  0042E0                     __end_of_lcd_clear:
  1742                           	callstack 0
  1743                           
  1744 ;; *************** function _lcd_SENSOR *****************
  1745 ;; Defined at:
  1746 ;;		line 116 in file "Main_program_meter.c"
  1747 ;; Parameters:    Size  Location     Type
  1748 ;;		None
  1749 ;; Auto vars:     Size  Location     Type
  1750 ;;		None
  1751 ;; Return value:  Size  Location     Type
  1752 ;;                  1    wreg      void 
  1753 ;; Registers used:
  1754 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1755 ;; Tracked objects:
  1756 ;;		On entry : 0/0
  1757 ;;		On exit  : 0/0
  1758 ;;		Unchanged: 0/0
  1759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1760 ;;      Params:         0       0       0       0       0       0       0
  1761 ;;      Locals:         0       0       0       0       0       0       0
  1762 ;;      Temps:          0       0       0       0       0       0       0
  1763 ;;      Totals:         0       0       0       0       0       0       0
  1764 ;;Total ram usage:        0 bytes
  1765 ;; Hardware stack levels used: 1
  1766 ;; Hardware stack levels required when called: 8
  1767 ;; This function calls:
  1768 ;;		_lcd_write
  1769 ;;		_sprintf
  1770 ;; This function is called by:
  1771 ;;		_main
  1772 ;; This function uses a non-reentrant model
  1773 ;;
  1774                           
  1775                           	psect	text4
  1776  003E06                     __ptext4:
  1777                           	callstack 0
  1778  003E06                     _lcd_SENSOR:
  1779                           	callstack 22
  1780  003E06                     
  1781                           ;Main_program_meter.c: 118:     sprintf(VdigBuffer,
  1782  003E06  0E9C               	movlw	low _VdigBuffer
  1783  003E08  0100               	movlb	0	; () banked
  1784  003E0A  6FE4               	movwf	sprintf@s& (0+255),b
  1785  003E0C  0E00               	movlw	high _VdigBuffer
  1786  003E0E  6FE5               	movwf	(sprintf@s+1)& (0+255),b
  1787  003E10  0E20               	movlw	low STR_1
  1788  003E12  6FE6               	movwf	sprintf@fmt& (0+255),b
  1789  003E14  0E06               	movlw	high STR_1
  1790  003E16  6FE7               	movwf	(sprintf@fmt+1)& (0+255),b
  1791  003E18  C09A  F0E8         	movff	_VdigADC_AN0,?_sprintf+4
  1792  003E1C  C09B  F0E9         	movff	_VdigADC_AN0+1,?_sprintf+5
  1793  003E20  ECE2  F01F         	call	_sprintf	;wreg free
  1794                           
  1795                           ;Main_program_meter.c: 122:     sprintf(VoltageBuffer,
  1796  003E24  0E50               	movlw	low _VoltageBuffer
  1797  003E26  0100               	movlb	0	; () banked
  1798  003E28  6FE4               	movwf	sprintf@s& (0+255),b
  1799  003E2A  0E01               	movlw	high _VoltageBuffer
  1800  003E2C  6FE5               	movwf	(sprintf@s+1)& (0+255),b
  1801  003E2E  0E11               	movlw	low STR_2
  1802  003E30  6FE6               	movwf	sprintf@fmt& (0+255),b
  1803  003E32  0E06               	movlw	high STR_2
  1804  003E34  6FE7               	movwf	(sprintf@fmt+1)& (0+255),b
  1805  003E36  C088  F0E8         	movff	_Voltage_AN0,?_sprintf+4
  1806  003E3A  C089  F0E9         	movff	_Voltage_AN0+1,?_sprintf+5
  1807  003E3E  C08A  F0EA         	movff	_Voltage_AN0+2,?_sprintf+6
  1808  003E42  C08B  F0EB         	movff	_Voltage_AN0+3,?_sprintf+7
  1809  003E46  ECE2  F01F         	call	_sprintf	;wreg free
  1810  003E4A                     
  1811                           ;Main_program_meter.c: 126:     lcd_write(1,1,"ADC:   ");
  1812  003E4A  0E01               	movlw	1
  1813  003E4C  6E07               	movwf	lcd_write@col^0,c
  1814  003E4E  0E38               	movlw	low STR_3
  1815  003E50  6E08               	movwf	lcd_write@str^0,c
  1816  003E52  0E06               	movlw	high STR_3
  1817  003E54  6E09               	movwf	(lcd_write@str+1)^0,c
  1818  003E56  0E01               	movlw	1
  1819  003E58  EC64  F01E         	call	_lcd_write
  1820  003E5C                     
  1821                           ;Main_program_meter.c: 127:     lcd_write(1,8,VdigBuffer);
  1822  003E5C  0E08               	movlw	8
  1823  003E5E  6E07               	movwf	lcd_write@col^0,c
  1824  003E60  0E9C               	movlw	low _VdigBuffer
  1825  003E62  6E08               	movwf	lcd_write@str^0,c
  1826  003E64  0E00               	movlw	high _VdigBuffer
  1827  003E66  6E09               	movwf	(lcd_write@str+1)^0,c
  1828  003E68  0E01               	movlw	1
  1829  003E6A  EC64  F01E         	call	_lcd_write
  1830  003E6E                     
  1831                           ;Main_program_meter.c: 128:     lcd_write(2,1,"Volt:   ");
  1832  003E6E  0E01               	movlw	1
  1833  003E70  6E07               	movwf	lcd_write@col^0,c
  1834  003E72  0E2F               	movlw	low STR_4
  1835  003E74  6E08               	movwf	lcd_write@str^0,c
  1836  003E76  0E06               	movlw	high STR_4
  1837  003E78  6E09               	movwf	(lcd_write@str+1)^0,c
  1838  003E7A  0E02               	movlw	2
  1839  003E7C  EC64  F01E         	call	_lcd_write
  1840  003E80                     
  1841                           ;Main_program_meter.c: 129:     lcd_write(2,8,VoltageBuffer);
  1842  003E80  0E08               	movlw	8
  1843  003E82  6E07               	movwf	lcd_write@col^0,c
  1844  003E84  0E50               	movlw	low _VoltageBuffer
  1845  003E86  6E08               	movwf	lcd_write@str^0,c
  1846  003E88  0E01               	movlw	high _VoltageBuffer
  1847  003E8A  6E09               	movwf	(lcd_write@str+1)^0,c
  1848  003E8C  0E02               	movlw	2
  1849  003E8E  EC64  F01E         	call	_lcd_write
  1850  003E92  0012               	return		;funcret
  1851  003E94                     __end_of_lcd_SENSOR:
  1852                           	callstack 0
  1853                           
  1854 ;; *************** function _lcd_LEDS *****************
  1855 ;; Defined at:
  1856 ;;		line 177 in file "Main_program_meter.c"
  1857 ;; Parameters:    Size  Location     Type
  1858 ;;		None
  1859 ;; Auto vars:     Size  Location     Type
  1860 ;;		None
  1861 ;; Return value:  Size  Location     Type
  1862 ;;                  1    wreg      void 
  1863 ;; Registers used:
  1864 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1865 ;; Tracked objects:
  1866 ;;		On entry : 0/0
  1867 ;;		On exit  : 0/0
  1868 ;;		Unchanged: 0/0
  1869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1870 ;;      Params:         0       0       0       0       0       0       0
  1871 ;;      Locals:         0       0       0       0       0       0       0
  1872 ;;      Temps:          0       0       0       0       0       0       0
  1873 ;;      Totals:         0       0       0       0       0       0       0
  1874 ;;Total ram usage:        0 bytes
  1875 ;; Hardware stack levels used: 1
  1876 ;; Hardware stack levels required when called: 8
  1877 ;; This function calls:
  1878 ;;		_lcd_write
  1879 ;;		_sprintf
  1880 ;; This function is called by:
  1881 ;;		_main
  1882 ;; This function uses a non-reentrant model
  1883 ;;
  1884                           
  1885                           	psect	text5
  1886  003352                     __ptext5:
  1887                           	callstack 0
  1888  003352                     _lcd_LEDS:
  1889                           	callstack 22
  1890  003352                     
  1891                           ;Main_program_meter.c: 179:     sprintf(Buffer_D1,
  1892  003352  0EC4               	movlw	low _Buffer_D1
  1893  003354  0100               	movlb	0	; () banked
  1894  003356  6FE4               	movwf	sprintf@s& (0+255),b
  1895  003358  0E00               	movlw	high _Buffer_D1
  1896  00335A  6FE5               	movwf	(sprintf@s+1)& (0+255),b
  1897  00335C  0E5E               	movlw	low STR_5
  1898  00335E  6FE6               	movwf	sprintf@fmt& (0+255),b
  1899  003360  0E06               	movlw	high STR_5
  1900  003362  6FE7               	movwf	(sprintf@fmt+1)& (0+255),b
  1901  003364  C098  F0E8         	movff	_D1,?_sprintf+4
  1902  003368  C099  F0E9         	movff	_D1+1,?_sprintf+5
  1903  00336C  ECE2  F01F         	call	_sprintf	;wreg free
  1904                           
  1905                           ;Main_program_meter.c: 183:     sprintf(Buffer_D2,
  1906  003370  0EBC               	movlw	low _Buffer_D2
  1907  003372  0100               	movlb	0	; () banked
  1908  003374  6FE4               	movwf	sprintf@s& (0+255),b
  1909  003376  0E00               	movlw	high _Buffer_D2
  1910  003378  6FE5               	movwf	(sprintf@s+1)& (0+255),b
  1911  00337A  0E5E               	movlw	low STR_5
  1912  00337C  6FE6               	movwf	sprintf@fmt& (0+255),b
  1913  00337E  0E06               	movlw	high STR_5
  1914  003380  6FE7               	movwf	(sprintf@fmt+1)& (0+255),b
  1915  003382  C096  F0E8         	movff	_D2,?_sprintf+4
  1916  003386  C097  F0E9         	movff	_D2+1,?_sprintf+5
  1917  00338A  ECE2  F01F         	call	_sprintf	;wreg free
  1918                           
  1919                           ;Main_program_meter.c: 187:     sprintf(Buffer_D3,
  1920  00338E  0EB4               	movlw	low _Buffer_D3
  1921  003390  0100               	movlb	0	; () banked
  1922  003392  6FE4               	movwf	sprintf@s& (0+255),b
  1923  003394  0E00               	movlw	high _Buffer_D3
  1924  003396  6FE5               	movwf	(sprintf@s+1)& (0+255),b
  1925  003398  0E5E               	movlw	low STR_5
  1926  00339A  6FE6               	movwf	sprintf@fmt& (0+255),b
  1927  00339C  0E06               	movlw	high STR_5
  1928  00339E  6FE7               	movwf	(sprintf@fmt+1)& (0+255),b
  1929  0033A0  C094  F0E8         	movff	_D3,?_sprintf+4
  1930  0033A4  C095  F0E9         	movff	_D3+1,?_sprintf+5
  1931  0033A8  ECE2  F01F         	call	_sprintf	;wreg free
  1932                           
  1933                           ;Main_program_meter.c: 191:     sprintf(Buffer_D4,
  1934  0033AC  0EAC               	movlw	low _Buffer_D4
  1935  0033AE  0100               	movlb	0	; () banked
  1936  0033B0  6FE4               	movwf	sprintf@s& (0+255),b
  1937  0033B2  0E00               	movlw	high _Buffer_D4
  1938  0033B4  6FE5               	movwf	(sprintf@s+1)& (0+255),b
  1939  0033B6  0E5E               	movlw	low STR_5
  1940  0033B8  6FE6               	movwf	sprintf@fmt& (0+255),b
  1941  0033BA  0E06               	movlw	high STR_5
  1942  0033BC  6FE7               	movwf	(sprintf@fmt+1)& (0+255),b
  1943  0033BE  C092  F0E8         	movff	_D4,?_sprintf+4
  1944  0033C2  C093  F0E9         	movff	_D4+1,?_sprintf+5
  1945  0033C6  ECE2  F01F         	call	_sprintf	;wreg free
  1946  0033CA                     
  1947                           ;Main_program_meter.c: 195:     lcd_write(1,1,"LED 1:");
  1948  0033CA  0E01               	movlw	1
  1949  0033CC  6E07               	movwf	lcd_write@col^0,c
  1950  0033CE  0E50               	movlw	low STR_9
  1951  0033D0  6E08               	movwf	lcd_write@str^0,c
  1952  0033D2  0E06               	movlw	high STR_9
  1953  0033D4  6E09               	movwf	(lcd_write@str+1)^0,c
  1954  0033D6  0E01               	movlw	1
  1955  0033D8  EC64  F01E         	call	_lcd_write
  1956  0033DC                     
  1957                           ;Main_program_meter.c: 196:     lcd_write(1,7,Buffer_D1);
  1958  0033DC  0E07               	movlw	7
  1959  0033DE  6E07               	movwf	lcd_write@col^0,c
  1960  0033E0  0EC4               	movlw	low _Buffer_D1
  1961  0033E2  6E08               	movwf	lcd_write@str^0,c
  1962  0033E4  0E00               	movlw	high _Buffer_D1
  1963  0033E6  6E09               	movwf	(lcd_write@str+1)^0,c
  1964  0033E8  0E01               	movlw	1
  1965  0033EA  EC64  F01E         	call	_lcd_write
  1966  0033EE                     
  1967                           ;Main_program_meter.c: 197:     lcd_write(1,8," LED 2:");
  1968  0033EE  0E08               	movlw	8
  1969  0033F0  6E07               	movwf	lcd_write@col^0,c
  1970  0033F2  0E40               	movlw	low STR_10
  1971  0033F4  6E08               	movwf	lcd_write@str^0,c
  1972  0033F6  0E06               	movlw	high STR_10
  1973  0033F8  6E09               	movwf	(lcd_write@str+1)^0,c
  1974  0033FA  0E01               	movlw	1
  1975  0033FC  EC64  F01E         	call	_lcd_write
  1976  003400                     
  1977                           ;Main_program_meter.c: 198:     lcd_write(1,15,Buffer_D2);
  1978  003400  0E0F               	movlw	15
  1979  003402  6E07               	movwf	lcd_write@col^0,c
  1980  003404  0EBC               	movlw	low _Buffer_D2
  1981  003406  6E08               	movwf	lcd_write@str^0,c
  1982  003408  0E00               	movlw	high _Buffer_D2
  1983  00340A  6E09               	movwf	(lcd_write@str+1)^0,c
  1984  00340C  0E01               	movlw	1
  1985  00340E  EC64  F01E         	call	_lcd_write
  1986  003412                     
  1987                           ;Main_program_meter.c: 199:     lcd_write(2,1,"LED 3:");
  1988  003412  0E01               	movlw	1
  1989  003414  6E07               	movwf	lcd_write@col^0,c
  1990  003416  0E57               	movlw	low STR_11
  1991  003418  6E08               	movwf	lcd_write@str^0,c
  1992  00341A  0E06               	movlw	high STR_11
  1993  00341C  6E09               	movwf	(lcd_write@str+1)^0,c
  1994  00341E  0E02               	movlw	2
  1995  003420  EC64  F01E         	call	_lcd_write
  1996  003424                     
  1997                           ;Main_program_meter.c: 200:     lcd_write(2,7,Buffer_D3);
  1998  003424  0E07               	movlw	7
  1999  003426  6E07               	movwf	lcd_write@col^0,c
  2000  003428  0EB4               	movlw	low _Buffer_D3
  2001  00342A  6E08               	movwf	lcd_write@str^0,c
  2002  00342C  0E00               	movlw	high _Buffer_D3
  2003  00342E  6E09               	movwf	(lcd_write@str+1)^0,c
  2004  003430  0E02               	movlw	2
  2005  003432  EC64  F01E         	call	_lcd_write
  2006  003436                     
  2007                           ;Main_program_meter.c: 201:     lcd_write(2,8," LED 4:");
  2008  003436  0E08               	movlw	8
  2009  003438  6E07               	movwf	lcd_write@col^0,c
  2010  00343A  0E48               	movlw	low STR_12
  2011  00343C  6E08               	movwf	lcd_write@str^0,c
  2012  00343E  0E06               	movlw	high STR_12
  2013  003440  6E09               	movwf	(lcd_write@str+1)^0,c
  2014  003442  0E02               	movlw	2
  2015  003444  EC64  F01E         	call	_lcd_write
  2016  003448                     
  2017                           ;Main_program_meter.c: 202:     lcd_write(2,15,Buffer_D4);
  2018  003448  0E0F               	movlw	15
  2019  00344A  6E07               	movwf	lcd_write@col^0,c
  2020  00344C  0EAC               	movlw	low _Buffer_D4
  2021  00344E  6E08               	movwf	lcd_write@str^0,c
  2022  003450  0E00               	movlw	high _Buffer_D4
  2023  003452  6E09               	movwf	(lcd_write@str+1)^0,c
  2024  003454  0E02               	movlw	2
  2025  003456  EC64  F01E         	call	_lcd_write
  2026  00345A  0012               	return		;funcret
  2027  00345C                     __end_of_lcd_LEDS:
  2028                           	callstack 0
  2029                           
  2030 ;; *************** function _sprintf *****************
  2031 ;; Defined at:
  2032 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_sprintf.c"
  2033 ;; Parameters:    Size  Location     Type
  2034 ;;  s               2   24[BANK0 ] PTR unsigned char 
  2035 ;;		 -> Buffer_D4(8), Buffer_D3(8), Buffer_D2(8), Buffer_D1(8), 
  2036 ;;		 -> VoltageBuffer(16), VdigBuffer(16), 
  2037 ;;  fmt             2   26[BANK0 ] PTR const unsigned char 
  2038 ;;		 -> STR_8(5), STR_7(5), STR_6(5), STR_5(5), 
  2039 ;;		 -> STR_2(15), STR_1(15), 
  2040 ;; Auto vars:     Size  Location     Type
  2041 ;;  f              11   34[BANK0 ] struct _IO_FILE
  2042 ;;  ap              2   32[BANK0 ] PTR void [1]
  2043 ;;		 -> ?_sprintf(2), 
  2044 ;;  ret             2    0        int 
  2045 ;; Return value:  Size  Location     Type
  2046 ;;                  2   24[BANK0 ] int 
  2047 ;; Registers used:
  2048 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2049 ;; Tracked objects:
  2050 ;;		On entry : 0/0
  2051 ;;		On exit  : 0/0
  2052 ;;		Unchanged: 0/0
  2053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2054 ;;      Params:         0       8       0       0       0       0       0
  2055 ;;      Locals:         0      13       0       0       0       0       0
  2056 ;;      Temps:          0       0       0       0       0       0       0
  2057 ;;      Totals:         0      21       0       0       0       0       0
  2058 ;;Total ram usage:       21 bytes
  2059 ;; Hardware stack levels used: 1
  2060 ;; Hardware stack levels required when called: 7
  2061 ;; This function calls:
  2062 ;;		_vfprintf
  2063 ;; This function is called by:
  2064 ;;		_lcd_SENSOR
  2065 ;;		_lcd_LEDS
  2066 ;; This function uses a non-reentrant model
  2067 ;;
  2068                           
  2069                           	psect	text6
  2070  003FC4                     __ptext6:
  2071                           	callstack 0
  2072  003FC4                     _sprintf:
  2073                           	callstack 22
  2074  003FC4  0EE8               	movlw	low (?_sprintf+4)
  2075  003FC6  0100               	movlb	0	; () banked
  2076  003FC8  6FEC               	movwf	sprintf@ap& (0+255),b
  2077  003FCA  0E00               	movlw	high (?_sprintf+4)
  2078  003FCC  6FED               	movwf	(sprintf@ap+1)& (0+255),b
  2079  003FCE  C0E4  F0EE         	movff	sprintf@s,sprintf@f
  2080  003FD2  C0E5  F0EF         	movff	sprintf@s+1,sprintf@f+1
  2081  003FD6                     
  2082                           ; BSR set to: 0
  2083  003FD6  0E00               	movlw	0
  2084  003FD8  6FF2               	movwf	(sprintf@f+4)& (0+255),b
  2085  003FDA  0E00               	movlw	0
  2086  003FDC  6FF1               	movwf	(sprintf@f+3)& (0+255),b
  2087  003FDE                     
  2088                           ; BSR set to: 0
  2089  003FDE  0E00               	movlw	0
  2090  003FE0  6FF8               	movwf	(sprintf@f+10)& (0+255),b
  2091  003FE2  0E00               	movlw	0
  2092  003FE4  6FF7               	movwf	(sprintf@f+9)& (0+255),b
  2093  003FE6                     
  2094                           ; BSR set to: 0
  2095  003FE6  0EEE               	movlw	low sprintf@f
  2096  003FE8  6FDE               	movwf	vfprintf@fp& (0+255),b
  2097  003FEA  0E00               	movlw	high sprintf@f
  2098  003FEC  6FDF               	movwf	(vfprintf@fp+1)& (0+255),b
  2099  003FEE  C0E6  F0E0         	movff	sprintf@fmt,vfprintf@fmt
  2100  003FF2  C0E7  F0E1         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2101  003FF6  0EEC               	movlw	low sprintf@ap
  2102  003FF8  6FE2               	movwf	vfprintf@ap& (0+255),b
  2103  003FFA  0E00               	movlw	high sprintf@ap
  2104  003FFC  6FE3               	movwf	(vfprintf@ap+1)& (0+255),b
  2105  003FFE  EC83  F01F         	call	_vfprintf	;wreg free
  2106  004002  0100               	movlb	0	; () banked
  2107  004004  51F1               	movf	(sprintf@f+3)& (0+255),w,b
  2108  004006  25E4               	addwf	sprintf@s& (0+255),w,b
  2109  004008  6ED9               	movwf	fsr2l,c
  2110  00400A  51F2               	movf	(sprintf@f+4)& (0+255),w,b
  2111  00400C  21E5               	addwfc	(sprintf@s+1)& (0+255),w,b
  2112  00400E  6EDA               	movwf	fsr2h,c
  2113  004010  0E00               	movlw	0
  2114  004012  6EDF               	movwf	indf2,c
  2115  004014                     
  2116                           ; BSR set to: 0
  2117  004014  0012               	return		;funcret
  2118  004016                     __end_of_sprintf:
  2119                           	callstack 0
  2120                           
  2121 ;; *************** function _vfprintf *****************
  2122 ;; Defined at:
  2123 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2124 ;; Parameters:    Size  Location     Type
  2125 ;;  fp              2   18[BANK0 ] PTR struct _IO_FILE
  2126 ;;		 -> sprintf@f(11), 
  2127 ;;  fmt             2   20[BANK0 ] PTR const unsigned char 
  2128 ;;		 -> STR_8(5), STR_7(5), STR_6(5), STR_5(5), 
  2129 ;;		 -> STR_2(15), STR_1(15), 
  2130 ;;  ap              2   22[BANK0 ] PTR PTR void 
  2131 ;;		 -> sprintf@ap(2), 
  2132 ;; Auto vars:     Size  Location     Type
  2133 ;;  cfmt            2  123[COMRAM] PTR unsigned char 
  2134 ;;		 -> STR_8(5), STR_7(5), STR_6(5), STR_5(5), 
  2135 ;;		 -> STR_2(15), STR_1(15), 
  2136 ;; Return value:  Size  Location     Type
  2137 ;;                  2   18[BANK0 ] int 
  2138 ;; Registers used:
  2139 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2140 ;; Tracked objects:
  2141 ;;		On entry : 0/0
  2142 ;;		On exit  : 0/0
  2143 ;;		Unchanged: 0/0
  2144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2145 ;;      Params:         0       6       0       0       0       0       0
  2146 ;;      Locals:         2       0       0       0       0       0       0
  2147 ;;      Temps:          0       0       0       0       0       0       0
  2148 ;;      Totals:         2       6       0       0       0       0       0
  2149 ;;Total ram usage:        8 bytes
  2150 ;; Hardware stack levels used: 1
  2151 ;; Hardware stack levels required when called: 6
  2152 ;; This function calls:
  2153 ;;		_vfpfcnvrt
  2154 ;; This function is called by:
  2155 ;;		_sprintf
  2156 ;; This function uses a non-reentrant model
  2157 ;;
  2158                           
  2159                           	psect	text7
  2160  003F06                     __ptext7:
  2161                           	callstack 0
  2162  003F06                     _vfprintf:
  2163                           	callstack 22
  2164  003F06                     
  2165                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2166  003F06  C0E0  F07C         	movff	vfprintf@fmt,vfprintf@cfmt
  2167  003F0A  C0E1  F07D         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2168  003F0E                     
  2169                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2170  003F0E  0E00               	movlw	0
  2171  003F10  0100               	movlb	0	; () banked
  2172  003F12  6F8D               	movwf	(_nout+1)& (0+255),b
  2173  003F14  0E00               	movlw	0
  2174  003F16  6F8C               	movwf	_nout& (0+255),b
  2175                           
  2176                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2177  003F18  EFA1  F01F         	goto	l4414
  2178  003F1C                     l4412:
  2179                           
  2180                           ; BSR set to: 0
  2181                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2182  003F1C  C0DE  F072         	movff	vfprintf@fp,vfpfcnvrt@fp
  2183  003F20  C0DF  F073         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2184  003F24  0E7C               	movlw	low vfprintf@cfmt
  2185  003F26  6E74               	movwf	vfpfcnvrt@fmt^0,c
  2186  003F28  0E00               	movlw	high vfprintf@cfmt
  2187  003F2A  6E75               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2188  003F2C  C0E2  F076         	movff	vfprintf@ap,vfpfcnvrt@ap
  2189  003F30  C0E3  F077         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2190  003F34  EC31  F009         	call	_vfpfcnvrt	;wreg free
  2191  003F38  5072               	movf	?_vfpfcnvrt^0,w,c
  2192  003F3A  0100               	movlb	0	; () banked
  2193  003F3C  278C               	addwf	_nout& (0+255),f,b
  2194  003F3E  5073               	movf	(?_vfpfcnvrt+1)^0,w,c
  2195  003F40  238D               	addwfc	(_nout+1)& (0+255),f,b
  2196  003F42                     l4414:
  2197                           
  2198                           ; BSR set to: 0
  2199                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2200  003F42  C07C  FFF6         	movff	vfprintf@cfmt,tblptrl
  2201  003F46  C07D  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2202  003F4A                     	if	0	;tblptru may be non-zero
  2203  003F4A                     	endif
  2204  003F4A                     	if	0	;tblptru may be non-zero
  2205  003F4A                     	endif
  2206  003F4A  0008               	tblrd		*
  2207  003F4C  50F5               	movf	tablat,w,c
  2208  003F4E  0900               	iorlw	0
  2209  003F50  A4D8               	btfss	status,2,c
  2210  003F52  EFAD  F01F         	goto	u5361
  2211  003F56  EFAF  F01F         	goto	u5360
  2212  003F5A                     u5361:
  2213  003F5A  EF8E  F01F         	goto	l4412
  2214  003F5E                     u5360:
  2215  003F5E                     
  2216                           ; BSR set to: 0
  2217                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  2218  003F5E  C08C  F0DE         	movff	_nout,?_vfprintf
  2219  003F62  C08D  F0DF         	movff	_nout+1,?_vfprintf+1
  2220  003F66                     
  2221                           ; BSR set to: 0
  2222  003F66  0012               	return		;funcret
  2223  003F68                     __end_of_vfprintf:
  2224                           	callstack 0
  2225                           
  2226 ;; *************** function _vfpfcnvrt *****************
  2227 ;; Defined at:
  2228 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2229 ;; Parameters:    Size  Location     Type
  2230 ;;  fp              2  113[COMRAM] PTR struct _IO_FILE
  2231 ;;		 -> sprintf@f(11), 
  2232 ;;  fmt             2  115[COMRAM] PTR PTR unsigned char 
  2233 ;;		 -> vfprintf@cfmt(2), 
  2234 ;;  ap              2  117[COMRAM] PTR PTR void 
  2235 ;;		 -> sprintf@ap(2), 
  2236 ;; Auto vars:     Size  Location     Type
  2237 ;;  ll              8    0[BANK0 ] long long 
  2238 ;;  llu             8    0        unsigned long long 
  2239 ;;  f               4   10[BANK0 ] unsigned long long 
  2240 ;;  ct              3   14[BANK0 ] unsigned char [3]
  2241 ;;  vp              3    0        PTR void 
  2242 ;;  cp              3    0        PTR unsigned char 
  2243 ;;  done            2    8[BANK0 ] int 
  2244 ;;  i               2    0        int 
  2245 ;;  c               1   17[BANK0 ] unsigned char 
  2246 ;; Return value:  Size  Location     Type
  2247 ;;                  2  113[COMRAM] int 
  2248 ;; Registers used:
  2249 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2250 ;; Tracked objects:
  2251 ;;		On entry : 0/0
  2252 ;;		On exit  : 0/0
  2253 ;;		Unchanged: 0/0
  2254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2255 ;;      Params:         6       0       0       0       0       0       0
  2256 ;;      Locals:         0      18       0       0       0       0       0
  2257 ;;      Temps:          4       0       0       0       0       0       0
  2258 ;;      Totals:        10      18       0       0       0       0       0
  2259 ;;Total ram usage:       28 bytes
  2260 ;; Hardware stack levels used: 1
  2261 ;; Hardware stack levels required when called: 5
  2262 ;; This function calls:
  2263 ;;		_atoi
  2264 ;;		_dtoa
  2265 ;;		_efgtoa
  2266 ;;		_fputc
  2267 ;;		_isdigit
  2268 ;;		_isupper
  2269 ;;		_strncmp
  2270 ;;		_tolower
  2271 ;; This function is called by:
  2272 ;;		_vfprintf
  2273 ;; This function uses a non-reentrant model
  2274 ;;
  2275                           
  2276                           	psect	text8
  2277  001262                     __ptext8:
  2278                           	callstack 0
  2279  001262                     _vfpfcnvrt:
  2280                           	callstack 22
  2281  001262                     
  2282                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.36\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2283  001262  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2284  001266  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2285  00126A  CFDE FFF6          	movff	postinc2,tblptrl
  2286  00126E  CFDD FFF7          	movff	postdec2,tblptrh
  2287  001272                     	if	0	;tblptru may be non-zero
  2288  001272                     	endif
  2289  001272                     	if	0	;tblptru may be non-zero
  2290  001272                     	endif
  2291  001272  0008               	tblrd		*
  2292  001274  50F5               	movf	tablat,w,c
  2293  001276  0A25               	xorlw	37
  2294  001278  A4D8               	btfss	status,2,c
  2295  00127A  EF41  F009         	goto	u5181
  2296  00127E  EF43  F009         	goto	u5180
  2297  001282                     u5181:
  2298  001282  EF61  F00C         	goto	l4382
  2299  001286                     u5180:
  2300  001286                     
  2301                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2302  001286  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2303  00128A  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2304  00128E  2ADE               	incf	postinc2,f,c
  2305  001290  0E00               	movlw	0
  2306  001292  22DD               	addwfc	postdec2,f,c
  2307  001294                     
  2308                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2309  001294  0E00               	movlw	0
  2310  001296  0100               	movlb	0	; () banked
  2311  001298  6F8F               	movwf	(_width+1)& (0+255),b
  2312  00129A  0E00               	movlw	0
  2313  00129C  6F8E               	movwf	_width& (0+255),b
  2314  00129E  C08E  F07E         	movff	_width,_flags
  2315  0012A2  C08F  F07F         	movff	_width+1,_flags+1
  2316  0012A6                     
  2317                           ; BSR set to: 0
  2318                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2319  0012A6  6990               	setf	_prec& (0+255),b
  2320  0012A8  6991               	setf	(_prec+1)& (0+255),b
  2321  0012AA                     
  2322                           ; BSR set to: 0
  2323                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  2324  0012AA  0E00               	movlw	0
  2325  0012AC  6FD5               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2326  0012AE  0E00               	movlw	0
  2327  0012B0  6FD4               	movwf	vfpfcnvrt@done& (0+255),b
  2328                           
  2329                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  2330  0012B2  EFA1  F009         	goto	l4280
  2331  0012B6                     l4254:
  2332                           
  2333                           ; BSR set to: 0
  2334                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  2335  0012B6  807E               	bsf	_flags^0,0,c
  2336  0012B8                     l4256:
  2337                           
  2338                           ; BSR set to: 0
  2339                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  2340  0012B8  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2341  0012BC  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2342  0012C0  2ADE               	incf	postinc2,f,c
  2343  0012C2  0E00               	movlw	0
  2344  0012C4  22DD               	addwfc	postdec2,f,c
  2345                           
  2346                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  2347  0012C6  EFA1  F009         	goto	l4280
  2348  0012CA                     l4258:
  2349                           
  2350                           ; BSR set to: 0
  2351                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  2352  0012CA  827E               	bsf	_flags^0,1,c
  2353  0012CC  EF5C  F009         	goto	l4256
  2354  0012D0                     l4262:
  2355                           
  2356                           ; BSR set to: 0
  2357                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  2358  0012D0  847E               	bsf	_flags^0,2,c
  2359  0012D2  EF5C  F009         	goto	l4256
  2360  0012D6                     l4266:
  2361                           
  2362                           ; BSR set to: 0
  2363                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  2364  0012D6  867E               	bsf	_flags^0,3,c
  2365  0012D8  EF5C  F009         	goto	l4256
  2366  0012DC                     l4270:
  2367                           
  2368                           ; BSR set to: 0
  2369                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  2370  0012DC  887E               	bsf	_flags^0,4,c
  2371  0012DE  EF5C  F009         	goto	l4256
  2372  0012E2                     l4274:
  2373                           
  2374                           ; BSR set to: 0
  2375                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  2376  0012E2  0E00               	movlw	0
  2377  0012E4  6FD5               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2378  0012E6  0E01               	movlw	1
  2379  0012E8  6FD4               	movwf	vfpfcnvrt@done& (0+255),b
  2380                           
  2381                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  2382  0012EA  EFA1  F009         	goto	l4280
  2383  0012EE                     l4278:
  2384                           
  2385                           ; BSR set to: 0
  2386  0012EE  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2387  0012F2  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2388  0012F6  CFDE FFF6          	movff	postinc2,tblptrl
  2389  0012FA  CFDD FFF7          	movff	postdec2,tblptrh
  2390  0012FE                     	if	0	;tblptru may be non-zero
  2391  0012FE                     	endif
  2392  0012FE                     	if	0	;tblptru may be non-zero
  2393  0012FE                     	endif
  2394  0012FE  0008               	tblrd		*
  2395  001300  50F5               	movf	tablat,w,c
  2396  001302  6E78               	movwf	??_vfpfcnvrt^0,c
  2397  001304  6A79               	clrf	(??_vfpfcnvrt+1)^0,c
  2398                           
  2399                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2400                           ; Switch size 1, requested type "simple"
  2401                           ; Number of cases is 1, Range of values is 0 to 0
  2402                           ; switch strategies available:
  2403                           ; Name         Instructions Cycles
  2404                           ; simple_byte            4     3 (average)
  2405                           ;	Chosen strategy is simple_byte
  2406  001306  5079               	movf	(??_vfpfcnvrt+1)^0,w,c
  2407  001308  0A00               	xorlw	0	; case 0
  2408  00130A  B4D8               	btfsc	status,2,c
  2409  00130C  EF8A  F009         	goto	l4692
  2410  001310  EF71  F009         	goto	l4274
  2411  001314                     l4692:
  2412                           
  2413                           ; BSR set to: 0
  2414                           ; Switch size 1, requested type "simple"
  2415                           ; Number of cases is 5, Range of values is 32 to 48
  2416                           ; switch strategies available:
  2417                           ; Name         Instructions Cycles
  2418                           ; simple_byte           16     9 (average)
  2419                           ;	Chosen strategy is simple_byte
  2420  001314  5078               	movf	??_vfpfcnvrt^0,w,c
  2421  001316  0A20               	xorlw	32	; case 32
  2422  001318  B4D8               	btfsc	status,2,c
  2423  00131A  EF6B  F009         	goto	l4266
  2424  00131E  0A03               	xorlw	3	; case 35
  2425  001320  B4D8               	btfsc	status,2,c
  2426  001322  EF6E  F009         	goto	l4270
  2427  001326  0A08               	xorlw	8	; case 43
  2428  001328  B4D8               	btfsc	status,2,c
  2429  00132A  EF68  F009         	goto	l4262
  2430  00132E  0A06               	xorlw	6	; case 45
  2431  001330  B4D8               	btfsc	status,2,c
  2432  001332  EF5B  F009         	goto	l4254
  2433  001336  0A1D               	xorlw	29	; case 48
  2434  001338  B4D8               	btfsc	status,2,c
  2435  00133A  EF65  F009         	goto	l4258
  2436  00133E  EF71  F009         	goto	l4274
  2437  001342                     l4280:
  2438                           
  2439                           ; BSR set to: 0
  2440                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  2441  001342  51D4               	movf	vfpfcnvrt@done& (0+255),w,b
  2442  001344  11D5               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  2443  001346  B4D8               	btfsc	status,2,c
  2444  001348  EFA8  F009         	goto	u5191
  2445  00134C  EFAA  F009         	goto	u5190
  2446  001350                     u5191:
  2447  001350  EF77  F009         	goto	l4278
  2448  001354                     u5190:
  2449  001354                     
  2450                           ; BSR set to: 0
  2451                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  2452  001354  A07E               	btfss	_flags^0,0,c
  2453  001356  EFAF  F009         	goto	u5201
  2454  00135A  EFB1  F009         	goto	u5200
  2455  00135E                     u5201:
  2456  00135E  EFB2  F009         	goto	l4284
  2457  001362                     u5200:
  2458  001362                     
  2459                           ; BSR set to: 0
  2460                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  2461  001362  927E               	bcf	_flags^0,1,c
  2462  001364                     l4284:
  2463                           
  2464                           ; BSR set to: 0
  2465                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  2466  001364  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2467  001368  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2468  00136C  CFDE FFF6          	movff	postinc2,tblptrl
  2469  001370  CFDD FFF7          	movff	postdec2,tblptrh
  2470  001374                     	if	0	;tblptru may be non-zero
  2471  001374                     	endif
  2472  001374                     	if	0	;tblptru may be non-zero
  2473  001374                     	endif
  2474  001374  0008               	tblrd		*
  2475  001376  50F5               	movf	tablat,w,c
  2476  001378  0A2A               	xorlw	42
  2477  00137A  A4D8               	btfss	status,2,c
  2478  00137C  EFC2  F009         	goto	u5211
  2479  001380  EFC4  F009         	goto	u5210
  2480  001384                     u5211:
  2481  001384  EFED  F009         	goto	l4292
  2482  001388                     u5210:
  2483  001388                     
  2484                           ; BSR set to: 0
  2485                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  2486  001388  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2487  00138C  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2488  001390  2ADE               	incf	postinc2,f,c
  2489  001392  0E00               	movlw	0
  2490  001394  22DD               	addwfc	postdec2,f,c
  2491                           
  2492                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  2493  001396  C076  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2494  00139A  C077  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2495  00139E  CFDF F078          	movff	indf2,??_vfpfcnvrt
  2496  0013A2  0E02               	movlw	2
  2497  0013A4  26DE               	addwf	postinc2,f,c
  2498  0013A6  CFDF F079          	movff	indf2,??_vfpfcnvrt+1
  2499  0013AA  0E00               	movlw	0
  2500  0013AC  22DD               	addwfc	postdec2,f,c
  2501  0013AE  C078  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2502  0013B2  C079  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2503  0013B6  CFDE F08E          	movff	postinc2,_width
  2504  0013BA  CFDD F08F          	movff	postdec2,_width+1
  2505  0013BE                     
  2506                           ; BSR set to: 0
  2507                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  2508  0013BE  BF8F               	btfsc	(_width+1)& (0+255),7,b
  2509  0013C0  EFE6  F009         	goto	u5220
  2510  0013C4  EFE4  F009         	goto	u5221
  2511  0013C8                     u5221:
  2512  0013C8  EF23  F00A         	goto	l4300
  2513  0013CC                     u5220:
  2514  0013CC                     
  2515                           ; BSR set to: 0
  2516                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  2517  0013CC  807E               	bsf	_flags^0,0,c
  2518                           
  2519                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  2520  0013CE  6D8E               	negf	_width& (0+255),b
  2521  0013D0  1F8F               	comf	(_width+1)& (0+255),f,b
  2522  0013D2  B0D8               	btfsc	status,0,c
  2523  0013D4  2B8F               	incf	(_width+1)& (0+255),f,b
  2524  0013D6  EF23  F00A         	goto	l4300
  2525  0013DA                     l4292:
  2526                           
  2527                           ; BSR set to: 0
  2528                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  2529  0013DA  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2530  0013DE  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2531  0013E2  CFDE F008          	movff	postinc2,atoi@s
  2532  0013E6  CFDD F009          	movff	postdec2,atoi@s+1
  2533  0013EA  ECFE  F018         	call	_atoi	;wreg free
  2534  0013EE  C008  F08E         	movff	?_atoi,_width
  2535  0013F2  C009  F08F         	movff	?_atoi+1,_width+1
  2536                           
  2537                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  2538  0013F6  EF04  F00A         	goto	l4298
  2539  0013FA                     l4294:
  2540                           
  2541                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  2542  0013FA  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2543  0013FE  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2544  001402  2ADE               	incf	postinc2,f,c
  2545  001404  0E00               	movlw	0
  2546  001406  22DD               	addwfc	postdec2,f,c
  2547  001408                     l4298:
  2548  001408  0ED0               	movlw	208
  2549  00140A  6E78               	movwf	??_vfpfcnvrt^0,c
  2550  00140C  0EFF               	movlw	255
  2551  00140E  6E79               	movwf	(??_vfpfcnvrt+1)^0,c
  2552  001410  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2553  001414  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2554  001418  CFDE FFF6          	movff	postinc2,tblptrl
  2555  00141C  CFDD FFF7          	movff	postdec2,tblptrh
  2556  001420                     	if	0	;tblptru may be non-zero
  2557  001420                     	endif
  2558  001420                     	if	0	;tblptru may be non-zero
  2559  001420                     	endif
  2560  001420  0008               	tblrd		*
  2561  001422  50F5               	movf	tablat,w,c
  2562  001424  6E7A               	movwf	(??_vfpfcnvrt+2)^0,c
  2563  001426  6A7B               	clrf	(??_vfpfcnvrt+3)^0,c
  2564  001428  5078               	movf	??_vfpfcnvrt^0,w,c
  2565  00142A  267A               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2566  00142C  5079               	movf	(??_vfpfcnvrt+1)^0,w,c
  2567  00142E  227B               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2568  001430  507B               	movf	(??_vfpfcnvrt+3)^0,w,c
  2569  001432  E109               	bnz	u5230
  2570  001434  0E0A               	movlw	10
  2571  001436  5C7A               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2572  001438  A0D8               	btfss	status,0,c
  2573  00143A  EF21  F00A         	goto	u5231
  2574  00143E  EF23  F00A         	goto	u5230
  2575  001442                     u5231:
  2576  001442  EFFD  F009         	goto	l4294
  2577  001446                     u5230:
  2578  001446                     l4300:
  2579                           
  2580                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  2581  001446  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2582  00144A  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2583  00144E  CFDE FFF6          	movff	postinc2,tblptrl
  2584  001452  CFDD FFF7          	movff	postdec2,tblptrh
  2585  001456                     	if	0	;tblptru may be non-zero
  2586  001456                     	endif
  2587  001456                     	if	0	;tblptru may be non-zero
  2588  001456                     	endif
  2589  001456  0008               	tblrd		*
  2590  001458  50F5               	movf	tablat,w,c
  2591  00145A  0A2E               	xorlw	46
  2592  00145C  A4D8               	btfss	status,2,c
  2593  00145E  EF33  F00A         	goto	u5241
  2594  001462  EF35  F00A         	goto	u5240
  2595  001466                     u5241:
  2596  001466  EFA6  F00A         	goto	l4318
  2597  00146A                     u5240:
  2598  00146A                     
  2599                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  2600  00146A  0E00               	movlw	0
  2601  00146C  0100               	movlb	0	; () banked
  2602  00146E  6F91               	movwf	(_prec+1)& (0+255),b
  2603  001470  0E00               	movlw	0
  2604  001472  6F90               	movwf	_prec& (0+255),b
  2605  001474                     
  2606                           ; BSR set to: 0
  2607                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  2608  001474  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2609  001478  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2610  00147C  2ADE               	incf	postinc2,f,c
  2611  00147E  0E00               	movlw	0
  2612  001480  22DD               	addwfc	postdec2,f,c
  2613  001482                     
  2614                           ; BSR set to: 0
  2615                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  2616  001482  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2617  001486  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2618  00148A  CFDE FFF6          	movff	postinc2,tblptrl
  2619  00148E  CFDD FFF7          	movff	postdec2,tblptrh
  2620  001492                     	if	0	;tblptru may be non-zero
  2621  001492                     	endif
  2622  001492                     	if	0	;tblptru may be non-zero
  2623  001492                     	endif
  2624  001492  0008               	tblrd		*
  2625  001494  50F5               	movf	tablat,w,c
  2626  001496  0A2A               	xorlw	42
  2627  001498  A4D8               	btfss	status,2,c
  2628  00149A  EF51  F00A         	goto	u5251
  2629  00149E  EF53  F00A         	goto	u5250
  2630  0014A2                     u5251:
  2631  0014A2  EF70  F00A         	goto	l4310
  2632  0014A6                     u5250:
  2633  0014A6                     
  2634                           ; BSR set to: 0
  2635                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  2636  0014A6  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2637  0014AA  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2638  0014AE  2ADE               	incf	postinc2,f,c
  2639  0014B0  0E00               	movlw	0
  2640  0014B2  22DD               	addwfc	postdec2,f,c
  2641                           
  2642                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  2643  0014B4  C076  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2644  0014B8  C077  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2645  0014BC  CFDF F078          	movff	indf2,??_vfpfcnvrt
  2646  0014C0  0E02               	movlw	2
  2647  0014C2  26DE               	addwf	postinc2,f,c
  2648  0014C4  CFDF F079          	movff	indf2,??_vfpfcnvrt+1
  2649  0014C8  0E00               	movlw	0
  2650  0014CA  22DD               	addwfc	postdec2,f,c
  2651  0014CC  C078  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2652  0014D0  C079  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2653  0014D4  CFDE F090          	movff	postinc2,_prec
  2654  0014D8  CFDD F091          	movff	postdec2,_prec+1
  2655                           
  2656                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  2657  0014DC  EFA6  F00A         	goto	l4318
  2658  0014E0                     l4310:
  2659                           
  2660                           ; BSR set to: 0
  2661                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  2662  0014E0  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2663  0014E4  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2664  0014E8  CFDE F008          	movff	postinc2,atoi@s
  2665  0014EC  CFDD F009          	movff	postdec2,atoi@s+1
  2666  0014F0  ECFE  F018         	call	_atoi	;wreg free
  2667  0014F4  C008  F090         	movff	?_atoi,_prec
  2668  0014F8  C009  F091         	movff	?_atoi+1,_prec+1
  2669                           
  2670                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  2671  0014FC  EF87  F00A         	goto	l4316
  2672  001500                     l4312:
  2673                           
  2674                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  2675  001500  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2676  001504  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2677  001508  2ADE               	incf	postinc2,f,c
  2678  00150A  0E00               	movlw	0
  2679  00150C  22DD               	addwfc	postdec2,f,c
  2680  00150E                     l4316:
  2681  00150E  0ED0               	movlw	208
  2682  001510  6E78               	movwf	??_vfpfcnvrt^0,c
  2683  001512  0EFF               	movlw	255
  2684  001514  6E79               	movwf	(??_vfpfcnvrt+1)^0,c
  2685  001516  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2686  00151A  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2687  00151E  CFDE FFF6          	movff	postinc2,tblptrl
  2688  001522  CFDD FFF7          	movff	postdec2,tblptrh
  2689  001526                     	if	0	;tblptru may be non-zero
  2690  001526                     	endif
  2691  001526                     	if	0	;tblptru may be non-zero
  2692  001526                     	endif
  2693  001526  0008               	tblrd		*
  2694  001528  50F5               	movf	tablat,w,c
  2695  00152A  6E7A               	movwf	(??_vfpfcnvrt+2)^0,c
  2696  00152C  6A7B               	clrf	(??_vfpfcnvrt+3)^0,c
  2697  00152E  5078               	movf	??_vfpfcnvrt^0,w,c
  2698  001530  267A               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2699  001532  5079               	movf	(??_vfpfcnvrt+1)^0,w,c
  2700  001534  227B               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2701  001536  507B               	movf	(??_vfpfcnvrt+3)^0,w,c
  2702  001538  E109               	bnz	u5260
  2703  00153A  0E0A               	movlw	10
  2704  00153C  5C7A               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2705  00153E  A0D8               	btfss	status,0,c
  2706  001540  EFA4  F00A         	goto	u5261
  2707  001544  EFA6  F00A         	goto	u5260
  2708  001548                     u5261:
  2709  001548  EF80  F00A         	goto	l4312
  2710  00154C                     u5260:
  2711  00154C                     l4318:
  2712                           
  2713                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  2714  00154C  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2715  001550  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2716  001554  CFDE FFF6          	movff	postinc2,tblptrl
  2717  001558  CFDD FFF7          	movff	postdec2,tblptrh
  2718  00155C                     	if	0	;tblptru may be non-zero
  2719  00155C                     	endif
  2720  00155C                     	if	0	;tblptru may be non-zero
  2721  00155C                     	endif
  2722  00155C  0008               	tblrd		*
  2723  00155E  50F5               	movf	tablat,w,c
  2724  001560  6E07               	movwf	tolower@c^0,c
  2725  001562  6A08               	clrf	(tolower@c+1)^0,c
  2726  001564  EC34  F020         	call	_tolower	;wreg free
  2727  001568  5007               	movf	?_tolower^0,w,c
  2728  00156A  0100               	movlb	0	; () banked
  2729  00156C  6FDA               	movwf	vfpfcnvrt@ct& (0+255),b
  2730  00156E                     
  2731                           ; BSR set to: 0
  2732                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  2733  00156E  51DA               	movf	vfpfcnvrt@ct& (0+255),w,b
  2734  001570  B4D8               	btfsc	status,2,c
  2735  001572  EFBD  F00A         	goto	u5271
  2736  001576  EFBF  F00A         	goto	u5270
  2737  00157A                     u5271:
  2738  00157A  EFF9  F00A         	goto	l4328
  2739  00157E                     u5270:
  2740  00157E                     
  2741                           ; BSR set to: 0
  2742                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  2743  00157E  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2744  001582  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2745  001586  CFDE F078          	movff	postinc2,??_vfpfcnvrt
  2746  00158A  CFDD F079          	movff	postdec2,??_vfpfcnvrt+1
  2747  00158E  0E01               	movlw	1
  2748  001590  2678               	addwf	??_vfpfcnvrt^0,f,c
  2749  001592  0E00               	movlw	0
  2750  001594  2279               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2751  001596  C078  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2752  00159A  C079  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2753  00159E                     	if	0	;tblptru may be non-zero
  2754  00159E                     	endif
  2755  00159E                     	if	0	;tblptru may be non-zero
  2756  00159E                     	endif
  2757  00159E  0008               	tblrd		*
  2758  0015A0  50F5               	movf	tablat,w,c
  2759  0015A2  6E07               	movwf	tolower@c^0,c
  2760  0015A4  6A08               	clrf	(tolower@c+1)^0,c
  2761  0015A6  EC34  F020         	call	_tolower	;wreg free
  2762  0015AA  5007               	movf	?_tolower^0,w,c
  2763  0015AC  0100               	movlb	0	; () banked
  2764  0015AE  6FDB               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  2765  0015B0                     
  2766                           ; BSR set to: 0
  2767                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  2768  0015B0  51DB               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  2769  0015B2  B4D8               	btfsc	status,2,c
  2770  0015B4  EFDE  F00A         	goto	u5281
  2771  0015B8  EFE0  F00A         	goto	u5280
  2772  0015BC                     u5281:
  2773  0015BC  EFF9  F00A         	goto	l4328
  2774  0015C0                     u5280:
  2775  0015C0                     
  2776                           ; BSR set to: 0
  2777                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  2778  0015C0  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2779  0015C4  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2780  0015C8  CFDE F078          	movff	postinc2,??_vfpfcnvrt
  2781  0015CC  CFDD F079          	movff	postdec2,??_vfpfcnvrt+1
  2782  0015D0  0E02               	movlw	2
  2783  0015D2  2678               	addwf	??_vfpfcnvrt^0,f,c
  2784  0015D4  0E00               	movlw	0
  2785  0015D6  2279               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2786  0015D8  C078  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2787  0015DC  C079  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2788  0015E0                     	if	0	;tblptru may be non-zero
  2789  0015E0                     	endif
  2790  0015E0                     	if	0	;tblptru may be non-zero
  2791  0015E0                     	endif
  2792  0015E0  0008               	tblrd		*
  2793  0015E2  50F5               	movf	tablat,w,c
  2794  0015E4  6E07               	movwf	tolower@c^0,c
  2795  0015E6  6A08               	clrf	(tolower@c+1)^0,c
  2796  0015E8  EC34  F020         	call	_tolower	;wreg free
  2797  0015EC  5007               	movf	?_tolower^0,w,c
  2798  0015EE  0100               	movlb	0	; () banked
  2799  0015F0  6FDC               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  2800  0015F2                     l4328:
  2801                           
  2802                           ; BSR set to: 0
  2803                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2804  0015F2  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2805  0015F6  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2806  0015FA  CFDE FFF6          	movff	postinc2,tblptrl
  2807  0015FE  CFDD FFF7          	movff	postdec2,tblptrh
  2808  001602                     	if	0	;tblptru may be non-zero
  2809  001602                     	endif
  2810  001602                     	if	0	;tblptru may be non-zero
  2811  001602                     	endif
  2812  001602  0008               	tblrd		*
  2813  001604  50F5               	movf	tablat,w,c
  2814  001606  0A64               	xorlw	100
  2815  001608  B4D8               	btfsc	status,2,c
  2816  00160A  EF09  F00B         	goto	u5291
  2817  00160E  EF0B  F00B         	goto	u5290
  2818  001612                     u5291:
  2819  001612  EF1D  F00B         	goto	l4332
  2820  001616                     u5290:
  2821  001616                     
  2822                           ; BSR set to: 0
  2823  001616  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2824  00161A  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2825  00161E  CFDE FFF6          	movff	postinc2,tblptrl
  2826  001622  CFDD FFF7          	movff	postdec2,tblptrh
  2827  001626                     	if	0	;tblptru may be non-zero
  2828  001626                     	endif
  2829  001626                     	if	0	;tblptru may be non-zero
  2830  001626                     	endif
  2831  001626  0008               	tblrd		*
  2832  001628  50F5               	movf	tablat,w,c
  2833  00162A  0A69               	xorlw	105
  2834  00162C  A4D8               	btfss	status,2,c
  2835  00162E  EF1B  F00B         	goto	u5301
  2836  001632  EF1D  F00B         	goto	u5300
  2837  001636                     u5301:
  2838  001636  EF5D  F00B         	goto	l4338
  2839  00163A                     u5300:
  2840  00163A                     l4332:
  2841                           
  2842                           ; BSR set to: 0
  2843                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  2844  00163A  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2845  00163E  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2846  001642  2ADE               	incf	postinc2,f,c
  2847  001644  0E00               	movlw	0
  2848  001646  22DD               	addwfc	postdec2,f,c
  2849                           
  2850                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2851  001648  C076  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2852  00164C  C077  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2853  001650  CFDF F078          	movff	indf2,??_vfpfcnvrt
  2854  001654  0E02               	movlw	2
  2855  001656  26DE               	addwf	postinc2,f,c
  2856  001658  CFDF F079          	movff	indf2,??_vfpfcnvrt+1
  2857  00165C  0E00               	movlw	0
  2858  00165E  22DD               	addwfc	postdec2,f,c
  2859  001660  C078  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2860  001664  C079  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2861  001668  CFDE F0CC          	movff	postinc2,vfpfcnvrt@ll
  2862  00166C  CFDD F0CD          	movff	postdec2,vfpfcnvrt@ll+1
  2863  001670  0E00               	movlw	0
  2864  001672  BFCD               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  2865  001674  0EFF               	movlw	-1
  2866  001676  6FCE               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  2867  001678  6FCF               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  2868  00167A  6FD0               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  2869  00167C  6FD1               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  2870  00167E  6FD2               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  2871  001680  6FD3               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  2872  001682                     
  2873                           ; BSR set to: 0
  2874                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  2875  001682  C072  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2876  001686  C073  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2877  00168A  C0CC  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  2878  00168E  C0CD  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2879  001692  C0CE  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2880  001696  C0CF  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2881  00169A  C0D0  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2882  00169E  C0D1  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2883  0016A2  C0D2  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2884  0016A6  C0D3  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2885  0016AA  EC35  F014         	call	_dtoa	;wreg free
  2886  0016AE  C01C  F072         	movff	?_dtoa,?_vfpfcnvrt
  2887  0016B2  C01D  F073         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2888  0016B6  EF7C  F00C         	goto	l1026
  2889  0016BA                     l4338:
  2890                           
  2891                           ; BSR set to: 0
  2892                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  2893  0016BA  0E66               	movlw	102
  2894  0016BC  19DA               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  2895  0016BE  A4D8               	btfss	status,2,c
  2896  0016C0  EF64  F00B         	goto	u5311
  2897  0016C4  EF66  F00B         	goto	u5310
  2898  0016C8                     u5311:
  2899  0016C8  EFA6  F00B         	goto	l4350
  2900  0016CC                     u5310:
  2901  0016CC                     
  2902                           ; BSR set to: 0
  2903                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  2904  0016CC  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2905  0016D0  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2906  0016D4  CFDE FFF6          	movff	postinc2,tblptrl
  2907  0016D8  CFDD FFF7          	movff	postdec2,tblptrh
  2908  0016DC                     	if	0	;tblptru may be non-zero
  2909  0016DC                     	endif
  2910  0016DC                     	if	0	;tblptru may be non-zero
  2911  0016DC                     	endif
  2912  0016DC  0008               	tblrd		*
  2913  0016DE  CFF5 F0DD          	movff	tablat,vfpfcnvrt@c
  2914  0016E2                     
  2915                           ; BSR set to: 0
  2916                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  2917  0016E2  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2918  0016E6  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2919  0016EA  2ADE               	incf	postinc2,f,c
  2920  0016EC  0E00               	movlw	0
  2921  0016EE  22DD               	addwfc	postdec2,f,c
  2922  0016F0                     
  2923                           ; BSR set to: 0
  2924                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2925  0016F0  C076  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2926  0016F4  C077  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2927  0016F8  CFDF F078          	movff	indf2,??_vfpfcnvrt
  2928  0016FC  0E04               	movlw	4
  2929  0016FE  26DE               	addwf	postinc2,f,c
  2930  001700  CFDF F079          	movff	indf2,??_vfpfcnvrt+1
  2931  001704  0E00               	movlw	0
  2932  001706  22DD               	addwfc	postdec2,f,c
  2933  001708  C078  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2934  00170C  C079  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2935  001710  CFDE F0D6          	movff	postinc2,vfpfcnvrt@f
  2936  001714  CFDE F0D7          	movff	postinc2,vfpfcnvrt@f+1
  2937  001718  CFDE F0D8          	movff	postinc2,vfpfcnvrt@f+2
  2938  00171C  CFDE F0D9          	movff	postinc2,vfpfcnvrt@f+3
  2939  001720                     l4346:
  2940                           
  2941                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  2942  001720  C072  F034         	movff	vfpfcnvrt@fp,efgtoa@fp
  2943  001724  C073  F035         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2944  001728  C0D6  F036         	movff	vfpfcnvrt@f,efgtoa@f
  2945  00172C  C0D7  F037         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2946  001730  C0D8  F038         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2947  001734  C0D9  F039         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2948  001738  C0DD  F03A         	movff	vfpfcnvrt@c,efgtoa@c
  2949  00173C  EC3C  F003         	call	_efgtoa	;wreg free
  2950  001740  C034  F072         	movff	?_efgtoa,?_vfpfcnvrt
  2951  001744  C035  F073         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2952  001748  EF7C  F00C         	goto	l1026
  2953  00174C                     l4350:
  2954                           
  2955                           ; BSR set to: 0
  2956                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2957  00174C  0EDA               	movlw	low vfpfcnvrt@ct
  2958  00174E  6E01               	movwf	strncmp@_l^0,c
  2959  001750  0E00               	movlw	high vfpfcnvrt@ct
  2960  001752  6E02               	movwf	(strncmp@_l+1)^0,c
  2961  001754  0E73               	movlw	low STR_23
  2962  001756  6E03               	movwf	strncmp@_r^0,c
  2963  001758  0E06               	movlw	high STR_23
  2964  00175A  6E04               	movwf	(strncmp@_r+1)^0,c
  2965  00175C  0E00               	movlw	0
  2966  00175E  6E06               	movwf	(strncmp@n+1)^0,c
  2967  001760  0E02               	movlw	2
  2968  001762  6E05               	movwf	strncmp@n^0,c
  2969  001764  EC24  F01C         	call	_strncmp	;wreg free
  2970  001768  5001               	movf	?_strncmp^0,w,c
  2971  00176A  1002               	iorwf	(?_strncmp+1)^0,w,c
  2972  00176C  A4D8               	btfss	status,2,c
  2973  00176E  EFBB  F00B         	goto	u5321
  2974  001772  EFBD  F00B         	goto	u5320
  2975  001776                     u5321:
  2976  001776  EF2B  F00C         	goto	l4366
  2977  00177A                     u5320:
  2978  00177A                     
  2979                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 952:             
      +                          c = (*fmt)[1];
  2980  00177A  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2981  00177E  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2982  001782  CFDE F078          	movff	postinc2,??_vfpfcnvrt
  2983  001786  CFDD F079          	movff	postdec2,??_vfpfcnvrt+1
  2984  00178A  0E01               	movlw	1
  2985  00178C  2678               	addwf	??_vfpfcnvrt^0,f,c
  2986  00178E  0E00               	movlw	0
  2987  001790  2279               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2988  001792  C078  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2989  001796  C079  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2990  00179A                     	if	0	;tblptru may be non-zero
  2991  00179A                     	endif
  2992  00179A                     	if	0	;tblptru may be non-zero
  2993  00179A                     	endif
  2994  00179A  0008               	tblrd		*
  2995  00179C  CFF5 F0DD          	movff	tablat,vfpfcnvrt@c
  2996  0017A0  0EBF               	movlw	191
  2997  0017A2  6E78               	movwf	??_vfpfcnvrt^0,c
  2998  0017A4  0EFF               	movlw	255
  2999  0017A6  6E79               	movwf	(??_vfpfcnvrt+1)^0,c
  3000  0017A8  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3001  0017AC  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3002  0017B0  CFDE FFF6          	movff	postinc2,tblptrl
  3003  0017B4  CFDD FFF7          	movff	postdec2,tblptrh
  3004  0017B8                     	if	0	;tblptru may be non-zero
  3005  0017B8                     	endif
  3006  0017B8                     	if	0	;tblptru may be non-zero
  3007  0017B8                     	endif
  3008  0017B8  0008               	tblrd		*
  3009  0017BA  50F5               	movf	tablat,w,c
  3010  0017BC  6E7A               	movwf	(??_vfpfcnvrt+2)^0,c
  3011  0017BE  6A7B               	clrf	(??_vfpfcnvrt+3)^0,c
  3012  0017C0  5078               	movf	??_vfpfcnvrt^0,w,c
  3013  0017C2  267A               	addwf	(??_vfpfcnvrt+2)^0,f,c
  3014  0017C4  5079               	movf	(??_vfpfcnvrt+1)^0,w,c
  3015  0017C6  227B               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  3016  0017C8  507B               	movf	(??_vfpfcnvrt+3)^0,w,c
  3017  0017CA  E107               	bnz	u5331
  3018  0017CC  0E1A               	movlw	26
  3019  0017CE  5C7A               	subwf	(??_vfpfcnvrt+2)^0,w,c
  3020  0017D0  B0D8               	btfsc	status,0,c
  3021  0017D2  EFED  F00B         	goto	u5331
  3022  0017D6  EFEF  F00B         	goto	u5330
  3023  0017DA                     u5331:
  3024  0017DA  EF09  F00C         	goto	l4360
  3025  0017DE                     u5330:
  3026  0017DE                     
  3027                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3028  0017DE  C076  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3029  0017E2  C077  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3030  0017E6  CFDF F078          	movff	indf2,??_vfpfcnvrt
  3031  0017EA  0E04               	movlw	4
  3032  0017EC  26DE               	addwf	postinc2,f,c
  3033  0017EE  CFDF F079          	movff	indf2,??_vfpfcnvrt+1
  3034  0017F2  0E00               	movlw	0
  3035  0017F4  22DD               	addwfc	postdec2,f,c
  3036  0017F6  C078  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3037  0017FA  C079  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3038  0017FE  CFDE F0D6          	movff	postinc2,vfpfcnvrt@f
  3039  001802  CFDE F0D7          	movff	postinc2,vfpfcnvrt@f+1
  3040  001806  CFDE F0D8          	movff	postinc2,vfpfcnvrt@f+2
  3041  00180A  CFDE F0D9          	movff	postinc2,vfpfcnvrt@f+3
  3042                           
  3043                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  3044  00180E  EF21  F00C         	goto	l1032
  3045  001812                     l4360:
  3046                           
  3047                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3048  001812  C076  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3049  001816  C077  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3050  00181A  CFDF F078          	movff	indf2,??_vfpfcnvrt
  3051  00181E  0E04               	movlw	4
  3052  001820  26DE               	addwf	postinc2,f,c
  3053  001822  CFDF F079          	movff	indf2,??_vfpfcnvrt+1
  3054  001826  0E00               	movlw	0
  3055  001828  22DD               	addwfc	postdec2,f,c
  3056  00182A  C078  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3057  00182E  C079  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3058  001832  CFDE F0D6          	movff	postinc2,vfpfcnvrt@f
  3059  001836  CFDE F0D7          	movff	postinc2,vfpfcnvrt@f+1
  3060  00183A  CFDE F0D8          	movff	postinc2,vfpfcnvrt@f+2
  3061  00183E  CFDE F0D9          	movff	postinc2,vfpfcnvrt@f+3
  3062  001842                     l1032:
  3063                           
  3064                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  3065  001842  0E02               	movlw	2
  3066  001844  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3067  001848  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3068  00184C  26DE               	addwf	postinc2,f,c
  3069  00184E  0E00               	movlw	0
  3070  001850  22DD               	addwfc	postdec2,f,c
  3071  001852  EF90  F00B         	goto	l4346
  3072  001856                     l4366:
  3073                           
  3074                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  3075  001856  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3076  00185A  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3077  00185E  CFDE FFF6          	movff	postinc2,tblptrl
  3078  001862  CFDD FFF7          	movff	postdec2,tblptrh
  3079  001866                     	if	0	;tblptru may be non-zero
  3080  001866                     	endif
  3081  001866                     	if	0	;tblptru may be non-zero
  3082  001866                     	endif
  3083  001866  0008               	tblrd		*
  3084  001868  50F5               	movf	tablat,w,c
  3085  00186A  0A25               	xorlw	37
  3086  00186C  A4D8               	btfss	status,2,c
  3087  00186E  EF3B  F00C         	goto	u5341
  3088  001872  EF3D  F00C         	goto	u5340
  3089  001876                     u5341:
  3090  001876  EF54  F00C         	goto	l4376
  3091  00187A                     u5340:
  3092  00187A                     
  3093                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  3094  00187A  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3095  00187E  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3096  001882  2ADE               	incf	postinc2,f,c
  3097  001884  0E00               	movlw	0
  3098  001886  22DD               	addwfc	postdec2,f,c
  3099  001888                     
  3100                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  3101  001888  0E00               	movlw	0
  3102  00188A  6E02               	movwf	(fputc@c+1)^0,c
  3103  00188C  0E25               	movlw	37
  3104  00188E  6E01               	movwf	fputc@c^0,c
  3105  001890  C072  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3106  001894  C073  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3107  001898  EC8F  F01C         	call	_fputc	;wreg free
  3108  00189C                     l4372:
  3109                           
  3110                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  3111  00189C  0E00               	movlw	0
  3112  00189E  6E73               	movwf	(?_vfpfcnvrt+1)^0,c
  3113  0018A0  0E01               	movlw	1
  3114  0018A2  6E72               	movwf	?_vfpfcnvrt^0,c
  3115  0018A4  EF7C  F00C         	goto	l1026
  3116  0018A8                     l4376:
  3117                           
  3118                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  3119  0018A8  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3120  0018AC  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3121  0018B0  2ADE               	incf	postinc2,f,c
  3122  0018B2  0E00               	movlw	0
  3123  0018B4  22DD               	addwfc	postdec2,f,c
  3124  0018B6                     
  3125                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  3126  0018B6  0E00               	movlw	0
  3127  0018B8  6E73               	movwf	(?_vfpfcnvrt+1)^0,c
  3128  0018BA  0E00               	movlw	0
  3129  0018BC  6E72               	movwf	?_vfpfcnvrt^0,c
  3130  0018BE  EF7C  F00C         	goto	l1026
  3131  0018C2                     l4382:
  3132                           
  3133                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  3134  0018C2  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3135  0018C6  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3136  0018CA  CFDE FFF6          	movff	postinc2,tblptrl
  3137  0018CE  CFDD FFF7          	movff	postdec2,tblptrh
  3138  0018D2                     	if	0	;tblptru may be non-zero
  3139  0018D2                     	endif
  3140  0018D2                     	if	0	;tblptru may be non-zero
  3141  0018D2                     	endif
  3142  0018D2  0008               	tblrd		*
  3143  0018D4  50F5               	movf	tablat,w,c
  3144  0018D6  6E01               	movwf	fputc@c^0,c
  3145  0018D8  6A02               	clrf	(fputc@c+1)^0,c
  3146  0018DA  C072  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3147  0018DE  C073  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3148  0018E2  EC8F  F01C         	call	_fputc	;wreg free
  3149  0018E6                     
  3150                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  3151  0018E6  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3152  0018EA  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3153  0018EE  2ADE               	incf	postinc2,f,c
  3154  0018F0  0E00               	movlw	0
  3155  0018F2  22DD               	addwfc	postdec2,f,c
  3156  0018F4  EF4E  F00C         	goto	l4372
  3157  0018F8                     l1026:
  3158  0018F8  0012               	return		;funcret
  3159  0018FA                     __end_of_vfpfcnvrt:
  3160                           	callstack 0
  3161                           
  3162 ;; *************** function _strncmp *****************
  3163 ;; Defined at:
  3164 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strncmp.c"
  3165 ;; Parameters:    Size  Location     Type
  3166 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  3167 ;;		 -> vfpfcnvrt@ct(3), 
  3168 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  3169 ;;		 -> STR_25(3), 
  3170 ;;  n               2    4[COMRAM] unsigned int 
  3171 ;; Auto vars:     Size  Location     Type
  3172 ;;  r               2    9[COMRAM] PTR const unsigned char 
  3173 ;;		 -> STR_25(3), 
  3174 ;;  l               2    7[COMRAM] PTR const unsigned char 
  3175 ;;		 -> vfpfcnvrt@ct(3), 
  3176 ;; Return value:  Size  Location     Type
  3177 ;;                  2    0[COMRAM] int 
  3178 ;; Registers used:
  3179 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3180 ;; Tracked objects:
  3181 ;;		On entry : 0/0
  3182 ;;		On exit  : 0/0
  3183 ;;		Unchanged: 0/0
  3184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3185 ;;      Params:         6       0       0       0       0       0       0
  3186 ;;      Locals:         4       0       0       0       0       0       0
  3187 ;;      Temps:          1       0       0       0       0       0       0
  3188 ;;      Totals:        11       0       0       0       0       0       0
  3189 ;;Total ram usage:       11 bytes
  3190 ;; Hardware stack levels used: 1
  3191 ;; This function calls:
  3192 ;;		Nothing
  3193 ;; This function is called by:
  3194 ;;		_vfpfcnvrt
  3195 ;; This function uses a non-reentrant model
  3196 ;;
  3197                           
  3198                           	psect	text9
  3199  003848                     __ptext9:
  3200                           	callstack 0
  3201  003848                     _strncmp:
  3202                           	callstack 26
  3203  003848  C001  F008         	movff	strncmp@_l,strncmp@l
  3204  00384C  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  3205  003850  C003  F00A         	movff	strncmp@_r,strncmp@r
  3206  003854  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  3207  003858  0605               	decf	strncmp@n^0,f,c
  3208  00385A  A0D8               	btfss	status,0,c
  3209  00385C  0606               	decf	(strncmp@n+1)^0,f,c
  3210  00385E  2805               	incf	strncmp@n^0,w,c
  3211  003860  E106               	bnz	u5131
  3212  003862  2806               	incf	(strncmp@n+1)^0,w,c
  3213  003864  A4D8               	btfss	status,2,c
  3214  003866  EF37  F01C         	goto	u5131
  3215  00386A  EF39  F01C         	goto	u5130
  3216  00386E                     u5131:
  3217  00386E  EF46  F01C         	goto	l4212
  3218  003872                     u5130:
  3219  003872  0E00               	movlw	0
  3220  003874  6E02               	movwf	(?_strncmp+1)^0,c
  3221  003876  0E00               	movlw	0
  3222  003878  6E01               	movwf	?_strncmp^0,c
  3223  00387A  EF8E  F01C         	goto	l1154
  3224  00387E                     l4210:
  3225  00387E  4A08               	infsnz	strncmp@l^0,f,c
  3226  003880  2A09               	incf	(strncmp@l+1)^0,f,c
  3227  003882  4A0A               	infsnz	strncmp@r^0,f,c
  3228  003884  2A0B               	incf	(strncmp@r+1)^0,f,c
  3229  003886  0605               	decf	strncmp@n^0,f,c
  3230  003888  A0D8               	btfss	status,0,c
  3231  00388A  0606               	decf	(strncmp@n+1)^0,f,c
  3232  00388C                     l4212:
  3233  00388C  C008  FFD9         	movff	strncmp@l,fsr2l
  3234  003890  C009  FFDA         	movff	strncmp@l+1,fsr2h
  3235  003894  50DF               	movf	indf2,w,c
  3236  003896  B4D8               	btfsc	status,2,c
  3237  003898  EF50  F01C         	goto	u5141
  3238  00389C  EF52  F01C         	goto	u5140
  3239  0038A0                     u5141:
  3240  0038A0  EF7D  F01C         	goto	l4220
  3241  0038A4                     u5140:
  3242  0038A4  C00A  FFF6         	movff	strncmp@r,tblptrl
  3243  0038A8  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3244  0038AC                     	if	0	;tblptru may be non-zero
  3245  0038AC                     	endif
  3246  0038AC                     	if	0	;tblptru may be non-zero
  3247  0038AC                     	endif
  3248  0038AC  0008               	tblrd		*
  3249  0038AE  50F5               	movf	tablat,w,c
  3250  0038B0  0900               	iorlw	0
  3251  0038B2  B4D8               	btfsc	status,2,c
  3252  0038B4  EF5E  F01C         	goto	u5151
  3253  0038B8  EF60  F01C         	goto	u5150
  3254  0038BC                     u5151:
  3255  0038BC  EF7D  F01C         	goto	l4220
  3256  0038C0                     u5150:
  3257  0038C0  5005               	movf	strncmp@n^0,w,c
  3258  0038C2  1006               	iorwf	(strncmp@n+1)^0,w,c
  3259  0038C4  B4D8               	btfsc	status,2,c
  3260  0038C6  EF67  F01C         	goto	u5161
  3261  0038CA  EF69  F01C         	goto	u5160
  3262  0038CE                     u5161:
  3263  0038CE  EF7D  F01C         	goto	l4220
  3264  0038D2                     u5160:
  3265  0038D2  C008  FFD9         	movff	strncmp@l,fsr2l
  3266  0038D6  C009  FFDA         	movff	strncmp@l+1,fsr2h
  3267  0038DA  50DF               	movf	indf2,w,c
  3268  0038DC  6E07               	movwf	??_strncmp^0,c
  3269  0038DE  C00A  FFF6         	movff	strncmp@r,tblptrl
  3270  0038E2  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3271  0038E6                     	if	0	;tblptru may be non-zero
  3272  0038E6                     	endif
  3273  0038E6                     	if	0	;tblptru may be non-zero
  3274  0038E6                     	endif
  3275  0038E6  0008               	tblrd		*
  3276  0038E8  50F5               	movf	tablat,w,c
  3277  0038EA  1807               	xorwf	??_strncmp^0,w,c
  3278  0038EC  B4D8               	btfsc	status,2,c
  3279  0038EE  EF7B  F01C         	goto	u5171
  3280  0038F2  EF7D  F01C         	goto	u5170
  3281  0038F6                     u5171:
  3282  0038F6  EF3F  F01C         	goto	l4210
  3283  0038FA                     u5170:
  3284  0038FA                     l4220:
  3285  0038FA  C008  FFD9         	movff	strncmp@l,fsr2l
  3286  0038FE  C009  FFDA         	movff	strncmp@l+1,fsr2h
  3287  003902  50DF               	movf	indf2,w,c
  3288  003904  6E07               	movwf	??_strncmp^0,c
  3289  003906  C00A  FFF6         	movff	strncmp@r,tblptrl
  3290  00390A  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3291  00390E                     	if	0	;tblptru may be non-zero
  3292  00390E                     	endif
  3293  00390E                     	if	0	;tblptru may be non-zero
  3294  00390E                     	endif
  3295  00390E  0008               	tblrd		*
  3296  003910  50F5               	movf	tablat,w,c
  3297  003912  5C07               	subwf	??_strncmp^0,w,c
  3298  003914  6E01               	movwf	?_strncmp^0,c
  3299  003916  6A02               	clrf	(?_strncmp+1)^0,c
  3300  003918  A0D8               	btfss	status,0,c
  3301  00391A  0602               	decf	(?_strncmp+1)^0,f,c
  3302  00391C                     l1154:
  3303  00391C  0012               	return		;funcret
  3304  00391E                     __end_of_strncmp:
  3305                           	callstack 0
  3306                           
  3307 ;; *************** function _efgtoa *****************
  3308 ;; Defined at:
  3309 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  3310 ;; Parameters:    Size  Location     Type
  3311 ;;  fp              2   51[COMRAM] PTR struct _IO_FILE
  3312 ;;		 -> sprintf@f(11), 
  3313 ;;  f               4   53[COMRAM] PTR struct _IO_FILE
  3314 ;;  c               1   57[COMRAM] unsigned char 
  3315 ;; Auto vars:     Size  Location     Type
  3316 ;;  u               4  109[COMRAM] unsigned char 
  3317 ;;  g               4  101[COMRAM] unsigned char 
  3318 ;;  l               4   95[COMRAM] unsigned char 
  3319 ;;  h               4   91[COMRAM] unsigned char 
  3320 ;;  ou              4   77[COMRAM] unsigned char 
  3321 ;;  n               2  107[COMRAM] int 
  3322 ;;  e               2  105[COMRAM] int 
  3323 ;;  i               2   99[COMRAM] int 
  3324 ;;  w               2   87[COMRAM] int 
  3325 ;;  p               2   85[COMRAM] int 
  3326 ;;  sign            2   83[COMRAM] int 
  3327 ;;  d               2   81[COMRAM] int 
  3328 ;;  m               2   75[COMRAM] int 
  3329 ;;  ne              2   73[COMRAM] int 
  3330 ;;  pp              2   71[COMRAM] int 
  3331 ;;  t               2   69[COMRAM] int 
  3332 ;;  mode            1   90[COMRAM] unsigned char 
  3333 ;;  nmode           1   89[COMRAM] unsigned char 
  3334 ;; Return value:  Size  Location     Type
  3335 ;;                  2   51[COMRAM] int 
  3336 ;; Registers used:
  3337 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3338 ;; Tracked objects:
  3339 ;;		On entry : 0/0
  3340 ;;		On exit  : 0/0
  3341 ;;		Unchanged: 0/0
  3342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3343 ;;      Params:         7       0       0       0       0       0       0
  3344 ;;      Locals:        50       0       0       0       0       0       0
  3345 ;;      Temps:          5       0       0       0       0       0       0
  3346 ;;      Totals:        62       0       0       0       0       0       0
  3347 ;;Total ram usage:       62 bytes
  3348 ;; Hardware stack levels used: 1
  3349 ;; Hardware stack levels required when called: 4
  3350 ;; This function calls:
  3351 ;;		___awdiv
  3352 ;;		___awmod
  3353 ;;		___fladd
  3354 ;;		___fldiv
  3355 ;;		___fleq
  3356 ;;		___flge
  3357 ;;		___flmul
  3358 ;;		___flneg
  3359 ;;		___flsub
  3360 ;;		___fltol
  3361 ;;		___fpclassifyf
  3362 ;;		_floorf
  3363 ;;		_isupper
  3364 ;;		_pad
  3365 ;;		_strcpy
  3366 ;;		_tolower
  3367 ;; This function is called by:
  3368 ;;		_vfpfcnvrt
  3369 ;; This function uses a non-reentrant model
  3370 ;;
  3371                           
  3372                           	psect	text10
  3373  000678                     __ptext10:
  3374                           	callstack 0
  3375  000678                     _efgtoa:
  3376                           	callstack 22
  3377  000678                     
  3378                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.36\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  3379  000678  0E00               	movlw	0
  3380  00067A  6E55               	movwf	(efgtoa@sign+1)^0,c
  3381  00067C  0E00               	movlw	0
  3382  00067E  6E54               	movwf	efgtoa@sign^0,c
  3383  000680                     
  3384                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 340:     g = f;
  3385  000680  C036  F066         	movff	efgtoa@f,efgtoa@g
  3386  000684  C037  F067         	movff	efgtoa@f+1,efgtoa@g+1
  3387  000688  C038  F068         	movff	efgtoa@f+2,efgtoa@g+2
  3388  00068C  C039  F069         	movff	efgtoa@f+3,efgtoa@g+3
  3389  000690                     
  3390                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  3391  000690  BE69               	btfsc	(efgtoa@g+3)^0,7,c
  3392  000692  EF4F  F003         	goto	u4610
  3393  000696  EF4D  F003         	goto	u4611
  3394  00069A                     u4611:
  3395  00069A  EF65  F003         	goto	l3876
  3396  00069E                     u4610:
  3397  00069E                     
  3398                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  3399  00069E  0E00               	movlw	0
  3400  0006A0  6E55               	movwf	(efgtoa@sign+1)^0,c
  3401  0006A2  0E01               	movlw	1
  3402  0006A4  6E54               	movwf	efgtoa@sign^0,c
  3403  0006A6                     
  3404                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  3405  0006A6  C066  F001         	movff	efgtoa@g,___flneg@f1
  3406  0006AA  C067  F002         	movff	efgtoa@g+1,___flneg@f1+1
  3407  0006AE  C068  F003         	movff	efgtoa@g+2,___flneg@f1+2
  3408  0006B2  C069  F004         	movff	efgtoa@g+3,___flneg@f1+3
  3409  0006B6  ECF7  F020         	call	___flneg	;wreg free
  3410  0006BA  C001  F066         	movff	?___flneg,efgtoa@g
  3411  0006BE  C002  F067         	movff	?___flneg+1,efgtoa@g+1
  3412  0006C2  C003  F068         	movff	?___flneg+2,efgtoa@g+2
  3413  0006C6  C004  F069         	movff	?___flneg+3,efgtoa@g+3
  3414  0006CA                     l3876:
  3415                           
  3416                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  3417  0006CA  0E00               	movlw	0
  3418  0006CC  6E6D               	movwf	(efgtoa@n+1)^0,c
  3419  0006CE  0E00               	movlw	0
  3420  0006D0  6E6C               	movwf	efgtoa@n^0,c
  3421  0006D2                     
  3422                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  3423  0006D2  C08E  F058         	movff	_width,efgtoa@w
  3424  0006D6  C08F  F059         	movff	_width+1,efgtoa@w+1
  3425  0006DA                     
  3426                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  3427  0006DA  5054               	movf	efgtoa@sign^0,w,c
  3428  0006DC  1055               	iorwf	(efgtoa@sign+1)^0,w,c
  3429  0006DE  A4D8               	btfss	status,2,c
  3430  0006E0  EF74  F003         	goto	u4621
  3431  0006E4  EF76  F003         	goto	u4620
  3432  0006E8                     u4621:
  3433  0006E8  EF7D  F003         	goto	l3884
  3434  0006EC                     u4620:
  3435  0006EC  A47E               	btfss	_flags^0,2,c
  3436  0006EE  EF7B  F003         	goto	u4631
  3437  0006F2  EF7D  F003         	goto	u4630
  3438  0006F6                     u4631:
  3439  0006F6  EF97  F003         	goto	l3896
  3440  0006FA                     u4630:
  3441  0006FA                     l3884:
  3442                           
  3443                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  3444  0006FA  5054               	movf	efgtoa@sign^0,w,c
  3445  0006FC  1055               	iorwf	(efgtoa@sign+1)^0,w,c
  3446  0006FE  A4D8               	btfss	status,2,c
  3447  000700  EF84  F003         	goto	u4641
  3448  000704  EF86  F003         	goto	u4640
  3449  000708                     u4641:
  3450  000708  EF8C  F003         	goto	l3888
  3451  00070C                     u4640:
  3452  00070C  0E00               	movlw	0
  3453  00070E  6E41               	movwf	(_efgtoa$1162+1)^0,c
  3454  000710  0E2B               	movlw	43
  3455  000712  6E40               	movwf	_efgtoa$1162^0,c
  3456  000714  EF90  F003         	goto	l3890
  3457  000718                     l3888:
  3458  000718  0E00               	movlw	0
  3459  00071A  6E41               	movwf	(_efgtoa$1162+1)^0,c
  3460  00071C  0E2D               	movlw	45
  3461  00071E  6E40               	movwf	_efgtoa$1162^0,c
  3462  000720                     l3890:
  3463  000720  C040  F100         	movff	_efgtoa$1162,_dbuf
  3464  000724                     
  3465                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 351:         ++n;
  3466  000724  4A6C               	infsnz	efgtoa@n^0,f,c
  3467  000726  2A6D               	incf	(efgtoa@n+1)^0,f,c
  3468  000728                     
  3469                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 352:         --w;
  3470  000728  0658               	decf	efgtoa@w^0,f,c
  3471  00072A  A0D8               	btfss	status,0,c
  3472  00072C  0659               	decf	(efgtoa@w+1)^0,f,c
  3473  00072E                     l3896:
  3474                           
  3475                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 356:     if (( __
      +                          fpclassifyf(g) == 1 )) {
  3476  00072E  C066  F001         	movff	efgtoa@g,___fpclassifyf@x
  3477  000732  C067  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3478  000736  C068  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3479  00073A  C069  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3480  00073E  EC33  F01B         	call	___fpclassifyf	;wreg free
  3481  000742  0401               	decf	?___fpclassifyf^0,w,c
  3482  000744  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3483  000746  A4D8               	btfss	status,2,c
  3484  000748  EFA8  F003         	goto	u4651
  3485  00074C  EFAA  F003         	goto	u4650
  3486  000750                     u4651:
  3487  000750  EFF2  F003         	goto	l3914
  3488  000754                     u4650:
  3489  000754  0EBF               	movlw	191
  3490  000756  6E3B               	movwf	??_efgtoa^0,c
  3491  000758  0EFF               	movlw	255
  3492  00075A  6E3C               	movwf	(??_efgtoa+1)^0,c
  3493  00075C  503A               	movf	efgtoa@c^0,w,c
  3494  00075E  6E3D               	movwf	(??_efgtoa+2)^0,c
  3495  000760  6A3E               	clrf	(??_efgtoa+3)^0,c
  3496  000762  503B               	movf	??_efgtoa^0,w,c
  3497  000764  263D               	addwf	(??_efgtoa+2)^0,f,c
  3498  000766  503C               	movf	(??_efgtoa+1)^0,w,c
  3499  000768  223E               	addwfc	(??_efgtoa+3)^0,f,c
  3500  00076A  503E               	movf	(??_efgtoa+3)^0,w,c
  3501  00076C  E107               	bnz	u4661
  3502  00076E  0E1A               	movlw	26
  3503  000770  5C3D               	subwf	(??_efgtoa+2)^0,w,c
  3504  000772  B0D8               	btfsc	status,0,c
  3505  000774  EFBE  F003         	goto	u4661
  3506  000778  EFC0  F003         	goto	u4660
  3507  00077C                     u4661:
  3508  00077C  EFCE  F003         	goto	l3906
  3509  000780                     u4660:
  3510  000780                     
  3511                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  3512  000780  0E00               	movlw	low _dbuf
  3513  000782  246C               	addwf	efgtoa@n^0,w,c
  3514  000784  6E01               	movwf	strcpy@dest^0,c
  3515  000786  0E01               	movlw	high _dbuf
  3516  000788  206D               	addwfc	(efgtoa@n+1)^0,w,c
  3517  00078A  6E02               	movwf	(strcpy@dest+1)^0,c
  3518  00078C  0E63               	movlw	low STR_15
  3519  00078E  6E03               	movwf	strcpy@src^0,c
  3520  000790  0E06               	movlw	high STR_15
  3521  000792  6E04               	movwf	(strcpy@src+1)^0,c
  3522  000794  ECB4  F01F         	call	_strcpy	;wreg free
  3523                           
  3524                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  3525  000798  EFDA  F003         	goto	l3908
  3526  00079C                     l3906:
  3527                           
  3528                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  3529  00079C  0E00               	movlw	low _dbuf
  3530  00079E  246C               	addwf	efgtoa@n^0,w,c
  3531  0007A0  6E01               	movwf	strcpy@dest^0,c
  3532  0007A2  0E01               	movlw	high _dbuf
  3533  0007A4  206D               	addwfc	(efgtoa@n+1)^0,w,c
  3534  0007A6  6E02               	movwf	(strcpy@dest+1)^0,c
  3535  0007A8  0E6B               	movlw	low STR_16
  3536  0007AA  6E03               	movwf	strcpy@src^0,c
  3537  0007AC  0E06               	movlw	high STR_16
  3538  0007AE  6E04               	movwf	(strcpy@src+1)^0,c
  3539  0007B0  ECB4  F01F         	call	_strcpy	;wreg free
  3540  0007B4                     l3908:
  3541                           
  3542                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  3543  0007B4  0EFD               	movlw	253
  3544  0007B6  2658               	addwf	efgtoa@w^0,f,c
  3545  0007B8  0EFF               	movlw	255
  3546  0007BA  2259               	addwfc	(efgtoa@w+1)^0,f,c
  3547  0007BC                     l3910:
  3548                           
  3549                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  3550  0007BC  C034  F011         	movff	efgtoa@fp,pad@fp
  3551  0007C0  C035  F012         	movff	efgtoa@fp+1,pad@fp+1
  3552  0007C4  0E00               	movlw	low _dbuf
  3553  0007C6  6E13               	movwf	pad@buf^0,c
  3554  0007C8  0E01               	movlw	high _dbuf
  3555  0007CA  6E14               	movwf	(pad@buf+1)^0,c
  3556  0007CC  C058  F015         	movff	efgtoa@w,pad@p
  3557  0007D0  C059  F016         	movff	efgtoa@w+1,pad@p+1
  3558  0007D4  EC56  F01D         	call	_pad	;wreg free
  3559  0007D8  C011  F034         	movff	?_pad,?_efgtoa
  3560  0007DC  C012  F035         	movff	?_pad+1,?_efgtoa+1
  3561  0007E0  EF30  F009         	goto	l918
  3562  0007E4                     l3914:
  3563                           
  3564                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 365:     if (( __
      +                          fpclassifyf(g) == 0 )) {
  3565  0007E4  C066  F001         	movff	efgtoa@g,___fpclassifyf@x
  3566  0007E8  C067  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3567  0007EC  C068  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3568  0007F0  C069  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3569  0007F4  EC33  F01B         	call	___fpclassifyf	;wreg free
  3570  0007F8  5001               	movf	?___fpclassifyf^0,w,c
  3571  0007FA  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3572  0007FC  A4D8               	btfss	status,2,c
  3573  0007FE  EF03  F004         	goto	u4671
  3574  000802  EF05  F004         	goto	u4670
  3575  000806                     u4671:
  3576  000806  EF37  F004         	goto	l3932
  3577  00080A                     u4670:
  3578  00080A  0EBF               	movlw	191
  3579  00080C  6E3B               	movwf	??_efgtoa^0,c
  3580  00080E  0EFF               	movlw	255
  3581  000810  6E3C               	movwf	(??_efgtoa+1)^0,c
  3582  000812  503A               	movf	efgtoa@c^0,w,c
  3583  000814  6E3D               	movwf	(??_efgtoa+2)^0,c
  3584  000816  6A3E               	clrf	(??_efgtoa+3)^0,c
  3585  000818  503B               	movf	??_efgtoa^0,w,c
  3586  00081A  263D               	addwf	(??_efgtoa+2)^0,f,c
  3587  00081C  503C               	movf	(??_efgtoa+1)^0,w,c
  3588  00081E  223E               	addwfc	(??_efgtoa+3)^0,f,c
  3589  000820  503E               	movf	(??_efgtoa+3)^0,w,c
  3590  000822  E107               	bnz	u4681
  3591  000824  0E1A               	movlw	26
  3592  000826  5C3D               	subwf	(??_efgtoa+2)^0,w,c
  3593  000828  B0D8               	btfsc	status,0,c
  3594  00082A  EF19  F004         	goto	u4681
  3595  00082E  EF1B  F004         	goto	u4680
  3596  000832                     u4681:
  3597  000832  EF29  F004         	goto	l3924
  3598  000836                     u4680:
  3599  000836                     
  3600                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  3601  000836  0E00               	movlw	low _dbuf
  3602  000838  246C               	addwf	efgtoa@n^0,w,c
  3603  00083A  6E01               	movwf	strcpy@dest^0,c
  3604  00083C  0E01               	movlw	high _dbuf
  3605  00083E  206D               	addwfc	(efgtoa@n+1)^0,w,c
  3606  000840  6E02               	movwf	(strcpy@dest+1)^0,c
  3607  000842  0E67               	movlw	low STR_19
  3608  000844  6E03               	movwf	strcpy@src^0,c
  3609  000846  0E06               	movlw	high STR_19
  3610  000848  6E04               	movwf	(strcpy@src+1)^0,c
  3611  00084A  ECB4  F01F         	call	_strcpy	;wreg free
  3612                           
  3613                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  3614  00084E  EFDA  F003         	goto	l3908
  3615  000852                     l3924:
  3616                           
  3617                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  3618  000852  0E00               	movlw	low _dbuf
  3619  000854  246C               	addwf	efgtoa@n^0,w,c
  3620  000856  6E01               	movwf	strcpy@dest^0,c
  3621  000858  0E01               	movlw	high _dbuf
  3622  00085A  206D               	addwfc	(efgtoa@n+1)^0,w,c
  3623  00085C  6E02               	movwf	(strcpy@dest+1)^0,c
  3624  00085E  0E6F               	movlw	low STR_20
  3625  000860  6E03               	movwf	strcpy@src^0,c
  3626  000862  0E06               	movlw	high STR_20
  3627  000864  6E04               	movwf	(strcpy@src+1)^0,c
  3628  000866  ECB4  F01F         	call	_strcpy	;wreg free
  3629  00086A  EFDA  F003         	goto	l3908
  3630  00086E                     l3932:
  3631                           
  3632                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  3633  00086E  0E00               	movlw	0
  3634  000870  6E6E               	movwf	efgtoa@u^0,c
  3635  000872  0E00               	movlw	0
  3636  000874  6E6F               	movwf	(efgtoa@u+1)^0,c
  3637  000876  0E80               	movlw	128
  3638  000878  6E70               	movwf	(efgtoa@u+2)^0,c
  3639  00087A  0E3F               	movlw	63
  3640  00087C  6E71               	movwf	(efgtoa@u+3)^0,c
  3641                           
  3642                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  3643  00087E  0E00               	movlw	0
  3644  000880  6E6B               	movwf	(efgtoa@e+1)^0,c
  3645  000882  0E00               	movlw	0
  3646  000884  6E6A               	movwf	efgtoa@e^0,c
  3647  000886                     
  3648                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  3649  000886  C066  F001         	movff	efgtoa@g,___fleq@ff1
  3650  00088A  C067  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  3651  00088E  C068  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  3652  000892  C069  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  3653  000896  0E00               	movlw	0
  3654  000898  6E05               	movwf	___fleq@ff2^0,c
  3655  00089A  0E00               	movlw	0
  3656  00089C  6E06               	movwf	(___fleq@ff2+1)^0,c
  3657  00089E  0E00               	movlw	0
  3658  0008A0  6E07               	movwf	(___fleq@ff2+2)^0,c
  3659  0008A2  0E00               	movlw	0
  3660  0008A4  6E08               	movwf	(___fleq@ff2+3)^0,c
  3661  0008A6  EC0F  F01E         	call	___fleq	;wreg free
  3662  0008AA  B0D8               	btfsc	status,0,c
  3663  0008AC  EF5A  F004         	goto	u4691
  3664  0008B0  EF5C  F004         	goto	u4690
  3665  0008B4                     u4691:
  3666  0008B4  EFDD  F004         	goto	l3950
  3667  0008B8                     u4690:
  3668  0008B8  EF7A  F004         	goto	l3942
  3669  0008BC                     l3938:
  3670                           
  3671                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  3672  0008BC  C06E  F00F         	movff	efgtoa@u,___flmul@b
  3673  0008C0  C06F  F010         	movff	efgtoa@u+1,___flmul@b+1
  3674  0008C4  C070  F011         	movff	efgtoa@u+2,___flmul@b+2
  3675  0008C8  C071  F012         	movff	efgtoa@u+3,___flmul@b+3
  3676  0008CC  0E00               	movlw	0
  3677  0008CE  6E13               	movwf	___flmul@a^0,c
  3678  0008D0  0E00               	movlw	0
  3679  0008D2  6E14               	movwf	(___flmul@a+1)^0,c
  3680  0008D4  0E20               	movlw	32
  3681  0008D6  6E15               	movwf	(___flmul@a+2)^0,c
  3682  0008D8  0E41               	movlw	65
  3683  0008DA  6E16               	movwf	(___flmul@a+3)^0,c
  3684  0008DC  ECDD  F00E         	call	___flmul	;wreg free
  3685  0008E0  C00F  F06E         	movff	?___flmul,efgtoa@u
  3686  0008E4  C010  F06F         	movff	?___flmul+1,efgtoa@u+1
  3687  0008E8  C011  F070         	movff	?___flmul+2,efgtoa@u+2
  3688  0008EC  C012  F071         	movff	?___flmul+3,efgtoa@u+3
  3689  0008F0                     
  3690                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  3691  0008F0  4A6A               	infsnz	efgtoa@e^0,f,c
  3692  0008F2  2A6B               	incf	(efgtoa@e+1)^0,f,c
  3693  0008F4                     l3942:
  3694                           
  3695                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  3696  0008F4  C066  F028         	movff	efgtoa@g,___flge@ff1
  3697  0008F8  C067  F029         	movff	efgtoa@g+1,___flge@ff1+1
  3698  0008FC  C068  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  3699  000900  C069  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  3700  000904  0E00               	movlw	0
  3701  000906  6E13               	movwf	___flmul@a^0,c
  3702  000908  0E00               	movlw	0
  3703  00090A  6E14               	movwf	(___flmul@a+1)^0,c
  3704  00090C  0E20               	movlw	32
  3705  00090E  6E15               	movwf	(___flmul@a+2)^0,c
  3706  000910  0E41               	movlw	65
  3707  000912  6E16               	movwf	(___flmul@a+3)^0,c
  3708  000914  C06E  F00F         	movff	efgtoa@u,___flmul@b
  3709  000918  C06F  F010         	movff	efgtoa@u+1,___flmul@b+1
  3710  00091C  C070  F011         	movff	efgtoa@u+2,___flmul@b+2
  3711  000920  C071  F012         	movff	efgtoa@u+3,___flmul@b+3
  3712  000924  ECDD  F00E         	call	___flmul	;wreg free
  3713  000928  C00F  F02C         	movff	?___flmul,___flge@ff2
  3714  00092C  C010  F02D         	movff	?___flmul+1,___flge@ff2+1
  3715  000930  C011  F02E         	movff	?___flmul+2,___flge@ff2+2
  3716  000934  C012  F02F         	movff	?___flmul+3,___flge@ff2+3
  3717  000938  ECB1  F01A         	call	___flge	;wreg free
  3718  00093C  B0D8               	btfsc	status,0,c
  3719  00093E  EFA3  F004         	goto	u4701
  3720  000942  EFA5  F004         	goto	u4700
  3721  000946                     u4701:
  3722  000946  EF5E  F004         	goto	l3938
  3723  00094A                     u4700:
  3724  00094A  EFC4  F004         	goto	l3948
  3725  00094E                     l3944:
  3726                           
  3727                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  3728  00094E  C06E  F001         	movff	efgtoa@u,___fldiv@b
  3729  000952  C06F  F002         	movff	efgtoa@u+1,___fldiv@b+1
  3730  000956  C070  F003         	movff	efgtoa@u+2,___fldiv@b+2
  3731  00095A  C071  F004         	movff	efgtoa@u+3,___fldiv@b+3
  3732  00095E  0E00               	movlw	0
  3733  000960  6E05               	movwf	___fldiv@a^0,c
  3734  000962  0E00               	movlw	0
  3735  000964  6E06               	movwf	(___fldiv@a+1)^0,c
  3736  000966  0E20               	movlw	32
  3737  000968  6E07               	movwf	(___fldiv@a+2)^0,c
  3738  00096A  0E41               	movlw	65
  3739  00096C  6E08               	movwf	(___fldiv@a+3)^0,c
  3740  00096E  ECF2  F010         	call	___fldiv	;wreg free
  3741  000972  C001  F06E         	movff	?___fldiv,efgtoa@u
  3742  000976  C002  F06F         	movff	?___fldiv+1,efgtoa@u+1
  3743  00097A  C003  F070         	movff	?___fldiv+2,efgtoa@u+2
  3744  00097E  C004  F071         	movff	?___fldiv+3,efgtoa@u+3
  3745  000982                     
  3746                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  3747  000982  066A               	decf	efgtoa@e^0,f,c
  3748  000984  A0D8               	btfss	status,0,c
  3749  000986  066B               	decf	(efgtoa@e+1)^0,f,c
  3750  000988                     l3948:
  3751                           
  3752                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  3753  000988  C066  F028         	movff	efgtoa@g,___flge@ff1
  3754  00098C  C067  F029         	movff	efgtoa@g+1,___flge@ff1+1
  3755  000990  C068  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  3756  000994  C069  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  3757  000998  C06E  F02C         	movff	efgtoa@u,___flge@ff2
  3758  00099C  C06F  F02D         	movff	efgtoa@u+1,___flge@ff2+1
  3759  0009A0  C070  F02E         	movff	efgtoa@u+2,___flge@ff2+2
  3760  0009A4  C071  F02F         	movff	efgtoa@u+3,___flge@ff2+3
  3761  0009A8  ECB1  F01A         	call	___flge	;wreg free
  3762  0009AC  A0D8               	btfss	status,0,c
  3763  0009AE  EFDB  F004         	goto	u4711
  3764  0009B2  EFDD  F004         	goto	u4710
  3765  0009B6                     u4711:
  3766  0009B6  EFA7  F004         	goto	l3944
  3767  0009BA                     u4710:
  3768  0009BA                     l3950:
  3769                           
  3770                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  3771  0009BA  C03A  F007         	movff	efgtoa@c,tolower@c
  3772  0009BE  6A08               	clrf	(tolower@c+1)^0,c
  3773  0009C0  EC34  F020         	call	_tolower	;wreg free
  3774  0009C4  5007               	movf	?_tolower^0,w,c
  3775  0009C6  6E5B               	movwf	efgtoa@mode^0,c
  3776  0009C8                     
  3777                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  3778  0009C8  C05B  F05A         	movff	efgtoa@mode,efgtoa@nmode
  3779  0009CC                     
  3780                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  3781  0009CC  0E67               	movlw	103
  3782  0009CE  185B               	xorwf	efgtoa@mode^0,w,c
  3783  0009D0  A4D8               	btfss	status,2,c
  3784  0009D2  EFED  F004         	goto	u4721
  3785  0009D6  EFEF  F004         	goto	u4720
  3786  0009DA                     u4721:
  3787  0009DA  EF16  F005         	goto	l3964
  3788  0009DE                     u4720:
  3789  0009DE                     
  3790                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  3791  0009DE  0100               	movlb	0	; () banked
  3792  0009E0  5190               	movf	_prec& (0+255),w,b
  3793  0009E2  1191               	iorwf	(_prec+1)& (0+255),w,b
  3794  0009E4  A4D8               	btfss	status,2,c
  3795  0009E6  EFF7  F004         	goto	u4731
  3796  0009EA  EFF9  F004         	goto	u4730
  3797  0009EE                     u4731:
  3798  0009EE  EFFD  F004         	goto	l3960
  3799  0009F2                     u4730:
  3800  0009F2                     
  3801                           ; BSR set to: 0
  3802                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  3803  0009F2  0E00               	movlw	0
  3804  0009F4  6F91               	movwf	(_prec+1)& (0+255),b
  3805  0009F6  0E01               	movlw	1
  3806  0009F8  6F90               	movwf	_prec& (0+255),b
  3807  0009FA                     l3960:
  3808                           
  3809                           ; BSR set to: 0
  3810                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  3811  0009FA  BF91               	btfsc	(_prec+1)& (0+255),7,b
  3812  0009FC  EF0A  F005         	goto	u4740
  3813  000A00  5191               	movf	(_prec+1)& (0+255),w,b
  3814  000A02  E106               	bnz	u4741
  3815  000A04  0590               	decf	_prec& (0+255),w,b
  3816  000A06  B0D8               	btfsc	status,0,c
  3817  000A08  EF08  F005         	goto	u4741
  3818  000A0C  EF0A  F005         	goto	u4740
  3819  000A10                     u4741:
  3820  000A10  EF10  F005         	goto	l934
  3821  000A14                     u4740:
  3822  000A14                     l3962:
  3823                           
  3824                           ; BSR set to: 0
  3825  000A14  0E00               	movlw	0
  3826  000A16  6E57               	movwf	(efgtoa@p+1)^0,c
  3827  000A18  0E06               	movlw	6
  3828  000A1A  6E56               	movwf	efgtoa@p^0,c
  3829  000A1C  EF20  F005         	goto	l3970
  3830  000A20                     l934:
  3831                           
  3832                           ; BSR set to: 0
  3833  000A20  C090  F056         	movff	_prec,efgtoa@p
  3834  000A24  C091  F057         	movff	_prec+1,efgtoa@p+1
  3835  000A28  EF20  F005         	goto	l3970
  3836  000A2C                     l3964:
  3837                           
  3838                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  3839  000A2C  0100               	movlb	0	; () banked
  3840  000A2E  BF91               	btfsc	(_prec+1)& (0+255),7,b
  3841  000A30  EF1C  F005         	goto	u4751
  3842  000A34  EF1E  F005         	goto	u4750
  3843  000A38                     u4751:
  3844  000A38  EF0A  F005         	goto	l3962
  3845  000A3C                     u4750:
  3846  000A3C  EF10  F005         	goto	l934
  3847  000A40                     l3970:
  3848                           
  3849                           ; BSR set to: 0
  3850                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  3851  000A40  0E67               	movlw	103
  3852  000A42  185B               	xorwf	efgtoa@mode^0,w,c
  3853  000A44  A4D8               	btfss	status,2,c
  3854  000A46  EF27  F005         	goto	u4761
  3855  000A4A  EF29  F005         	goto	u4760
  3856  000A4E                     u4761:
  3857  000A4E  EF58  F005         	goto	l3980
  3858  000A52                     u4760:
  3859  000A52                     
  3860                           ; BSR set to: 0
  3861                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  3862  000A52  AE6B               	btfss	(efgtoa@e+1)^0,7,c
  3863  000A54  EF37  F005         	goto	u4770
  3864  000A58  0EFC               	movlw	252
  3865  000A5A  5C6A               	subwf	efgtoa@e^0,w,c
  3866  000A5C  0EFF               	movlw	255
  3867  000A5E  586B               	subwfb	(efgtoa@e+1)^0,w,c
  3868  000A60  A0D8               	btfss	status,0,c
  3869  000A62  EF35  F005         	goto	u4771
  3870  000A66  EF37  F005         	goto	u4770
  3871  000A6A                     u4771:
  3872  000A6A  EF56  F005         	goto	l3978
  3873  000A6E                     u4770:
  3874  000A6E                     
  3875                           ; BSR set to: 0
  3876  000A6E  0EFF               	movlw	255
  3877  000A70  6E3B               	movwf	??_efgtoa^0,c
  3878  000A72  0EFF               	movlw	255
  3879  000A74  6E3C               	movwf	(??_efgtoa+1)^0,c
  3880  000A76  C056  F03D         	movff	efgtoa@p,??_efgtoa+2
  3881  000A7A  C057  F03E         	movff	efgtoa@p+1,??_efgtoa+3
  3882  000A7E  503B               	movf	??_efgtoa^0,w,c
  3883  000A80  263D               	addwf	(??_efgtoa+2)^0,f,c
  3884  000A82  503C               	movf	(??_efgtoa+1)^0,w,c
  3885  000A84  223E               	addwfc	(??_efgtoa+3)^0,f,c
  3886  000A86  506A               	movf	efgtoa@e^0,w,c
  3887  000A88  5C3D               	subwf	(??_efgtoa+2)^0,w,c
  3888  000A8A  503E               	movf	(??_efgtoa+3)^0,w,c
  3889  000A8C  0A80               	xorlw	128
  3890  000A8E  6E3F               	movwf	(??_efgtoa+4)^0,c
  3891  000A90  506B               	movf	(efgtoa@e+1)^0,w,c
  3892  000A92  0A80               	xorlw	128
  3893  000A94  583F               	subwfb	(??_efgtoa+4)^0,w,c
  3894  000A96  A0D8               	btfss	status,0,c
  3895  000A98  EF50  F005         	goto	u4781
  3896  000A9C  EF52  F005         	goto	u4780
  3897  000AA0                     u4781:
  3898  000AA0  EF56  F005         	goto	l3978
  3899  000AA4                     u4780:
  3900  000AA4                     
  3901                           ; BSR set to: 0
  3902                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  3903  000AA4  0E66               	movlw	102
  3904  000AA6  6E5A               	movwf	efgtoa@nmode^0,c
  3905                           
  3906                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  3907  000AA8  EF58  F005         	goto	l3980
  3908  000AAC                     l3978:
  3909                           
  3910                           ; BSR set to: 0
  3911                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  3912  000AAC  0E65               	movlw	101
  3913  000AAE  6E5A               	movwf	efgtoa@nmode^0,c
  3914  000AB0                     l3980:
  3915                           
  3916                           ; BSR set to: 0
  3917                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 411:     m = p;
  3918  000AB0  C056  F04C         	movff	efgtoa@p,efgtoa@m
  3919  000AB4  C057  F04D         	movff	efgtoa@p+1,efgtoa@m+1
  3920  000AB8                     
  3921                           ; BSR set to: 0
  3922                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  3923  000AB8  0E67               	movlw	103
  3924  000ABA  185B               	xorwf	efgtoa@mode^0,w,c
  3925  000ABC  A4D8               	btfss	status,2,c
  3926  000ABE  EF63  F005         	goto	u4791
  3927  000AC2  EF65  F005         	goto	u4790
  3928  000AC6                     u4791:
  3929  000AC6  EF75  F005         	goto	l3988
  3930  000ACA                     u4790:
  3931  000ACA                     
  3932                           ; BSR set to: 0
  3933  000ACA  0E66               	movlw	102
  3934  000ACC  185A               	xorwf	efgtoa@nmode^0,w,c
  3935  000ACE  A4D8               	btfss	status,2,c
  3936  000AD0  EF6C  F005         	goto	u4801
  3937  000AD4  EF6E  F005         	goto	u4800
  3938  000AD8                     u4801:
  3939  000AD8  EF77  F005         	goto	l3990
  3940  000ADC                     u4800:
  3941  000ADC                     
  3942                           ; BSR set to: 0
  3943  000ADC  BE6B               	btfsc	(efgtoa@e+1)^0,7,c
  3944  000ADE  EF75  F005         	goto	u4810
  3945  000AE2  EF73  F005         	goto	u4811
  3946  000AE6                     u4811:
  3947  000AE6  EF77  F005         	goto	l3990
  3948  000AEA                     u4810:
  3949  000AEA                     l3988:
  3950                           
  3951                           ; BSR set to: 0
  3952                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 413:         ++m;
  3953  000AEA  4A4C               	infsnz	efgtoa@m^0,f,c
  3954  000AEC  2A4D               	incf	(efgtoa@m+1)^0,f,c
  3955  000AEE                     l3990:
  3956                           
  3957                           ; BSR set to: 0
  3958                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  3959  000AEE  0E66               	movlw	102
  3960  000AF0  185A               	xorwf	efgtoa@nmode^0,w,c
  3961  000AF2  A4D8               	btfss	status,2,c
  3962  000AF4  EF7E  F005         	goto	u4821
  3963  000AF8  EF80  F005         	goto	u4820
  3964  000AFC                     u4821:
  3965  000AFC  EFA0  F005         	goto	l4000
  3966  000B00                     u4820:
  3967  000B00                     
  3968                           ; BSR set to: 0
  3969                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  3970  000B00  BE6B               	btfsc	(efgtoa@e+1)^0,7,c
  3971  000B02  EF87  F005         	goto	u4830
  3972  000B06  EF85  F005         	goto	u4831
  3973  000B0A                     u4831:
  3974  000B0A  EF93  F005         	goto	l3996
  3975  000B0E                     u4830:
  3976  000B0E                     
  3977                           ; BSR set to: 0
  3978                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  3979  000B0E  0E00               	movlw	0
  3980  000B10  6E6E               	movwf	efgtoa@u^0,c
  3981  000B12  0E00               	movlw	0
  3982  000B14  6E6F               	movwf	(efgtoa@u+1)^0,c
  3983  000B16  0E80               	movlw	128
  3984  000B18  6E70               	movwf	(efgtoa@u+2)^0,c
  3985  000B1A  0E3F               	movlw	63
  3986  000B1C  6E71               	movwf	(efgtoa@u+3)^0,c
  3987                           
  3988                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  3989  000B1E  0E00               	movlw	0
  3990  000B20  6E6B               	movwf	(efgtoa@e+1)^0,c
  3991  000B22  0E00               	movlw	0
  3992  000B24  6E6A               	movwf	efgtoa@e^0,c
  3993  000B26                     l3996:
  3994                           
  3995                           ; BSR set to: 0
  3996                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  3997  000B26  0E67               	movlw	103
  3998  000B28  185B               	xorwf	efgtoa@mode^0,w,c
  3999  000B2A  B4D8               	btfsc	status,2,c
  4000  000B2C  EF9A  F005         	goto	u4841
  4001  000B30  EF9C  F005         	goto	u4840
  4002  000B34                     u4841:
  4003  000B34  EFA0  F005         	goto	l4000
  4004  000B38                     u4840:
  4005  000B38                     
  4006                           ; BSR set to: 0
  4007                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  4008  000B38  506A               	movf	efgtoa@e^0,w,c
  4009  000B3A  264C               	addwf	efgtoa@m^0,f,c
  4010  000B3C  506B               	movf	(efgtoa@e+1)^0,w,c
  4011  000B3E  224D               	addwfc	(efgtoa@m+1)^0,f,c
  4012  000B40                     l4000:
  4013                           
  4014                           ; BSR set to: 0
  4015                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  4016  000B40  0E00               	movlw	0
  4017  000B42  6E65               	movwf	(efgtoa@i+1)^0,c
  4018  000B44  0E00               	movlw	0
  4019  000B46  6E64               	movwf	efgtoa@i^0,c
  4020  000B48                     
  4021                           ; BSR set to: 0
  4022                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 429:     h = g;
  4023  000B48  C066  F05C         	movff	efgtoa@g,efgtoa@h
  4024  000B4C  C067  F05D         	movff	efgtoa@g+1,efgtoa@h+1
  4025  000B50  C068  F05E         	movff	efgtoa@g+2,efgtoa@h+2
  4026  000B54  C069  F05F         	movff	efgtoa@g+3,efgtoa@h+3
  4027  000B58                     
  4028                           ; BSR set to: 0
  4029                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  4030  000B58  C06E  F04E         	movff	efgtoa@u,efgtoa@ou
  4031  000B5C  C06F  F04F         	movff	efgtoa@u+1,efgtoa@ou+1
  4032  000B60  C070  F050         	movff	efgtoa@u+2,efgtoa@ou+2
  4033  000B64  C071  F051         	movff	efgtoa@u+3,efgtoa@ou+3
  4034                           
  4035                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  4036  000B68  EF30  F006         	goto	l4014
  4037  000B6C                     l4006:
  4038                           
  4039                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  4040  000B6C  C05C  F001         	movff	efgtoa@h,___fldiv@b
  4041  000B70  C05D  F002         	movff	efgtoa@h+1,___fldiv@b+1
  4042  000B74  C05E  F003         	movff	efgtoa@h+2,___fldiv@b+2
  4043  000B78  C05F  F004         	movff	efgtoa@h+3,___fldiv@b+3
  4044  000B7C  C06E  F005         	movff	efgtoa@u,___fldiv@a
  4045  000B80  C06F  F006         	movff	efgtoa@u+1,___fldiv@a+1
  4046  000B84  C070  F007         	movff	efgtoa@u+2,___fldiv@a+2
  4047  000B88  C071  F008         	movff	efgtoa@u+3,___fldiv@a+3
  4048  000B8C  ECF2  F010         	call	___fldiv	;wreg free
  4049  000B90  C001  F01A         	movff	?___fldiv,floorf@x
  4050  000B94  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  4051  000B98  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  4052  000B9C  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  4053  000BA0  ECA5  F015         	call	_floorf	;wreg free
  4054  000BA4  C01A  F060         	movff	?_floorf,efgtoa@l
  4055  000BA8  C01B  F061         	movff	?_floorf+1,efgtoa@l+1
  4056  000BAC  C01C  F062         	movff	?_floorf+2,efgtoa@l+2
  4057  000BB0  C01D  F063         	movff	?_floorf+3,efgtoa@l+3
  4058                           
  4059                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  4060  000BB4  C060  F001         	movff	efgtoa@l,___fltol@f1
  4061  000BB8  C061  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4062  000BBC  C062  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4063  000BC0  C063  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4064  000BC4  EC2E  F01A         	call	___fltol	;wreg free
  4065  000BC8  C001  F052         	movff	?___fltol,efgtoa@d
  4066  000BCC  C002  F053         	movff	?___fltol+1,efgtoa@d+1
  4067  000BD0                     
  4068                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  4069  000BD0  C05C  F028         	movff	efgtoa@h,___flsub@b
  4070  000BD4  C05D  F029         	movff	efgtoa@h+1,___flsub@b+1
  4071  000BD8  C05E  F02A         	movff	efgtoa@h+2,___flsub@b+2
  4072  000BDC  C05F  F02B         	movff	efgtoa@h+3,___flsub@b+3
  4073  000BE0  C06E  F013         	movff	efgtoa@u,___flmul@a
  4074  000BE4  C06F  F014         	movff	efgtoa@u+1,___flmul@a+1
  4075  000BE8  C070  F015         	movff	efgtoa@u+2,___flmul@a+2
  4076  000BEC  C071  F016         	movff	efgtoa@u+3,___flmul@a+3
  4077  000BF0  C060  F00F         	movff	efgtoa@l,___flmul@b
  4078  000BF4  C061  F010         	movff	efgtoa@l+1,___flmul@b+1
  4079  000BF8  C062  F011         	movff	efgtoa@l+2,___flmul@b+2
  4080  000BFC  C063  F012         	movff	efgtoa@l+3,___flmul@b+3
  4081  000C00  ECDD  F00E         	call	___flmul	;wreg free
  4082  000C04  C00F  F02C         	movff	?___flmul,___flsub@a
  4083  000C08  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  4084  000C0C  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  4085  000C10  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  4086  000C14  EC57  F020         	call	___flsub	;wreg free
  4087  000C18  C028  F05C         	movff	?___flsub,efgtoa@h
  4088  000C1C  C029  F05D         	movff	?___flsub+1,efgtoa@h+1
  4089  000C20  C02A  F05E         	movff	?___flsub+2,efgtoa@h+2
  4090  000C24  C02B  F05F         	movff	?___flsub+3,efgtoa@h+3
  4091  000C28                     
  4092                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  4093  000C28  C06E  F001         	movff	efgtoa@u,___fldiv@b
  4094  000C2C  C06F  F002         	movff	efgtoa@u+1,___fldiv@b+1
  4095  000C30  C070  F003         	movff	efgtoa@u+2,___fldiv@b+2
  4096  000C34  C071  F004         	movff	efgtoa@u+3,___fldiv@b+3
  4097  000C38  0E00               	movlw	0
  4098  000C3A  6E05               	movwf	___fldiv@a^0,c
  4099  000C3C  0E00               	movlw	0
  4100  000C3E  6E06               	movwf	(___fldiv@a+1)^0,c
  4101  000C40  0E20               	movlw	32
  4102  000C42  6E07               	movwf	(___fldiv@a+2)^0,c
  4103  000C44  0E41               	movlw	65
  4104  000C46  6E08               	movwf	(___fldiv@a+3)^0,c
  4105  000C48  ECF2  F010         	call	___fldiv	;wreg free
  4106  000C4C  C001  F06E         	movff	?___fldiv,efgtoa@u
  4107  000C50  C002  F06F         	movff	?___fldiv+1,efgtoa@u+1
  4108  000C54  C003  F070         	movff	?___fldiv+2,efgtoa@u+2
  4109  000C58  C004  F071         	movff	?___fldiv+3,efgtoa@u+3
  4110  000C5C                     
  4111                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 436:         ++i;
  4112  000C5C  4A64               	infsnz	efgtoa@i^0,f,c
  4113  000C5E  2A65               	incf	(efgtoa@i+1)^0,f,c
  4114  000C60                     l4014:
  4115                           
  4116                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  4117  000C60  504C               	movf	efgtoa@m^0,w,c
  4118  000C62  5C64               	subwf	efgtoa@i^0,w,c
  4119  000C64  5065               	movf	(efgtoa@i+1)^0,w,c
  4120  000C66  0A80               	xorlw	128
  4121  000C68  6E3B               	movwf	??_efgtoa^0,c
  4122  000C6A  504D               	movf	(efgtoa@m+1)^0,w,c
  4123  000C6C  0A80               	xorlw	128
  4124  000C6E  583B               	subwfb	??_efgtoa^0,w,c
  4125  000C70  A0D8               	btfss	status,0,c
  4126  000C72  EF3D  F006         	goto	u4851
  4127  000C76  EF3F  F006         	goto	u4850
  4128  000C7A                     u4851:
  4129  000C7A  EFB6  F005         	goto	l4006
  4130  000C7E                     u4850:
  4131  000C7E                     
  4132                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  4133  000C7E  C06E  F00F         	movff	efgtoa@u,___flmul@b
  4134  000C82  C06F  F010         	movff	efgtoa@u+1,___flmul@b+1
  4135  000C86  C070  F011         	movff	efgtoa@u+2,___flmul@b+2
  4136  000C8A  C071  F012         	movff	efgtoa@u+3,___flmul@b+3
  4137  000C8E  0E00               	movlw	0
  4138  000C90  6E13               	movwf	___flmul@a^0,c
  4139  000C92  0E00               	movlw	0
  4140  000C94  6E14               	movwf	(___flmul@a+1)^0,c
  4141  000C96  0EA0               	movlw	160
  4142  000C98  6E15               	movwf	(___flmul@a+2)^0,c
  4143  000C9A  0E40               	movlw	64
  4144  000C9C  6E16               	movwf	(___flmul@a+3)^0,c
  4145  000C9E  ECDD  F00E         	call	___flmul	;wreg free
  4146  000CA2  C00F  F060         	movff	?___flmul,efgtoa@l
  4147  000CA6  C010  F061         	movff	?___flmul+1,efgtoa@l+1
  4148  000CAA  C011  F062         	movff	?___flmul+2,efgtoa@l+2
  4149  000CAE  C012  F063         	movff	?___flmul+3,efgtoa@l+3
  4150  000CB2                     
  4151                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  4152  000CB2  C05C  F028         	movff	efgtoa@h,___flge@ff1
  4153  000CB6  C05D  F029         	movff	efgtoa@h+1,___flge@ff1+1
  4154  000CBA  C05E  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  4155  000CBE  C05F  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  4156  000CC2  C060  F02C         	movff	efgtoa@l,___flge@ff2
  4157  000CC6  C061  F02D         	movff	efgtoa@l+1,___flge@ff2+1
  4158  000CCA  C062  F02E         	movff	efgtoa@l+2,___flge@ff2+2
  4159  000CCE  C063  F02F         	movff	efgtoa@l+3,___flge@ff2+3
  4160  000CD2  ECB1  F01A         	call	___flge	;wreg free
  4161  000CD6  B0D8               	btfsc	status,0,c
  4162  000CD8  EF70  F006         	goto	u4861
  4163  000CDC  EF72  F006         	goto	u4860
  4164  000CE0                     u4861:
  4165  000CE0  EF7C  F006         	goto	l4022
  4166  000CE4                     u4860:
  4167  000CE4                     
  4168                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  4169  000CE4  0E00               	movlw	0
  4170  000CE6  6E60               	movwf	efgtoa@l^0,c
  4171  000CE8  0E00               	movlw	0
  4172  000CEA  6E61               	movwf	(efgtoa@l+1)^0,c
  4173  000CEC  0E00               	movlw	0
  4174  000CEE  6E62               	movwf	(efgtoa@l+2)^0,c
  4175  000CF0  0E00               	movlw	0
  4176  000CF2  6E63               	movwf	(efgtoa@l+3)^0,c
  4177                           
  4178                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 443:     } else {
  4179  000CF4  EFA4  F006         	goto	l4028
  4180  000CF8                     l4022:
  4181                           
  4182                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  4183  000CF8  C05C  F001         	movff	efgtoa@h,___fleq@ff1
  4184  000CFC  C05D  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  4185  000D00  C05E  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  4186  000D04  C05F  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  4187  000D08  C060  F005         	movff	efgtoa@l,___fleq@ff2
  4188  000D0C  C061  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  4189  000D10  C062  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  4190  000D14  C063  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  4191  000D18  EC0F  F01E         	call	___fleq	;wreg free
  4192  000D1C  A0D8               	btfss	status,0,c
  4193  000D1E  EF93  F006         	goto	u4871
  4194  000D22  EF95  F006         	goto	u4870
  4195  000D26                     u4871:
  4196  000D26  EFA4  F006         	goto	l4028
  4197  000D2A                     u4870:
  4198  000D2A  B052               	btfsc	efgtoa@d^0,0,c
  4199  000D2C  EF9A  F006         	goto	u4881
  4200  000D30  EF9C  F006         	goto	u4880
  4201  000D34                     u4881:
  4202  000D34  EFA4  F006         	goto	l4028
  4203  000D38                     u4880:
  4204  000D38                     
  4205                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  4206  000D38  0E00               	movlw	0
  4207  000D3A  6E60               	movwf	efgtoa@l^0,c
  4208  000D3C  0E00               	movlw	0
  4209  000D3E  6E61               	movwf	(efgtoa@l+1)^0,c
  4210  000D40  0E00               	movlw	0
  4211  000D42  6E62               	movwf	(efgtoa@l+2)^0,c
  4212  000D44  0E00               	movlw	0
  4213  000D46  6E63               	movwf	(efgtoa@l+3)^0,c
  4214  000D48                     l4028:
  4215                           
  4216                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  4217  000D48  C066  F001         	movff	efgtoa@g,___fladd@b
  4218  000D4C  C067  F002         	movff	efgtoa@g+1,___fladd@b+1
  4219  000D50  C068  F003         	movff	efgtoa@g+2,___fladd@b+2
  4220  000D54  C069  F004         	movff	efgtoa@g+3,___fladd@b+3
  4221  000D58  C060  F005         	movff	efgtoa@l,___fladd@a
  4222  000D5C  C061  F006         	movff	efgtoa@l+1,___fladd@a+1
  4223  000D60  C062  F007         	movff	efgtoa@l+2,___fladd@a+2
  4224  000D64  C063  F008         	movff	efgtoa@l+3,___fladd@a+3
  4225  000D68  EC7D  F00C         	call	___fladd	;wreg free
  4226  000D6C  C001  F05C         	movff	?___fladd,efgtoa@h
  4227  000D70  C002  F05D         	movff	?___fladd+1,efgtoa@h+1
  4228  000D74  C003  F05E         	movff	?___fladd+2,efgtoa@h+2
  4229  000D78  C004  F05F         	movff	?___fladd+3,efgtoa@h+3
  4230  000D7C                     
  4231                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  4232  000D7C  C05C  F028         	movff	efgtoa@h,___flge@ff1
  4233  000D80  C05D  F029         	movff	efgtoa@h+1,___flge@ff1+1
  4234  000D84  C05E  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  4235  000D88  C05F  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  4236  000D8C  0E00               	movlw	0
  4237  000D8E  6E13               	movwf	___flmul@a^0,c
  4238  000D90  0E00               	movlw	0
  4239  000D92  6E14               	movwf	(___flmul@a+1)^0,c
  4240  000D94  0E20               	movlw	32
  4241  000D96  6E15               	movwf	(___flmul@a+2)^0,c
  4242  000D98  0E41               	movlw	65
  4243  000D9A  6E16               	movwf	(___flmul@a+3)^0,c
  4244  000D9C  C04E  F00F         	movff	efgtoa@ou,___flmul@b
  4245  000DA0  C04F  F010         	movff	efgtoa@ou+1,___flmul@b+1
  4246  000DA4  C050  F011         	movff	efgtoa@ou+2,___flmul@b+2
  4247  000DA8  C051  F012         	movff	efgtoa@ou+3,___flmul@b+3
  4248  000DAC  ECDD  F00E         	call	___flmul	;wreg free
  4249  000DB0  C00F  F02C         	movff	?___flmul,___flge@ff2
  4250  000DB4  C010  F02D         	movff	?___flmul+1,___flge@ff2+1
  4251  000DB8  C011  F02E         	movff	?___flmul+2,___flge@ff2+2
  4252  000DBC  C012  F02F         	movff	?___flmul+3,___flge@ff2+3
  4253  000DC0  ECB1  F01A         	call	___flge	;wreg free
  4254  000DC4  A0D8               	btfss	status,0,c
  4255  000DC6  EFE7  F006         	goto	u4891
  4256  000DCA  EFE9  F006         	goto	u4890
  4257  000DCE                     u4891:
  4258  000DCE  EF10  F007         	goto	l4040
  4259  000DD2                     u4890:
  4260  000DD2                     
  4261                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 454:   e++;
  4262  000DD2  4A6A               	infsnz	efgtoa@e^0,f,c
  4263  000DD4  2A6B               	incf	(efgtoa@e+1)^0,f,c
  4264  000DD6                     
  4265                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  4266  000DD6  C04E  F00F         	movff	efgtoa@ou,___flmul@b
  4267  000DDA  C04F  F010         	movff	efgtoa@ou+1,___flmul@b+1
  4268  000DDE  C050  F011         	movff	efgtoa@ou+2,___flmul@b+2
  4269  000DE2  C051  F012         	movff	efgtoa@ou+3,___flmul@b+3
  4270  000DE6  0E00               	movlw	0
  4271  000DE8  6E13               	movwf	___flmul@a^0,c
  4272  000DEA  0E00               	movlw	0
  4273  000DEC  6E14               	movwf	(___flmul@a+1)^0,c
  4274  000DEE  0E20               	movlw	32
  4275  000DF0  6E15               	movwf	(___flmul@a+2)^0,c
  4276  000DF2  0E41               	movlw	65
  4277  000DF4  6E16               	movwf	(___flmul@a+3)^0,c
  4278  000DF6  ECDD  F00E         	call	___flmul	;wreg free
  4279  000DFA  C00F  F04E         	movff	?___flmul,efgtoa@ou
  4280  000DFE  C010  F04F         	movff	?___flmul+1,efgtoa@ou+1
  4281  000E02  C011  F050         	movff	?___flmul+2,efgtoa@ou+2
  4282  000E06  C012  F051         	movff	?___flmul+3,efgtoa@ou+3
  4283  000E0A                     
  4284                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  4285  000E0A  0E66               	movlw	102
  4286  000E0C  185A               	xorwf	efgtoa@nmode^0,w,c
  4287  000E0E  A4D8               	btfss	status,2,c
  4288  000E10  EF0C  F007         	goto	u4901
  4289  000E14  EF0E  F007         	goto	u4900
  4290  000E18                     u4901:
  4291  000E18  EF10  F007         	goto	l4040
  4292  000E1C                     u4900:
  4293  000E1C                     
  4294                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 458:    m++;
  4295  000E1C  4A4C               	infsnz	efgtoa@m^0,f,c
  4296  000E1E  2A4D               	incf	(efgtoa@m+1)^0,f,c
  4297  000E20                     l4040:
  4298                           
  4299                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  4300  000E20  C04E  F06E         	movff	efgtoa@ou,efgtoa@u
  4301  000E24  C04F  F06F         	movff	efgtoa@ou+1,efgtoa@u+1
  4302  000E28  C050  F070         	movff	efgtoa@ou+2,efgtoa@u+2
  4303  000E2C  C051  F071         	movff	efgtoa@ou+3,efgtoa@u+3
  4304  000E30                     
  4305                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  4306  000E30  0E65               	movlw	101
  4307  000E32  185A               	xorwf	efgtoa@nmode^0,w,c
  4308  000E34  B4D8               	btfsc	status,2,c
  4309  000E36  EF1F  F007         	goto	u4911
  4310  000E3A  EF21  F007         	goto	u4910
  4311  000E3E                     u4911:
  4312  000E3E  EF27  F007         	goto	l4046
  4313  000E42                     u4910:
  4314  000E42  C06A  F04A         	movff	efgtoa@e,efgtoa@ne
  4315  000E46  C06B  F04B         	movff	efgtoa@e+1,efgtoa@ne+1
  4316  000E4A  EF2B  F007         	goto	l962
  4317  000E4E                     l4046:
  4318  000E4E  0E00               	movlw	0
  4319  000E50  6E4B               	movwf	(efgtoa@ne+1)^0,c
  4320  000E52  0E00               	movlw	0
  4321  000E54  6E4A               	movwf	efgtoa@ne^0,c
  4322  000E56                     l962:
  4323                           
  4324                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  4325  000E56  0E00               	movlw	0
  4326  000E58  6E49               	movwf	(efgtoa@pp+1)^0,c
  4327  000E5A  0E00               	movlw	0
  4328  000E5C  6E48               	movwf	efgtoa@pp^0,c
  4329                           
  4330                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  4331  000E5E  0E00               	movlw	0
  4332  000E60  6E47               	movwf	(efgtoa@t+1)^0,c
  4333  000E62  0E00               	movlw	0
  4334  000E64  6E46               	movwf	efgtoa@t^0,c
  4335                           
  4336                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  4337  000E66  0E00               	movlw	0
  4338  000E68  6E65               	movwf	(efgtoa@i+1)^0,c
  4339  000E6A  0E00               	movlw	0
  4340  000E6C  6E64               	movwf	efgtoa@i^0,c
  4341                           
  4342                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4343  000E6E  EF24  F008         	goto	l4096
  4344  000E72                     l4048:
  4345                           
  4346                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  4347  000E72  C05C  F001         	movff	efgtoa@h,___fldiv@b
  4348  000E76  C05D  F002         	movff	efgtoa@h+1,___fldiv@b+1
  4349  000E7A  C05E  F003         	movff	efgtoa@h+2,___fldiv@b+2
  4350  000E7E  C05F  F004         	movff	efgtoa@h+3,___fldiv@b+3
  4351  000E82  C06E  F005         	movff	efgtoa@u,___fldiv@a
  4352  000E86  C06F  F006         	movff	efgtoa@u+1,___fldiv@a+1
  4353  000E8A  C070  F007         	movff	efgtoa@u+2,___fldiv@a+2
  4354  000E8E  C071  F008         	movff	efgtoa@u+3,___fldiv@a+3
  4355  000E92  ECF2  F010         	call	___fldiv	;wreg free
  4356  000E96  C001  F01A         	movff	?___fldiv,floorf@x
  4357  000E9A  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  4358  000E9E  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  4359  000EA2  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  4360  000EA6  ECA5  F015         	call	_floorf	;wreg free
  4361  000EAA  C01A  F060         	movff	?_floorf,efgtoa@l
  4362  000EAE  C01B  F061         	movff	?_floorf+1,efgtoa@l+1
  4363  000EB2  C01C  F062         	movff	?_floorf+2,efgtoa@l+2
  4364  000EB6  C01D  F063         	movff	?_floorf+3,efgtoa@l+3
  4365                           
  4366                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  4367  000EBA  C060  F001         	movff	efgtoa@l,___fltol@f1
  4368  000EBE  C061  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4369  000EC2  C062  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4370  000EC6  C063  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4371  000ECA  EC2E  F01A         	call	___fltol	;wreg free
  4372  000ECE  C001  F052         	movff	?___fltol,efgtoa@d
  4373  000ED2  C002  F053         	movff	?___fltol+1,efgtoa@d+1
  4374  000ED6                     
  4375                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  4376  000ED6  B87E               	btfsc	_flags^0,4,c
  4377  000ED8  EF70  F007         	goto	u4921
  4378  000EDC  EF72  F007         	goto	u4920
  4379  000EE0                     u4921:
  4380  000EE0  EF8F  F007         	goto	l4060
  4381  000EE4                     u4920:
  4382  000EE4  5052               	movf	efgtoa@d^0,w,c
  4383  000EE6  1053               	iorwf	(efgtoa@d+1)^0,w,c
  4384  000EE8  A4D8               	btfss	status,2,c
  4385  000EEA  EF79  F007         	goto	u4931
  4386  000EEE  EF7B  F007         	goto	u4930
  4387  000EF2                     u4931:
  4388  000EF2  EF8F  F007         	goto	l4060
  4389  000EF6                     u4930:
  4390  000EF6  0E67               	movlw	103
  4391  000EF8  185B               	xorwf	efgtoa@mode^0,w,c
  4392  000EFA  A4D8               	btfss	status,2,c
  4393  000EFC  EF82  F007         	goto	u4941
  4394  000F00  EF84  F007         	goto	u4940
  4395  000F04                     u4941:
  4396  000F04  EF8F  F007         	goto	l4060
  4397  000F08                     u4940:
  4398  000F08  BE4B               	btfsc	(efgtoa@ne+1)^0,7,c
  4399  000F0A  EF8B  F007         	goto	u4950
  4400  000F0E  EF89  F007         	goto	u4951
  4401  000F12                     u4951:
  4402  000F12  EF8F  F007         	goto	l4060
  4403  000F16                     u4950:
  4404  000F16                     
  4405                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  4406  000F16  4A46               	infsnz	efgtoa@t^0,f,c
  4407  000F18  2A47               	incf	(efgtoa@t+1)^0,f,c
  4408                           
  4409                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  4410  000F1A  EFD9  F007         	goto	l4088
  4411  000F1E                     l4060:
  4412                           
  4413                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  4414  000F1E  5048               	movf	efgtoa@pp^0,w,c
  4415  000F20  1049               	iorwf	(efgtoa@pp+1)^0,w,c
  4416  000F22  A4D8               	btfss	status,2,c
  4417  000F24  EF96  F007         	goto	u4961
  4418  000F28  EF98  F007         	goto	u4960
  4419  000F2C                     u4961:
  4420  000F2C  EFC2  F007         	goto	l4080
  4421  000F30                     u4960:
  4422  000F30  BE4B               	btfsc	(efgtoa@ne+1)^0,7,c
  4423  000F32  EF9F  F007         	goto	u4970
  4424  000F36  EF9D  F007         	goto	u4971
  4425  000F3A                     u4971:
  4426  000F3A  EFC2  F007         	goto	l4080
  4427  000F3E                     u4970:
  4428  000F3E                     
  4429                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  4430  000F3E  0E00               	movlw	low _dbuf
  4431  000F40  246C               	addwf	efgtoa@n^0,w,c
  4432  000F42  6ED9               	movwf	fsr2l,c
  4433  000F44  0E01               	movlw	high _dbuf
  4434  000F46  206D               	addwfc	(efgtoa@n+1)^0,w,c
  4435  000F48  6EDA               	movwf	fsr2h,c
  4436  000F4A  0E2E               	movlw	46
  4437  000F4C  6EDF               	movwf	indf2,c
  4438  000F4E  4A6C               	infsnz	efgtoa@n^0,f,c
  4439  000F50  2A6D               	incf	(efgtoa@n+1)^0,f,c
  4440  000F52                     
  4441                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  4442  000F52  0658               	decf	efgtoa@w^0,f,c
  4443  000F54  A0D8               	btfss	status,0,c
  4444  000F56  0659               	decf	(efgtoa@w+1)^0,f,c
  4445  000F58                     
  4446                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  4447  000F58  0E00               	movlw	0
  4448  000F5A  6E49               	movwf	(efgtoa@pp+1)^0,c
  4449  000F5C  0E01               	movlw	1
  4450  000F5E  6E48               	movwf	efgtoa@pp^0,c
  4451  000F60  EFC2  F007         	goto	l4080
  4452  000F64                     l4072:
  4453                           
  4454                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  4455  000F64  0E00               	movlw	low _dbuf
  4456  000F66  246C               	addwf	efgtoa@n^0,w,c
  4457  000F68  6ED9               	movwf	fsr2l,c
  4458  000F6A  0E01               	movlw	high _dbuf
  4459  000F6C  206D               	addwfc	(efgtoa@n+1)^0,w,c
  4460  000F6E  6EDA               	movwf	fsr2h,c
  4461  000F70  0E30               	movlw	48
  4462  000F72  6EDF               	movwf	indf2,c
  4463  000F74  4A6C               	infsnz	efgtoa@n^0,f,c
  4464  000F76  2A6D               	incf	(efgtoa@n+1)^0,f,c
  4465  000F78                     
  4466                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  4467  000F78  0658               	decf	efgtoa@w^0,f,c
  4468  000F7A  A0D8               	btfss	status,0,c
  4469  000F7C  0659               	decf	(efgtoa@w+1)^0,f,c
  4470  000F7E                     
  4471                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  4472  000F7E  0646               	decf	efgtoa@t^0,f,c
  4473  000F80  A0D8               	btfss	status,0,c
  4474  000F82  0647               	decf	(efgtoa@t+1)^0,f,c
  4475  000F84                     l4080:
  4476                           
  4477                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  4478  000F84  5046               	movf	efgtoa@t^0,w,c
  4479  000F86  1047               	iorwf	(efgtoa@t+1)^0,w,c
  4480  000F88  A4D8               	btfss	status,2,c
  4481  000F8A  EFC9  F007         	goto	u4981
  4482  000F8E  EFCB  F007         	goto	u4980
  4483  000F92                     u4981:
  4484  000F92  EFB2  F007         	goto	l4072
  4485  000F96                     u4980:
  4486  000F96                     
  4487                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  4488  000F96  0E00               	movlw	low _dbuf
  4489  000F98  246C               	addwf	efgtoa@n^0,w,c
  4490  000F9A  6ED9               	movwf	fsr2l,c
  4491  000F9C  0E01               	movlw	high _dbuf
  4492  000F9E  206D               	addwfc	(efgtoa@n+1)^0,w,c
  4493  000FA0  6EDA               	movwf	fsr2h,c
  4494  000FA2  5052               	movf	efgtoa@d^0,w,c
  4495  000FA4  0F30               	addlw	48
  4496  000FA6  6EDF               	movwf	indf2,c
  4497  000FA8  4A6C               	infsnz	efgtoa@n^0,f,c
  4498  000FAA  2A6D               	incf	(efgtoa@n+1)^0,f,c
  4499  000FAC                     
  4500                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  4501  000FAC  0658               	decf	efgtoa@w^0,f,c
  4502  000FAE  A0D8               	btfss	status,0,c
  4503  000FB0  0659               	decf	(efgtoa@w+1)^0,f,c
  4504  000FB2                     l4088:
  4505                           
  4506                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  4507  000FB2  C05C  F028         	movff	efgtoa@h,___flsub@b
  4508  000FB6  C05D  F029         	movff	efgtoa@h+1,___flsub@b+1
  4509  000FBA  C05E  F02A         	movff	efgtoa@h+2,___flsub@b+2
  4510  000FBE  C05F  F02B         	movff	efgtoa@h+3,___flsub@b+3
  4511  000FC2  C06E  F013         	movff	efgtoa@u,___flmul@a
  4512  000FC6  C06F  F014         	movff	efgtoa@u+1,___flmul@a+1
  4513  000FCA  C070  F015         	movff	efgtoa@u+2,___flmul@a+2
  4514  000FCE  C071  F016         	movff	efgtoa@u+3,___flmul@a+3
  4515  000FD2  C060  F00F         	movff	efgtoa@l,___flmul@b
  4516  000FD6  C061  F010         	movff	efgtoa@l+1,___flmul@b+1
  4517  000FDA  C062  F011         	movff	efgtoa@l+2,___flmul@b+2
  4518  000FDE  C063  F012         	movff	efgtoa@l+3,___flmul@b+3
  4519  000FE2  ECDD  F00E         	call	___flmul	;wreg free
  4520  000FE6  C00F  F02C         	movff	?___flmul,___flsub@a
  4521  000FEA  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  4522  000FEE  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  4523  000FF2  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  4524  000FF6  EC57  F020         	call	___flsub	;wreg free
  4525  000FFA  C028  F05C         	movff	?___flsub,efgtoa@h
  4526  000FFE  C029  F05D         	movff	?___flsub+1,efgtoa@h+1
  4527  001002  C02A  F05E         	movff	?___flsub+2,efgtoa@h+2
  4528  001006  C02B  F05F         	movff	?___flsub+3,efgtoa@h+3
  4529  00100A                     
  4530                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  4531  00100A  C06E  F001         	movff	efgtoa@u,___fldiv@b
  4532  00100E  C06F  F002         	movff	efgtoa@u+1,___fldiv@b+1
  4533  001012  C070  F003         	movff	efgtoa@u+2,___fldiv@b+2
  4534  001016  C071  F004         	movff	efgtoa@u+3,___fldiv@b+3
  4535  00101A  0E00               	movlw	0
  4536  00101C  6E05               	movwf	___fldiv@a^0,c
  4537  00101E  0E00               	movlw	0
  4538  001020  6E06               	movwf	(___fldiv@a+1)^0,c
  4539  001022  0E20               	movlw	32
  4540  001024  6E07               	movwf	(___fldiv@a+2)^0,c
  4541  001026  0E41               	movlw	65
  4542  001028  6E08               	movwf	(___fldiv@a+3)^0,c
  4543  00102A  ECF2  F010         	call	___fldiv	;wreg free
  4544  00102E  C001  F06E         	movff	?___fldiv,efgtoa@u
  4545  001032  C002  F06F         	movff	?___fldiv+1,efgtoa@u+1
  4546  001036  C003  F070         	movff	?___fldiv+2,efgtoa@u+2
  4547  00103A  C004  F071         	movff	?___fldiv+3,efgtoa@u+3
  4548  00103E                     
  4549                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  4550  00103E  064A               	decf	efgtoa@ne^0,f,c
  4551  001040  A0D8               	btfss	status,0,c
  4552  001042  064B               	decf	(efgtoa@ne+1)^0,f,c
  4553  001044                     
  4554                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 490:         ++i;
  4555  001044  4A64               	infsnz	efgtoa@i^0,f,c
  4556  001046  2A65               	incf	(efgtoa@i+1)^0,f,c
  4557  001048                     l4096:
  4558                           
  4559                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4560  001048  504C               	movf	efgtoa@m^0,w,c
  4561  00104A  5C64               	subwf	efgtoa@i^0,w,c
  4562  00104C  5065               	movf	(efgtoa@i+1)^0,w,c
  4563  00104E  0A80               	xorlw	128
  4564  001050  6E3B               	movwf	??_efgtoa^0,c
  4565  001052  504D               	movf	(efgtoa@m+1)^0,w,c
  4566  001054  0A80               	xorlw	128
  4567  001056  583B               	subwfb	??_efgtoa^0,w,c
  4568  001058  B0D8               	btfsc	status,0,c
  4569  00105A  EF31  F008         	goto	u4991
  4570  00105E  EF33  F008         	goto	u4990
  4571  001062                     u4991:
  4572  001062  EF41  F008         	goto	l4100
  4573  001066                     u4990:
  4574  001066  BE6D               	btfsc	(efgtoa@n+1)^0,7,c
  4575  001068  EF3F  F008         	goto	u5001
  4576  00106C  506D               	movf	(efgtoa@n+1)^0,w,c
  4577  00106E  E109               	bnz	u5000
  4578  001070  0E4B               	movlw	75
  4579  001072  5C6C               	subwf	efgtoa@n^0,w,c
  4580  001074  A0D8               	btfss	status,0,c
  4581  001076  EF3F  F008         	goto	u5001
  4582  00107A  EF41  F008         	goto	u5000
  4583  00107E                     u5001:
  4584  00107E  EF39  F007         	goto	l4048
  4585  001082                     u5000:
  4586  001082                     l4100:
  4587                           
  4588                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  4589  001082  5048               	movf	efgtoa@pp^0,w,c
  4590  001084  1049               	iorwf	(efgtoa@pp+1)^0,w,c
  4591  001086  A4D8               	btfss	status,2,c
  4592  001088  EF48  F008         	goto	u5011
  4593  00108C  EF4A  F008         	goto	u5010
  4594  001090                     u5011:
  4595  001090  EF5B  F008         	goto	l4108
  4596  001094                     u5010:
  4597  001094  A87E               	btfss	_flags^0,4,c
  4598  001096  EF4F  F008         	goto	u5021
  4599  00109A  EF51  F008         	goto	u5020
  4600  00109E                     u5021:
  4601  00109E  EF5B  F008         	goto	l4108
  4602  0010A2                     u5020:
  4603  0010A2                     
  4604                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  4605  0010A2  0E00               	movlw	low _dbuf
  4606  0010A4  246C               	addwf	efgtoa@n^0,w,c
  4607  0010A6  6ED9               	movwf	fsr2l,c
  4608  0010A8  0E01               	movlw	high _dbuf
  4609  0010AA  206D               	addwfc	(efgtoa@n+1)^0,w,c
  4610  0010AC  6EDA               	movwf	fsr2h,c
  4611  0010AE  0E2E               	movlw	46
  4612  0010B0  6EDF               	movwf	indf2,c
  4613  0010B2  4A6C               	infsnz	efgtoa@n^0,f,c
  4614  0010B4  2A6D               	incf	(efgtoa@n+1)^0,f,c
  4615  0010B6                     l4108:
  4616                           
  4617                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  4618  0010B6  0E00               	movlw	low _dbuf
  4619  0010B8  246C               	addwf	efgtoa@n^0,w,c
  4620  0010BA  6ED9               	movwf	fsr2l,c
  4621  0010BC  0E01               	movlw	high _dbuf
  4622  0010BE  206D               	addwfc	(efgtoa@n+1)^0,w,c
  4623  0010C0  6EDA               	movwf	fsr2h,c
  4624  0010C2  0E00               	movlw	0
  4625  0010C4  6EDF               	movwf	indf2,c
  4626  0010C6                     
  4627                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  4628  0010C6  0E65               	movlw	101
  4629  0010C8  185A               	xorwf	efgtoa@nmode^0,w,c
  4630  0010CA  A4D8               	btfss	status,2,c
  4631  0010CC  EF6A  F008         	goto	u5031
  4632  0010D0  EF6C  F008         	goto	u5030
  4633  0010D4                     u5031:
  4634  0010D4  EFDE  F003         	goto	l3910
  4635  0010D8                     u5030:
  4636  0010D8                     
  4637                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  4638  0010D8  0E00               	movlw	0
  4639  0010DA  6E65               	movwf	(efgtoa@i+1)^0,c
  4640  0010DC  0E4F               	movlw	79
  4641  0010DE  6E64               	movwf	efgtoa@i^0,c
  4642  0010E0                     
  4643                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  4644  0010E0  0E00               	movlw	low _dbuf
  4645  0010E2  2464               	addwf	efgtoa@i^0,w,c
  4646  0010E4  6ED9               	movwf	fsr2l,c
  4647  0010E6  0E01               	movlw	high _dbuf
  4648  0010E8  2065               	addwfc	(efgtoa@i+1)^0,w,c
  4649  0010EA  6EDA               	movwf	fsr2h,c
  4650  0010EC  0E00               	movlw	0
  4651  0010EE  6EDF               	movwf	indf2,c
  4652  0010F0                     
  4653                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  4654  0010F0  0E00               	movlw	0
  4655  0010F2  6E55               	movwf	(efgtoa@sign+1)^0,c
  4656  0010F4  0E00               	movlw	0
  4657  0010F6  6E54               	movwf	efgtoa@sign^0,c
  4658  0010F8                     
  4659                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  4660  0010F8  BE6B               	btfsc	(efgtoa@e+1)^0,7,c
  4661  0010FA  EF83  F008         	goto	u5040
  4662  0010FE  EF81  F008         	goto	u5041
  4663  001102                     u5041:
  4664  001102  EF8B  F008         	goto	l4124
  4665  001106                     u5040:
  4666  001106                     
  4667                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  4668  001106  0E00               	movlw	0
  4669  001108  6E55               	movwf	(efgtoa@sign+1)^0,c
  4670  00110A  0E01               	movlw	1
  4671  00110C  6E54               	movwf	efgtoa@sign^0,c
  4672  00110E                     
  4673                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  4674  00110E  6C6A               	negf	efgtoa@e^0,c
  4675  001110  1E6B               	comf	(efgtoa@e+1)^0,f,c
  4676  001112  B0D8               	btfsc	status,0,c
  4677  001114  2A6B               	incf	(efgtoa@e+1)^0,f,c
  4678  001116                     l4124:
  4679                           
  4680                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  4681  001116  0E00               	movlw	0
  4682  001118  6E57               	movwf	(efgtoa@p+1)^0,c
  4683  00111A  0E02               	movlw	2
  4684  00111C  6E56               	movwf	efgtoa@p^0,c
  4685                           
  4686                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  4687  00111E  EFBB  F008         	goto	l4136
  4688  001122                     l4126:
  4689                           
  4690                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  4691  001122  0664               	decf	efgtoa@i^0,f,c
  4692  001124  A0D8               	btfss	status,0,c
  4693  001126  0665               	decf	(efgtoa@i+1)^0,f,c
  4694  001128                     
  4695                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  4696  001128  0E00               	movlw	low _dbuf
  4697  00112A  2464               	addwf	efgtoa@i^0,w,c
  4698  00112C  6ED9               	movwf	fsr2l,c
  4699  00112E  0E01               	movlw	high _dbuf
  4700  001130  2065               	addwfc	(efgtoa@i+1)^0,w,c
  4701  001132  6EDA               	movwf	fsr2h,c
  4702  001134  C06A  F001         	movff	efgtoa@e,___awmod@dividend
  4703  001138  C06B  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  4704  00113C  0E00               	movlw	0
  4705  00113E  6E04               	movwf	(___awmod@divisor+1)^0,c
  4706  001140  0E0A               	movlw	10
  4707  001142  6E03               	movwf	___awmod@divisor^0,c
  4708  001144  ECB7  F01D         	call	___awmod	;wreg free
  4709  001148  5001               	movf	?___awmod^0,w,c
  4710  00114A  0F30               	addlw	48
  4711  00114C  6EDF               	movwf	indf2,c
  4712  00114E                     
  4713                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  4714  00114E  C06A  F001         	movff	efgtoa@e,___awdiv@dividend
  4715  001152  C06B  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  4716  001156  0E00               	movlw	0
  4717  001158  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4718  00115A  0E0A               	movlw	10
  4719  00115C  6E03               	movwf	___awdiv@divisor^0,c
  4720  00115E  ECF4  F01C         	call	___awdiv	;wreg free
  4721  001162  C001  F06A         	movff	?___awdiv,efgtoa@e
  4722  001166  C002  F06B         	movff	?___awdiv+1,efgtoa@e+1
  4723  00116A                     
  4724                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  4725  00116A  0656               	decf	efgtoa@p^0,f,c
  4726  00116C  A0D8               	btfss	status,0,c
  4727  00116E  0657               	decf	(efgtoa@p+1)^0,f,c
  4728  001170                     
  4729                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  4730  001170  0658               	decf	efgtoa@w^0,f,c
  4731  001172  A0D8               	btfss	status,0,c
  4732  001174  0659               	decf	(efgtoa@w+1)^0,f,c
  4733  001176                     l4136:
  4734                           
  4735                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  4736  001176  506A               	movf	efgtoa@e^0,w,c
  4737  001178  106B               	iorwf	(efgtoa@e+1)^0,w,c
  4738  00117A  A4D8               	btfss	status,2,c
  4739  00117C  EFC2  F008         	goto	u5051
  4740  001180  EFC4  F008         	goto	u5050
  4741  001184                     u5051:
  4742  001184  EF91  F008         	goto	l4126
  4743  001188                     u5050:
  4744  001188  BE57               	btfsc	(efgtoa@p+1)^0,7,c
  4745  00118A  EFD1  F008         	goto	u5060
  4746  00118E  5057               	movf	(efgtoa@p+1)^0,w,c
  4747  001190  E106               	bnz	u5061
  4748  001192  0456               	decf	efgtoa@p^0,w,c
  4749  001194  B0D8               	btfsc	status,0,c
  4750  001196  EFCF  F008         	goto	u5061
  4751  00119A  EFD1  F008         	goto	u5060
  4752  00119E                     u5061:
  4753  00119E  EF91  F008         	goto	l4126
  4754  0011A2                     u5060:
  4755  0011A2                     
  4756                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 514:         --i;
  4757  0011A2  0664               	decf	efgtoa@i^0,f,c
  4758  0011A4  A0D8               	btfss	status,0,c
  4759  0011A6  0665               	decf	(efgtoa@i+1)^0,f,c
  4760  0011A8                     
  4761                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  4762  0011A8  5054               	movf	efgtoa@sign^0,w,c
  4763  0011AA  1055               	iorwf	(efgtoa@sign+1)^0,w,c
  4764  0011AC  A4D8               	btfss	status,2,c
  4765  0011AE  EFDB  F008         	goto	u5071
  4766  0011B2  EFDD  F008         	goto	u5070
  4767  0011B6                     u5071:
  4768  0011B6  EFE3  F008         	goto	l4146
  4769  0011BA                     u5070:
  4770  0011BA  0E00               	movlw	0
  4771  0011BC  6E43               	movwf	(_efgtoa$1169+1)^0,c
  4772  0011BE  0E2B               	movlw	43
  4773  0011C0  6E42               	movwf	_efgtoa$1169^0,c
  4774  0011C2  EFE7  F008         	goto	l4148
  4775  0011C6                     l4146:
  4776  0011C6  0E00               	movlw	0
  4777  0011C8  6E43               	movwf	(_efgtoa$1169+1)^0,c
  4778  0011CA  0E2D               	movlw	45
  4779  0011CC  6E42               	movwf	_efgtoa$1169^0,c
  4780  0011CE                     l4148:
  4781  0011CE  0E00               	movlw	low _dbuf
  4782  0011D0  2464               	addwf	efgtoa@i^0,w,c
  4783  0011D2  6ED9               	movwf	fsr2l,c
  4784  0011D4  0E01               	movlw	high _dbuf
  4785  0011D6  2065               	addwfc	(efgtoa@i+1)^0,w,c
  4786  0011D8  6EDA               	movwf	fsr2h,c
  4787  0011DA  C042  FFDF         	movff	_efgtoa$1169,indf2
  4788  0011DE                     
  4789                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 516:         --w;
  4790  0011DE  0658               	decf	efgtoa@w^0,f,c
  4791  0011E0  A0D8               	btfss	status,0,c
  4792  0011E2  0659               	decf	(efgtoa@w+1)^0,f,c
  4793  0011E4                     
  4794                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 517:         --i;
  4795  0011E4  0664               	decf	efgtoa@i^0,f,c
  4796  0011E6  A0D8               	btfss	status,0,c
  4797  0011E8  0665               	decf	(efgtoa@i+1)^0,f,c
  4798  0011EA  0EBF               	movlw	191
  4799  0011EC  6E3B               	movwf	??_efgtoa^0,c
  4800  0011EE  0EFF               	movlw	255
  4801  0011F0  6E3C               	movwf	(??_efgtoa+1)^0,c
  4802  0011F2  503A               	movf	efgtoa@c^0,w,c
  4803  0011F4  6E3D               	movwf	(??_efgtoa+2)^0,c
  4804  0011F6  6A3E               	clrf	(??_efgtoa+3)^0,c
  4805  0011F8  503B               	movf	??_efgtoa^0,w,c
  4806  0011FA  263D               	addwf	(??_efgtoa+2)^0,f,c
  4807  0011FC  503C               	movf	(??_efgtoa+1)^0,w,c
  4808  0011FE  223E               	addwfc	(??_efgtoa+3)^0,f,c
  4809  001200  503E               	movf	(??_efgtoa+3)^0,w,c
  4810  001202  E109               	bnz	u5080
  4811  001204  0E1A               	movlw	26
  4812  001206  5C3D               	subwf	(??_efgtoa+2)^0,w,c
  4813  001208  A0D8               	btfss	status,0,c
  4814  00120A  EF09  F009         	goto	u5081
  4815  00120E  EF0B  F009         	goto	u5080
  4816  001212                     u5081:
  4817  001212  EF11  F009         	goto	l4160
  4818  001216                     u5080:
  4819  001216  0E00               	movlw	0
  4820  001218  6E45               	movwf	(_efgtoa$1170+1)^0,c
  4821  00121A  0E65               	movlw	101
  4822  00121C  6E44               	movwf	_efgtoa$1170^0,c
  4823  00121E  EF15  F009         	goto	l4162
  4824  001222                     l4160:
  4825  001222  0E00               	movlw	0
  4826  001224  6E45               	movwf	(_efgtoa$1170+1)^0,c
  4827  001226  0E45               	movlw	69
  4828  001228  6E44               	movwf	_efgtoa$1170^0,c
  4829  00122A                     l4162:
  4830  00122A  0E00               	movlw	low _dbuf
  4831  00122C  2464               	addwf	efgtoa@i^0,w,c
  4832  00122E  6ED9               	movwf	fsr2l,c
  4833  001230  0E01               	movlw	high _dbuf
  4834  001232  2065               	addwfc	(efgtoa@i+1)^0,w,c
  4835  001234  6EDA               	movwf	fsr2h,c
  4836  001236  C044  FFDF         	movff	_efgtoa$1170,indf2
  4837  00123A                     
  4838                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 519:         --w;
  4839  00123A  0658               	decf	efgtoa@w^0,f,c
  4840  00123C  A0D8               	btfss	status,0,c
  4841  00123E  0659               	decf	(efgtoa@w+1)^0,f,c
  4842  001240                     
  4843                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  4844  001240  0E00               	movlw	low _dbuf
  4845  001242  246C               	addwf	efgtoa@n^0,w,c
  4846  001244  6E01               	movwf	strcpy@dest^0,c
  4847  001246  0E01               	movlw	high _dbuf
  4848  001248  206D               	addwfc	(efgtoa@n+1)^0,w,c
  4849  00124A  6E02               	movwf	(strcpy@dest+1)^0,c
  4850  00124C  0E00               	movlw	low _dbuf
  4851  00124E  2464               	addwf	efgtoa@i^0,w,c
  4852  001250  6E03               	movwf	strcpy@src^0,c
  4853  001252  0E01               	movlw	high _dbuf
  4854  001254  2065               	addwfc	(efgtoa@i+1)^0,w,c
  4855  001256  6E04               	movwf	(strcpy@src+1)^0,c
  4856  001258  ECB4  F01F         	call	_strcpy	;wreg free
  4857  00125C  EFDE  F003         	goto	l3910
  4858  001260                     l918:
  4859  001260  0012               	return		;funcret
  4860  001262                     __end_of_efgtoa:
  4861                           	callstack 0
  4862                           
  4863 ;; *************** function _tolower *****************
  4864 ;; Defined at:
  4865 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\tolower.c"
  4866 ;; Parameters:    Size  Location     Type
  4867 ;;  c               2    6[COMRAM] int 
  4868 ;; Auto vars:     Size  Location     Type
  4869 ;;		None
  4870 ;; Return value:  Size  Location     Type
  4871 ;;                  2    6[COMRAM] int 
  4872 ;; Registers used:
  4873 ;;		wreg, status,2, status,0
  4874 ;; Tracked objects:
  4875 ;;		On entry : 0/0
  4876 ;;		On exit  : 0/0
  4877 ;;		Unchanged: 0/0
  4878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4879 ;;      Params:         2       0       0       0       0       0       0
  4880 ;;      Locals:         0       0       0       0       0       0       0
  4881 ;;      Temps:          4       0       0       0       0       0       0
  4882 ;;      Totals:         6       0       0       0       0       0       0
  4883 ;;Total ram usage:        6 bytes
  4884 ;; Hardware stack levels used: 1
  4885 ;; Hardware stack levels required when called: 1
  4886 ;; This function calls:
  4887 ;;		_isupper
  4888 ;; This function is called by:
  4889 ;;		_efgtoa
  4890 ;;		_vfpfcnvrt
  4891 ;; This function uses a non-reentrant model
  4892 ;;
  4893                           
  4894                           	psect	text11
  4895  004068                     __ptext11:
  4896                           	callstack 0
  4897  004068                     _tolower:
  4898                           	callstack 25
  4899  004068  0EBF               	movlw	191
  4900  00406A  6E09               	movwf	??_tolower^0,c
  4901  00406C  0EFF               	movlw	255
  4902  00406E  6E0A               	movwf	(??_tolower+1)^0,c
  4903  004070  C007  F00B         	movff	tolower@c,??_tolower+2
  4904  004074  C008  F00C         	movff	tolower@c+1,??_tolower+3
  4905  004078  5009               	movf	??_tolower^0,w,c
  4906  00407A  260B               	addwf	(??_tolower+2)^0,f,c
  4907  00407C  500A               	movf	(??_tolower+1)^0,w,c
  4908  00407E  220C               	addwfc	(??_tolower+3)^0,f,c
  4909  004080  500C               	movf	(??_tolower+3)^0,w,c
  4910  004082  E107               	bnz	u4301
  4911  004084  0E1A               	movlw	26
  4912  004086  5C0B               	subwf	(??_tolower+2)^0,w,c
  4913  004088  B0D8               	btfsc	status,0,c
  4914  00408A  EF49  F020         	goto	u4301
  4915  00408E  EF4B  F020         	goto	u4300
  4916  004092                     u4301:
  4917  004092  EF52  F020         	goto	l1164
  4918  004096                     u4300:
  4919  004096  0E20               	movlw	32
  4920  004098  1007               	iorwf	tolower@c^0,w,c
  4921  00409A  6E07               	movwf	?_tolower^0,c
  4922  00409C  5008               	movf	(tolower@c+1)^0,w,c
  4923  00409E  6E08               	movwf	(?_tolower+1)^0,c
  4924  0040A0  EF56  F020         	goto	l1167
  4925  0040A4                     l1164:
  4926  0040A4  C007  F007         	movff	tolower@c,?_tolower
  4927  0040A8  C008  F008         	movff	tolower@c+1,?_tolower+1
  4928  0040AC                     l1167:
  4929  0040AC  0012               	return		;funcret
  4930  0040AE                     __end_of_tolower:
  4931                           	callstack 0
  4932                           
  4933 ;; *************** function _isupper *****************
  4934 ;; Defined at:
  4935 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isupper.c"
  4936 ;; Parameters:    Size  Location     Type
  4937 ;;  c               2    0[COMRAM] int 
  4938 ;; Auto vars:     Size  Location     Type
  4939 ;;		None
  4940 ;; Return value:  Size  Location     Type
  4941 ;;                  2    0[COMRAM] int 
  4942 ;; Registers used:
  4943 ;;		wreg, status,2, status,0
  4944 ;; Tracked objects:
  4945 ;;		On entry : 0/0
  4946 ;;		On exit  : 0/0
  4947 ;;		Unchanged: 0/0
  4948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4949 ;;      Params:         2       0       0       0       0       0       0
  4950 ;;      Locals:         0       0       0       0       0       0       0
  4951 ;;      Temps:          4       0       0       0       0       0       0
  4952 ;;      Totals:         6       0       0       0       0       0       0
  4953 ;;Total ram usage:        6 bytes
  4954 ;; Hardware stack levels used: 1
  4955 ;; This function calls:
  4956 ;;		Nothing
  4957 ;; This function is called by:
  4958 ;;		_efgtoa
  4959 ;;		_vfpfcnvrt
  4960 ;;		_tolower
  4961 ;; This function uses a non-reentrant model
  4962 ;;
  4963                           
  4964                           	psect	text12
  4965  0041B6                     __ptext12:
  4966                           	callstack 0
  4967  0041B6                     _isupper:
  4968                           	callstack 25
  4969  0041B6  0EBF               	movlw	191
  4970  0041B8  6E03               	movwf	??_isupper^0,c
  4971  0041BA  0EFF               	movlw	255
  4972  0041BC  6E04               	movwf	(??_isupper+1)^0,c
  4973  0041BE  C001  F005         	movff	isupper@c,??_isupper+2
  4974  0041C2  C002  F006         	movff	isupper@c+1,??_isupper+3
  4975  0041C6  5003               	movf	??_isupper^0,w,c
  4976  0041C8  2605               	addwf	(??_isupper+2)^0,f,c
  4977  0041CA  5004               	movf	(??_isupper+1)^0,w,c
  4978  0041CC  2206               	addwfc	(??_isupper+3)^0,f,c
  4979  0041CE  5006               	movf	(??_isupper+3)^0,w,c
  4980  0041D0  E10A               	bnz	u3310
  4981  0041D2  0E1A               	movlw	26
  4982  0041D4  5C05               	subwf	(??_isupper+2)^0,w,c
  4983  0041D6  A0D8               	btfss	status,0,c
  4984  0041D8  EFF0  F020         	goto	u3311
  4985  0041DC  EFF3  F020         	goto	u3310
  4986  0041E0                     u3311:
  4987  0041E0  0E01               	movlw	1
  4988  0041E2  EFF4  F020         	goto	u3320
  4989  0041E6                     u3310:
  4990  0041E6  0E00               	movlw	0
  4991  0041E8                     u3320:
  4992  0041E8  6E01               	movwf	?_isupper^0,c
  4993  0041EA  6A02               	clrf	(?_isupper+1)^0,c
  4994  0041EC  0012               	return		;funcret
  4995  0041EE                     __end_of_isupper:
  4996                           	callstack 0
  4997                           
  4998 ;; *************** function _strcpy *****************
  4999 ;; Defined at:
  5000 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strcpy.c"
  5001 ;; Parameters:    Size  Location     Type
  5002 ;;  dest            2    0[COMRAM] PTR unsigned char 
  5003 ;;		 -> dbuf(80), 
  5004 ;;  src             2    2[COMRAM] PTR const unsigned char 
  5005 ;;		 -> STR_20(4), STR_19(4), STR_16(4), STR_15(4), 
  5006 ;;		 -> dbuf(80), 
  5007 ;; Auto vars:     Size  Location     Type
  5008 ;;  d               2    8[COMRAM] PTR unsigned char 
  5009 ;;		 -> dbuf(80), 
  5010 ;;  s               2    6[COMRAM] PTR const unsigned char 
  5011 ;;		 -> STR_20(4), STR_19(4), STR_16(4), STR_15(4), 
  5012 ;;		 -> dbuf(80), 
  5013 ;; Return value:  Size  Location     Type
  5014 ;;                  2    0[COMRAM] PTR unsigned char 
  5015 ;; Registers used:
  5016 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5017 ;; Tracked objects:
  5018 ;;		On entry : 0/0
  5019 ;;		On exit  : 0/0
  5020 ;;		Unchanged: 0/0
  5021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5022 ;;      Params:         4       0       0       0       0       0       0
  5023 ;;      Locals:         4       0       0       0       0       0       0
  5024 ;;      Temps:          2       0       0       0       0       0       0
  5025 ;;      Totals:        10       0       0       0       0       0       0
  5026 ;;Total ram usage:       10 bytes
  5027 ;; Hardware stack levels used: 1
  5028 ;; This function calls:
  5029 ;;		Nothing
  5030 ;; This function is called by:
  5031 ;;		_efgtoa
  5032 ;; This function uses a non-reentrant model
  5033 ;;
  5034                           
  5035                           	psect	text13
  5036  003F68                     __ptext13:
  5037                           	callstack 0
  5038  003F68                     _strcpy:
  5039                           	callstack 25
  5040  003F68  C003  F007         	movff	strcpy@src,strcpy@s
  5041  003F6C  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  5042  003F70  C001  F009         	movff	strcpy@dest,strcpy@d
  5043  003F74  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  5044  003F78                     l3736:
  5045  003F78  5007               	movf	strcpy@s^0,w,c
  5046  003F7A  6E05               	movwf	??_strcpy^0,c
  5047  003F7C  5008               	movf	(strcpy@s+1)^0,w,c
  5048  003F7E  6E06               	movwf	(??_strcpy+1)^0,c
  5049  003F80  4A07               	infsnz	strcpy@s^0,f,c
  5050  003F82  2A08               	incf	(strcpy@s+1)^0,f,c
  5051  003F84  C005  FFF6         	movff	??_strcpy,tblptrl
  5052  003F88  C006  FFF7         	movff	??_strcpy+1,tblptrh
  5053  003F8C  6AF8               	clrf	tblptru,c
  5054  003F8E  C009  FFD9         	movff	strcpy@d,fsr2l
  5055  003F92  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  5056  003F96  4A09               	infsnz	strcpy@d^0,f,c
  5057  003F98  2A0A               	incf	(strcpy@d+1)^0,f,c
  5058  003F9A  0E05               	movlw	(high __ramtop+-1)
  5059  003F9C  64F7               	cpfsgt	tblptrh,c
  5060  003F9E  D003               	bra	u4287
  5061  003FA0  0008               	tblrd		*
  5062  003FA2  50F5               	movf	tablat,w,c
  5063  003FA4  D005               	bra	u4280
  5064  003FA6                     u4287:
  5065  003FA6  CFF6 FFE1          	movff	tblptrl,fsr1l
  5066  003FAA  CFF7 FFE2          	movff	tblptrh,fsr1h
  5067  003FAE  50E7               	movf	indf1,w,c
  5068  003FB0                     u4280:
  5069  003FB0  6EDF               	movwf	indf2,c
  5070  003FB2  50DF               	movf	indf2,w,c
  5071  003FB4  A4D8               	btfss	status,2,c
  5072  003FB6  EFDF  F01F         	goto	u4291
  5073  003FBA  EFE1  F01F         	goto	u4290
  5074  003FBE                     u4291:
  5075  003FBE  EFBC  F01F         	goto	l3736
  5076  003FC2                     u4290:
  5077  003FC2  0012               	return		;funcret
  5078  003FC4                     __end_of_strcpy:
  5079                           	callstack 0
  5080                           
  5081 ;; *************** function _floorf *****************
  5082 ;; Defined at:
  5083 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\floorf.c"
  5084 ;; Parameters:    Size  Location     Type
  5085 ;;  x               4   25[COMRAM] float 
  5086 ;; Auto vars:     Size  Location     Type
  5087 ;;  u               4   41[COMRAM] struct .
  5088 ;;  m               4   35[COMRAM] unsigned long 
  5089 ;;  e               2   39[COMRAM] int 
  5090 ;; Return value:  Size  Location     Type
  5091 ;;                  4   25[COMRAM] float 
  5092 ;; Registers used:
  5093 ;;		wreg, status,2, status,0
  5094 ;; Tracked objects:
  5095 ;;		On entry : 0/0
  5096 ;;		On exit  : 0/0
  5097 ;;		Unchanged: 0/0
  5098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5099 ;;      Params:         4       0       0       0       0       0       0
  5100 ;;      Locals:        10       0       0       0       0       0       0
  5101 ;;      Temps:          6       0       0       0       0       0       0
  5102 ;;      Totals:        20       0       0       0       0       0       0
  5103 ;;Total ram usage:       20 bytes
  5104 ;; Hardware stack levels used: 1
  5105 ;; This function calls:
  5106 ;;		Nothing
  5107 ;; This function is called by:
  5108 ;;		_efgtoa
  5109 ;; This function uses a non-reentrant model
  5110 ;;
  5111                           
  5112                           	psect	text14
  5113  002B4A                     __ptext14:
  5114                           	callstack 0
  5115  002B4A                     _floorf:
  5116                           	callstack 25
  5117  002B4A  C080  F02A         	movff	floorf@F526,floorf@u
  5118  002B4E  C081  F02B         	movff	floorf@F526+1,floorf@u+1
  5119  002B52  C082  F02C         	movff	floorf@F526+2,floorf@u+2
  5120  002B56  C083  F02D         	movff	floorf@F526+3,floorf@u+3
  5121  002B5A  C01A  F02A         	movff	floorf@x,floorf@u
  5122  002B5E  C01B  F02B         	movff	floorf@x+1,floorf@u+1
  5123  002B62  C01C  F02C         	movff	floorf@x+2,floorf@u+2
  5124  002B66  C01D  F02D         	movff	floorf@x+3,floorf@u+3
  5125  002B6A  0E81               	movlw	129
  5126  002B6C  6E1E               	movwf	??_floorf^0,c
  5127  002B6E  0EFF               	movlw	255
  5128  002B70  6E1F               	movwf	(??_floorf+1)^0,c
  5129  002B72  C02A  F020         	movff	floorf@u,??_floorf+2
  5130  002B76  C02B  F021         	movff	floorf@u+1,??_floorf+3
  5131  002B7A  C02C  F022         	movff	floorf@u+2,??_floorf+4
  5132  002B7E  C02D  F023         	movff	floorf@u+3,??_floorf+5
  5133  002B82  0E18               	movlw	24
  5134  002B84  EFC9  F015         	goto	u4310
  5135  002B88                     u4315:
  5136  002B88  90D8               	bcf	status,0,c
  5137  002B8A  3223               	rrcf	(??_floorf+5)^0,f,c
  5138  002B8C  3222               	rrcf	(??_floorf+4)^0,f,c
  5139  002B8E  3221               	rrcf	(??_floorf+3)^0,f,c
  5140  002B90  3220               	rrcf	(??_floorf+2)^0,f,c
  5141  002B92                     u4310:
  5142  002B92  2EE8               	decfsz	wreg,f,c
  5143  002B94  EFC4  F015         	goto	u4315
  5144  002B98  5020               	movf	(??_floorf+2)^0,w,c
  5145  002B9A  241E               	addwf	??_floorf^0,w,c
  5146  002B9C  6E28               	movwf	floorf@e^0,c
  5147  002B9E  0E00               	movlw	0
  5148  002BA0  201F               	addwfc	(??_floorf+1)^0,w,c
  5149  002BA2  6E29               	movwf	(floorf@e+1)^0,c
  5150  002BA4  BE29               	btfsc	(floorf@e+1)^0,7,c
  5151  002BA6  EFDE  F015         	goto	u4321
  5152  002BAA  5029               	movf	(floorf@e+1)^0,w,c
  5153  002BAC  E109               	bnz	u4320
  5154  002BAE  0E17               	movlw	23
  5155  002BB0  5C28               	subwf	floorf@e^0,w,c
  5156  002BB2  A0D8               	btfss	status,0,c
  5157  002BB4  EFDE  F015         	goto	u4321
  5158  002BB8  EFE0  F015         	goto	u4320
  5159  002BBC                     u4321:
  5160  002BBC  EFEA  F015         	goto	l3754
  5161  002BC0                     u4320:
  5162  002BC0                     l3752:
  5163  002BC0  C01A  F01A         	movff	floorf@x,?_floorf
  5164  002BC4  C01B  F01B         	movff	floorf@x+1,?_floorf+1
  5165  002BC8  C01C  F01C         	movff	floorf@x+2,?_floorf+2
  5166  002BCC  C01D  F01D         	movff	floorf@x+3,?_floorf+3
  5167  002BD0  EFAD  F016         	goto	l1088
  5168  002BD4                     l3754:
  5169  002BD4  BE29               	btfsc	(floorf@e+1)^0,7,c
  5170  002BD6  EFEF  F015         	goto	u4331
  5171  002BDA  EFF1  F015         	goto	u4330
  5172  002BDE                     u4331:
  5173  002BDE  EF61  F016         	goto	l3764
  5174  002BE2                     u4330:
  5175  002BE2  C028  F01E         	movff	floorf@e,??_floorf
  5176  002BE6  0EFF               	movlw	255
  5177  002BE8  6E1F               	movwf	(??_floorf+1)^0,c
  5178  002BEA  0EFF               	movlw	255
  5179  002BEC  6E20               	movwf	(??_floorf+2)^0,c
  5180  002BEE  0E7F               	movlw	127
  5181  002BF0  6E21               	movwf	(??_floorf+3)^0,c
  5182  002BF2  0E00               	movlw	0
  5183  002BF4  6E22               	movwf	(??_floorf+4)^0,c
  5184  002BF6                     u4345:
  5185  002BF6  661E               	tstfsz	??_floorf^0,c
  5186  002BF8  EF00  F016         	goto	u4346
  5187  002BFC  EF08  F016         	goto	u4347
  5188  002C00                     u4346:
  5189  002C00  3422               	rlcf	(??_floorf+4)^0,w,c
  5190  002C02  3222               	rrcf	(??_floorf+4)^0,f,c
  5191  002C04  3221               	rrcf	(??_floorf+3)^0,f,c
  5192  002C06  3220               	rrcf	(??_floorf+2)^0,f,c
  5193  002C08  321F               	rrcf	(??_floorf+1)^0,f,c
  5194  002C0A  2E1E               	decfsz	??_floorf^0,f,c
  5195  002C0C  EFFB  F015         	goto	u4345
  5196  002C10                     u4347:
  5197  002C10  C01F  F024         	movff	??_floorf+1,floorf@m
  5198  002C14  C020  F025         	movff	??_floorf+2,floorf@m+1
  5199  002C18  C021  F026         	movff	??_floorf+3,floorf@m+2
  5200  002C1C  C022  F027         	movff	??_floorf+4,floorf@m+3
  5201  002C20  5024               	movf	floorf@m^0,w,c
  5202  002C22  142A               	andwf	floorf@u^0,w,c
  5203  002C24  6E1E               	movwf	??_floorf^0,c
  5204  002C26  5025               	movf	(floorf@m+1)^0,w,c
  5205  002C28  142B               	andwf	(floorf@u+1)^0,w,c
  5206  002C2A  6E1F               	movwf	(??_floorf+1)^0,c
  5207  002C2C  5026               	movf	(floorf@m+2)^0,w,c
  5208  002C2E  142C               	andwf	(floorf@u+2)^0,w,c
  5209  002C30  6E20               	movwf	(??_floorf+2)^0,c
  5210  002C32  5027               	movf	(floorf@m+3)^0,w,c
  5211  002C34  142D               	andwf	(floorf@u+3)^0,w,c
  5212  002C36  6E21               	movwf	(??_floorf+3)^0,c
  5213  002C38  501E               	movf	??_floorf^0,w,c
  5214  002C3A  101F               	iorwf	(??_floorf+1)^0,w,c
  5215  002C3C  1020               	iorwf	(??_floorf+2)^0,w,c
  5216  002C3E  1021               	iorwf	(??_floorf+3)^0,w,c
  5217  002C40  A4D8               	btfss	status,2,c
  5218  002C42  EF25  F016         	goto	u4351
  5219  002C46  EF27  F016         	goto	u4350
  5220  002C4A                     u4351:
  5221  002C4A  EF29  F016         	goto	l3760
  5222  002C4E                     u4350:
  5223  002C4E  EFE0  F015         	goto	l3752
  5224  002C52                     l3760:
  5225  002C52  C02A  F01E         	movff	floorf@u,??_floorf
  5226  002C56  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  5227  002C5A  C02C  F020         	movff	floorf@u+2,??_floorf+2
  5228  002C5E  C02D  F021         	movff	floorf@u+3,??_floorf+3
  5229  002C62  0E20               	movlw	32
  5230  002C64  EF39  F016         	goto	u4360
  5231  002C68                     u4365:
  5232  002C68  90D8               	bcf	status,0,c
  5233  002C6A  3221               	rrcf	(??_floorf+3)^0,f,c
  5234  002C6C  3220               	rrcf	(??_floorf+2)^0,f,c
  5235  002C6E  321F               	rrcf	(??_floorf+1)^0,f,c
  5236  002C70  321E               	rrcf	??_floorf^0,f,c
  5237  002C72                     u4360:
  5238  002C72  2EE8               	decfsz	wreg,f,c
  5239  002C74  EF34  F016         	goto	u4365
  5240  002C78  501E               	movf	??_floorf^0,w,c
  5241  002C7A  101F               	iorwf	(??_floorf+1)^0,w,c
  5242  002C7C  1020               	iorwf	(??_floorf+2)^0,w,c
  5243  002C7E  1021               	iorwf	(??_floorf+3)^0,w,c
  5244  002C80  B4D8               	btfsc	status,2,c
  5245  002C82  EF45  F016         	goto	u4371
  5246  002C86  EF47  F016         	goto	u4370
  5247  002C8A                     u4371:
  5248  002C8A  EF4F  F016         	goto	l1091
  5249  002C8E                     u4370:
  5250  002C8E  5024               	movf	floorf@m^0,w,c
  5251  002C90  262A               	addwf	floorf@u^0,f,c
  5252  002C92  5025               	movf	(floorf@m+1)^0,w,c
  5253  002C94  222B               	addwfc	(floorf@u+1)^0,f,c
  5254  002C96  5026               	movf	(floorf@m+2)^0,w,c
  5255  002C98  222C               	addwfc	(floorf@u+2)^0,f,c
  5256  002C9A  5027               	movf	(floorf@m+3)^0,w,c
  5257  002C9C  222D               	addwfc	(floorf@u+3)^0,f,c
  5258  002C9E                     l1091:
  5259  002C9E  1C24               	comf	floorf@m^0,w,c
  5260  002CA0  6E1E               	movwf	??_floorf^0,c
  5261  002CA2  1C25               	comf	(floorf@m+1)^0,w,c
  5262  002CA4  6E1F               	movwf	(??_floorf+1)^0,c
  5263  002CA6  1C26               	comf	(floorf@m+2)^0,w,c
  5264  002CA8  6E20               	movwf	(??_floorf+2)^0,c
  5265  002CAA  1C27               	comf	(floorf@m+3)^0,w,c
  5266  002CAC  6E21               	movwf	(??_floorf+3)^0,c
  5267  002CAE  501E               	movf	??_floorf^0,w,c
  5268  002CB0  162A               	andwf	floorf@u^0,f,c
  5269  002CB2  501F               	movf	(??_floorf+1)^0,w,c
  5270  002CB4  162B               	andwf	(floorf@u+1)^0,f,c
  5271  002CB6  5020               	movf	(??_floorf+2)^0,w,c
  5272  002CB8  162C               	andwf	(floorf@u+2)^0,f,c
  5273  002CBA  5021               	movf	(??_floorf+3)^0,w,c
  5274  002CBC  162D               	andwf	(floorf@u+3)^0,f,c
  5275  002CBE  EFA5  F016         	goto	l3772
  5276  002CC2                     l3764:
  5277  002CC2  C02A  F01E         	movff	floorf@u,??_floorf
  5278  002CC6  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  5279  002CCA  C02C  F020         	movff	floorf@u+2,??_floorf+2
  5280  002CCE  C02D  F021         	movff	floorf@u+3,??_floorf+3
  5281  002CD2  0E20               	movlw	32
  5282  002CD4  EF71  F016         	goto	u4380
  5283  002CD8                     u4385:
  5284  002CD8  90D8               	bcf	status,0,c
  5285  002CDA  3221               	rrcf	(??_floorf+3)^0,f,c
  5286  002CDC  3220               	rrcf	(??_floorf+2)^0,f,c
  5287  002CDE  321F               	rrcf	(??_floorf+1)^0,f,c
  5288  002CE0  321E               	rrcf	??_floorf^0,f,c
  5289  002CE2                     u4380:
  5290  002CE2  2EE8               	decfsz	wreg,f,c
  5291  002CE4  EF6C  F016         	goto	u4385
  5292  002CE8  501E               	movf	??_floorf^0,w,c
  5293  002CEA  101F               	iorwf	(??_floorf+1)^0,w,c
  5294  002CEC  1020               	iorwf	(??_floorf+2)^0,w,c
  5295  002CEE  1021               	iorwf	(??_floorf+3)^0,w,c
  5296  002CF0  A4D8               	btfss	status,2,c
  5297  002CF2  EF7D  F016         	goto	u4391
  5298  002CF6  EF7F  F016         	goto	u4390
  5299  002CFA                     u4391:
  5300  002CFA  EF89  F016         	goto	l3768
  5301  002CFE                     u4390:
  5302  002CFE  0E00               	movlw	0
  5303  002D00  6E2A               	movwf	floorf@u^0,c
  5304  002D02  0E00               	movlw	0
  5305  002D04  6E2B               	movwf	(floorf@u+1)^0,c
  5306  002D06  0E00               	movlw	0
  5307  002D08  6E2C               	movwf	(floorf@u+2)^0,c
  5308  002D0A  0E00               	movlw	0
  5309  002D0C  6E2D               	movwf	(floorf@u+3)^0,c
  5310  002D0E  EFA5  F016         	goto	l3772
  5311  002D12                     l3768:
  5312  002D12  90D8               	bcf	status,0,c
  5313  002D14  342A               	rlcf	floorf@u^0,w,c
  5314  002D16  6E1E               	movwf	??_floorf^0,c
  5315  002D18  342B               	rlcf	(floorf@u+1)^0,w,c
  5316  002D1A  6E1F               	movwf	(??_floorf+1)^0,c
  5317  002D1C  342C               	rlcf	(floorf@u+2)^0,w,c
  5318  002D1E  6E20               	movwf	(??_floorf+2)^0,c
  5319  002D20  342D               	rlcf	(floorf@u+3)^0,w,c
  5320  002D22  6E21               	movwf	(??_floorf+3)^0,c
  5321  002D24  501E               	movf	??_floorf^0,w,c
  5322  002D26  101F               	iorwf	(??_floorf+1)^0,w,c
  5323  002D28  1020               	iorwf	(??_floorf+2)^0,w,c
  5324  002D2A  1021               	iorwf	(??_floorf+3)^0,w,c
  5325  002D2C  B4D8               	btfsc	status,2,c
  5326  002D2E  EF9B  F016         	goto	u4401
  5327  002D32  EF9D  F016         	goto	u4400
  5328  002D36                     u4401:
  5329  002D36  EFA5  F016         	goto	l3772
  5330  002D3A                     u4400:
  5331  002D3A  0E00               	movlw	0
  5332  002D3C  6E2A               	movwf	floorf@u^0,c
  5333  002D3E  0E00               	movlw	0
  5334  002D40  6E2B               	movwf	(floorf@u+1)^0,c
  5335  002D42  0E80               	movlw	128
  5336  002D44  6E2C               	movwf	(floorf@u+2)^0,c
  5337  002D46  0EBF               	movlw	191
  5338  002D48  6E2D               	movwf	(floorf@u+3)^0,c
  5339  002D4A                     l3772:
  5340  002D4A  C02A  F01A         	movff	floorf@u,?_floorf
  5341  002D4E  C02B  F01B         	movff	floorf@u+1,?_floorf+1
  5342  002D52  C02C  F01C         	movff	floorf@u+2,?_floorf+2
  5343  002D56  C02D  F01D         	movff	floorf@u+3,?_floorf+3
  5344  002D5A                     l1088:
  5345  002D5A  0012               	return		;funcret
  5346  002D5C                     __end_of_floorf:
  5347                           	callstack 0
  5348                           
  5349 ;; *************** function ___fpclassifyf *****************
  5350 ;; Defined at:
  5351 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__fpclassifyf.c"
  5352 ;; Parameters:    Size  Location     Type
  5353 ;;  x               4    0[COMRAM] float 
  5354 ;; Auto vars:     Size  Location     Type
  5355 ;;  u               4   10[COMRAM] struct .
  5356 ;;  e               2    8[COMRAM] int 
  5357 ;; Return value:  Size  Location     Type
  5358 ;;                  2    0[COMRAM] int 
  5359 ;; Registers used:
  5360 ;;		wreg, status,2, status,0
  5361 ;; Tracked objects:
  5362 ;;		On entry : 0/0
  5363 ;;		On exit  : 0/0
  5364 ;;		Unchanged: 0/0
  5365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5366 ;;      Params:         4       0       0       0       0       0       0
  5367 ;;      Locals:         6       0       0       0       0       0       0
  5368 ;;      Temps:          4       0       0       0       0       0       0
  5369 ;;      Totals:        14       0       0       0       0       0       0
  5370 ;;Total ram usage:       14 bytes
  5371 ;; Hardware stack levels used: 1
  5372 ;; This function calls:
  5373 ;;		Nothing
  5374 ;; This function is called by:
  5375 ;;		_efgtoa
  5376 ;; This function uses a non-reentrant model
  5377 ;;
  5378                           
  5379                           	psect	text15
  5380  003666                     __ptext15:
  5381                           	callstack 0
  5382  003666                     ___fpclassifyf:
  5383                           	callstack 25
  5384  003666  C084  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  5385  00366A  C085  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5386  00366E  C086  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5387  003672  C087  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5388  003676  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  5389  00367A  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5390  00367E  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5391  003682  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5392  003686  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5393  00368A  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5394  00368E  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5395  003692  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5396  003696  0E18               	movlw	24
  5397  003698  EF53  F01B         	goto	u4210
  5398  00369C                     u4215:
  5399  00369C  90D8               	bcf	status,0,c
  5400  00369E  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  5401  0036A0  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  5402  0036A2  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  5403  0036A4  3205               	rrcf	??___fpclassifyf^0,f,c
  5404  0036A6                     u4210:
  5405  0036A6  2EE8               	decfsz	wreg,f,c
  5406  0036A8  EF4E  F01B         	goto	u4215
  5407  0036AC  5005               	movf	??___fpclassifyf^0,w,c
  5408  0036AE  6E09               	movwf	___fpclassifyf@e^0,c
  5409  0036B0  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  5410  0036B2  5009               	movf	___fpclassifyf@e^0,w,c
  5411  0036B4  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5412  0036B6  A4D8               	btfss	status,2,c
  5413  0036B8  EF60  F01B         	goto	u4221
  5414  0036BC  EF62  F01B         	goto	u4220
  5415  0036C0                     u4221:
  5416  0036C0  EF82  F01B         	goto	l3724
  5417  0036C4                     u4220:
  5418  0036C4  90D8               	bcf	status,0,c
  5419  0036C6  340B               	rlcf	___fpclassifyf@u^0,w,c
  5420  0036C8  6E05               	movwf	??___fpclassifyf^0,c
  5421  0036CA  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5422  0036CC  6E06               	movwf	(??___fpclassifyf+1)^0,c
  5423  0036CE  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5424  0036D0  6E07               	movwf	(??___fpclassifyf+2)^0,c
  5425  0036D2  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5426  0036D4  6E08               	movwf	(??___fpclassifyf+3)^0,c
  5427  0036D6  5005               	movf	??___fpclassifyf^0,w,c
  5428  0036D8  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5429  0036DA  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5430  0036DC  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5431  0036DE  A4D8               	btfss	status,2,c
  5432  0036E0  EF74  F01B         	goto	u4231
  5433  0036E4  EF76  F01B         	goto	u4230
  5434  0036E8                     u4231:
  5435  0036E8  EF7C  F01B         	goto	l3720
  5436  0036EC                     u4230:
  5437  0036EC  0E00               	movlw	0
  5438  0036EE  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5439  0036F0  0E02               	movlw	2
  5440  0036F2  6E01               	movwf	?___fpclassifyf^0,c
  5441  0036F4  EFB1  F01B         	goto	l1049
  5442  0036F8                     l3720:
  5443  0036F8  0E00               	movlw	0
  5444  0036FA  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5445  0036FC  0E03               	movlw	3
  5446  0036FE  6E01               	movwf	?___fpclassifyf^0,c
  5447  003700  EFB1  F01B         	goto	l1049
  5448  003704                     l3724:
  5449  003704  2809               	incf	___fpclassifyf@e^0,w,c
  5450  003706  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5451  003708  A4D8               	btfss	status,2,c
  5452  00370A  EF89  F01B         	goto	u4241
  5453  00370E  EF8B  F01B         	goto	u4240
  5454  003712                     u4241:
  5455  003712  EFAD  F01B         	goto	l3730
  5456  003716                     u4240:
  5457  003716  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5458  00371A  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5459  00371E  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5460  003722  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5461  003726  0E09               	movlw	9
  5462  003728                     u4255:
  5463  003728  90D8               	bcf	status,0,c
  5464  00372A  3605               	rlcf	??___fpclassifyf^0,f,c
  5465  00372C  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  5466  00372E  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  5467  003730  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  5468  003732  2EE8               	decfsz	wreg,f,c
  5469  003734  EF94  F01B         	goto	u4255
  5470  003738  5005               	movf	??___fpclassifyf^0,w,c
  5471  00373A  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5472  00373C  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5473  00373E  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5474  003740  B4D8               	btfsc	status,2,c
  5475  003742  EFA5  F01B         	goto	u4261
  5476  003746  EFA8  F01B         	goto	u4260
  5477  00374A                     u4261:
  5478  00374A  0E01               	movlw	1
  5479  00374C  EFA9  F01B         	goto	u4270
  5480  003750                     u4260:
  5481  003750  0E00               	movlw	0
  5482  003752                     u4270:
  5483  003752  6E01               	movwf	?___fpclassifyf^0,c
  5484  003754  6A02               	clrf	(?___fpclassifyf+1)^0,c
  5485  003756  EFB1  F01B         	goto	l1049
  5486  00375A                     l3730:
  5487  00375A  0E00               	movlw	0
  5488  00375C  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5489  00375E  0E04               	movlw	4
  5490  003760  6E01               	movwf	?___fpclassifyf^0,c
  5491  003762                     l1049:
  5492  003762  0012               	return		;funcret
  5493  003764                     __end_of___fpclassifyf:
  5494                           	callstack 0
  5495                           
  5496 ;; *************** function ___fltol *****************
  5497 ;; Defined at:
  5498 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fltol.c"
  5499 ;; Parameters:    Size  Location     Type
  5500 ;;  f1              4    0[COMRAM] int 
  5501 ;; Auto vars:     Size  Location     Type
  5502 ;;  exp1            1    9[COMRAM] unsigned char 
  5503 ;;  sign1           1    8[COMRAM] unsigned char 
  5504 ;; Return value:  Size  Location     Type
  5505 ;;                  4    0[COMRAM] long 
  5506 ;; Registers used:
  5507 ;;		wreg, status,2, status,0
  5508 ;; Tracked objects:
  5509 ;;		On entry : 0/0
  5510 ;;		On exit  : 0/0
  5511 ;;		Unchanged: 0/0
  5512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5513 ;;      Params:         4       0       0       0       0       0       0
  5514 ;;      Locals:         2       0       0       0       0       0       0
  5515 ;;      Temps:          4       0       0       0       0       0       0
  5516 ;;      Totals:        10       0       0       0       0       0       0
  5517 ;;Total ram usage:       10 bytes
  5518 ;; Hardware stack levels used: 1
  5519 ;; This function calls:
  5520 ;;		Nothing
  5521 ;; This function is called by:
  5522 ;;		_efgtoa
  5523 ;; This function uses a non-reentrant model
  5524 ;;
  5525                           
  5526                           	psect	text16
  5527  00345C                     __ptext16:
  5528                           	callstack 0
  5529  00345C                     ___fltol:
  5530                           	callstack 25
  5531  00345C  3403               	rlcf	(___fltol@f1+2)^0,w,c
  5532  00345E  3404               	rlcf	(___fltol@f1+3)^0,w,c
  5533  003460  6E0A               	movwf	___fltol@exp1^0,c
  5534  003462  500A               	movf	___fltol@exp1^0,w,c
  5535  003464  A4D8               	btfss	status,2,c
  5536  003466  EF37  F01A         	goto	u4091
  5537  00346A  EF39  F01A         	goto	u4090
  5538  00346E                     u4091:
  5539  00346E  EF43  F01A         	goto	l3648
  5540  003472                     u4090:
  5541  003472                     l3644:
  5542  003472  0E00               	movlw	0
  5543  003474  6E01               	movwf	?___fltol^0,c
  5544  003476  0E00               	movlw	0
  5545  003478  6E02               	movwf	(?___fltol+1)^0,c
  5546  00347A  0E00               	movlw	0
  5547  00347C  6E03               	movwf	(?___fltol+2)^0,c
  5548  00347E  0E00               	movlw	0
  5549  003480  6E04               	movwf	(?___fltol+3)^0,c
  5550  003482  EFB0  F01A         	goto	l447
  5551  003486                     l3648:
  5552  003486  C001  F005         	movff	___fltol@f1,??___fltol
  5553  00348A  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  5554  00348E  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  5555  003492  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  5556  003496  0E20               	movlw	32
  5557  003498  EF53  F01A         	goto	u4100
  5558  00349C                     u4105:
  5559  00349C  90D8               	bcf	status,0,c
  5560  00349E  3208               	rrcf	(??___fltol+3)^0,f,c
  5561  0034A0  3207               	rrcf	(??___fltol+2)^0,f,c
  5562  0034A2  3206               	rrcf	(??___fltol+1)^0,f,c
  5563  0034A4  3205               	rrcf	??___fltol^0,f,c
  5564  0034A6                     u4100:
  5565  0034A6  2EE8               	decfsz	wreg,f,c
  5566  0034A8  EF4E  F01A         	goto	u4105
  5567  0034AC  5005               	movf	??___fltol^0,w,c
  5568  0034AE  6E09               	movwf	___fltol@sign1^0,c
  5569  0034B0  8E03               	bsf	(___fltol@f1+2)^0,7,c
  5570  0034B2  0EFF               	movlw	255
  5571  0034B4  1601               	andwf	___fltol@f1^0,f,c
  5572  0034B6  0EFF               	movlw	255
  5573  0034B8  1602               	andwf	(___fltol@f1+1)^0,f,c
  5574  0034BA  0EFF               	movlw	255
  5575  0034BC  1603               	andwf	(___fltol@f1+2)^0,f,c
  5576  0034BE  0E00               	movlw	0
  5577  0034C0  1604               	andwf	(___fltol@f1+3)^0,f,c
  5578  0034C2  0E96               	movlw	150
  5579  0034C4  5E0A               	subwf	___fltol@exp1^0,f,c
  5580  0034C6  BE0A               	btfsc	___fltol@exp1^0,7,c
  5581  0034C8  EF6A  F01A         	goto	u4110
  5582  0034CC  EF68  F01A         	goto	u4111
  5583  0034D0                     u4111:
  5584  0034D0  EF80  F01A         	goto	l3668
  5585  0034D4                     u4110:
  5586  0034D4  500A               	movf	___fltol@exp1^0,w,c
  5587  0034D6  0A80               	xorlw	128
  5588  0034D8  0F97               	addlw	151
  5589  0034DA  B0D8               	btfsc	status,0,c
  5590  0034DC  EF72  F01A         	goto	u4121
  5591  0034E0  EF74  F01A         	goto	u4120
  5592  0034E4                     u4121:
  5593  0034E4  EF76  F01A         	goto	l3664
  5594  0034E8                     u4120:
  5595  0034E8  EF39  F01A         	goto	l3644
  5596  0034EC                     l3664:
  5597  0034EC  90D8               	bcf	status,0,c
  5598  0034EE  3204               	rrcf	(___fltol@f1+3)^0,f,c
  5599  0034F0  3203               	rrcf	(___fltol@f1+2)^0,f,c
  5600  0034F2  3202               	rrcf	(___fltol@f1+1)^0,f,c
  5601  0034F4  3201               	rrcf	___fltol@f1^0,f,c
  5602  0034F6  3E0A               	incfsz	___fltol@exp1^0,f,c
  5603  0034F8  EF76  F01A         	goto	l3664
  5604  0034FC  EF98  F01A         	goto	l3678
  5605  003500                     l3668:
  5606  003500  0E1F               	movlw	31
  5607  003502  640A               	cpfsgt	___fltol@exp1^0,c
  5608  003504  EF86  F01A         	goto	u4131
  5609  003508  EF88  F01A         	goto	u4130
  5610  00350C                     u4131:
  5611  00350C  EF90  F01A         	goto	l3676
  5612  003510                     u4130:
  5613  003510  EF39  F01A         	goto	l3644
  5614  003514                     l3674:
  5615  003514  90D8               	bcf	status,0,c
  5616  003516  3601               	rlcf	___fltol@f1^0,f,c
  5617  003518  3602               	rlcf	(___fltol@f1+1)^0,f,c
  5618  00351A  3603               	rlcf	(___fltol@f1+2)^0,f,c
  5619  00351C  3604               	rlcf	(___fltol@f1+3)^0,f,c
  5620  00351E  060A               	decf	___fltol@exp1^0,f,c
  5621  003520                     l3676:
  5622  003520  500A               	movf	___fltol@exp1^0,w,c
  5623  003522  A4D8               	btfss	status,2,c
  5624  003524  EF96  F01A         	goto	u4141
  5625  003528  EF98  F01A         	goto	u4140
  5626  00352C                     u4141:
  5627  00352C  EF8A  F01A         	goto	l3674
  5628  003530                     u4140:
  5629  003530                     l3678:
  5630  003530  5009               	movf	___fltol@sign1^0,w,c
  5631  003532  B4D8               	btfsc	status,2,c
  5632  003534  EF9E  F01A         	goto	u4151
  5633  003538  EFA0  F01A         	goto	u4150
  5634  00353C                     u4151:
  5635  00353C  EFA8  F01A         	goto	l3682
  5636  003540                     u4150:
  5637  003540  1E04               	comf	(___fltol@f1+3)^0,f,c
  5638  003542  1E03               	comf	(___fltol@f1+2)^0,f,c
  5639  003544  1E02               	comf	(___fltol@f1+1)^0,f,c
  5640  003546  6C01               	negf	___fltol@f1^0,c
  5641  003548  0E00               	movlw	0
  5642  00354A  2202               	addwfc	(___fltol@f1+1)^0,f,c
  5643  00354C  2203               	addwfc	(___fltol@f1+2)^0,f,c
  5644  00354E  2204               	addwfc	(___fltol@f1+3)^0,f,c
  5645  003550                     l3682:
  5646  003550  C001  F001         	movff	___fltol@f1,?___fltol
  5647  003554  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  5648  003558  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  5649  00355C  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  5650  003560                     l447:
  5651  003560  0012               	return		;funcret
  5652  003562                     __end_of___fltol:
  5653                           	callstack 0
  5654                           
  5655 ;; *************** function ___flsub *****************
  5656 ;; Defined at:
  5657 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  5658 ;; Parameters:    Size  Location     Type
  5659 ;;  b               4   39[COMRAM] long 
  5660 ;;  a               4   43[COMRAM] long 
  5661 ;; Auto vars:     Size  Location     Type
  5662 ;;		None
  5663 ;; Return value:  Size  Location     Type
  5664 ;;                  4   39[COMRAM] long 
  5665 ;; Registers used:
  5666 ;;		wreg, status,2, status,0, cstack
  5667 ;; Tracked objects:
  5668 ;;		On entry : 0/0
  5669 ;;		On exit  : 0/0
  5670 ;;		Unchanged: 0/0
  5671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5672 ;;      Params:         8       0       0       0       0       0       0
  5673 ;;      Locals:         0       0       0       0       0       0       0
  5674 ;;      Temps:          0       0       0       0       0       0       0
  5675 ;;      Totals:         8       0       0       0       0       0       0
  5676 ;;Total ram usage:        8 bytes
  5677 ;; Hardware stack levels used: 1
  5678 ;; Hardware stack levels required when called: 1
  5679 ;; This function calls:
  5680 ;;		___fladd
  5681 ;; This function is called by:
  5682 ;;		_efgtoa
  5683 ;; This function uses a non-reentrant model
  5684 ;;
  5685                           
  5686                           	psect	text17
  5687  0040AE                     __ptext17:
  5688                           	callstack 0
  5689  0040AE                     ___flsub:
  5690                           	callstack 24
  5691  0040AE  0E00               	movlw	0
  5692  0040B0  1A2C               	xorwf	___flsub@a^0,f,c
  5693  0040B2  0E00               	movlw	0
  5694  0040B4  1A2D               	xorwf	(___flsub@a+1)^0,f,c
  5695  0040B6  0E00               	movlw	0
  5696  0040B8  1A2E               	xorwf	(___flsub@a+2)^0,f,c
  5697  0040BA  0E80               	movlw	128
  5698  0040BC  1A2F               	xorwf	(___flsub@a+3)^0,f,c
  5699  0040BE  C028  F001         	movff	___flsub@b,___fladd@b
  5700  0040C2  C029  F002         	movff	___flsub@b+1,___fladd@b+1
  5701  0040C6  C02A  F003         	movff	___flsub@b+2,___fladd@b+2
  5702  0040CA  C02B  F004         	movff	___flsub@b+3,___fladd@b+3
  5703  0040CE  C02C  F005         	movff	___flsub@a,___fladd@a
  5704  0040D2  C02D  F006         	movff	___flsub@a+1,___fladd@a+1
  5705  0040D6  C02E  F007         	movff	___flsub@a+2,___fladd@a+2
  5706  0040DA  C02F  F008         	movff	___flsub@a+3,___fladd@a+3
  5707  0040DE  EC7D  F00C         	call	___fladd	;wreg free
  5708  0040E2  C001  F028         	movff	?___fladd,?___flsub
  5709  0040E6  C002  F029         	movff	?___fladd+1,?___flsub+1
  5710  0040EA  C003  F02A         	movff	?___fladd+2,?___flsub+2
  5711  0040EE  C004  F02B         	movff	?___fladd+3,?___flsub+3
  5712  0040F2  0012               	return		;funcret
  5713  0040F4                     __end_of___flsub:
  5714                           	callstack 0
  5715                           
  5716 ;; *************** function ___fladd *****************
  5717 ;; Defined at:
  5718 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  5719 ;; Parameters:    Size  Location     Type
  5720 ;;  b               4    0[COMRAM] long 
  5721 ;;  a               4    4[COMRAM] long 
  5722 ;; Auto vars:     Size  Location     Type
  5723 ;;  grs             1   15[COMRAM] unsigned char 
  5724 ;;  bexp            1   14[COMRAM] unsigned char 
  5725 ;;  aexp            1   13[COMRAM] unsigned char 
  5726 ;;  signs           1   12[COMRAM] unsigned char 
  5727 ;; Return value:  Size  Location     Type
  5728 ;;                  4    0[COMRAM] unsigned char 
  5729 ;; Registers used:
  5730 ;;		wreg, status,2, status,0
  5731 ;; Tracked objects:
  5732 ;;		On entry : 0/0
  5733 ;;		On exit  : 0/0
  5734 ;;		Unchanged: 0/0
  5735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5736 ;;      Params:         8       0       0       0       0       0       0
  5737 ;;      Locals:         4       0       0       0       0       0       0
  5738 ;;      Temps:          4       0       0       0       0       0       0
  5739 ;;      Totals:        16       0       0       0       0       0       0
  5740 ;;Total ram usage:       16 bytes
  5741 ;; Hardware stack levels used: 1
  5742 ;; This function calls:
  5743 ;;		Nothing
  5744 ;; This function is called by:
  5745 ;;		___flsub
  5746 ;;		_efgtoa
  5747 ;; This function uses a non-reentrant model
  5748 ;;
  5749                           
  5750                           	psect	text18
  5751  0018FA                     __ptext18:
  5752                           	callstack 0
  5753  0018FA                     ___fladd:
  5754                           	callstack 24
  5755  0018FA  5004               	movf	(___fladd@b+3)^0,w,c
  5756  0018FC  0B80               	andlw	128
  5757  0018FE  6E0D               	movwf	___fladd@signs^0,c
  5758  001900  5004               	movf	(___fladd@b+3)^0,w,c
  5759  001902  2404               	addwf	(___fladd@b+3)^0,w,c
  5760  001904  6E0F               	movwf	___fladd@bexp^0,c
  5761  001906  AE03               	btfss	(___fladd@b+2)^0,7,c
  5762  001908  EF88  F00C         	goto	u2901
  5763  00190C  EF8A  F00C         	goto	u2900
  5764  001910                     u2901:
  5765  001910  EF8B  F00C         	goto	l2938
  5766  001914                     u2900:
  5767  001914  800F               	bsf	___fladd@bexp^0,0,c
  5768  001916                     l2938:
  5769  001916  500F               	movf	___fladd@bexp^0,w,c
  5770  001918  B4D8               	btfsc	status,2,c
  5771  00191A  EF91  F00C         	goto	u2911
  5772  00191E  EF93  F00C         	goto	u2910
  5773  001922                     u2911:
  5774  001922  EFA8  F00C         	goto	l2948
  5775  001926                     u2910:
  5776  001926  280F               	incf	___fladd@bexp^0,w,c
  5777  001928  A4D8               	btfss	status,2,c
  5778  00192A  EF99  F00C         	goto	u2921
  5779  00192E  EF9B  F00C         	goto	u2920
  5780  001932                     u2921:
  5781  001932  EFA3  F00C         	goto	l2944
  5782  001936                     u2920:
  5783  001936  0E00               	movlw	0
  5784  001938  6E01               	movwf	___fladd@b^0,c
  5785  00193A  0E00               	movlw	0
  5786  00193C  6E02               	movwf	(___fladd@b+1)^0,c
  5787  00193E  0E00               	movlw	0
  5788  001940  6E03               	movwf	(___fladd@b+2)^0,c
  5789  001942  0E00               	movlw	0
  5790  001944  6E04               	movwf	(___fladd@b+3)^0,c
  5791  001946                     l2944:
  5792  001946  8E03               	bsf	(___fladd@b+2)^0,7,c
  5793  001948  0E00               	movlw	0
  5794  00194A  6E04               	movwf	(___fladd@b+3)^0,c
  5795  00194C  EFB0  F00C         	goto	l2950
  5796  001950                     l2948:
  5797  001950  0E00               	movlw	0
  5798  001952  6E01               	movwf	___fladd@b^0,c
  5799  001954  0E00               	movlw	0
  5800  001956  6E02               	movwf	(___fladd@b+1)^0,c
  5801  001958  0E00               	movlw	0
  5802  00195A  6E03               	movwf	(___fladd@b+2)^0,c
  5803  00195C  0E00               	movlw	0
  5804  00195E  6E04               	movwf	(___fladd@b+3)^0,c
  5805  001960                     l2950:
  5806  001960  5008               	movf	(___fladd@a+3)^0,w,c
  5807  001962  0B80               	andlw	128
  5808  001964  6E0E               	movwf	___fladd@aexp^0,c
  5809  001966  500D               	movf	___fladd@signs^0,w,c
  5810  001968  180E               	xorwf	___fladd@aexp^0,w,c
  5811  00196A  B4D8               	btfsc	status,2,c
  5812  00196C  EFBA  F00C         	goto	u2931
  5813  001970  EFBC  F00C         	goto	u2930
  5814  001974                     u2931:
  5815  001974  EFBD  F00C         	goto	l2956
  5816  001978                     u2930:
  5817  001978  8C0D               	bsf	___fladd@signs^0,6,c
  5818  00197A                     l2956:
  5819  00197A  5008               	movf	(___fladd@a+3)^0,w,c
  5820  00197C  2408               	addwf	(___fladd@a+3)^0,w,c
  5821  00197E  6E0E               	movwf	___fladd@aexp^0,c
  5822  001980  AE07               	btfss	(___fladd@a+2)^0,7,c
  5823  001982  EFC5  F00C         	goto	u2941
  5824  001986  EFC7  F00C         	goto	u2940
  5825  00198A                     u2941:
  5826  00198A  EFC8  F00C         	goto	l2962
  5827  00198E                     u2940:
  5828  00198E  800E               	bsf	___fladd@aexp^0,0,c
  5829  001990                     l2962:
  5830  001990  500E               	movf	___fladd@aexp^0,w,c
  5831  001992  B4D8               	btfsc	status,2,c
  5832  001994  EFCE  F00C         	goto	u2951
  5833  001998  EFD0  F00C         	goto	u2950
  5834  00199C                     u2951:
  5835  00199C  EFE5  F00C         	goto	l2972
  5836  0019A0                     u2950:
  5837  0019A0  280E               	incf	___fladd@aexp^0,w,c
  5838  0019A2  A4D8               	btfss	status,2,c
  5839  0019A4  EFD6  F00C         	goto	u2961
  5840  0019A8  EFD8  F00C         	goto	u2960
  5841  0019AC                     u2961:
  5842  0019AC  EFE0  F00C         	goto	l2968
  5843  0019B0                     u2960:
  5844  0019B0  0E00               	movlw	0
  5845  0019B2  6E05               	movwf	___fladd@a^0,c
  5846  0019B4  0E00               	movlw	0
  5847  0019B6  6E06               	movwf	(___fladd@a+1)^0,c
  5848  0019B8  0E00               	movlw	0
  5849  0019BA  6E07               	movwf	(___fladd@a+2)^0,c
  5850  0019BC  0E00               	movlw	0
  5851  0019BE  6E08               	movwf	(___fladd@a+3)^0,c
  5852  0019C0                     l2968:
  5853  0019C0  8E07               	bsf	(___fladd@a+2)^0,7,c
  5854  0019C2  0E00               	movlw	0
  5855  0019C4  6E08               	movwf	(___fladd@a+3)^0,c
  5856  0019C6  EFED  F00C         	goto	l2974
  5857  0019CA                     l2972:
  5858  0019CA  0E00               	movlw	0
  5859  0019CC  6E05               	movwf	___fladd@a^0,c
  5860  0019CE  0E00               	movlw	0
  5861  0019D0  6E06               	movwf	(___fladd@a+1)^0,c
  5862  0019D2  0E00               	movlw	0
  5863  0019D4  6E07               	movwf	(___fladd@a+2)^0,c
  5864  0019D6  0E00               	movlw	0
  5865  0019D8  6E08               	movwf	(___fladd@a+3)^0,c
  5866  0019DA                     l2974:
  5867  0019DA  500F               	movf	___fladd@bexp^0,w,c
  5868  0019DC  5C0E               	subwf	___fladd@aexp^0,w,c
  5869  0019DE  B0D8               	btfsc	status,0,c
  5870  0019E0  EFF4  F00C         	goto	u2971
  5871  0019E4  EFF6  F00C         	goto	u2970
  5872  0019E8                     u2971:
  5873  0019E8  EF1D  F00D         	goto	l3010
  5874  0019EC                     u2970:
  5875  0019EC  AC0D               	btfss	___fladd@signs^0,6,c
  5876  0019EE  EFFB  F00C         	goto	u2981
  5877  0019F2  EFFD  F00C         	goto	u2980
  5878  0019F6                     u2981:
  5879  0019F6  EFFF  F00C         	goto	l2980
  5880  0019FA                     u2980:
  5881  0019FA  0E80               	movlw	128
  5882  0019FC  1A0D               	xorwf	___fladd@signs^0,f,c
  5883  0019FE                     l2980:
  5884  0019FE  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  5885  001A02  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5886  001A06  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  5887  001A0A  C001  F010         	movff	___fladd@b,___fladd@grs
  5888  001A0E  C005  F001         	movff	___fladd@a,___fladd@b
  5889  001A12  C010  F005         	movff	___fladd@grs,___fladd@a
  5890  001A16  C002  F010         	movff	___fladd@b+1,___fladd@grs
  5891  001A1A  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  5892  001A1E  C010  F006         	movff	___fladd@grs,___fladd@a+1
  5893  001A22  C003  F010         	movff	___fladd@b+2,___fladd@grs
  5894  001A26  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  5895  001A2A  C010  F007         	movff	___fladd@grs,___fladd@a+2
  5896  001A2E  C004  F010         	movff	___fladd@b+3,___fladd@grs
  5897  001A32  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  5898  001A36  C010  F008         	movff	___fladd@grs,___fladd@a+3
  5899  001A3A                     l3010:
  5900  001A3A  0E00               	movlw	0
  5901  001A3C  6E10               	movwf	___fladd@grs^0,c
  5902  001A3E  500F               	movf	___fladd@bexp^0,w,c
  5903  001A40  C00E  F009         	movff	___fladd@aexp,??___fladd
  5904  001A44  6A0A               	clrf	(??___fladd+1)^0,c
  5905  001A46  5E09               	subwf	??___fladd^0,f,c
  5906  001A48  0E00               	movlw	0
  5907  001A4A  5A0A               	subwfb	(??___fladd+1)^0,f,c
  5908  001A4C  BE0A               	btfsc	(??___fladd+1)^0,7,c
  5909  001A4E  EF32  F00D         	goto	u2991
  5910  001A52  500A               	movf	(??___fladd+1)^0,w,c
  5911  001A54  E109               	bnz	u2990
  5912  001A56  0E1A               	movlw	26
  5913  001A58  5C09               	subwf	??___fladd^0,w,c
  5914  001A5A  A0D8               	btfss	status,0,c
  5915  001A5C  EF32  F00D         	goto	u2991
  5916  001A60  EF34  F00D         	goto	u2990
  5917  001A64                     u2991:
  5918  001A64  EF6B  F00D         	goto	l679
  5919  001A68                     u2990:
  5920  001A68  5001               	movf	___fladd@b^0,w,c
  5921  001A6A  1002               	iorwf	(___fladd@b+1)^0,w,c
  5922  001A6C  1003               	iorwf	(___fladd@b+2)^0,w,c
  5923  001A6E  1004               	iorwf	(___fladd@b+3)^0,w,c
  5924  001A70  A4D8               	btfss	status,2,c
  5925  001A72  EF3D  F00D         	goto	u3001
  5926  001A76  EF40  F00D         	goto	u3000
  5927  001A7A                     u3001:
  5928  001A7A  0E01               	movlw	1
  5929  001A7C  EF41  F00D         	goto	u3010
  5930  001A80                     u3000:
  5931  001A80  0E00               	movlw	0
  5932  001A82                     u3010:
  5933  001A82  6E10               	movwf	___fladd@grs^0,c
  5934  001A84  0E00               	movlw	0
  5935  001A86  6E01               	movwf	___fladd@b^0,c
  5936  001A88  0E00               	movlw	0
  5937  001A8A  6E02               	movwf	(___fladd@b+1)^0,c
  5938  001A8C  0E00               	movlw	0
  5939  001A8E  6E03               	movwf	(___fladd@b+2)^0,c
  5940  001A90  0E00               	movlw	0
  5941  001A92  6E04               	movwf	(___fladd@b+3)^0,c
  5942  001A94  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5943  001A98  EF74  F00D         	goto	l678
  5944  001A9C                     l680:
  5945  001A9C  A010               	btfss	___fladd@grs^0,0,c
  5946  001A9E  EF53  F00D         	goto	u3021
  5947  001AA2  EF55  F00D         	goto	u3020
  5948  001AA6                     u3021:
  5949  001AA6  EF5B  F00D         	goto	l3022
  5950  001AAA                     u3020:
  5951  001AAA  90D8               	bcf	status,0,c
  5952  001AAC  3010               	rrcf	___fladd@grs^0,w,c
  5953  001AAE  0901               	iorlw	1
  5954  001AB0  6E10               	movwf	___fladd@grs^0,c
  5955  001AB2  EF5D  F00D         	goto	l3024
  5956  001AB6                     l3022:
  5957  001AB6  90D8               	bcf	status,0,c
  5958  001AB8  3210               	rrcf	___fladd@grs^0,f,c
  5959  001ABA                     l3024:
  5960  001ABA  A001               	btfss	___fladd@b^0,0,c
  5961  001ABC  EF62  F00D         	goto	u3031
  5962  001AC0  EF64  F00D         	goto	u3030
  5963  001AC4                     u3031:
  5964  001AC4  EF65  F00D         	goto	l3028
  5965  001AC8                     u3030:
  5966  001AC8  8E10               	bsf	___fladd@grs^0,7,c
  5967  001ACA                     l3028:
  5968  001ACA  3404               	rlcf	(___fladd@b+3)^0,w,c
  5969  001ACC  3204               	rrcf	(___fladd@b+3)^0,f,c
  5970  001ACE  3203               	rrcf	(___fladd@b+2)^0,f,c
  5971  001AD0  3202               	rrcf	(___fladd@b+1)^0,f,c
  5972  001AD2  3201               	rrcf	___fladd@b^0,f,c
  5973  001AD4  2A0F               	incf	___fladd@bexp^0,f,c
  5974  001AD6                     l679:
  5975  001AD6  500E               	movf	___fladd@aexp^0,w,c
  5976  001AD8  5C0F               	subwf	___fladd@bexp^0,w,c
  5977  001ADA  A0D8               	btfss	status,0,c
  5978  001ADC  EF72  F00D         	goto	u3041
  5979  001AE0  EF74  F00D         	goto	u3040
  5980  001AE4                     u3041:
  5981  001AE4  EF4E  F00D         	goto	l680
  5982  001AE8                     u3040:
  5983  001AE8                     l678:
  5984  001AE8  BC0D               	btfsc	___fladd@signs^0,6,c
  5985  001AEA  EF79  F00D         	goto	u3051
  5986  001AEE  EF7B  F00D         	goto	u3050
  5987  001AF2                     u3051:
  5988  001AF2  EFBB  F00D         	goto	l3056
  5989  001AF6                     u3050:
  5990  001AF6  500F               	movf	___fladd@bexp^0,w,c
  5991  001AF8  A4D8               	btfss	status,2,c
  5992  001AFA  EF81  F00D         	goto	u3061
  5993  001AFE  EF83  F00D         	goto	u3060
  5994  001B02                     u3061:
  5995  001B02  EF8D  F00D         	goto	l3038
  5996  001B06                     u3060:
  5997  001B06  0E00               	movlw	0
  5998  001B08  6E01               	movwf	?___fladd^0,c
  5999  001B0A  0E00               	movlw	0
  6000  001B0C  6E02               	movwf	(?___fladd+1)^0,c
  6001  001B0E  0E00               	movlw	0
  6002  001B10  6E03               	movwf	(?___fladd+2)^0,c
  6003  001B12  0E00               	movlw	0
  6004  001B14  6E04               	movwf	(?___fladd+3)^0,c
  6005  001B16  EFDC  F00E         	goto	l687
  6006  001B1A                     l3038:
  6007  001B1A  5005               	movf	___fladd@a^0,w,c
  6008  001B1C  2601               	addwf	___fladd@b^0,f,c
  6009  001B1E  5006               	movf	(___fladd@a+1)^0,w,c
  6010  001B20  2202               	addwfc	(___fladd@b+1)^0,f,c
  6011  001B22  5007               	movf	(___fladd@a+2)^0,w,c
  6012  001B24  2203               	addwfc	(___fladd@b+2)^0,f,c
  6013  001B26  5008               	movf	(___fladd@a+3)^0,w,c
  6014  001B28  2204               	addwfc	(___fladd@b+3)^0,f,c
  6015  001B2A  A004               	btfss	(___fladd@b+3)^0,0,c
  6016  001B2C  EF9A  F00D         	goto	u3071
  6017  001B30  EF9C  F00D         	goto	u3070
  6018  001B34                     u3071:
  6019  001B34  EF48  F00E         	goto	l3092
  6020  001B38                     u3070:
  6021  001B38  A010               	btfss	___fladd@grs^0,0,c
  6022  001B3A  EFA1  F00D         	goto	u3081
  6023  001B3E  EFA3  F00D         	goto	u3080
  6024  001B42                     u3081:
  6025  001B42  EFA9  F00D         	goto	l3046
  6026  001B46                     u3080:
  6027  001B46  90D8               	bcf	status,0,c
  6028  001B48  3010               	rrcf	___fladd@grs^0,w,c
  6029  001B4A  0901               	iorlw	1
  6030  001B4C  6E10               	movwf	___fladd@grs^0,c
  6031  001B4E  EFAB  F00D         	goto	l3048
  6032  001B52                     l3046:
  6033  001B52  90D8               	bcf	status,0,c
  6034  001B54  3210               	rrcf	___fladd@grs^0,f,c
  6035  001B56                     l3048:
  6036  001B56  A001               	btfss	___fladd@b^0,0,c
  6037  001B58  EFB0  F00D         	goto	u3091
  6038  001B5C  EFB2  F00D         	goto	u3090
  6039  001B60                     u3091:
  6040  001B60  EFB3  F00D         	goto	l3052
  6041  001B64                     u3090:
  6042  001B64  8E10               	bsf	___fladd@grs^0,7,c
  6043  001B66                     l3052:
  6044  001B66  3404               	rlcf	(___fladd@b+3)^0,w,c
  6045  001B68  3204               	rrcf	(___fladd@b+3)^0,f,c
  6046  001B6A  3203               	rrcf	(___fladd@b+2)^0,f,c
  6047  001B6C  3202               	rrcf	(___fladd@b+1)^0,f,c
  6048  001B6E  3201               	rrcf	___fladd@b^0,f,c
  6049  001B70  2A0F               	incf	___fladd@bexp^0,f,c
  6050  001B72  EF48  F00E         	goto	l3092
  6051  001B76                     l3056:
  6052  001B76  5005               	movf	___fladd@a^0,w,c
  6053  001B78  5C01               	subwf	___fladd@b^0,w,c
  6054  001B7A  5006               	movf	(___fladd@a+1)^0,w,c
  6055  001B7C  5802               	subwfb	(___fladd@b+1)^0,w,c
  6056  001B7E  5007               	movf	(___fladd@a+2)^0,w,c
  6057  001B80  5803               	subwfb	(___fladd@b+2)^0,w,c
  6058  001B82  5004               	movf	(___fladd@b+3)^0,w,c
  6059  001B84  0A80               	xorlw	128
  6060  001B86  6E09               	movwf	??___fladd^0,c
  6061  001B88  5008               	movf	(___fladd@a+3)^0,w,c
  6062  001B8A  0A80               	xorlw	128
  6063  001B8C  5809               	subwfb	??___fladd^0,w,c
  6064  001B8E  B0D8               	btfsc	status,0,c
  6065  001B90  EFCC  F00D         	goto	u3101
  6066  001B94  EFCE  F00D         	goto	u3100
  6067  001B98                     u3101:
  6068  001B98  EFF9  F00D         	goto	l3066
  6069  001B9C                     u3100:
  6070  001B9C  5001               	movf	___fladd@b^0,w,c
  6071  001B9E  5C05               	subwf	___fladd@a^0,w,c
  6072  001BA0  6E09               	movwf	??___fladd^0,c
  6073  001BA2  5002               	movf	(___fladd@b+1)^0,w,c
  6074  001BA4  5806               	subwfb	(___fladd@a+1)^0,w,c
  6075  001BA6  6E0A               	movwf	(??___fladd+1)^0,c
  6076  001BA8  5003               	movf	(___fladd@b+2)^0,w,c
  6077  001BAA  5807               	subwfb	(___fladd@a+2)^0,w,c
  6078  001BAC  6E0B               	movwf	(??___fladd+2)^0,c
  6079  001BAE  5004               	movf	(___fladd@b+3)^0,w,c
  6080  001BB0  5808               	subwfb	(___fladd@a+3)^0,w,c
  6081  001BB2  6E0C               	movwf	(??___fladd+3)^0,c
  6082  001BB4  0EFF               	movlw	255
  6083  001BB6  2409               	addwf	??___fladd^0,w,c
  6084  001BB8  6E01               	movwf	___fladd@b^0,c
  6085  001BBA  0EFF               	movlw	255
  6086  001BBC  200A               	addwfc	(??___fladd+1)^0,w,c
  6087  001BBE  6E02               	movwf	(___fladd@b+1)^0,c
  6088  001BC0  0EFF               	movlw	255
  6089  001BC2  200B               	addwfc	(??___fladd+2)^0,w,c
  6090  001BC4  6E03               	movwf	(___fladd@b+2)^0,c
  6091  001BC6  0EFF               	movlw	255
  6092  001BC8  200C               	addwfc	(??___fladd+3)^0,w,c
  6093  001BCA  6E04               	movwf	(___fladd@b+3)^0,c
  6094  001BCC  0E80               	movlw	128
  6095  001BCE  1A0D               	xorwf	___fladd@signs^0,f,c
  6096  001BD0  6C10               	negf	___fladd@grs^0,c
  6097  001BD2  5010               	movf	___fladd@grs^0,w,c
  6098  001BD4  A4D8               	btfss	status,2,c
  6099  001BD6  EFEF  F00D         	goto	u3111
  6100  001BDA  EFF1  F00D         	goto	u3110
  6101  001BDE                     u3111:
  6102  001BDE  EF01  F00E         	goto	l695
  6103  001BE2                     u3110:
  6104  001BE2  0E01               	movlw	1
  6105  001BE4  2601               	addwf	___fladd@b^0,f,c
  6106  001BE6  0E00               	movlw	0
  6107  001BE8  2202               	addwfc	(___fladd@b+1)^0,f,c
  6108  001BEA  2203               	addwfc	(___fladd@b+2)^0,f,c
  6109  001BEC  2204               	addwfc	(___fladd@b+3)^0,f,c
  6110  001BEE  EF01  F00E         	goto	l695
  6111  001BF2                     l3066:
  6112  001BF2  5005               	movf	___fladd@a^0,w,c
  6113  001BF4  5E01               	subwf	___fladd@b^0,f,c
  6114  001BF6  5006               	movf	(___fladd@a+1)^0,w,c
  6115  001BF8  5A02               	subwfb	(___fladd@b+1)^0,f,c
  6116  001BFA  5007               	movf	(___fladd@a+2)^0,w,c
  6117  001BFC  5A03               	subwfb	(___fladd@b+2)^0,f,c
  6118  001BFE  5008               	movf	(___fladd@a+3)^0,w,c
  6119  001C00  5A04               	subwfb	(___fladd@b+3)^0,f,c
  6120  001C02                     l695:
  6121  001C02  5001               	movf	___fladd@b^0,w,c
  6122  001C04  1002               	iorwf	(___fladd@b+1)^0,w,c
  6123  001C06  1003               	iorwf	(___fladd@b+2)^0,w,c
  6124  001C08  1004               	iorwf	(___fladd@b+3)^0,w,c
  6125  001C0A  A4D8               	btfss	status,2,c
  6126  001C0C  EF0A  F00E         	goto	u3121
  6127  001C10  EF0C  F00E         	goto	u3120
  6128  001C14                     u3121:
  6129  001C14  EF41  F00E         	goto	l3090
  6130  001C18                     u3120:
  6131  001C18  5010               	movf	___fladd@grs^0,w,c
  6132  001C1A  A4D8               	btfss	status,2,c
  6133  001C1C  EF12  F00E         	goto	u3131
  6134  001C20  EF14  F00E         	goto	u3130
  6135  001C24                     u3131:
  6136  001C24  EF41  F00E         	goto	l3090
  6137  001C28                     u3130:
  6138  001C28  0E00               	movlw	0
  6139  001C2A  6E01               	movwf	?___fladd^0,c
  6140  001C2C  0E00               	movlw	0
  6141  001C2E  6E02               	movwf	(?___fladd+1)^0,c
  6142  001C30  0E00               	movlw	0
  6143  001C32  6E03               	movwf	(?___fladd+2)^0,c
  6144  001C34  0E00               	movlw	0
  6145  001C36  6E04               	movwf	(?___fladd+3)^0,c
  6146  001C38  EFDC  F00E         	goto	l687
  6147  001C3C                     l3074:
  6148  001C3C  90D8               	bcf	status,0,c
  6149  001C3E  3601               	rlcf	___fladd@b^0,f,c
  6150  001C40  3602               	rlcf	(___fladd@b+1)^0,f,c
  6151  001C42  3603               	rlcf	(___fladd@b+2)^0,f,c
  6152  001C44  3604               	rlcf	(___fladd@b+3)^0,f,c
  6153  001C46  AE10               	btfss	___fladd@grs^0,7,c
  6154  001C48  EF28  F00E         	goto	u3141
  6155  001C4C  EF2A  F00E         	goto	u3140
  6156  001C50                     u3141:
  6157  001C50  EF2B  F00E         	goto	l3080
  6158  001C54                     u3140:
  6159  001C54  8001               	bsf	___fladd@b^0,0,c
  6160  001C56                     l3080:
  6161  001C56  A010               	btfss	___fladd@grs^0,0,c
  6162  001C58  EF30  F00E         	goto	u3151
  6163  001C5C  EF32  F00E         	goto	u3150
  6164  001C60                     u3151:
  6165  001C60  EF36  F00E         	goto	l3084
  6166  001C64                     u3150:
  6167  001C64  80D8               	bsf	status,0,c
  6168  001C66  3610               	rlcf	___fladd@grs^0,f,c
  6169  001C68  EF38  F00E         	goto	l3086
  6170  001C6C                     l3084:
  6171  001C6C  90D8               	bcf	status,0,c
  6172  001C6E  3610               	rlcf	___fladd@grs^0,f,c
  6173  001C70                     l3086:
  6174  001C70  500F               	movf	___fladd@bexp^0,w,c
  6175  001C72  B4D8               	btfsc	status,2,c
  6176  001C74  EF3E  F00E         	goto	u3161
  6177  001C78  EF40  F00E         	goto	u3160
  6178  001C7C                     u3161:
  6179  001C7C  EF41  F00E         	goto	l3090
  6180  001C80                     u3160:
  6181  001C80  060F               	decf	___fladd@bexp^0,f,c
  6182  001C82                     l3090:
  6183  001C82  AE03               	btfss	(___fladd@b+2)^0,7,c
  6184  001C84  EF46  F00E         	goto	u3171
  6185  001C88  EF48  F00E         	goto	u3170
  6186  001C8C                     u3171:
  6187  001C8C  EF1E  F00E         	goto	l3074
  6188  001C90                     u3170:
  6189  001C90                     l3092:
  6190  001C90  0E00               	movlw	0
  6191  001C92  6E0E               	movwf	___fladd@aexp^0,c
  6192  001C94  AE10               	btfss	___fladd@grs^0,7,c
  6193  001C96  EF4F  F00E         	goto	u3181
  6194  001C9A  EF51  F00E         	goto	u3180
  6195  001C9E                     u3181:
  6196  001C9E  EF69  F00E         	goto	l704
  6197  001CA2                     u3180:
  6198  001CA2  C010  F009         	movff	___fladd@grs,??___fladd
  6199  001CA6  0E7F               	movlw	127
  6200  001CA8  1609               	andwf	??___fladd^0,f,c
  6201  001CAA  B4D8               	btfsc	status,2,c
  6202  001CAC  EF5A  F00E         	goto	u3191
  6203  001CB0  EF5C  F00E         	goto	u3190
  6204  001CB4                     u3191:
  6205  001CB4  EF60  F00E         	goto	l705
  6206  001CB8                     u3190:
  6207  001CB8                     l3098:
  6208  001CB8  0E01               	movlw	1
  6209  001CBA  6E0E               	movwf	___fladd@aexp^0,c
  6210  001CBC  EF69  F00E         	goto	l704
  6211  001CC0                     l705:
  6212  001CC0  A001               	btfss	___fladd@b^0,0,c
  6213  001CC2  EF65  F00E         	goto	u3201
  6214  001CC6  EF67  F00E         	goto	u3200
  6215  001CCA                     u3201:
  6216  001CCA  EF69  F00E         	goto	l704
  6217  001CCE                     u3200:
  6218  001CCE  EF5C  F00E         	goto	l3098
  6219  001CD2                     l704:
  6220  001CD2  500E               	movf	___fladd@aexp^0,w,c
  6221  001CD4  B4D8               	btfsc	status,2,c
  6222  001CD6  EF6F  F00E         	goto	u3211
  6223  001CDA  EF71  F00E         	goto	u3210
  6224  001CDE                     u3211:
  6225  001CDE  EF9C  F00E         	goto	l3110
  6226  001CE2                     u3210:
  6227  001CE2  0E01               	movlw	1
  6228  001CE4  2601               	addwf	___fladd@b^0,f,c
  6229  001CE6  0E00               	movlw	0
  6230  001CE8  2202               	addwfc	(___fladd@b+1)^0,f,c
  6231  001CEA  2203               	addwfc	(___fladd@b+2)^0,f,c
  6232  001CEC  2204               	addwfc	(___fladd@b+3)^0,f,c
  6233  001CEE  A004               	btfss	(___fladd@b+3)^0,0,c
  6234  001CF0  EF7C  F00E         	goto	u3221
  6235  001CF4  EF7E  F00E         	goto	u3220
  6236  001CF8                     u3221:
  6237  001CF8  EF9C  F00E         	goto	l3110
  6238  001CFC                     u3220:
  6239  001CFC  C001  F009         	movff	___fladd@b,??___fladd
  6240  001D00  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  6241  001D04  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  6242  001D08  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  6243  001D0C  340C               	rlcf	(??___fladd+3)^0,w,c
  6244  001D0E  320C               	rrcf	(??___fladd+3)^0,f,c
  6245  001D10  320B               	rrcf	(??___fladd+2)^0,f,c
  6246  001D12  320A               	rrcf	(??___fladd+1)^0,f,c
  6247  001D14  3209               	rrcf	??___fladd^0,f,c
  6248  001D16  C009  F001         	movff	??___fladd,___fladd@b
  6249  001D1A  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  6250  001D1E  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  6251  001D22  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  6252  001D26  280F               	incf	___fladd@bexp^0,w,c
  6253  001D28  B4D8               	btfsc	status,2,c
  6254  001D2A  EF99  F00E         	goto	u3231
  6255  001D2E  EF9B  F00E         	goto	u3230
  6256  001D32                     u3231:
  6257  001D32  EF9C  F00E         	goto	l3110
  6258  001D36                     u3230:
  6259  001D36  2A0F               	incf	___fladd@bexp^0,f,c
  6260  001D38                     l3110:
  6261  001D38  280F               	incf	___fladd@bexp^0,w,c
  6262  001D3A  B4D8               	btfsc	status,2,c
  6263  001D3C  EFA2  F00E         	goto	u3241
  6264  001D40  EFA4  F00E         	goto	u3240
  6265  001D44                     u3241:
  6266  001D44  EFAC  F00E         	goto	l3114
  6267  001D48                     u3240:
  6268  001D48  500F               	movf	___fladd@bexp^0,w,c
  6269  001D4A  A4D8               	btfss	status,2,c
  6270  001D4C  EFAA  F00E         	goto	u3251
  6271  001D50  EFAC  F00E         	goto	u3250
  6272  001D54                     u3251:
  6273  001D54  EFBE  F00E         	goto	l3118
  6274  001D58                     u3250:
  6275  001D58                     l3114:
  6276  001D58  0E00               	movlw	0
  6277  001D5A  6E01               	movwf	___fladd@b^0,c
  6278  001D5C  0E00               	movlw	0
  6279  001D5E  6E02               	movwf	(___fladd@b+1)^0,c
  6280  001D60  0E00               	movlw	0
  6281  001D62  6E03               	movwf	(___fladd@b+2)^0,c
  6282  001D64  0E00               	movlw	0
  6283  001D66  6E04               	movwf	(___fladd@b+3)^0,c
  6284  001D68  500F               	movf	___fladd@bexp^0,w,c
  6285  001D6A  A4D8               	btfss	status,2,c
  6286  001D6C  EFBA  F00E         	goto	u3261
  6287  001D70  EFBC  F00E         	goto	u3260
  6288  001D74                     u3261:
  6289  001D74  EFBE  F00E         	goto	l3118
  6290  001D78                     u3260:
  6291  001D78  0E00               	movlw	0
  6292  001D7A  6E0D               	movwf	___fladd@signs^0,c
  6293  001D7C                     l3118:
  6294  001D7C  A00F               	btfss	___fladd@bexp^0,0,c
  6295  001D7E  EFC3  F00E         	goto	u3271
  6296  001D82  EFC5  F00E         	goto	u3270
  6297  001D86                     u3271:
  6298  001D86  EFC8  F00E         	goto	l3122
  6299  001D8A                     u3270:
  6300  001D8A  8E03               	bsf	(___fladd@b+2)^0,7,c
  6301  001D8C  EFC9  F00E         	goto	l3124
  6302  001D90                     l3122:
  6303  001D90  9E03               	bcf	(___fladd@b+2)^0,7,c
  6304  001D92                     l3124:
  6305  001D92  90D8               	bcf	status,0,c
  6306  001D94  300F               	rrcf	___fladd@bexp^0,w,c
  6307  001D96  6E04               	movwf	(___fladd@b+3)^0,c
  6308  001D98  AE0D               	btfss	___fladd@signs^0,7,c
  6309  001D9A  EFD1  F00E         	goto	u3281
  6310  001D9E  EFD3  F00E         	goto	u3280
  6311  001DA2                     u3281:
  6312  001DA2  EFD4  F00E         	goto	l3130
  6313  001DA6                     u3280:
  6314  001DA6  8E04               	bsf	(___fladd@b+3)^0,7,c
  6315  001DA8                     l3130:
  6316  001DA8  C001  F001         	movff	___fladd@b,?___fladd
  6317  001DAC  C002  F002         	movff	___fladd@b+1,?___fladd+1
  6318  001DB0  C003  F003         	movff	___fladd@b+2,?___fladd+2
  6319  001DB4  C004  F004         	movff	___fladd@b+3,?___fladd+3
  6320  001DB8                     l687:
  6321  001DB8  0012               	return		;funcret
  6322  001DBA                     __end_of___fladd:
  6323                           	callstack 0
  6324                           
  6325 ;; *************** function ___flneg *****************
  6326 ;; Defined at:
  6327 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\flneg.c"
  6328 ;; Parameters:    Size  Location     Type
  6329 ;;  f1              4    0[COMRAM] unsigned char 
  6330 ;; Auto vars:     Size  Location     Type
  6331 ;;		None
  6332 ;; Return value:  Size  Location     Type
  6333 ;;                  4    0[COMRAM] unsigned char 
  6334 ;; Registers used:
  6335 ;;		wreg, status,2, status,0
  6336 ;; Tracked objects:
  6337 ;;		On entry : 0/0
  6338 ;;		On exit  : 0/0
  6339 ;;		Unchanged: 0/0
  6340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6341 ;;      Params:         4       0       0       0       0       0       0
  6342 ;;      Locals:         0       0       0       0       0       0       0
  6343 ;;      Temps:          0       0       0       0       0       0       0
  6344 ;;      Totals:         4       0       0       0       0       0       0
  6345 ;;Total ram usage:        4 bytes
  6346 ;; Hardware stack levels used: 1
  6347 ;; This function calls:
  6348 ;;		Nothing
  6349 ;; This function is called by:
  6350 ;;		_efgtoa
  6351 ;; This function uses a non-reentrant model
  6352 ;;
  6353                           
  6354                           	psect	text19
  6355  0041EE                     __ptext19:
  6356                           	callstack 0
  6357  0041EE                     ___flneg:
  6358                           	callstack 25
  6359  0041EE  5001               	movf	___flneg@f1^0,w,c
  6360  0041F0  1002               	iorwf	(___flneg@f1+1)^0,w,c
  6361  0041F2  1003               	iorwf	(___flneg@f1+2)^0,w,c
  6362  0041F4  1004               	iorwf	(___flneg@f1+3)^0,w,c
  6363  0041F6  B4D8               	btfsc	status,2,c
  6364  0041F8  EF00  F021         	goto	u4081
  6365  0041FC  EF02  F021         	goto	u4080
  6366  004200                     u4081:
  6367  004200  EF0A  F021         	goto	l3638
  6368  004204                     u4080:
  6369  004204  0E00               	movlw	0
  6370  004206  1A01               	xorwf	___flneg@f1^0,f,c
  6371  004208  0E00               	movlw	0
  6372  00420A  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  6373  00420C  0E00               	movlw	0
  6374  00420E  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  6375  004210  0E80               	movlw	128
  6376  004212  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  6377  004214                     l3638:
  6378  004214  C001  F001         	movff	___flneg@f1,?___flneg
  6379  004218  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  6380  00421C  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  6381  004220  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  6382  004224  0012               	return		;funcret
  6383  004226                     __end_of___flneg:
  6384                           	callstack 0
  6385                           
  6386 ;; *************** function ___flge *****************
  6387 ;; Defined at:
  6388 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\flge.c"
  6389 ;; Parameters:    Size  Location     Type
  6390 ;;  ff1             4   39[COMRAM] unsigned char 
  6391 ;;  ff2             4   43[COMRAM] unsigned char 
  6392 ;; Auto vars:     Size  Location     Type
  6393 ;;		None
  6394 ;; Return value:  Size  Location     Type
  6395 ;;		None               void
  6396 ;; Registers used:
  6397 ;;		wreg, status,2, status,0
  6398 ;; Tracked objects:
  6399 ;;		On entry : 0/0
  6400 ;;		On exit  : 0/0
  6401 ;;		Unchanged: 0/0
  6402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6403 ;;      Params:         8       0       0       0       0       0       0
  6404 ;;      Locals:         0       0       0       0       0       0       0
  6405 ;;      Temps:          4       0       0       0       0       0       0
  6406 ;;      Totals:        12       0       0       0       0       0       0
  6407 ;;Total ram usage:       12 bytes
  6408 ;; Hardware stack levels used: 1
  6409 ;; This function calls:
  6410 ;;		Nothing
  6411 ;; This function is called by:
  6412 ;;		_logic_CONTROL
  6413 ;;		_efgtoa
  6414 ;; This function uses a non-reentrant model
  6415 ;;
  6416                           
  6417                           	psect	text20
  6418  003562                     __ptext20:
  6419                           	callstack 0
  6420  003562                     ___flge:
  6421                           	callstack 29
  6422  003562  0E00               	movlw	0
  6423  003564  1428               	andwf	___flge@ff1^0,w,c
  6424  003566  6E30               	movwf	??___flge^0,c
  6425  003568  0E00               	movlw	0
  6426  00356A  1429               	andwf	(___flge@ff1+1)^0,w,c
  6427  00356C  6E31               	movwf	(??___flge+1)^0,c
  6428  00356E  0E80               	movlw	128
  6429  003570  142A               	andwf	(___flge@ff1+2)^0,w,c
  6430  003572  6E32               	movwf	(??___flge+2)^0,c
  6431  003574  0E7F               	movlw	127
  6432  003576  142B               	andwf	(___flge@ff1+3)^0,w,c
  6433  003578  6E33               	movwf	(??___flge+3)^0,c
  6434  00357A  5030               	movf	??___flge^0,w,c
  6435  00357C  1031               	iorwf	(??___flge+1)^0,w,c
  6436  00357E  1032               	iorwf	(??___flge+2)^0,w,c
  6437  003580  1033               	iorwf	(??___flge+3)^0,w,c
  6438  003582  A4D8               	btfss	status,2,c
  6439  003584  EFC6  F01A         	goto	u4031
  6440  003588  EFC8  F01A         	goto	u4030
  6441  00358C                     u4031:
  6442  00358C  EFD0  F01A         	goto	l3616
  6443  003590                     u4030:
  6444  003590  0E00               	movlw	0
  6445  003592  6E28               	movwf	___flge@ff1^0,c
  6446  003594  0E00               	movlw	0
  6447  003596  6E29               	movwf	(___flge@ff1+1)^0,c
  6448  003598  0E00               	movlw	0
  6449  00359A  6E2A               	movwf	(___flge@ff1+2)^0,c
  6450  00359C  0E00               	movlw	0
  6451  00359E  6E2B               	movwf	(___flge@ff1+3)^0,c
  6452  0035A0                     l3616:
  6453  0035A0  0E00               	movlw	0
  6454  0035A2  142C               	andwf	___flge@ff2^0,w,c
  6455  0035A4  6E30               	movwf	??___flge^0,c
  6456  0035A6  0E00               	movlw	0
  6457  0035A8  142D               	andwf	(___flge@ff2+1)^0,w,c
  6458  0035AA  6E31               	movwf	(??___flge+1)^0,c
  6459  0035AC  0E80               	movlw	128
  6460  0035AE  142E               	andwf	(___flge@ff2+2)^0,w,c
  6461  0035B0  6E32               	movwf	(??___flge+2)^0,c
  6462  0035B2  0E7F               	movlw	127
  6463  0035B4  142F               	andwf	(___flge@ff2+3)^0,w,c
  6464  0035B6  6E33               	movwf	(??___flge+3)^0,c
  6465  0035B8  5030               	movf	??___flge^0,w,c
  6466  0035BA  1031               	iorwf	(??___flge+1)^0,w,c
  6467  0035BC  1032               	iorwf	(??___flge+2)^0,w,c
  6468  0035BE  1033               	iorwf	(??___flge+3)^0,w,c
  6469  0035C0  A4D8               	btfss	status,2,c
  6470  0035C2  EFE5  F01A         	goto	u4041
  6471  0035C6  EFE7  F01A         	goto	u4040
  6472  0035CA                     u4041:
  6473  0035CA  EFEF  F01A         	goto	l3620
  6474  0035CE                     u4040:
  6475  0035CE  0E00               	movlw	0
  6476  0035D0  6E2C               	movwf	___flge@ff2^0,c
  6477  0035D2  0E00               	movlw	0
  6478  0035D4  6E2D               	movwf	(___flge@ff2+1)^0,c
  6479  0035D6  0E00               	movlw	0
  6480  0035D8  6E2E               	movwf	(___flge@ff2+2)^0,c
  6481  0035DA  0E00               	movlw	0
  6482  0035DC  6E2F               	movwf	(___flge@ff2+3)^0,c
  6483  0035DE                     l3620:
  6484  0035DE  AE2B               	btfss	(___flge@ff1+3)^0,7,c
  6485  0035E0  EFF4  F01A         	goto	u4051
  6486  0035E4  EFF6  F01A         	goto	u4050
  6487  0035E8                     u4051:
  6488  0035E8  EFFF  F01A         	goto	l3624
  6489  0035EC                     u4050:
  6490  0035EC  6C28               	negf	___flge@ff1^0,c
  6491  0035EE  1E29               	comf	(___flge@ff1+1)^0,f,c
  6492  0035F0  B0D8               	btfsc	status,0,c
  6493  0035F2  2A29               	incf	(___flge@ff1+1)^0,f,c
  6494  0035F4  1E2A               	comf	(___flge@ff1+2)^0,f,c
  6495  0035F6  B0D8               	btfsc	status,0,c
  6496  0035F8  2A2A               	incf	(___flge@ff1+2)^0,f,c
  6497  0035FA  0E80               	movlw	128
  6498  0035FC  562B               	subfwb	(___flge@ff1+3)^0,f,c
  6499  0035FE                     l3624:
  6500  0035FE  AE2F               	btfss	(___flge@ff2+3)^0,7,c
  6501  003600  EF04  F01B         	goto	u4061
  6502  003604  EF06  F01B         	goto	u4060
  6503  003608                     u4061:
  6504  003608  EF0F  F01B         	goto	l415
  6505  00360C                     u4060:
  6506  00360C  6C2C               	negf	___flge@ff2^0,c
  6507  00360E  1E2D               	comf	(___flge@ff2+1)^0,f,c
  6508  003610  B0D8               	btfsc	status,0,c
  6509  003612  2A2D               	incf	(___flge@ff2+1)^0,f,c
  6510  003614  1E2E               	comf	(___flge@ff2+2)^0,f,c
  6511  003616  B0D8               	btfsc	status,0,c
  6512  003618  2A2E               	incf	(___flge@ff2+2)^0,f,c
  6513  00361A  0E80               	movlw	128
  6514  00361C  562F               	subfwb	(___flge@ff2+3)^0,f,c
  6515  00361E                     l415:
  6516  00361E  0E00               	movlw	0
  6517  003620  1A28               	xorwf	___flge@ff1^0,f,c
  6518  003622  0E00               	movlw	0
  6519  003624  1A29               	xorwf	(___flge@ff1+1)^0,f,c
  6520  003626  0E00               	movlw	0
  6521  003628  1A2A               	xorwf	(___flge@ff1+2)^0,f,c
  6522  00362A  0E80               	movlw	128
  6523  00362C  1A2B               	xorwf	(___flge@ff1+3)^0,f,c
  6524  00362E  0E00               	movlw	0
  6525  003630  1A2C               	xorwf	___flge@ff2^0,f,c
  6526  003632  0E00               	movlw	0
  6527  003634  1A2D               	xorwf	(___flge@ff2+1)^0,f,c
  6528  003636  0E00               	movlw	0
  6529  003638  1A2E               	xorwf	(___flge@ff2+2)^0,f,c
  6530  00363A  0E80               	movlw	128
  6531  00363C  1A2F               	xorwf	(___flge@ff2+3)^0,f,c
  6532  00363E  502C               	movf	___flge@ff2^0,w,c
  6533  003640  5C28               	subwf	___flge@ff1^0,w,c
  6534  003642  502D               	movf	(___flge@ff2+1)^0,w,c
  6535  003644  5829               	subwfb	(___flge@ff1+1)^0,w,c
  6536  003646  502E               	movf	(___flge@ff2+2)^0,w,c
  6537  003648  582A               	subwfb	(___flge@ff1+2)^0,w,c
  6538  00364A  502F               	movf	(___flge@ff2+3)^0,w,c
  6539  00364C  582B               	subwfb	(___flge@ff1+3)^0,w,c
  6540  00364E  B0D8               	btfsc	status,0,c
  6541  003650  EF2C  F01B         	goto	u4071
  6542  003654  EF2E  F01B         	goto	u4070
  6543  003658                     u4071:
  6544  003658  EF31  F01B         	goto	l3630
  6545  00365C                     u4070:
  6546  00365C  90D8               	bcf	status,0,c
  6547  00365E  EF32  F01B         	goto	l420
  6548  003662                     l3630:
  6549  003662  80D8               	bsf	status,0,c
  6550  003664                     l420:
  6551  003664  0012               	return		;funcret
  6552  003666                     __end_of___flge:
  6553                           	callstack 0
  6554                           
  6555 ;; *************** function ___fleq *****************
  6556 ;; Defined at:
  6557 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fleq.c"
  6558 ;; Parameters:    Size  Location     Type
  6559 ;;  ff1             4    0[COMRAM] unsigned char 
  6560 ;;  ff2             4    4[COMRAM] unsigned char 
  6561 ;; Auto vars:     Size  Location     Type
  6562 ;;		None
  6563 ;; Return value:  Size  Location     Type
  6564 ;;		None               void
  6565 ;; Registers used:
  6566 ;;		wreg, status,2, status,0
  6567 ;; Tracked objects:
  6568 ;;		On entry : 0/0
  6569 ;;		On exit  : 0/0
  6570 ;;		Unchanged: 0/0
  6571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6572 ;;      Params:         8       0       0       0       0       0       0
  6573 ;;      Locals:         0       0       0       0       0       0       0
  6574 ;;      Temps:          4       0       0       0       0       0       0
  6575 ;;      Totals:        12       0       0       0       0       0       0
  6576 ;;Total ram usage:       12 bytes
  6577 ;; Hardware stack levels used: 1
  6578 ;; This function calls:
  6579 ;;		Nothing
  6580 ;; This function is called by:
  6581 ;;		_logic_CONTROL
  6582 ;;		_efgtoa
  6583 ;; This function uses a non-reentrant model
  6584 ;;
  6585                           
  6586                           	psect	text21
  6587  003C1E                     __ptext21:
  6588                           	callstack 0
  6589  003C1E                     ___fleq:
  6590                           	callstack 29
  6591  003C1E  0E00               	movlw	0
  6592  003C20  1401               	andwf	___fleq@ff1^0,w,c
  6593  003C22  6E09               	movwf	??___fleq^0,c
  6594  003C24  0E00               	movlw	0
  6595  003C26  1402               	andwf	(___fleq@ff1+1)^0,w,c
  6596  003C28  6E0A               	movwf	(??___fleq+1)^0,c
  6597  003C2A  0E80               	movlw	128
  6598  003C2C  1403               	andwf	(___fleq@ff1+2)^0,w,c
  6599  003C2E  6E0B               	movwf	(??___fleq+2)^0,c
  6600  003C30  0E7F               	movlw	127
  6601  003C32  1404               	andwf	(___fleq@ff1+3)^0,w,c
  6602  003C34  6E0C               	movwf	(??___fleq+3)^0,c
  6603  003C36  5009               	movf	??___fleq^0,w,c
  6604  003C38  100A               	iorwf	(??___fleq+1)^0,w,c
  6605  003C3A  100B               	iorwf	(??___fleq+2)^0,w,c
  6606  003C3C  100C               	iorwf	(??___fleq+3)^0,w,c
  6607  003C3E  A4D8               	btfss	status,2,c
  6608  003C40  EF24  F01E         	goto	u4001
  6609  003C44  EF26  F01E         	goto	u4000
  6610  003C48                     u4001:
  6611  003C48  EF2E  F01E         	goto	l3600
  6612  003C4C                     u4000:
  6613  003C4C  0E00               	movlw	0
  6614  003C4E  6E01               	movwf	___fleq@ff1^0,c
  6615  003C50  0E00               	movlw	0
  6616  003C52  6E02               	movwf	(___fleq@ff1+1)^0,c
  6617  003C54  0E00               	movlw	0
  6618  003C56  6E03               	movwf	(___fleq@ff1+2)^0,c
  6619  003C58  0E00               	movlw	0
  6620  003C5A  6E04               	movwf	(___fleq@ff1+3)^0,c
  6621  003C5C                     l3600:
  6622  003C5C  0E00               	movlw	0
  6623  003C5E  1405               	andwf	___fleq@ff2^0,w,c
  6624  003C60  6E09               	movwf	??___fleq^0,c
  6625  003C62  0E00               	movlw	0
  6626  003C64  1406               	andwf	(___fleq@ff2+1)^0,w,c
  6627  003C66  6E0A               	movwf	(??___fleq+1)^0,c
  6628  003C68  0E80               	movlw	128
  6629  003C6A  1407               	andwf	(___fleq@ff2+2)^0,w,c
  6630  003C6C  6E0B               	movwf	(??___fleq+2)^0,c
  6631  003C6E  0E7F               	movlw	127
  6632  003C70  1408               	andwf	(___fleq@ff2+3)^0,w,c
  6633  003C72  6E0C               	movwf	(??___fleq+3)^0,c
  6634  003C74  5009               	movf	??___fleq^0,w,c
  6635  003C76  100A               	iorwf	(??___fleq+1)^0,w,c
  6636  003C78  100B               	iorwf	(??___fleq+2)^0,w,c
  6637  003C7A  100C               	iorwf	(??___fleq+3)^0,w,c
  6638  003C7C  A4D8               	btfss	status,2,c
  6639  003C7E  EF43  F01E         	goto	u4011
  6640  003C82  EF45  F01E         	goto	u4010
  6641  003C86                     u4011:
  6642  003C86  EF4D  F01E         	goto	l3604
  6643  003C8A                     u4010:
  6644  003C8A  0E00               	movlw	0
  6645  003C8C  6E05               	movwf	___fleq@ff2^0,c
  6646  003C8E  0E00               	movlw	0
  6647  003C90  6E06               	movwf	(___fleq@ff2+1)^0,c
  6648  003C92  0E00               	movlw	0
  6649  003C94  6E07               	movwf	(___fleq@ff2+2)^0,c
  6650  003C96  0E00               	movlw	0
  6651  003C98  6E08               	movwf	(___fleq@ff2+3)^0,c
  6652  003C9A                     l3604:
  6653  003C9A  5005               	movf	___fleq@ff2^0,w,c
  6654  003C9C  1801               	xorwf	___fleq@ff1^0,w,c
  6655  003C9E  E10F               	bnz	u4020
  6656  003CA0  5006               	movf	(___fleq@ff2+1)^0,w,c
  6657  003CA2  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  6658  003CA4  E10C               	bnz	u4020
  6659  003CA6  5007               	movf	(___fleq@ff2+2)^0,w,c
  6660  003CA8  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  6661  003CAA  E109               	bnz	u4020
  6662  003CAC  5008               	movf	(___fleq@ff2+3)^0,w,c
  6663  003CAE  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  6664  003CB0  B4D8               	btfsc	status,2,c
  6665  003CB2  EF5D  F01E         	goto	u4021
  6666  003CB6  EF5F  F01E         	goto	u4020
  6667  003CBA                     u4021:
  6668  003CBA  EF62  F01E         	goto	l3608
  6669  003CBE                     u4020:
  6670  003CBE  90D8               	bcf	status,0,c
  6671  003CC0  EF63  F01E         	goto	l409
  6672  003CC4                     l3608:
  6673  003CC4  80D8               	bsf	status,0,c
  6674  003CC6                     l409:
  6675  003CC6  0012               	return		;funcret
  6676  003CC8                     __end_of___fleq:
  6677                           	callstack 0
  6678                           
  6679 ;; *************** function ___fldiv *****************
  6680 ;; Defined at:
  6681 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcdiv.c"
  6682 ;; Parameters:    Size  Location     Type
  6683 ;;  b               4    0[COMRAM] unsigned char 
  6684 ;;  a               4    4[COMRAM] unsigned char 
  6685 ;; Auto vars:     Size  Location     Type
  6686 ;;  grs             4   19[COMRAM] unsigned long 
  6687 ;;  rem             4   12[COMRAM] unsigned long 
  6688 ;;  new_exp         2   17[COMRAM] short 
  6689 ;;  aexp            1   24[COMRAM] unsigned char 
  6690 ;;  bexp            1   23[COMRAM] unsigned char 
  6691 ;;  sign            1   16[COMRAM] unsigned char 
  6692 ;; Return value:  Size  Location     Type
  6693 ;;                  4    0[COMRAM] unsigned char 
  6694 ;; Registers used:
  6695 ;;		wreg, status,2, status,0
  6696 ;; Tracked objects:
  6697 ;;		On entry : 0/0
  6698 ;;		On exit  : 0/0
  6699 ;;		Unchanged: 0/0
  6700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6701 ;;      Params:         8       0       0       0       0       0       0
  6702 ;;      Locals:        13       0       0       0       0       0       0
  6703 ;;      Temps:          4       0       0       0       0       0       0
  6704 ;;      Totals:        25       0       0       0       0       0       0
  6705 ;;Total ram usage:       25 bytes
  6706 ;; Hardware stack levels used: 1
  6707 ;; This function calls:
  6708 ;;		Nothing
  6709 ;; This function is called by:
  6710 ;;		_efgtoa
  6711 ;; This function uses a non-reentrant model
  6712 ;;
  6713                           
  6714                           	psect	text22
  6715  0021E4                     __ptext22:
  6716                           	callstack 0
  6717  0021E4                     ___fldiv:
  6718                           	callstack 25
  6719  0021E4  5004               	movf	(___fldiv@b+3)^0,w,c
  6720  0021E6  0B80               	andlw	128
  6721  0021E8  6E11               	movwf	___fldiv@sign^0,c
  6722  0021EA  5004               	movf	(___fldiv@b+3)^0,w,c
  6723  0021EC  2404               	addwf	(___fldiv@b+3)^0,w,c
  6724  0021EE  6E18               	movwf	___fldiv@bexp^0,c
  6725  0021F0  AE03               	btfss	(___fldiv@b+2)^0,7,c
  6726  0021F2  EFFD  F010         	goto	u3461
  6727  0021F6  EFFF  F010         	goto	u3460
  6728  0021FA                     u3461:
  6729  0021FA  EF00  F011         	goto	l3248
  6730  0021FE                     u3460:
  6731  0021FE  8018               	bsf	___fldiv@bexp^0,0,c
  6732  002200                     l3248:
  6733  002200  5018               	movf	___fldiv@bexp^0,w,c
  6734  002202  B4D8               	btfsc	status,2,c
  6735  002204  EF06  F011         	goto	u3471
  6736  002208  EF08  F011         	goto	u3470
  6737  00220C                     u3471:
  6738  00220C  EF1D  F011         	goto	l3258
  6739  002210                     u3470:
  6740  002210  2818               	incf	___fldiv@bexp^0,w,c
  6741  002212  A4D8               	btfss	status,2,c
  6742  002214  EF0E  F011         	goto	u3481
  6743  002218  EF10  F011         	goto	u3480
  6744  00221C                     u3481:
  6745  00221C  EF18  F011         	goto	l3254
  6746  002220                     u3480:
  6747  002220  0E00               	movlw	0
  6748  002222  6E01               	movwf	___fldiv@b^0,c
  6749  002224  0E00               	movlw	0
  6750  002226  6E02               	movwf	(___fldiv@b+1)^0,c
  6751  002228  0E00               	movlw	0
  6752  00222A  6E03               	movwf	(___fldiv@b+2)^0,c
  6753  00222C  0E00               	movlw	0
  6754  00222E  6E04               	movwf	(___fldiv@b+3)^0,c
  6755  002230                     l3254:
  6756  002230  8E03               	bsf	(___fldiv@b+2)^0,7,c
  6757  002232  0E00               	movlw	0
  6758  002234  6E04               	movwf	(___fldiv@b+3)^0,c
  6759  002236  EF25  F011         	goto	l3260
  6760  00223A                     l3258:
  6761  00223A  0E00               	movlw	0
  6762  00223C  6E01               	movwf	___fldiv@b^0,c
  6763  00223E  0E00               	movlw	0
  6764  002240  6E02               	movwf	(___fldiv@b+1)^0,c
  6765  002242  0E00               	movlw	0
  6766  002244  6E03               	movwf	(___fldiv@b+2)^0,c
  6767  002246  0E00               	movlw	0
  6768  002248  6E04               	movwf	(___fldiv@b+3)^0,c
  6769  00224A                     l3260:
  6770  00224A  5008               	movf	(___fldiv@a+3)^0,w,c
  6771  00224C  0B80               	andlw	128
  6772  00224E  1A11               	xorwf	___fldiv@sign^0,f,c
  6773  002250  5008               	movf	(___fldiv@a+3)^0,w,c
  6774  002252  2408               	addwf	(___fldiv@a+3)^0,w,c
  6775  002254  6E19               	movwf	___fldiv@aexp^0,c
  6776  002256  AE07               	btfss	(___fldiv@a+2)^0,7,c
  6777  002258  EF30  F011         	goto	u3491
  6778  00225C  EF32  F011         	goto	u3490
  6779  002260                     u3491:
  6780  002260  EF33  F011         	goto	l3268
  6781  002264                     u3490:
  6782  002264  8019               	bsf	___fldiv@aexp^0,0,c
  6783  002266                     l3268:
  6784  002266  5019               	movf	___fldiv@aexp^0,w,c
  6785  002268  B4D8               	btfsc	status,2,c
  6786  00226A  EF39  F011         	goto	u3501
  6787  00226E  EF3B  F011         	goto	u3500
  6788  002272                     u3501:
  6789  002272  EF50  F011         	goto	l3278
  6790  002276                     u3500:
  6791  002276  2819               	incf	___fldiv@aexp^0,w,c
  6792  002278  A4D8               	btfss	status,2,c
  6793  00227A  EF41  F011         	goto	u3511
  6794  00227E  EF43  F011         	goto	u3510
  6795  002282                     u3511:
  6796  002282  EF4B  F011         	goto	l3274
  6797  002286                     u3510:
  6798  002286  0E00               	movlw	0
  6799  002288  6E05               	movwf	___fldiv@a^0,c
  6800  00228A  0E00               	movlw	0
  6801  00228C  6E06               	movwf	(___fldiv@a+1)^0,c
  6802  00228E  0E00               	movlw	0
  6803  002290  6E07               	movwf	(___fldiv@a+2)^0,c
  6804  002292  0E00               	movlw	0
  6805  002294  6E08               	movwf	(___fldiv@a+3)^0,c
  6806  002296                     l3274:
  6807  002296  8E07               	bsf	(___fldiv@a+2)^0,7,c
  6808  002298  0E00               	movlw	0
  6809  00229A  6E08               	movwf	(___fldiv@a+3)^0,c
  6810  00229C  EF58  F011         	goto	l3280
  6811  0022A0                     l3278:
  6812  0022A0  0E00               	movlw	0
  6813  0022A2  6E05               	movwf	___fldiv@a^0,c
  6814  0022A4  0E00               	movlw	0
  6815  0022A6  6E06               	movwf	(___fldiv@a+1)^0,c
  6816  0022A8  0E00               	movlw	0
  6817  0022AA  6E07               	movwf	(___fldiv@a+2)^0,c
  6818  0022AC  0E00               	movlw	0
  6819  0022AE  6E08               	movwf	(___fldiv@a+3)^0,c
  6820  0022B0                     l3280:
  6821  0022B0  5005               	movf	___fldiv@a^0,w,c
  6822  0022B2  1006               	iorwf	(___fldiv@a+1)^0,w,c
  6823  0022B4  1007               	iorwf	(___fldiv@a+2)^0,w,c
  6824  0022B6  1008               	iorwf	(___fldiv@a+3)^0,w,c
  6825  0022B8  A4D8               	btfss	status,2,c
  6826  0022BA  EF61  F011         	goto	u3521
  6827  0022BE  EF63  F011         	goto	u3520
  6828  0022C2                     u3521:
  6829  0022C2  EF7B  F011         	goto	l3292
  6830  0022C6                     u3520:
  6831  0022C6  0E00               	movlw	0
  6832  0022C8  6E01               	movwf	___fldiv@b^0,c
  6833  0022CA  0E00               	movlw	0
  6834  0022CC  6E02               	movwf	(___fldiv@b+1)^0,c
  6835  0022CE  0E00               	movlw	0
  6836  0022D0  6E03               	movwf	(___fldiv@b+2)^0,c
  6837  0022D2  0E00               	movlw	0
  6838  0022D4  6E04               	movwf	(___fldiv@b+3)^0,c
  6839  0022D6  0E80               	movlw	128
  6840  0022D8  1203               	iorwf	(___fldiv@b+2)^0,f,c
  6841  0022DA  0E7F               	movlw	127
  6842  0022DC  1204               	iorwf	(___fldiv@b+3)^0,f,c
  6843  0022DE                     l3286:
  6844  0022DE  5011               	movf	___fldiv@sign^0,w,c
  6845  0022E0  1204               	iorwf	(___fldiv@b+3)^0,f,c
  6846  0022E2  C001  F001         	movff	___fldiv@b,?___fldiv
  6847  0022E6  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  6848  0022EA  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  6849  0022EE  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  6850  0022F2  EFBE  F012         	goto	l732
  6851  0022F6                     l3292:
  6852  0022F6  5018               	movf	___fldiv@bexp^0,w,c
  6853  0022F8  A4D8               	btfss	status,2,c
  6854  0022FA  EF81  F011         	goto	u3531
  6855  0022FE  EF83  F011         	goto	u3530
  6856  002302                     u3531:
  6857  002302  EF8D  F011         	goto	l3300
  6858  002306                     u3530:
  6859  002306  0E00               	movlw	0
  6860  002308  6E01               	movwf	?___fldiv^0,c
  6861  00230A  0E00               	movlw	0
  6862  00230C  6E02               	movwf	(?___fldiv+1)^0,c
  6863  00230E  0E00               	movlw	0
  6864  002310  6E03               	movwf	(?___fldiv+2)^0,c
  6865  002312  0E00               	movlw	0
  6866  002314  6E04               	movwf	(?___fldiv+3)^0,c
  6867  002316  EFBE  F012         	goto	l732
  6868  00231A                     l3300:
  6869  00231A  5019               	movf	___fldiv@aexp^0,w,c
  6870  00231C  C018  F009         	movff	___fldiv@bexp,??___fldiv
  6871  002320  6A0A               	clrf	(??___fldiv+1)^0,c
  6872  002322  5E09               	subwf	??___fldiv^0,f,c
  6873  002324  0E00               	movlw	0
  6874  002326  5A0A               	subwfb	(??___fldiv+1)^0,f,c
  6875  002328  0E7F               	movlw	127
  6876  00232A  2409               	addwf	??___fldiv^0,w,c
  6877  00232C  6E12               	movwf	___fldiv@new_exp^0,c
  6878  00232E  0E00               	movlw	0
  6879  002330  200A               	addwfc	(??___fldiv+1)^0,w,c
  6880  002332  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  6881  002334  C001  F00D         	movff	___fldiv@b,___fldiv@rem
  6882  002338  C002  F00E         	movff	___fldiv@b+1,___fldiv@rem+1
  6883  00233C  C003  F00F         	movff	___fldiv@b+2,___fldiv@rem+2
  6884  002340  C004  F010         	movff	___fldiv@b+3,___fldiv@rem+3
  6885  002344  0E00               	movlw	0
  6886  002346  6E01               	movwf	___fldiv@b^0,c
  6887  002348  0E00               	movlw	0
  6888  00234A  6E02               	movwf	(___fldiv@b+1)^0,c
  6889  00234C  0E00               	movlw	0
  6890  00234E  6E03               	movwf	(___fldiv@b+2)^0,c
  6891  002350  0E00               	movlw	0
  6892  002352  6E04               	movwf	(___fldiv@b+3)^0,c
  6893  002354  0E00               	movlw	0
  6894  002356  6E14               	movwf	___fldiv@grs^0,c
  6895  002358  0E00               	movlw	0
  6896  00235A  6E15               	movwf	(___fldiv@grs+1)^0,c
  6897  00235C  0E00               	movlw	0
  6898  00235E  6E16               	movwf	(___fldiv@grs+2)^0,c
  6899  002360  0E00               	movlw	0
  6900  002362  6E17               	movwf	(___fldiv@grs+3)^0,c
  6901  002364  0E00               	movlw	0
  6902  002366  6E19               	movwf	___fldiv@aexp^0,c
  6903  002368  EFEE  F011         	goto	l734
  6904  00236C                     l3310:
  6905  00236C  5019               	movf	___fldiv@aexp^0,w,c
  6906  00236E  B4D8               	btfsc	status,2,c
  6907  002370  EFBC  F011         	goto	u3541
  6908  002374  EFBE  F011         	goto	u3540
  6909  002378                     u3541:
  6910  002378  EFD5  F011         	goto	l3318
  6911  00237C                     u3540:
  6912  00237C  90D8               	bcf	status,0,c
  6913  00237E  360D               	rlcf	___fldiv@rem^0,f,c
  6914  002380  360E               	rlcf	(___fldiv@rem+1)^0,f,c
  6915  002382  360F               	rlcf	(___fldiv@rem+2)^0,f,c
  6916  002384  3610               	rlcf	(___fldiv@rem+3)^0,f,c
  6917  002386  90D8               	bcf	status,0,c
  6918  002388  3601               	rlcf	___fldiv@b^0,f,c
  6919  00238A  3602               	rlcf	(___fldiv@b+1)^0,f,c
  6920  00238C  3603               	rlcf	(___fldiv@b+2)^0,f,c
  6921  00238E  3604               	rlcf	(___fldiv@b+3)^0,f,c
  6922  002390  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  6923  002392  EFCD  F011         	goto	u3551
  6924  002396  EFCF  F011         	goto	u3550
  6925  00239A                     u3551:
  6926  00239A  EFD0  F011         	goto	l737
  6927  00239E                     u3550:
  6928  00239E  8001               	bsf	___fldiv@b^0,0,c
  6929  0023A0                     l737:
  6930  0023A0  90D8               	bcf	status,0,c
  6931  0023A2  3614               	rlcf	___fldiv@grs^0,f,c
  6932  0023A4  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  6933  0023A6  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  6934  0023A8  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  6935  0023AA                     l3318:
  6936  0023AA  5005               	movf	___fldiv@a^0,w,c
  6937  0023AC  5C0D               	subwf	___fldiv@rem^0,w,c
  6938  0023AE  5006               	movf	(___fldiv@a+1)^0,w,c
  6939  0023B0  580E               	subwfb	(___fldiv@rem+1)^0,w,c
  6940  0023B2  5007               	movf	(___fldiv@a+2)^0,w,c
  6941  0023B4  580F               	subwfb	(___fldiv@rem+2)^0,w,c
  6942  0023B6  5008               	movf	(___fldiv@a+3)^0,w,c
  6943  0023B8  5810               	subwfb	(___fldiv@rem+3)^0,w,c
  6944  0023BA  A0D8               	btfss	status,0,c
  6945  0023BC  EFE2  F011         	goto	u3561
  6946  0023C0  EFE4  F011         	goto	u3560
  6947  0023C4                     u3561:
  6948  0023C4  EFED  F011         	goto	l3324
  6949  0023C8                     u3560:
  6950  0023C8  8C17               	bsf	(___fldiv@grs+3)^0,6,c
  6951  0023CA  5005               	movf	___fldiv@a^0,w,c
  6952  0023CC  5E0D               	subwf	___fldiv@rem^0,f,c
  6953  0023CE  5006               	movf	(___fldiv@a+1)^0,w,c
  6954  0023D0  5A0E               	subwfb	(___fldiv@rem+1)^0,f,c
  6955  0023D2  5007               	movf	(___fldiv@a+2)^0,w,c
  6956  0023D4  5A0F               	subwfb	(___fldiv@rem+2)^0,f,c
  6957  0023D6  5008               	movf	(___fldiv@a+3)^0,w,c
  6958  0023D8  5A10               	subwfb	(___fldiv@rem+3)^0,f,c
  6959  0023DA                     l3324:
  6960  0023DA  2A19               	incf	___fldiv@aexp^0,f,c
  6961  0023DC                     l734:
  6962  0023DC  0E19               	movlw	25
  6963  0023DE  6419               	cpfsgt	___fldiv@aexp^0,c
  6964  0023E0  EFF4  F011         	goto	u3571
  6965  0023E4  EFF6  F011         	goto	u3570
  6966  0023E8                     u3571:
  6967  0023E8  EFB6  F011         	goto	l3310
  6968  0023EC                     u3570:
  6969  0023EC  500D               	movf	___fldiv@rem^0,w,c
  6970  0023EE  100E               	iorwf	(___fldiv@rem+1)^0,w,c
  6971  0023F0  100F               	iorwf	(___fldiv@rem+2)^0,w,c
  6972  0023F2  1010               	iorwf	(___fldiv@rem+3)^0,w,c
  6973  0023F4  B4D8               	btfsc	status,2,c
  6974  0023F6  EFFF  F011         	goto	u3581
  6975  0023FA  EF01  F012         	goto	u3580
  6976  0023FE                     u3581:
  6977  0023FE  EF19  F012         	goto	l3336
  6978  002402                     u3580:
  6979  002402  8014               	bsf	___fldiv@grs^0,0,c
  6980  002404  EF19  F012         	goto	l3336
  6981  002408                     l3330:
  6982  002408  90D8               	bcf	status,0,c
  6983  00240A  3601               	rlcf	___fldiv@b^0,f,c
  6984  00240C  3602               	rlcf	(___fldiv@b+1)^0,f,c
  6985  00240E  3603               	rlcf	(___fldiv@b+2)^0,f,c
  6986  002410  3604               	rlcf	(___fldiv@b+3)^0,f,c
  6987  002412  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  6988  002414  EF0E  F012         	goto	u3591
  6989  002418  EF10  F012         	goto	u3590
  6990  00241C                     u3591:
  6991  00241C  EF11  F012         	goto	l743
  6992  002420                     u3590:
  6993  002420  8001               	bsf	___fldiv@b^0,0,c
  6994  002422                     l743:
  6995  002422  90D8               	bcf	status,0,c
  6996  002424  3614               	rlcf	___fldiv@grs^0,f,c
  6997  002426  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  6998  002428  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  6999  00242A  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  7000  00242C  0612               	decf	___fldiv@new_exp^0,f,c
  7001  00242E  A0D8               	btfss	status,0,c
  7002  002430  0613               	decf	(___fldiv@new_exp+1)^0,f,c
  7003  002432                     l3336:
  7004  002432  AE03               	btfss	(___fldiv@b+2)^0,7,c
  7005  002434  EF1E  F012         	goto	u3601
  7006  002438  EF20  F012         	goto	u3600
  7007  00243C                     u3601:
  7008  00243C  EF04  F012         	goto	l3330
  7009  002440                     u3600:
  7010  002440  0E00               	movlw	0
  7011  002442  6E19               	movwf	___fldiv@aexp^0,c
  7012  002444  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  7013  002446  EF27  F012         	goto	u3611
  7014  00244A  EF29  F012         	goto	u3610
  7015  00244E                     u3611:
  7016  00244E  EF4D  F012         	goto	l745
  7017  002452                     u3610:
  7018  002452  0EFF               	movlw	255
  7019  002454  1414               	andwf	___fldiv@grs^0,w,c
  7020  002456  6E09               	movwf	??___fldiv^0,c
  7021  002458  0EFF               	movlw	255
  7022  00245A  1415               	andwf	(___fldiv@grs+1)^0,w,c
  7023  00245C  6E0A               	movwf	(??___fldiv+1)^0,c
  7024  00245E  0EFF               	movlw	255
  7025  002460  1416               	andwf	(___fldiv@grs+2)^0,w,c
  7026  002462  6E0B               	movwf	(??___fldiv+2)^0,c
  7027  002464  0E7F               	movlw	127
  7028  002466  1417               	andwf	(___fldiv@grs+3)^0,w,c
  7029  002468  6E0C               	movwf	(??___fldiv+3)^0,c
  7030  00246A  5009               	movf	??___fldiv^0,w,c
  7031  00246C  100A               	iorwf	(??___fldiv+1)^0,w,c
  7032  00246E  100B               	iorwf	(??___fldiv+2)^0,w,c
  7033  002470  100C               	iorwf	(??___fldiv+3)^0,w,c
  7034  002472  B4D8               	btfsc	status,2,c
  7035  002474  EF3E  F012         	goto	u3621
  7036  002478  EF40  F012         	goto	u3620
  7037  00247C                     u3621:
  7038  00247C  EF44  F012         	goto	l746
  7039  002480                     u3620:
  7040  002480                     l3344:
  7041  002480  0E01               	movlw	1
  7042  002482  6E19               	movwf	___fldiv@aexp^0,c
  7043  002484  EF4D  F012         	goto	l745
  7044  002488                     l746:
  7045  002488  A001               	btfss	___fldiv@b^0,0,c
  7046  00248A  EF49  F012         	goto	u3631
  7047  00248E  EF4B  F012         	goto	u3630
  7048  002492                     u3631:
  7049  002492  EF4D  F012         	goto	l745
  7050  002496                     u3630:
  7051  002496  EF40  F012         	goto	l3344
  7052  00249A                     l745:
  7053  00249A  5019               	movf	___fldiv@aexp^0,w,c
  7054  00249C  B4D8               	btfsc	status,2,c
  7055  00249E  EF53  F012         	goto	u3641
  7056  0024A2  EF55  F012         	goto	u3640
  7057  0024A6                     u3641:
  7058  0024A6  EF79  F012         	goto	l3356
  7059  0024AA                     u3640:
  7060  0024AA  0E01               	movlw	1
  7061  0024AC  2601               	addwf	___fldiv@b^0,f,c
  7062  0024AE  0E00               	movlw	0
  7063  0024B0  2202               	addwfc	(___fldiv@b+1)^0,f,c
  7064  0024B2  2203               	addwfc	(___fldiv@b+2)^0,f,c
  7065  0024B4  2204               	addwfc	(___fldiv@b+3)^0,f,c
  7066  0024B6  A004               	btfss	(___fldiv@b+3)^0,0,c
  7067  0024B8  EF60  F012         	goto	u3651
  7068  0024BC  EF62  F012         	goto	u3650
  7069  0024C0                     u3651:
  7070  0024C0  EF79  F012         	goto	l3356
  7071  0024C4                     u3650:
  7072  0024C4  C001  F009         	movff	___fldiv@b,??___fldiv
  7073  0024C8  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
  7074  0024CC  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
  7075  0024D0  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
  7076  0024D4  340C               	rlcf	(??___fldiv+3)^0,w,c
  7077  0024D6  320C               	rrcf	(??___fldiv+3)^0,f,c
  7078  0024D8  320B               	rrcf	(??___fldiv+2)^0,f,c
  7079  0024DA  320A               	rrcf	(??___fldiv+1)^0,f,c
  7080  0024DC  3209               	rrcf	??___fldiv^0,f,c
  7081  0024DE  C009  F001         	movff	??___fldiv,___fldiv@b
  7082  0024E2  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
  7083  0024E6  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
  7084  0024EA  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
  7085  0024EE  4A12               	infsnz	___fldiv@new_exp^0,f,c
  7086  0024F0  2A13               	incf	(___fldiv@new_exp+1)^0,f,c
  7087  0024F2                     l3356:
  7088  0024F2  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7089  0024F4  EF84  F012         	goto	u3661
  7090  0024F8  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  7091  0024FA  E108               	bnz	u3660
  7092  0024FC  2812               	incf	___fldiv@new_exp^0,w,c
  7093  0024FE  A0D8               	btfss	status,0,c
  7094  002500  EF84  F012         	goto	u3661
  7095  002504  EF86  F012         	goto	u3660
  7096  002508                     u3661:
  7097  002508  EF91  F012         	goto	l3360
  7098  00250C                     u3660:
  7099  00250C  0E00               	movlw	0
  7100  00250E  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  7101  002510  6812               	setf	___fldiv@new_exp^0,c
  7102  002512  0E00               	movlw	0
  7103  002514  6E01               	movwf	___fldiv@b^0,c
  7104  002516  0E00               	movlw	0
  7105  002518  6E02               	movwf	(___fldiv@b+1)^0,c
  7106  00251A  0E00               	movlw	0
  7107  00251C  6E03               	movwf	(___fldiv@b+2)^0,c
  7108  00251E  0E00               	movlw	0
  7109  002520  6E04               	movwf	(___fldiv@b+3)^0,c
  7110  002522                     l3360:
  7111  002522  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7112  002524  EF9E  F012         	goto	u3670
  7113  002528  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  7114  00252A  E106               	bnz	u3671
  7115  00252C  0412               	decf	___fldiv@new_exp^0,w,c
  7116  00252E  B0D8               	btfsc	status,0,c
  7117  002530  EF9C  F012         	goto	u3671
  7118  002534  EF9E  F012         	goto	u3670
  7119  002538                     u3671:
  7120  002538  EFAC  F012         	goto	l3364
  7121  00253C                     u3670:
  7122  00253C  0E00               	movlw	0
  7123  00253E  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  7124  002540  0E00               	movlw	0
  7125  002542  6E12               	movwf	___fldiv@new_exp^0,c
  7126  002544  0E00               	movlw	0
  7127  002546  6E01               	movwf	___fldiv@b^0,c
  7128  002548  0E00               	movlw	0
  7129  00254A  6E02               	movwf	(___fldiv@b+1)^0,c
  7130  00254C  0E00               	movlw	0
  7131  00254E  6E03               	movwf	(___fldiv@b+2)^0,c
  7132  002550  0E00               	movlw	0
  7133  002552  6E04               	movwf	(___fldiv@b+3)^0,c
  7134  002554  0E00               	movlw	0
  7135  002556  6E11               	movwf	___fldiv@sign^0,c
  7136  002558                     l3364:
  7137  002558  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
  7138  00255C  A018               	btfss	___fldiv@bexp^0,0,c
  7139  00255E  EFB3  F012         	goto	u3681
  7140  002562  EFB5  F012         	goto	u3680
  7141  002566                     u3681:
  7142  002566  EFB8  F012         	goto	l3370
  7143  00256A                     u3680:
  7144  00256A  8E03               	bsf	(___fldiv@b+2)^0,7,c
  7145  00256C  EFB9  F012         	goto	l3372
  7146  002570                     l3370:
  7147  002570  9E03               	bcf	(___fldiv@b+2)^0,7,c
  7148  002572                     l3372:
  7149  002572  90D8               	bcf	status,0,c
  7150  002574  3018               	rrcf	___fldiv@bexp^0,w,c
  7151  002576  6E04               	movwf	(___fldiv@b+3)^0,c
  7152  002578  EF6F  F011         	goto	l3286
  7153  00257C                     l732:
  7154  00257C  0012               	return		;funcret
  7155  00257E                     __end_of___fldiv:
  7156                           	callstack 0
  7157                           
  7158 ;; *************** function ___awmod *****************
  7159 ;; Defined at:
  7160 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awmod.c"
  7161 ;; Parameters:    Size  Location     Type
  7162 ;;  dividend        2    0[COMRAM] int 
  7163 ;;  divisor         2    2[COMRAM] int 
  7164 ;; Auto vars:     Size  Location     Type
  7165 ;;  sign            1    5[COMRAM] unsigned char 
  7166 ;;  counter         1    4[COMRAM] unsigned char 
  7167 ;; Return value:  Size  Location     Type
  7168 ;;                  2    0[COMRAM] int 
  7169 ;; Registers used:
  7170 ;;		wreg, status,2, status,0
  7171 ;; Tracked objects:
  7172 ;;		On entry : 0/0
  7173 ;;		On exit  : 0/0
  7174 ;;		Unchanged: 0/0
  7175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7176 ;;      Params:         4       0       0       0       0       0       0
  7177 ;;      Locals:         2       0       0       0       0       0       0
  7178 ;;      Temps:          0       0       0       0       0       0       0
  7179 ;;      Totals:         6       0       0       0       0       0       0
  7180 ;;Total ram usage:        6 bytes
  7181 ;; Hardware stack levels used: 1
  7182 ;; This function calls:
  7183 ;;		Nothing
  7184 ;; This function is called by:
  7185 ;;		_efgtoa
  7186 ;; This function uses a non-reentrant model
  7187 ;;
  7188                           
  7189                           	psect	text23
  7190  003B6E                     __ptext23:
  7191                           	callstack 0
  7192  003B6E                     ___awmod:
  7193                           	callstack 25
  7194  003B6E  0E00               	movlw	0
  7195  003B70  6E06               	movwf	___awmod@sign^0,c
  7196  003B72  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  7197  003B74  EFC0  F01D         	goto	u3940
  7198  003B78  EFBE  F01D         	goto	u3941
  7199  003B7C                     u3941:
  7200  003B7C  EFC6  F01D         	goto	l3568
  7201  003B80                     u3940:
  7202  003B80  6C01               	negf	___awmod@dividend^0,c
  7203  003B82  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7204  003B84  B0D8               	btfsc	status,0,c
  7205  003B86  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7206  003B88  0E01               	movlw	1
  7207  003B8A  6E06               	movwf	___awmod@sign^0,c
  7208  003B8C                     l3568:
  7209  003B8C  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  7210  003B8E  EFCD  F01D         	goto	u3950
  7211  003B92  EFCB  F01D         	goto	u3951
  7212  003B96                     u3951:
  7213  003B96  EFD1  F01D         	goto	l3572
  7214  003B9A                     u3950:
  7215  003B9A  6C03               	negf	___awmod@divisor^0,c
  7216  003B9C  1E04               	comf	(___awmod@divisor+1)^0,f,c
  7217  003B9E  B0D8               	btfsc	status,0,c
  7218  003BA0  2A04               	incf	(___awmod@divisor+1)^0,f,c
  7219  003BA2                     l3572:
  7220  003BA2  5003               	movf	___awmod@divisor^0,w,c
  7221  003BA4  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  7222  003BA6  B4D8               	btfsc	status,2,c
  7223  003BA8  EFD8  F01D         	goto	u3961
  7224  003BAC  EFDA  F01D         	goto	u3960
  7225  003BB0                     u3961:
  7226  003BB0  EFFE  F01D         	goto	l3588
  7227  003BB4                     u3960:
  7228  003BB4  0E01               	movlw	1
  7229  003BB6  6E05               	movwf	___awmod@counter^0,c
  7230  003BB8  EFE2  F01D         	goto	l3578
  7231  003BBC                     l3576:
  7232  003BBC  90D8               	bcf	status,0,c
  7233  003BBE  3603               	rlcf	___awmod@divisor^0,f,c
  7234  003BC0  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  7235  003BC2  2A05               	incf	___awmod@counter^0,f,c
  7236  003BC4                     l3578:
  7237  003BC4  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  7238  003BC6  EFE7  F01D         	goto	u3971
  7239  003BCA  EFE9  F01D         	goto	u3970
  7240  003BCE                     u3971:
  7241  003BCE  EFDE  F01D         	goto	l3576
  7242  003BD2                     u3970:
  7243  003BD2                     l3580:
  7244  003BD2  5003               	movf	___awmod@divisor^0,w,c
  7245  003BD4  5C01               	subwf	___awmod@dividend^0,w,c
  7246  003BD6  5004               	movf	(___awmod@divisor+1)^0,w,c
  7247  003BD8  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  7248  003BDA  A0D8               	btfss	status,0,c
  7249  003BDC  EFF2  F01D         	goto	u3981
  7250  003BE0  EFF4  F01D         	goto	u3980
  7251  003BE4                     u3981:
  7252  003BE4  EFF8  F01D         	goto	l3584
  7253  003BE8                     u3980:
  7254  003BE8  5003               	movf	___awmod@divisor^0,w,c
  7255  003BEA  5E01               	subwf	___awmod@dividend^0,f,c
  7256  003BEC  5004               	movf	(___awmod@divisor+1)^0,w,c
  7257  003BEE  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  7258  003BF0                     l3584:
  7259  003BF0  90D8               	bcf	status,0,c
  7260  003BF2  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  7261  003BF4  3203               	rrcf	___awmod@divisor^0,f,c
  7262  003BF6  2E05               	decfsz	___awmod@counter^0,f,c
  7263  003BF8  EFE9  F01D         	goto	l3580
  7264  003BFC                     l3588:
  7265  003BFC  5006               	movf	___awmod@sign^0,w,c
  7266  003BFE  B4D8               	btfsc	status,2,c
  7267  003C00  EF04  F01E         	goto	u3991
  7268  003C04  EF06  F01E         	goto	u3990
  7269  003C08                     u3991:
  7270  003C08  EF0A  F01E         	goto	l3592
  7271  003C0C                     u3990:
  7272  003C0C  6C01               	negf	___awmod@dividend^0,c
  7273  003C0E  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7274  003C10  B0D8               	btfsc	status,0,c
  7275  003C12  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7276  003C14                     l3592:
  7277  003C14  C001  F001         	movff	___awmod@dividend,?___awmod
  7278  003C18  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  7279  003C1C  0012               	return		;funcret
  7280  003C1E                     __end_of___awmod:
  7281                           	callstack 0
  7282                           
  7283 ;; *************** function ___awdiv *****************
  7284 ;; Defined at:
  7285 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
  7286 ;; Parameters:    Size  Location     Type
  7287 ;;  dividend        2    0[COMRAM] int 
  7288 ;;  divisor         2    2[COMRAM] int 
  7289 ;; Auto vars:     Size  Location     Type
  7290 ;;  quotient        2    6[COMRAM] int 
  7291 ;;  sign            1    5[COMRAM] unsigned char 
  7292 ;;  counter         1    4[COMRAM] unsigned char 
  7293 ;; Return value:  Size  Location     Type
  7294 ;;                  2    0[COMRAM] int 
  7295 ;; Registers used:
  7296 ;;		wreg, status,2, status,0
  7297 ;; Tracked objects:
  7298 ;;		On entry : 0/0
  7299 ;;		On exit  : 0/0
  7300 ;;		Unchanged: 0/0
  7301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7302 ;;      Params:         4       0       0       0       0       0       0
  7303 ;;      Locals:         4       0       0       0       0       0       0
  7304 ;;      Temps:          0       0       0       0       0       0       0
  7305 ;;      Totals:         8       0       0       0       0       0       0
  7306 ;;Total ram usage:        8 bytes
  7307 ;; Hardware stack levels used: 1
  7308 ;; This function calls:
  7309 ;;		Nothing
  7310 ;; This function is called by:
  7311 ;;		_efgtoa
  7312 ;; This function uses a non-reentrant model
  7313 ;;
  7314                           
  7315                           	psect	text24
  7316  0039E8                     __ptext24:
  7317                           	callstack 0
  7318  0039E8                     ___awdiv:
  7319                           	callstack 25
  7320  0039E8  0E00               	movlw	0
  7321  0039EA  6E06               	movwf	___awdiv@sign^0,c
  7322  0039EC  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  7323  0039EE  EFFD  F01C         	goto	u3880
  7324  0039F2  EFFB  F01C         	goto	u3881
  7325  0039F6                     u3881:
  7326  0039F6  EF03  F01D         	goto	l3524
  7327  0039FA                     u3880:
  7328  0039FA  6C03               	negf	___awdiv@divisor^0,c
  7329  0039FC  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  7330  0039FE  B0D8               	btfsc	status,0,c
  7331  003A00  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  7332  003A02  0E01               	movlw	1
  7333  003A04  6E06               	movwf	___awdiv@sign^0,c
  7334  003A06                     l3524:
  7335  003A06  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  7336  003A08  EF0A  F01D         	goto	u3890
  7337  003A0C  EF08  F01D         	goto	u3891
  7338  003A10                     u3891:
  7339  003A10  EF10  F01D         	goto	l3530
  7340  003A14                     u3890:
  7341  003A14  6C01               	negf	___awdiv@dividend^0,c
  7342  003A16  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  7343  003A18  B0D8               	btfsc	status,0,c
  7344  003A1A  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  7345  003A1C  0E01               	movlw	1
  7346  003A1E  1A06               	xorwf	___awdiv@sign^0,f,c
  7347  003A20                     l3530:
  7348  003A20  0E00               	movlw	0
  7349  003A22  6E08               	movwf	(___awdiv@quotient+1)^0,c
  7350  003A24  0E00               	movlw	0
  7351  003A26  6E07               	movwf	___awdiv@quotient^0,c
  7352  003A28  5003               	movf	___awdiv@divisor^0,w,c
  7353  003A2A  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  7354  003A2C  B4D8               	btfsc	status,2,c
  7355  003A2E  EF1B  F01D         	goto	u3901
  7356  003A32  EF1D  F01D         	goto	u3900
  7357  003A36                     u3901:
  7358  003A36  EF45  F01D         	goto	l3552
  7359  003A3A                     u3900:
  7360  003A3A  0E01               	movlw	1
  7361  003A3C  6E05               	movwf	___awdiv@counter^0,c
  7362  003A3E  EF25  F01D         	goto	l3538
  7363  003A42                     l3536:
  7364  003A42  90D8               	bcf	status,0,c
  7365  003A44  3603               	rlcf	___awdiv@divisor^0,f,c
  7366  003A46  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  7367  003A48  2A05               	incf	___awdiv@counter^0,f,c
  7368  003A4A                     l3538:
  7369  003A4A  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  7370  003A4C  EF2A  F01D         	goto	u3911
  7371  003A50  EF2C  F01D         	goto	u3910
  7372  003A54                     u3911:
  7373  003A54  EF21  F01D         	goto	l3536
  7374  003A58                     u3910:
  7375  003A58                     l3540:
  7376  003A58  90D8               	bcf	status,0,c
  7377  003A5A  3607               	rlcf	___awdiv@quotient^0,f,c
  7378  003A5C  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  7379  003A5E  5003               	movf	___awdiv@divisor^0,w,c
  7380  003A60  5C01               	subwf	___awdiv@dividend^0,w,c
  7381  003A62  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7382  003A64  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  7383  003A66  A0D8               	btfss	status,0,c
  7384  003A68  EF38  F01D         	goto	u3921
  7385  003A6C  EF3A  F01D         	goto	u3920
  7386  003A70                     u3921:
  7387  003A70  EF3F  F01D         	goto	l3548
  7388  003A74                     u3920:
  7389  003A74  5003               	movf	___awdiv@divisor^0,w,c
  7390  003A76  5E01               	subwf	___awdiv@dividend^0,f,c
  7391  003A78  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7392  003A7A  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  7393  003A7C  8007               	bsf	___awdiv@quotient^0,0,c
  7394  003A7E                     l3548:
  7395  003A7E  90D8               	bcf	status,0,c
  7396  003A80  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  7397  003A82  3203               	rrcf	___awdiv@divisor^0,f,c
  7398  003A84  2E05               	decfsz	___awdiv@counter^0,f,c
  7399  003A86  EF2C  F01D         	goto	l3540
  7400  003A8A                     l3552:
  7401  003A8A  5006               	movf	___awdiv@sign^0,w,c
  7402  003A8C  B4D8               	btfsc	status,2,c
  7403  003A8E  EF4B  F01D         	goto	u3931
  7404  003A92  EF4D  F01D         	goto	u3930
  7405  003A96                     u3931:
  7406  003A96  EF51  F01D         	goto	l3556
  7407  003A9A                     u3930:
  7408  003A9A  6C07               	negf	___awdiv@quotient^0,c
  7409  003A9C  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  7410  003A9E  B0D8               	btfsc	status,0,c
  7411  003AA0  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  7412  003AA2                     l3556:
  7413  003AA2  C007  F001         	movff	___awdiv@quotient,?___awdiv
  7414  003AA6  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  7415  003AAA  0012               	return		;funcret
  7416  003AAC                     __end_of___awdiv:
  7417                           	callstack 0
  7418                           
  7419 ;; *************** function _dtoa *****************
  7420 ;; Defined at:
  7421 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  7422 ;; Parameters:    Size  Location     Type
  7423 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  7424 ;;		 -> sprintf@f(11), 
  7425 ;;  d               8   29[COMRAM] long long 
  7426 ;; Auto vars:     Size  Location     Type
  7427 ;;  n               8   53[COMRAM] long long 
  7428 ;;  i               2   61[COMRAM] int 
  7429 ;;  s               2   51[COMRAM] int 
  7430 ;;  w               2   49[COMRAM] int 
  7431 ;;  p               2   47[COMRAM] int 
  7432 ;; Return value:  Size  Location     Type
  7433 ;;                  2   27[COMRAM] int 
  7434 ;; Registers used:
  7435 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7436 ;; Tracked objects:
  7437 ;;		On entry : 0/0
  7438 ;;		On exit  : 0/0
  7439 ;;		Unchanged: 0/0
  7440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7441 ;;      Params:        10       0       0       0       0       0       0
  7442 ;;      Locals:        18       0       0       0       0       0       0
  7443 ;;      Temps:          8       0       0       0       0       0       0
  7444 ;;      Totals:        36       0       0       0       0       0       0
  7445 ;;Total ram usage:       36 bytes
  7446 ;; Hardware stack levels used: 1
  7447 ;; Hardware stack levels required when called: 4
  7448 ;; This function calls:
  7449 ;;		___aodiv
  7450 ;;		___aomod
  7451 ;;		_abs
  7452 ;;		_pad
  7453 ;; This function is called by:
  7454 ;;		_vfpfcnvrt
  7455 ;; This function uses a non-reentrant model
  7456 ;;
  7457                           
  7458                           	psect	text25
  7459  00286A                     __ptext25:
  7460                           	callstack 0
  7461  00286A                     _dtoa:
  7462                           	callstack 22
  7463  00286A                     
  7464                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  7465  00286A  C01E  F036         	movff	dtoa@d,dtoa@n
  7466  00286E  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  7467  002872  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  7468  002876  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  7469  00287A  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  7470  00287E  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  7471  002882  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  7472  002886  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  7473  00288A                     
  7474                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  7475  00288A  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  7476  00288C  EF4A  F014         	goto	u4461
  7477  002890  EF4D  F014         	goto	u4460
  7478  002894                     u4461:
  7479  002894  0E01               	movlw	1
  7480  002896  EF4E  F014         	goto	u4470
  7481  00289A                     u4460:
  7482  00289A  0E00               	movlw	0
  7483  00289C                     u4470:
  7484  00289C  6E34               	movwf	dtoa@s^0,c
  7485  00289E  6A35               	clrf	(dtoa@s+1)^0,c
  7486                           
  7487                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  7488  0028A0  5034               	movf	dtoa@s^0,w,c
  7489  0028A2  1035               	iorwf	(dtoa@s+1)^0,w,c
  7490  0028A4  B4D8               	btfsc	status,2,c
  7491  0028A6  EF57  F014         	goto	u4481
  7492  0028AA  EF59  F014         	goto	u4480
  7493  0028AE                     u4481:
  7494  0028AE  EF69  F014         	goto	l3810
  7495  0028B2                     u4480:
  7496  0028B2                     
  7497                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  7498  0028B2  1E3D               	comf	(dtoa@n+7)^0,f,c
  7499  0028B4  1E3C               	comf	(dtoa@n+6)^0,f,c
  7500  0028B6  1E3B               	comf	(dtoa@n+5)^0,f,c
  7501  0028B8  1E3A               	comf	(dtoa@n+4)^0,f,c
  7502  0028BA  1E39               	comf	(dtoa@n+3)^0,f,c
  7503  0028BC  1E38               	comf	(dtoa@n+2)^0,f,c
  7504  0028BE  1E37               	comf	(dtoa@n+1)^0,f,c
  7505  0028C0  6C36               	negf	dtoa@n^0,c
  7506  0028C2  0E00               	movlw	0
  7507  0028C4  2237               	addwfc	(dtoa@n+1)^0,f,c
  7508  0028C6  2238               	addwfc	(dtoa@n+2)^0,f,c
  7509  0028C8  2239               	addwfc	(dtoa@n+3)^0,f,c
  7510  0028CA  223A               	addwfc	(dtoa@n+4)^0,f,c
  7511  0028CC  223B               	addwfc	(dtoa@n+5)^0,f,c
  7512  0028CE  223C               	addwfc	(dtoa@n+6)^0,f,c
  7513  0028D0  223D               	addwfc	(dtoa@n+7)^0,f,c
  7514  0028D2                     l3810:
  7515                           
  7516                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  7517  0028D2  0100               	movlb	0	; () banked
  7518  0028D4  BF91               	btfsc	(_prec+1)& (0+255),7,b
  7519  0028D6  EF6F  F014         	goto	u4491
  7520  0028DA  EF71  F014         	goto	u4490
  7521  0028DE                     u4491:
  7522  0028DE  EF72  F014         	goto	l3814
  7523  0028E2                     u4490:
  7524  0028E2                     
  7525                           ; BSR set to: 0
  7526                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  7527  0028E2  927E               	bcf	_flags^0,1,c
  7528  0028E4                     l3814:
  7529                           
  7530                           ; BSR set to: 0
  7531                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  7532  0028E4  BF91               	btfsc	(_prec+1)& (0+255),7,b
  7533  0028E6  EF7F  F014         	goto	u4500
  7534  0028EA  5191               	movf	(_prec+1)& (0+255),w,b
  7535  0028EC  E106               	bnz	u4501
  7536  0028EE  0590               	decf	_prec& (0+255),w,b
  7537  0028F0  B0D8               	btfsc	status,0,c
  7538  0028F2  EF7D  F014         	goto	u4501
  7539  0028F6  EF7F  F014         	goto	u4500
  7540  0028FA                     u4501:
  7541  0028FA  EF85  F014         	goto	l882
  7542  0028FE                     u4500:
  7543  0028FE                     
  7544                           ; BSR set to: 0
  7545  0028FE  0E00               	movlw	0
  7546  002900  6E31               	movwf	(dtoa@p+1)^0,c
  7547  002902  0E01               	movlw	1
  7548  002904  6E30               	movwf	dtoa@p^0,c
  7549  002906  EF89  F014         	goto	l884
  7550  00290A                     l882:
  7551                           
  7552                           ; BSR set to: 0
  7553  00290A  C090  F030         	movff	_prec,dtoa@p
  7554  00290E  C091  F031         	movff	_prec+1,dtoa@p+1
  7555  002912                     l884:
  7556                           
  7557                           ; BSR set to: 0
  7558                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  7559  002912  C08E  F032         	movff	_width,dtoa@w
  7560  002916  C08F  F033         	movff	_width+1,dtoa@w+1
  7561  00291A                     
  7562                           ; BSR set to: 0
  7563                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  7564  00291A  5034               	movf	dtoa@s^0,w,c
  7565  00291C  1035               	iorwf	(dtoa@s+1)^0,w,c
  7566  00291E  A4D8               	btfss	status,2,c
  7567  002920  EF94  F014         	goto	u4511
  7568  002924  EF96  F014         	goto	u4510
  7569  002928                     u4511:
  7570  002928  EF9D  F014         	goto	l3822
  7571  00292C                     u4510:
  7572  00292C                     
  7573                           ; BSR set to: 0
  7574  00292C  A47E               	btfss	_flags^0,2,c
  7575  00292E  EF9B  F014         	goto	u4521
  7576  002932  EF9D  F014         	goto	u4520
  7577  002936                     u4521:
  7578  002936  EFA0  F014         	goto	l3824
  7579  00293A                     u4520:
  7580  00293A                     l3822:
  7581                           
  7582                           ; BSR set to: 0
  7583                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 306:         --w;
  7584  00293A  0632               	decf	dtoa@w^0,f,c
  7585  00293C  A0D8               	btfss	status,0,c
  7586  00293E  0633               	decf	(dtoa@w+1)^0,f,c
  7587  002940                     l3824:
  7588                           
  7589                           ; BSR set to: 0
  7590                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  7591  002940  0E00               	movlw	0
  7592  002942  6E3F               	movwf	(dtoa@i+1)^0,c
  7593  002944  0E4F               	movlw	79
  7594  002946  6E3E               	movwf	dtoa@i^0,c
  7595  002948                     
  7596                           ; BSR set to: 0
  7597                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  7598  002948  0E00               	movlw	0
  7599  00294A  0101               	movlb	1	; () banked
  7600  00294C  6F4F               	movwf	(_dbuf+79)& (0+255),b
  7601                           
  7602                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7603  00294E  EF25  F015         	goto	l3838
  7604  002952                     l3828:
  7605                           
  7606                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 313:         --i;
  7607  002952  063E               	decf	dtoa@i^0,f,c
  7608  002954  A0D8               	btfss	status,0,c
  7609  002956  063F               	decf	(dtoa@i+1)^0,f,c
  7610  002958                     
  7611                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  7612  002958  0E00               	movlw	low _dbuf
  7613  00295A  243E               	addwf	dtoa@i^0,w,c
  7614  00295C  6ED9               	movwf	fsr2l,c
  7615  00295E  0E01               	movlw	high _dbuf
  7616  002960  203F               	addwfc	(dtoa@i+1)^0,w,c
  7617  002962  6EDA               	movwf	fsr2h,c
  7618  002964  C036  F001         	movff	dtoa@n,___aomod@dividend
  7619  002968  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  7620  00296C  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  7621  002970  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  7622  002974  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  7623  002978  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  7624  00297C  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  7625  002980  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  7626  002984  0E0A               	movlw	10
  7627  002986  6E09               	movwf	___aomod@divisor^0,c
  7628  002988  0E00               	movlw	0
  7629  00298A  6E0A               	movwf	(___aomod@divisor+1)^0,c
  7630  00298C  0E00               	movlw	0
  7631  00298E  6E0B               	movwf	(___aomod@divisor+2)^0,c
  7632  002990  0E00               	movlw	0
  7633  002992  6E0C               	movwf	(___aomod@divisor+3)^0,c
  7634  002994  0E00               	movlw	0
  7635  002996  6E0D               	movwf	(___aomod@divisor+4)^0,c
  7636  002998  0E00               	movlw	0
  7637  00299A  6E0E               	movwf	(___aomod@divisor+5)^0,c
  7638  00299C  0E00               	movlw	0
  7639  00299E  6E0F               	movwf	(___aomod@divisor+6)^0,c
  7640  0029A0  0E00               	movlw	0
  7641  0029A2  6E10               	movwf	(___aomod@divisor+7)^0,c
  7642  0029A4  EC4C  F018         	call	___aomod	;wreg free
  7643  0029A8  C001  F026         	movff	?___aomod,??_dtoa
  7644  0029AC  C002  F027         	movff	?___aomod+1,??_dtoa+1
  7645  0029B0  C003  F028         	movff	?___aomod+2,??_dtoa+2
  7646  0029B4  C004  F029         	movff	?___aomod+3,??_dtoa+3
  7647  0029B8  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  7648  0029BC  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  7649  0029C0  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  7650  0029C4  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  7651  0029C8  C026  F013         	movff	??_dtoa,abs@a
  7652  0029CC  C028  F014         	movff	??_dtoa+2,abs@a+1
  7653  0029D0  EC9C  F020         	call	_abs	;wreg free
  7654  0029D4  5013               	movf	?_abs^0,w,c
  7655  0029D6  0F30               	addlw	48
  7656  0029D8  6EDF               	movwf	indf2,c
  7657  0029DA                     
  7658                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 315:         --p;
  7659  0029DA  0630               	decf	dtoa@p^0,f,c
  7660  0029DC  A0D8               	btfss	status,0,c
  7661  0029DE  0631               	decf	(dtoa@p+1)^0,f,c
  7662  0029E0                     
  7663                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 316:         --w;
  7664  0029E0  0632               	decf	dtoa@w^0,f,c
  7665  0029E2  A0D8               	btfss	status,0,c
  7666  0029E4  0633               	decf	(dtoa@w+1)^0,f,c
  7667  0029E6                     
  7668                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  7669  0029E6  C036  F001         	movff	dtoa@n,___aodiv@dividend
  7670  0029EA  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  7671  0029EE  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  7672  0029F2  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  7673  0029F6  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  7674  0029FA  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  7675  0029FE  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  7676  002A02  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  7677  002A06  0E0A               	movlw	10
  7678  002A08  6E09               	movwf	___aodiv@divisor^0,c
  7679  002A0A  0E00               	movlw	0
  7680  002A0C  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  7681  002A0E  0E00               	movlw	0
  7682  002A10  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  7683  002A12  0E00               	movlw	0
  7684  002A14  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  7685  002A16  0E00               	movlw	0
  7686  002A18  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  7687  002A1A  0E00               	movlw	0
  7688  002A1C  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  7689  002A1E  0E00               	movlw	0
  7690  002A20  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  7691  002A22  0E00               	movlw	0
  7692  002A24  6E10               	movwf	(___aodiv@divisor+7)^0,c
  7693  002A26  EC88  F017         	call	___aodiv	;wreg free
  7694  002A2A  C001  F036         	movff	?___aodiv,dtoa@n
  7695  002A2E  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  7696  002A32  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  7697  002A36  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  7698  002A3A  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  7699  002A3E  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  7700  002A42  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  7701  002A46  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  7702  002A4A                     l3838:
  7703                           
  7704                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7705  002A4A  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  7706  002A4C  EF30  F015         	goto	u4531
  7707  002A50  503F               	movf	(dtoa@i+1)^0,w,c
  7708  002A52  E108               	bnz	u4530
  7709  002A54  043E               	decf	dtoa@i^0,w,c
  7710  002A56  A0D8               	btfss	status,0,c
  7711  002A58  EF30  F015         	goto	u4531
  7712  002A5C  EF32  F015         	goto	u4530
  7713  002A60                     u4531:
  7714  002A60  EF62  F015         	goto	l3848
  7715  002A64                     u4530:
  7716  002A64  5036               	movf	dtoa@n^0,w,c
  7717  002A66  1037               	iorwf	(dtoa@n+1)^0,w,c
  7718  002A68  1038               	iorwf	(dtoa@n+2)^0,w,c
  7719  002A6A  1039               	iorwf	(dtoa@n+3)^0,w,c
  7720  002A6C  103A               	iorwf	(dtoa@n+4)^0,w,c
  7721  002A6E  103B               	iorwf	(dtoa@n+5)^0,w,c
  7722  002A70  103C               	iorwf	(dtoa@n+6)^0,w,c
  7723  002A72  103D               	iorwf	(dtoa@n+7)^0,w,c
  7724  002A74  A4D8               	btfss	status,2,c
  7725  002A76  EF3F  F015         	goto	u4541
  7726  002A7A  EF41  F015         	goto	u4540
  7727  002A7E                     u4541:
  7728  002A7E  EFA9  F014         	goto	l3828
  7729  002A82                     u4540:
  7730  002A82  BE31               	btfsc	(dtoa@p+1)^0,7,c
  7731  002A84  EF4E  F015         	goto	u4550
  7732  002A88  5031               	movf	(dtoa@p+1)^0,w,c
  7733  002A8A  E106               	bnz	u4551
  7734  002A8C  0430               	decf	dtoa@p^0,w,c
  7735  002A8E  B0D8               	btfsc	status,0,c
  7736  002A90  EF4C  F015         	goto	u4551
  7737  002A94  EF4E  F015         	goto	u4550
  7738  002A98                     u4551:
  7739  002A98  EFA9  F014         	goto	l3828
  7740  002A9C                     u4550:
  7741  002A9C  BE33               	btfsc	(dtoa@w+1)^0,7,c
  7742  002A9E  EF59  F015         	goto	u4561
  7743  002AA2  5033               	movf	(dtoa@w+1)^0,w,c
  7744  002AA4  E108               	bnz	u4560
  7745  002AA6  0432               	decf	dtoa@w^0,w,c
  7746  002AA8  A0D8               	btfss	status,0,c
  7747  002AAA  EF59  F015         	goto	u4561
  7748  002AAE  EF5B  F015         	goto	u4560
  7749  002AB2                     u4561:
  7750  002AB2  EF62  F015         	goto	l3848
  7751  002AB6                     u4560:
  7752  002AB6  B27E               	btfsc	_flags^0,1,c
  7753  002AB8  EF60  F015         	goto	u4571
  7754  002ABC  EF62  F015         	goto	u4570
  7755  002AC0                     u4571:
  7756  002AC0  EFA9  F014         	goto	l3828
  7757  002AC4                     u4570:
  7758  002AC4                     l3848:
  7759                           
  7760                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  7761  002AC4  5034               	movf	dtoa@s^0,w,c
  7762  002AC6  1035               	iorwf	(dtoa@s+1)^0,w,c
  7763  002AC8  A4D8               	btfss	status,2,c
  7764  002ACA  EF69  F015         	goto	u4581
  7765  002ACE  EF6B  F015         	goto	u4580
  7766  002AD2                     u4581:
  7767  002AD2  EF72  F015         	goto	l3852
  7768  002AD6                     u4580:
  7769  002AD6  A47E               	btfss	_flags^0,2,c
  7770  002AD8  EF70  F015         	goto	u4591
  7771  002ADC  EF72  F015         	goto	u4590
  7772  002AE0                     u4591:
  7773  002AE0  EF90  F015         	goto	l3862
  7774  002AE4                     u4590:
  7775  002AE4                     l3852:
  7776                           
  7777                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 322:         --i;
  7778  002AE4  063E               	decf	dtoa@i^0,f,c
  7779  002AE6  A0D8               	btfss	status,0,c
  7780  002AE8  063F               	decf	(dtoa@i+1)^0,f,c
  7781  002AEA                     
  7782                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  7783  002AEA  5034               	movf	dtoa@s^0,w,c
  7784  002AEC  1035               	iorwf	(dtoa@s+1)^0,w,c
  7785  002AEE  A4D8               	btfss	status,2,c
  7786  002AF0  EF7C  F015         	goto	u4601
  7787  002AF4  EF7E  F015         	goto	u4600
  7788  002AF8                     u4601:
  7789  002AF8  EF84  F015         	goto	l3858
  7790  002AFC                     u4600:
  7791  002AFC  0E00               	movlw	0
  7792  002AFE  6E2F               	movwf	(_dtoa$1138+1)^0,c
  7793  002B00  0E2B               	movlw	43
  7794  002B02  6E2E               	movwf	_dtoa$1138^0,c
  7795  002B04  EF88  F015         	goto	l3860
  7796  002B08                     l3858:
  7797  002B08  0E00               	movlw	0
  7798  002B0A  6E2F               	movwf	(_dtoa$1138+1)^0,c
  7799  002B0C  0E2D               	movlw	45
  7800  002B0E  6E2E               	movwf	_dtoa$1138^0,c
  7801  002B10                     l3860:
  7802  002B10  0E00               	movlw	low _dbuf
  7803  002B12  243E               	addwf	dtoa@i^0,w,c
  7804  002B14  6ED9               	movwf	fsr2l,c
  7805  002B16  0E01               	movlw	high _dbuf
  7806  002B18  203F               	addwfc	(dtoa@i+1)^0,w,c
  7807  002B1A  6EDA               	movwf	fsr2h,c
  7808  002B1C  C02E  FFDF         	movff	_dtoa$1138,indf2
  7809  002B20                     l3862:
  7810                           
  7811                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  7812  002B20  C01C  F011         	movff	dtoa@fp,pad@fp
  7813  002B24  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  7814  002B28  0E00               	movlw	low _dbuf
  7815  002B2A  243E               	addwf	dtoa@i^0,w,c
  7816  002B2C  6E13               	movwf	pad@buf^0,c
  7817  002B2E  0E01               	movlw	high _dbuf
  7818  002B30  203F               	addwfc	(dtoa@i+1)^0,w,c
  7819  002B32  6E14               	movwf	(pad@buf+1)^0,c
  7820  002B34  C032  F015         	movff	dtoa@w,pad@p
  7821  002B38  C033  F016         	movff	dtoa@w+1,pad@p+1
  7822  002B3C  EC56  F01D         	call	_pad	;wreg free
  7823  002B40  C011  F01C         	movff	?_pad,?_dtoa
  7824  002B44  C012  F01D         	movff	?_pad+1,?_dtoa+1
  7825  002B48  0012               	return		;funcret
  7826  002B4A                     __end_of_dtoa:
  7827                           	callstack 0
  7828                           
  7829 ;; *************** function _pad *****************
  7830 ;; Defined at:
  7831 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  7832 ;; Parameters:    Size  Location     Type
  7833 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  7834 ;;		 -> sprintf@f(11), 
  7835 ;;  buf             2   18[COMRAM] PTR unsigned char 
  7836 ;;		 -> dbuf(80), 
  7837 ;;  p               2   20[COMRAM] int 
  7838 ;; Auto vars:     Size  Location     Type
  7839 ;;  w               2   25[COMRAM] int 
  7840 ;;  i               2   23[COMRAM] int 
  7841 ;; Return value:  Size  Location     Type
  7842 ;;                  2   16[COMRAM] int 
  7843 ;; Registers used:
  7844 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7845 ;; Tracked objects:
  7846 ;;		On entry : 0/0
  7847 ;;		On exit  : 0/0
  7848 ;;		Unchanged: 0/0
  7849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7850 ;;      Params:         6       0       0       0       0       0       0
  7851 ;;      Locals:         4       0       0       0       0       0       0
  7852 ;;      Temps:          1       0       0       0       0       0       0
  7853 ;;      Totals:        11       0       0       0       0       0       0
  7854 ;;Total ram usage:       11 bytes
  7855 ;; Hardware stack levels used: 1
  7856 ;; Hardware stack levels required when called: 3
  7857 ;; This function calls:
  7858 ;;		_fputc
  7859 ;;		_fputs
  7860 ;;		_strlen
  7861 ;; This function is called by:
  7862 ;;		_dtoa
  7863 ;;		_efgtoa
  7864 ;; This function uses a non-reentrant model
  7865 ;;
  7866                           
  7867                           	psect	text26
  7868  003AAC                     __ptext26:
  7869                           	callstack 0
  7870  003AAC                     _pad:
  7871                           	callstack 22
  7872  003AAC                     
  7873                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  7874  003AAC  A07E               	btfss	_flags^0,0,c
  7875  003AAE  EF5B  F01D         	goto	u4161
  7876  003AB2  EF5D  F01D         	goto	u4160
  7877  003AB6                     u4161:
  7878  003AB6  EF67  F01D         	goto	l3690
  7879  003ABA                     u4160:
  7880  003ABA                     
  7881                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  7882  003ABA  C013  F00A         	movff	pad@buf,fputs@s
  7883  003ABE  C014  F00B         	movff	pad@buf+1,fputs@s+1
  7884  003AC2  C011  F00C         	movff	pad@fp,fputs@fp
  7885  003AC6  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  7886  003ACA  EC7A  F020         	call	_fputs	;wreg free
  7887  003ACE                     l3690:
  7888                           
  7889                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  7890  003ACE  BE16               	btfsc	(pad@p+1)^0,7,c
  7891  003AD0  EF6C  F01D         	goto	u4171
  7892  003AD4  EF6E  F01D         	goto	u4170
  7893  003AD8                     u4171:
  7894  003AD8  EF74  F01D         	goto	l3694
  7895  003ADC                     u4170:
  7896  003ADC  C015  F01A         	movff	pad@p,pad@w
  7897  003AE0  C016  F01B         	movff	pad@p+1,pad@w+1
  7898  003AE4  EF78  F01D         	goto	l871
  7899  003AE8                     l3694:
  7900  003AE8  0E00               	movlw	0
  7901  003AEA  6E1B               	movwf	(pad@w+1)^0,c
  7902  003AEC  0E00               	movlw	0
  7903  003AEE  6E1A               	movwf	pad@w^0,c
  7904  003AF0                     l871:
  7905                           
  7906                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  7907  003AF0  0E00               	movlw	0
  7908  003AF2  6E19               	movwf	(pad@i+1)^0,c
  7909  003AF4  0E00               	movlw	0
  7910  003AF6  6E18               	movwf	pad@i^0,c
  7911                           
  7912                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7913  003AF8  EF8A  F01D         	goto	l3700
  7914  003AFC                     l3696:
  7915                           
  7916                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  7917  003AFC  0E00               	movlw	0
  7918  003AFE  6E02               	movwf	(fputc@c+1)^0,c
  7919  003B00  0E20               	movlw	32
  7920  003B02  6E01               	movwf	fputc@c^0,c
  7921  003B04  C011  F003         	movff	pad@fp,fputc@fp
  7922  003B08  C012  F004         	movff	pad@fp+1,fputc@fp+1
  7923  003B0C  EC8F  F01C         	call	_fputc	;wreg free
  7924  003B10                     
  7925                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 86:         ++i;
  7926  003B10  4A18               	infsnz	pad@i^0,f,c
  7927  003B12  2A19               	incf	(pad@i+1)^0,f,c
  7928  003B14                     l3700:
  7929                           
  7930                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7931  003B14  501A               	movf	pad@w^0,w,c
  7932  003B16  5C18               	subwf	pad@i^0,w,c
  7933  003B18  5019               	movf	(pad@i+1)^0,w,c
  7934  003B1A  0A80               	xorlw	128
  7935  003B1C  6E17               	movwf	??_pad^0,c
  7936  003B1E  501B               	movf	(pad@w+1)^0,w,c
  7937  003B20  0A80               	xorlw	128
  7938  003B22  5817               	subwfb	??_pad^0,w,c
  7939  003B24  A0D8               	btfss	status,0,c
  7940  003B26  EF97  F01D         	goto	u4181
  7941  003B2A  EF99  F01D         	goto	u4180
  7942  003B2E                     u4181:
  7943  003B2E  EF7E  F01D         	goto	l3696
  7944  003B32                     u4180:
  7945  003B32                     
  7946                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  7947  003B32  B07E               	btfsc	_flags^0,0,c
  7948  003B34  EF9E  F01D         	goto	u4191
  7949  003B38  EFA0  F01D         	goto	u4190
  7950  003B3C                     u4191:
  7951  003B3C  EFAA  F01D         	goto	l3704
  7952  003B40                     u4190:
  7953  003B40                     
  7954                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  7955  003B40  C013  F00A         	movff	pad@buf,fputs@s
  7956  003B44  C014  F00B         	movff	pad@buf+1,fputs@s+1
  7957  003B48  C011  F00C         	movff	pad@fp,fputs@fp
  7958  003B4C  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  7959  003B50  EC7A  F020         	call	_fputs	;wreg free
  7960  003B54                     l3704:
  7961                           
  7962                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  7963  003B54  C013  F001         	movff	pad@buf,strlen@s
  7964  003B58  C014  F002         	movff	pad@buf+1,strlen@s+1
  7965  003B5C  EC2F  F021         	call	_strlen	;wreg free
  7966  003B60  501A               	movf	pad@w^0,w,c
  7967  003B62  2401               	addwf	?_strlen^0,w,c
  7968  003B64  6E11               	movwf	?_pad^0,c
  7969  003B66  501B               	movf	(pad@w+1)^0,w,c
  7970  003B68  2002               	addwfc	(?_strlen+1)^0,w,c
  7971  003B6A  6E12               	movwf	(?_pad+1)^0,c
  7972  003B6C  0012               	return		;funcret
  7973  003B6E                     __end_of_pad:
  7974                           	callstack 0
  7975                           
  7976 ;; *************** function _strlen *****************
  7977 ;; Defined at:
  7978 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  7979 ;; Parameters:    Size  Location     Type
  7980 ;;  s               2    0[COMRAM] PTR const unsigned char 
  7981 ;;		 -> dbuf(80), 
  7982 ;; Auto vars:     Size  Location     Type
  7983 ;;  a               2    2[COMRAM] PTR const unsigned char 
  7984 ;;		 -> dbuf(80), 
  7985 ;; Return value:  Size  Location     Type
  7986 ;;                  2    0[COMRAM] unsigned int 
  7987 ;; Registers used:
  7988 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7989 ;; Tracked objects:
  7990 ;;		On entry : 0/0
  7991 ;;		On exit  : 0/0
  7992 ;;		Unchanged: 0/0
  7993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7994 ;;      Params:         2       0       0       0       0       0       0
  7995 ;;      Locals:         2       0       0       0       0       0       0
  7996 ;;      Temps:          0       0       0       0       0       0       0
  7997 ;;      Totals:         4       0       0       0       0       0       0
  7998 ;;Total ram usage:        4 bytes
  7999 ;; Hardware stack levels used: 1
  8000 ;; This function calls:
  8001 ;;		Nothing
  8002 ;; This function is called by:
  8003 ;;		_pad
  8004 ;; This function uses a non-reentrant model
  8005 ;;
  8006                           
  8007                           	psect	text27
  8008  00425E                     __ptext27:
  8009                           	callstack 0
  8010  00425E                     _strlen:
  8011                           	callstack 24
  8012  00425E  C001  F003         	movff	strlen@s,strlen@a
  8013  004262  C002  F004         	movff	strlen@s+1,strlen@a+1
  8014  004266  EF37  F021         	goto	l3146
  8015  00426A                     l3144:
  8016  00426A  4A01               	infsnz	strlen@s^0,f,c
  8017  00426C  2A02               	incf	(strlen@s+1)^0,f,c
  8018  00426E                     l3146:
  8019  00426E  C001  FFD9         	movff	strlen@s,fsr2l
  8020  004272  C002  FFDA         	movff	strlen@s+1,fsr2h
  8021  004276  50DF               	movf	indf2,w,c
  8022  004278  A4D8               	btfss	status,2,c
  8023  00427A  EF41  F021         	goto	u3301
  8024  00427E  EF43  F021         	goto	u3300
  8025  004282                     u3301:
  8026  004282  EF35  F021         	goto	l3144
  8027  004286                     u3300:
  8028  004286  5003               	movf	strlen@a^0,w,c
  8029  004288  5C01               	subwf	strlen@s^0,w,c
  8030  00428A  6E01               	movwf	?_strlen^0,c
  8031  00428C  5004               	movf	(strlen@a+1)^0,w,c
  8032  00428E  5802               	subwfb	(strlen@s+1)^0,w,c
  8033  004290  6E02               	movwf	(?_strlen+1)^0,c
  8034  004292  0012               	return		;funcret
  8035  004294                     __end_of_strlen:
  8036                           	callstack 0
  8037                           
  8038 ;; *************** function _fputs *****************
  8039 ;; Defined at:
  8040 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputs.c"
  8041 ;; Parameters:    Size  Location     Type
  8042 ;;  s               2    9[COMRAM] PTR const unsigned char 
  8043 ;;		 -> dbuf(80), 
  8044 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  8045 ;;		 -> sprintf@f(11), 
  8046 ;; Auto vars:     Size  Location     Type
  8047 ;;  i               2   14[COMRAM] int 
  8048 ;;  c               1   13[COMRAM] unsigned char 
  8049 ;; Return value:  Size  Location     Type
  8050 ;;                  2    9[COMRAM] int 
  8051 ;; Registers used:
  8052 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8053 ;; Tracked objects:
  8054 ;;		On entry : 0/0
  8055 ;;		On exit  : 0/0
  8056 ;;		Unchanged: 0/0
  8057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8058 ;;      Params:         4       0       0       0       0       0       0
  8059 ;;      Locals:         3       0       0       0       0       0       0
  8060 ;;      Temps:          0       0       0       0       0       0       0
  8061 ;;      Totals:         7       0       0       0       0       0       0
  8062 ;;Total ram usage:        7 bytes
  8063 ;; Hardware stack levels used: 1
  8064 ;; Hardware stack levels required when called: 2
  8065 ;; This function calls:
  8066 ;;		_fputc
  8067 ;; This function is called by:
  8068 ;;		_pad
  8069 ;; This function uses a non-reentrant model
  8070 ;;
  8071                           
  8072                           	psect	text28
  8073  0040F4                     __ptext28:
  8074                           	callstack 0
  8075  0040F4                     _fputs:
  8076                           	callstack 22
  8077  0040F4  0E00               	movlw	0
  8078  0040F6  6E10               	movwf	(fputs@i+1)^0,c
  8079  0040F8  0E00               	movlw	0
  8080  0040FA  6E0F               	movwf	fputs@i^0,c
  8081  0040FC  EF8B  F020         	goto	l3140
  8082  004100                     l3136:
  8083  004100  C00E  F001         	movff	fputs@c,fputc@c
  8084  004104  6A02               	clrf	(fputc@c+1)^0,c
  8085  004106  C00C  F003         	movff	fputs@fp,fputc@fp
  8086  00410A  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  8087  00410E  EC8F  F01C         	call	_fputc	;wreg free
  8088  004112  4A0F               	infsnz	fputs@i^0,f,c
  8089  004114  2A10               	incf	(fputs@i+1)^0,f,c
  8090  004116                     l3140:
  8091  004116  500F               	movf	fputs@i^0,w,c
  8092  004118  240A               	addwf	fputs@s^0,w,c
  8093  00411A  6ED9               	movwf	fsr2l,c
  8094  00411C  5010               	movf	(fputs@i+1)^0,w,c
  8095  00411E  200B               	addwfc	(fputs@s+1)^0,w,c
  8096  004120  6EDA               	movwf	fsr2h,c
  8097  004122  50DF               	movf	indf2,w,c
  8098  004124  6E0E               	movwf	fputs@c^0,c
  8099  004126  500E               	movf	fputs@c^0,w,c
  8100  004128  A4D8               	btfss	status,2,c
  8101  00412A  EF99  F020         	goto	u3291
  8102  00412E  EF9B  F020         	goto	u3290
  8103  004132                     u3291:
  8104  004132  EF80  F020         	goto	l3136
  8105  004136                     u3290:
  8106  004136  0012               	return		;funcret
  8107  004138                     __end_of_fputs:
  8108                           	callstack 0
  8109                           
  8110 ;; *************** function _fputc *****************
  8111 ;; Defined at:
  8112 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputc.c"
  8113 ;; Parameters:    Size  Location     Type
  8114 ;;  c               2    0[COMRAM] int 
  8115 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  8116 ;;		 -> sprintf@f(11), 
  8117 ;; Auto vars:     Size  Location     Type
  8118 ;;		None
  8119 ;; Return value:  Size  Location     Type
  8120 ;;                  2    0[COMRAM] int 
  8121 ;; Registers used:
  8122 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8123 ;; Tracked objects:
  8124 ;;		On entry : 0/0
  8125 ;;		On exit  : 0/0
  8126 ;;		Unchanged: 0/0
  8127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8128 ;;      Params:         4       0       0       0       0       0       0
  8129 ;;      Locals:         0       0       0       0       0       0       0
  8130 ;;      Temps:          5       0       0       0       0       0       0
  8131 ;;      Totals:         9       0       0       0       0       0       0
  8132 ;;Total ram usage:        9 bytes
  8133 ;; Hardware stack levels used: 1
  8134 ;; Hardware stack levels required when called: 1
  8135 ;; This function calls:
  8136 ;;		_putch
  8137 ;; This function is called by:
  8138 ;;		_pad
  8139 ;;		_vfpfcnvrt
  8140 ;;		_fputs
  8141 ;; This function uses a non-reentrant model
  8142 ;;
  8143                           
  8144                           	psect	text29
  8145  00391E                     __ptext29:
  8146                           	callstack 0
  8147  00391E                     _fputc:
  8148                           	callstack 25
  8149  00391E  5003               	movf	fputc@fp^0,w,c
  8150  003920  1004               	iorwf	(fputc@fp+1)^0,w,c
  8151  003922  B4D8               	btfsc	status,2,c
  8152  003924  EF96  F01C         	goto	u2861
  8153  003928  EF98  F01C         	goto	u2860
  8154  00392C                     u2861:
  8155  00392C  EFA1  F01C         	goto	l2922
  8156  003930                     u2860:
  8157  003930  5003               	movf	fputc@fp^0,w,c
  8158  003932  1004               	iorwf	(fputc@fp+1)^0,w,c
  8159  003934  A4D8               	btfss	status,2,c
  8160  003936  EF9F  F01C         	goto	u2871
  8161  00393A  EFA1  F01C         	goto	u2870
  8162  00393E                     u2871:
  8163  00393E  EFA6  F01C         	goto	l2924
  8164  003942                     u2870:
  8165  003942                     l2922:
  8166  003942  5001               	movf	fputc@c^0,w,c
  8167  003944  ECB4  F021         	call	_putch
  8168  003948  EFF3  F01C         	goto	l1127
  8169  00394C                     l2924:
  8170  00394C  EE20 F009          	lfsr	2,9
  8171  003950  5003               	movf	fputc@fp^0,w,c
  8172  003952  26D9               	addwf	fsr2l,f,c
  8173  003954  5004               	movf	(fputc@fp+1)^0,w,c
  8174  003956  22DA               	addwfc	fsr2h,f,c
  8175  003958  50DE               	movf	postinc2,w,c
  8176  00395A  10DE               	iorwf	postinc2,w,c
  8177  00395C  B4D8               	btfsc	status,2,c
  8178  00395E  EFB3  F01C         	goto	u2881
  8179  003962  EFB5  F01C         	goto	u2880
  8180  003966                     u2881:
  8181  003966  EFD0  F01C         	goto	l2928
  8182  00396A                     u2880:
  8183  00396A  EE20 F009          	lfsr	2,9
  8184  00396E  5003               	movf	fputc@fp^0,w,c
  8185  003970  26D9               	addwf	fsr2l,f,c
  8186  003972  5004               	movf	(fputc@fp+1)^0,w,c
  8187  003974  22DA               	addwfc	fsr2h,f,c
  8188  003976  EE10 F003          	lfsr	1,3
  8189  00397A  5003               	movf	fputc@fp^0,w,c
  8190  00397C  26E1               	addwf	fsr1l,f,c
  8191  00397E  5004               	movf	(fputc@fp+1)^0,w,c
  8192  003980  22E2               	addwfc	fsr1h,f,c
  8193  003982  50DE               	movf	postinc2,w,c
  8194  003984  5CE6               	subwf	postinc1,w,c
  8195  003986  50E6               	movf	postinc1,w,c
  8196  003988  0A80               	xorlw	128
  8197  00398A  6E09               	movwf	(??_fputc+4)^0,c
  8198  00398C  50DE               	movf	postinc2,w,c
  8199  00398E  0A80               	xorlw	128
  8200  003990  5809               	subwfb	(??_fputc+4)^0,w,c
  8201  003992  B0D8               	btfsc	status,0,c
  8202  003994  EFCE  F01C         	goto	u2891
  8203  003998  EFD0  F01C         	goto	u2890
  8204  00399C                     u2891:
  8205  00399C  EFF3  F01C         	goto	l1127
  8206  0039A0                     u2890:
  8207  0039A0                     l2928:
  8208  0039A0  EE20 F003          	lfsr	2,3
  8209  0039A4  5003               	movf	fputc@fp^0,w,c
  8210  0039A6  26D9               	addwf	fsr2l,f,c
  8211  0039A8  5004               	movf	(fputc@fp+1)^0,w,c
  8212  0039AA  22DA               	addwfc	fsr2h,f,c
  8213  0039AC  CFDE F005          	movff	postinc2,??_fputc
  8214  0039B0  CFDD F006          	movff	postdec2,??_fputc+1
  8215  0039B4  C003  FFD9         	movff	fputc@fp,fsr2l
  8216  0039B8  C004  FFDA         	movff	fputc@fp+1,fsr2h
  8217  0039BC  CFDE F007          	movff	postinc2,??_fputc+2
  8218  0039C0  CFDD F008          	movff	postdec2,??_fputc+3
  8219  0039C4  5005               	movf	??_fputc^0,w,c
  8220  0039C6  2407               	addwf	(??_fputc+2)^0,w,c
  8221  0039C8  6ED9               	movwf	fsr2l,c
  8222  0039CA  5006               	movf	(??_fputc+1)^0,w,c
  8223  0039CC  2008               	addwfc	(??_fputc+3)^0,w,c
  8224  0039CE  6EDA               	movwf	fsr2h,c
  8225  0039D0  C001  FFDF         	movff	fputc@c,indf2
  8226  0039D4  EE20 F003          	lfsr	2,3
  8227  0039D8  5003               	movf	fputc@fp^0,w,c
  8228  0039DA  26D9               	addwf	fsr2l,f,c
  8229  0039DC  5004               	movf	(fputc@fp+1)^0,w,c
  8230  0039DE  22DA               	addwfc	fsr2h,f,c
  8231  0039E0  2ADE               	incf	postinc2,f,c
  8232  0039E2  0E00               	movlw	0
  8233  0039E4  22DD               	addwfc	postdec2,f,c
  8234  0039E6                     l1127:
  8235  0039E6  0012               	return		;funcret
  8236  0039E8                     __end_of_fputc:
  8237                           	callstack 0
  8238                           
  8239 ;; *************** function _putch *****************
  8240 ;; Defined at:
  8241 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\putch.c"
  8242 ;; Parameters:    Size  Location     Type
  8243 ;;  c               1    wreg     unsigned char 
  8244 ;; Auto vars:     Size  Location     Type
  8245 ;;  c               1    0[COMRAM] unsigned char 
  8246 ;; Return value:  Size  Location     Type
  8247 ;;                  1    wreg      void 
  8248 ;; Registers used:
  8249 ;;		wreg
  8250 ;; Tracked objects:
  8251 ;;		On entry : 0/0
  8252 ;;		On exit  : 0/0
  8253 ;;		Unchanged: 0/0
  8254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8255 ;;      Params:         0       0       0       0       0       0       0
  8256 ;;      Locals:         0       0       0       0       0       0       0
  8257 ;;      Temps:          0       0       0       0       0       0       0
  8258 ;;      Totals:         0       0       0       0       0       0       0
  8259 ;;Total ram usage:        0 bytes
  8260 ;; Hardware stack levels used: 1
  8261 ;; This function calls:
  8262 ;;		Nothing
  8263 ;; This function is called by:
  8264 ;;		_fputc
  8265 ;; This function uses a non-reentrant model
  8266 ;;
  8267                           
  8268                           	psect	text30
  8269  004368                     __ptext30:
  8270                           	callstack 0
  8271  004368                     _putch:
  8272                           	callstack 25
  8273  004368  0012               	return		;funcret
  8274  00436A                     __end_of_putch:
  8275                           	callstack 0
  8276                           
  8277 ;; *************** function _abs *****************
  8278 ;; Defined at:
  8279 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\abs.c"
  8280 ;; Parameters:    Size  Location     Type
  8281 ;;  a               2   18[COMRAM] int 
  8282 ;; Auto vars:     Size  Location     Type
  8283 ;;		None
  8284 ;; Return value:  Size  Location     Type
  8285 ;;                  2   18[COMRAM] int 
  8286 ;; Registers used:
  8287 ;;		wreg, status,2, status,0
  8288 ;; Tracked objects:
  8289 ;;		On entry : 0/0
  8290 ;;		On exit  : 0/0
  8291 ;;		Unchanged: 0/0
  8292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8293 ;;      Params:         2       0       0       0       0       0       0
  8294 ;;      Locals:         0       0       0       0       0       0       0
  8295 ;;      Temps:          2       0       0       0       0       0       0
  8296 ;;      Totals:         4       0       0       0       0       0       0
  8297 ;;Total ram usage:        4 bytes
  8298 ;; Hardware stack levels used: 1
  8299 ;; This function calls:
  8300 ;;		Nothing
  8301 ;; This function is called by:
  8302 ;;		_dtoa
  8303 ;; This function uses a non-reentrant model
  8304 ;;
  8305                           
  8306                           	psect	text31
  8307  004138                     __ptext31:
  8308                           	callstack 0
  8309  004138                     _abs:
  8310                           	callstack 25
  8311  004138  BE14               	btfsc	(abs@a+1)^0,7,c
  8312  00413A  EFA9  F020         	goto	u4200
  8313  00413E  5014               	movf	(abs@a+1)^0,w,c
  8314  004140  E106               	bnz	u4201
  8315  004142  0413               	decf	abs@a^0,w,c
  8316  004144  B0D8               	btfsc	status,0,c
  8317  004146  EFA7  F020         	goto	u4201
  8318  00414A  EFA9  F020         	goto	u4200
  8319  00414E                     u4201:
  8320  00414E  EFB7  F020         	goto	l1054
  8321  004152                     u4200:
  8322  004152  C013  F015         	movff	abs@a,??_abs
  8323  004156  C014  F016         	movff	abs@a+1,??_abs+1
  8324  00415A  1E15               	comf	??_abs^0,f,c
  8325  00415C  1E16               	comf	(??_abs+1)^0,f,c
  8326  00415E  4A15               	infsnz	??_abs^0,f,c
  8327  004160  2A16               	incf	(??_abs+1)^0,f,c
  8328  004162  C015  F013         	movff	??_abs,?_abs
  8329  004166  C016  F014         	movff	??_abs+1,?_abs+1
  8330  00416A  EFBB  F020         	goto	l1057
  8331  00416E                     l1054:
  8332  00416E  C013  F013         	movff	abs@a,?_abs
  8333  004172  C014  F014         	movff	abs@a+1,?_abs+1
  8334  004176                     l1057:
  8335  004176  0012               	return		;funcret
  8336  004178                     __end_of_abs:
  8337                           	callstack 0
  8338                           
  8339 ;; *************** function ___aomod *****************
  8340 ;; Defined at:
  8341 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aomod.c"
  8342 ;; Parameters:    Size  Location     Type
  8343 ;;  dividend        8    0[COMRAM] long long 
  8344 ;;  divisor         8    8[COMRAM] long long 
  8345 ;; Auto vars:     Size  Location     Type
  8346 ;;  sign            1   17[COMRAM] unsigned char 
  8347 ;;  counter         1   16[COMRAM] unsigned char 
  8348 ;; Return value:  Size  Location     Type
  8349 ;;                  8    0[COMRAM] long long 
  8350 ;; Registers used:
  8351 ;;		wreg, status,2, status,0
  8352 ;; Tracked objects:
  8353 ;;		On entry : 0/0
  8354 ;;		On exit  : 0/0
  8355 ;;		Unchanged: 0/0
  8356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8357 ;;      Params:        16       0       0       0       0       0       0
  8358 ;;      Locals:         2       0       0       0       0       0       0
  8359 ;;      Temps:          0       0       0       0       0       0       0
  8360 ;;      Totals:        18       0       0       0       0       0       0
  8361 ;;Total ram usage:       18 bytes
  8362 ;; Hardware stack levels used: 1
  8363 ;; This function calls:
  8364 ;;		Nothing
  8365 ;; This function is called by:
  8366 ;;		_dtoa
  8367 ;; This function uses a non-reentrant model
  8368 ;;
  8369                           
  8370                           	psect	text32
  8371  003098                     __ptext32:
  8372                           	callstack 0
  8373  003098                     ___aomod:
  8374                           	callstack 25
  8375  003098  0E00               	movlw	0
  8376  00309A  6E12               	movwf	___aomod@sign^0,c
  8377  00309C  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  8378  00309E  EF55  F018         	goto	u3400
  8379  0030A2  EF53  F018         	goto	u3401
  8380  0030A6                     u3401:
  8381  0030A6  EF67  F018         	goto	l3214
  8382  0030AA                     u3400:
  8383  0030AA  1E08               	comf	(___aomod@dividend+7)^0,f,c
  8384  0030AC  1E07               	comf	(___aomod@dividend+6)^0,f,c
  8385  0030AE  1E06               	comf	(___aomod@dividend+5)^0,f,c
  8386  0030B0  1E05               	comf	(___aomod@dividend+4)^0,f,c
  8387  0030B2  1E04               	comf	(___aomod@dividend+3)^0,f,c
  8388  0030B4  1E03               	comf	(___aomod@dividend+2)^0,f,c
  8389  0030B6  1E02               	comf	(___aomod@dividend+1)^0,f,c
  8390  0030B8  6C01               	negf	___aomod@dividend^0,c
  8391  0030BA  0E00               	movlw	0
  8392  0030BC  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  8393  0030BE  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  8394  0030C0  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  8395  0030C2  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  8396  0030C4  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  8397  0030C6  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  8398  0030C8  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  8399  0030CA  0E01               	movlw	1
  8400  0030CC  6E12               	movwf	___aomod@sign^0,c
  8401  0030CE                     l3214:
  8402  0030CE  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  8403  0030D0  EF6E  F018         	goto	u3410
  8404  0030D4  EF6C  F018         	goto	u3411
  8405  0030D8                     u3411:
  8406  0030D8  EF7E  F018         	goto	l3218
  8407  0030DC                     u3410:
  8408  0030DC  1E10               	comf	(___aomod@divisor+7)^0,f,c
  8409  0030DE  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  8410  0030E0  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  8411  0030E2  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  8412  0030E4  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  8413  0030E6  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  8414  0030E8  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  8415  0030EA  6C09               	negf	___aomod@divisor^0,c
  8416  0030EC  0E00               	movlw	0
  8417  0030EE  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  8418  0030F0  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  8419  0030F2  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  8420  0030F4  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  8421  0030F6  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  8422  0030F8  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  8423  0030FA  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  8424  0030FC                     l3218:
  8425  0030FC  5009               	movf	___aomod@divisor^0,w,c
  8426  0030FE  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  8427  003100  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  8428  003102  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  8429  003104  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  8430  003106  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  8431  003108  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  8432  00310A  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  8433  00310C  B4D8               	btfsc	status,2,c
  8434  00310E  EF8B  F018         	goto	u3421
  8435  003112  EF8D  F018         	goto	u3420
  8436  003116                     u3421:
  8437  003116  EFD5  F018         	goto	l3234
  8438  00311A                     u3420:
  8439  00311A  0E01               	movlw	1
  8440  00311C  6E11               	movwf	___aomod@counter^0,c
  8441  00311E  EF9B  F018         	goto	l3224
  8442  003122                     l3222:
  8443  003122  90D8               	bcf	status,0,c
  8444  003124  3609               	rlcf	___aomod@divisor^0,f,c
  8445  003126  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  8446  003128  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  8447  00312A  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  8448  00312C  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  8449  00312E  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  8450  003130  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  8451  003132  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  8452  003134  2A11               	incf	___aomod@counter^0,f,c
  8453  003136                     l3224:
  8454  003136  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  8455  003138  EFA0  F018         	goto	u3431
  8456  00313C  EFA2  F018         	goto	u3430
  8457  003140                     u3431:
  8458  003140  EF91  F018         	goto	l3222
  8459  003144                     u3430:
  8460  003144                     l3226:
  8461  003144  5009               	movf	___aomod@divisor^0,w,c
  8462  003146  5C01               	subwf	___aomod@dividend^0,w,c
  8463  003148  500A               	movf	(___aomod@divisor+1)^0,w,c
  8464  00314A  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  8465  00314C  500B               	movf	(___aomod@divisor+2)^0,w,c
  8466  00314E  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  8467  003150  500C               	movf	(___aomod@divisor+3)^0,w,c
  8468  003152  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  8469  003154  500D               	movf	(___aomod@divisor+4)^0,w,c
  8470  003156  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  8471  003158  500E               	movf	(___aomod@divisor+5)^0,w,c
  8472  00315A  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  8473  00315C  500F               	movf	(___aomod@divisor+6)^0,w,c
  8474  00315E  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  8475  003160  5010               	movf	(___aomod@divisor+7)^0,w,c
  8476  003162  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  8477  003164  A0D8               	btfss	status,0,c
  8478  003166  EFB7  F018         	goto	u3441
  8479  00316A  EFB9  F018         	goto	u3440
  8480  00316E                     u3441:
  8481  00316E  EFC9  F018         	goto	l3230
  8482  003172                     u3440:
  8483  003172  5009               	movf	___aomod@divisor^0,w,c
  8484  003174  5E01               	subwf	___aomod@dividend^0,f,c
  8485  003176  500A               	movf	(___aomod@divisor+1)^0,w,c
  8486  003178  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  8487  00317A  500B               	movf	(___aomod@divisor+2)^0,w,c
  8488  00317C  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  8489  00317E  500C               	movf	(___aomod@divisor+3)^0,w,c
  8490  003180  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  8491  003182  500D               	movf	(___aomod@divisor+4)^0,w,c
  8492  003184  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  8493  003186  500E               	movf	(___aomod@divisor+5)^0,w,c
  8494  003188  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  8495  00318A  500F               	movf	(___aomod@divisor+6)^0,w,c
  8496  00318C  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  8497  00318E  5010               	movf	(___aomod@divisor+7)^0,w,c
  8498  003190  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  8499  003192                     l3230:
  8500  003192  90D8               	bcf	status,0,c
  8501  003194  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  8502  003196  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  8503  003198  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  8504  00319A  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  8505  00319C  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  8506  00319E  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  8507  0031A0  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  8508  0031A2  3209               	rrcf	___aomod@divisor^0,f,c
  8509  0031A4  2E11               	decfsz	___aomod@counter^0,f,c
  8510  0031A6  EFA2  F018         	goto	l3226
  8511  0031AA                     l3234:
  8512  0031AA  5012               	movf	___aomod@sign^0,w,c
  8513  0031AC  B4D8               	btfsc	status,2,c
  8514  0031AE  EFDB  F018         	goto	u3451
  8515  0031B2  EFDD  F018         	goto	u3450
  8516  0031B6                     u3451:
  8517  0031B6  EFED  F018         	goto	l3238
  8518  0031BA                     u3450:
  8519  0031BA  1E08               	comf	(___aomod@dividend+7)^0,f,c
  8520  0031BC  1E07               	comf	(___aomod@dividend+6)^0,f,c
  8521  0031BE  1E06               	comf	(___aomod@dividend+5)^0,f,c
  8522  0031C0  1E05               	comf	(___aomod@dividend+4)^0,f,c
  8523  0031C2  1E04               	comf	(___aomod@dividend+3)^0,f,c
  8524  0031C4  1E03               	comf	(___aomod@dividend+2)^0,f,c
  8525  0031C6  1E02               	comf	(___aomod@dividend+1)^0,f,c
  8526  0031C8  6C01               	negf	___aomod@dividend^0,c
  8527  0031CA  0E00               	movlw	0
  8528  0031CC  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  8529  0031CE  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  8530  0031D0  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  8531  0031D2  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  8532  0031D4  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  8533  0031D6  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  8534  0031D8  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  8535  0031DA                     l3238:
  8536  0031DA  C001  F001         	movff	___aomod@dividend,?___aomod
  8537  0031DE  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  8538  0031E2  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  8539  0031E6  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  8540  0031EA  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  8541  0031EE  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  8542  0031F2  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  8543  0031F6  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  8544  0031FA  0012               	return		;funcret
  8545  0031FC                     __end_of___aomod:
  8546                           	callstack 0
  8547                           
  8548 ;; *************** function ___aodiv *****************
  8549 ;; Defined at:
  8550 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aodiv.c"
  8551 ;; Parameters:    Size  Location     Type
  8552 ;;  dividend        8    0[COMRAM] long long 
  8553 ;;  divisor         8    8[COMRAM] long long 
  8554 ;; Auto vars:     Size  Location     Type
  8555 ;;  quotient        8   18[COMRAM] long long 
  8556 ;;  sign            1   17[COMRAM] unsigned char 
  8557 ;;  counter         1   16[COMRAM] unsigned char 
  8558 ;; Return value:  Size  Location     Type
  8559 ;;                  8    0[COMRAM] long long 
  8560 ;; Registers used:
  8561 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8562 ;; Tracked objects:
  8563 ;;		On entry : 0/0
  8564 ;;		On exit  : 0/0
  8565 ;;		Unchanged: 0/0
  8566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8567 ;;      Params:        16       0       0       0       0       0       0
  8568 ;;      Locals:        10       0       0       0       0       0       0
  8569 ;;      Temps:          0       0       0       0       0       0       0
  8570 ;;      Totals:        26       0       0       0       0       0       0
  8571 ;;Total ram usage:       26 bytes
  8572 ;; Hardware stack levels used: 1
  8573 ;; This function calls:
  8574 ;;		Nothing
  8575 ;; This function is called by:
  8576 ;;		_dtoa
  8577 ;; This function uses a non-reentrant model
  8578 ;;
  8579                           
  8580                           	psect	text33
  8581  002F10                     __ptext33:
  8582                           	callstack 0
  8583  002F10                     ___aodiv:
  8584                           	callstack 25
  8585  002F10  0E00               	movlw	0
  8586  002F12  6E12               	movwf	___aodiv@sign^0,c
  8587  002F14  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  8588  002F16  EF91  F017         	goto	u3330
  8589  002F1A  EF8F  F017         	goto	u3331
  8590  002F1E                     u3331:
  8591  002F1E  EFA3  F017         	goto	l3170
  8592  002F22                     u3330:
  8593  002F22  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  8594  002F24  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  8595  002F26  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  8596  002F28  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  8597  002F2A  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  8598  002F2C  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  8599  002F2E  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  8600  002F30  6C09               	negf	___aodiv@divisor^0,c
  8601  002F32  0E00               	movlw	0
  8602  002F34  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  8603  002F36  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  8604  002F38  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  8605  002F3A  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  8606  002F3C  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  8607  002F3E  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  8608  002F40  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  8609  002F42  0E01               	movlw	1
  8610  002F44  6E12               	movwf	___aodiv@sign^0,c
  8611  002F46                     l3170:
  8612  002F46  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  8613  002F48  EFAA  F017         	goto	u3340
  8614  002F4C  EFA8  F017         	goto	u3341
  8615  002F50                     u3341:
  8616  002F50  EFBC  F017         	goto	l3176
  8617  002F54                     u3340:
  8618  002F54  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  8619  002F56  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  8620  002F58  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  8621  002F5A  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  8622  002F5C  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  8623  002F5E  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  8624  002F60  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  8625  002F62  6C01               	negf	___aodiv@dividend^0,c
  8626  002F64  0E00               	movlw	0
  8627  002F66  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  8628  002F68  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  8629  002F6A  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  8630  002F6C  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  8631  002F6E  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  8632  002F70  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  8633  002F72  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  8634  002F74  0E01               	movlw	1
  8635  002F76  1A12               	xorwf	___aodiv@sign^0,f,c
  8636  002F78                     l3176:
  8637  002F78  EE20  F013         	lfsr	2,___aodiv@quotient
  8638  002F7C  0E07               	movlw	7
  8639  002F7E                     u3351:
  8640  002F7E  6ADE               	clrf	postinc2,c
  8641  002F80  06E8               	decf	wreg,f,c
  8642  002F82  E2FD               	bc	u3351
  8643  002F84  5009               	movf	___aodiv@divisor^0,w,c
  8644  002F86  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  8645  002F88  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  8646  002F8A  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  8647  002F8C  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  8648  002F8E  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  8649  002F90  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  8650  002F92  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  8651  002F94  B4D8               	btfsc	status,2,c
  8652  002F96  EFCF  F017         	goto	u3361
  8653  002F9A  EFD1  F017         	goto	u3360
  8654  002F9E                     u3361:
  8655  002F9E  EF23  F018         	goto	l3198
  8656  002FA2                     u3360:
  8657  002FA2  0E01               	movlw	1
  8658  002FA4  6E11               	movwf	___aodiv@counter^0,c
  8659  002FA6  EFDF  F017         	goto	l3184
  8660  002FAA                     l3182:
  8661  002FAA  90D8               	bcf	status,0,c
  8662  002FAC  3609               	rlcf	___aodiv@divisor^0,f,c
  8663  002FAE  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  8664  002FB0  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  8665  002FB2  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  8666  002FB4  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  8667  002FB6  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  8668  002FB8  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  8669  002FBA  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  8670  002FBC  2A11               	incf	___aodiv@counter^0,f,c
  8671  002FBE                     l3184:
  8672  002FBE  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  8673  002FC0  EFE4  F017         	goto	u3371
  8674  002FC4  EFE6  F017         	goto	u3370
  8675  002FC8                     u3371:
  8676  002FC8  EFD5  F017         	goto	l3182
  8677  002FCC                     u3370:
  8678  002FCC                     l3186:
  8679  002FCC  90D8               	bcf	status,0,c
  8680  002FCE  3613               	rlcf	___aodiv@quotient^0,f,c
  8681  002FD0  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  8682  002FD2  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  8683  002FD4  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  8684  002FD6  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  8685  002FD8  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  8686  002FDA  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  8687  002FDC  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  8688  002FDE  5009               	movf	___aodiv@divisor^0,w,c
  8689  002FE0  5C01               	subwf	___aodiv@dividend^0,w,c
  8690  002FE2  500A               	movf	(___aodiv@divisor+1)^0,w,c
  8691  002FE4  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  8692  002FE6  500B               	movf	(___aodiv@divisor+2)^0,w,c
  8693  002FE8  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  8694  002FEA  500C               	movf	(___aodiv@divisor+3)^0,w,c
  8695  002FEC  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  8696  002FEE  500D               	movf	(___aodiv@divisor+4)^0,w,c
  8697  002FF0  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  8698  002FF2  500E               	movf	(___aodiv@divisor+5)^0,w,c
  8699  002FF4  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  8700  002FF6  500F               	movf	(___aodiv@divisor+6)^0,w,c
  8701  002FF8  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  8702  002FFA  5010               	movf	(___aodiv@divisor+7)^0,w,c
  8703  002FFC  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  8704  002FFE  A0D8               	btfss	status,0,c
  8705  003000  EF04  F018         	goto	u3381
  8706  003004  EF06  F018         	goto	u3380
  8707  003008                     u3381:
  8708  003008  EF17  F018         	goto	l3194
  8709  00300C                     u3380:
  8710  00300C  5009               	movf	___aodiv@divisor^0,w,c
  8711  00300E  5E01               	subwf	___aodiv@dividend^0,f,c
  8712  003010  500A               	movf	(___aodiv@divisor+1)^0,w,c
  8713  003012  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  8714  003014  500B               	movf	(___aodiv@divisor+2)^0,w,c
  8715  003016  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  8716  003018  500C               	movf	(___aodiv@divisor+3)^0,w,c
  8717  00301A  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  8718  00301C  500D               	movf	(___aodiv@divisor+4)^0,w,c
  8719  00301E  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  8720  003020  500E               	movf	(___aodiv@divisor+5)^0,w,c
  8721  003022  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  8722  003024  500F               	movf	(___aodiv@divisor+6)^0,w,c
  8723  003026  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  8724  003028  5010               	movf	(___aodiv@divisor+7)^0,w,c
  8725  00302A  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  8726  00302C  8013               	bsf	___aodiv@quotient^0,0,c
  8727  00302E                     l3194:
  8728  00302E  90D8               	bcf	status,0,c
  8729  003030  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  8730  003032  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  8731  003034  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  8732  003036  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  8733  003038  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  8734  00303A  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  8735  00303C  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  8736  00303E  3209               	rrcf	___aodiv@divisor^0,f,c
  8737  003040  2E11               	decfsz	___aodiv@counter^0,f,c
  8738  003042  EFE6  F017         	goto	l3186
  8739  003046                     l3198:
  8740  003046  5012               	movf	___aodiv@sign^0,w,c
  8741  003048  B4D8               	btfsc	status,2,c
  8742  00304A  EF29  F018         	goto	u3391
  8743  00304E  EF2B  F018         	goto	u3390
  8744  003052                     u3391:
  8745  003052  EF3B  F018         	goto	l3202
  8746  003056                     u3390:
  8747  003056  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  8748  003058  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  8749  00305A  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  8750  00305C  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  8751  00305E  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  8752  003060  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  8753  003062  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  8754  003064  6C13               	negf	___aodiv@quotient^0,c
  8755  003066  0E00               	movlw	0
  8756  003068  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  8757  00306A  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  8758  00306C  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  8759  00306E  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  8760  003070  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  8761  003072  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  8762  003074  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  8763  003076                     l3202:
  8764  003076  C013  F001         	movff	___aodiv@quotient,?___aodiv
  8765  00307A  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  8766  00307E  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  8767  003082  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  8768  003086  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  8769  00308A  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  8770  00308E  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  8771  003092  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  8772  003096  0012               	return		;funcret
  8773  003098                     __end_of___aodiv:
  8774                           	callstack 0
  8775                           
  8776 ;; *************** function _atoi *****************
  8777 ;; Defined at:
  8778 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\atoi.c"
  8779 ;; Parameters:    Size  Location     Type
  8780 ;;  s               2    7[COMRAM] PTR const unsigned char 
  8781 ;;		 -> STR_8(5), STR_7(5), STR_6(5), STR_5(5), 
  8782 ;;		 -> STR_2(15), STR_1(15), 
  8783 ;; Auto vars:     Size  Location     Type
  8784 ;;  n               2   15[COMRAM] int 
  8785 ;;  neg             2   13[COMRAM] int 
  8786 ;; Return value:  Size  Location     Type
  8787 ;;                  2    7[COMRAM] int 
  8788 ;; Registers used:
  8789 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8790 ;; Tracked objects:
  8791 ;;		On entry : 0/0
  8792 ;;		On exit  : 0/0
  8793 ;;		Unchanged: 0/0
  8794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8795 ;;      Params:         2       0       0       0       0       0       0
  8796 ;;      Locals:         4       0       0       0       0       0       0
  8797 ;;      Temps:          4       0       0       0       0       0       0
  8798 ;;      Totals:        10       0       0       0       0       0       0
  8799 ;;Total ram usage:       10 bytes
  8800 ;; Hardware stack levels used: 1
  8801 ;; Hardware stack levels required when called: 1
  8802 ;; This function calls:
  8803 ;;		___wmul
  8804 ;;		_isdigit
  8805 ;;		_isspace
  8806 ;; This function is called by:
  8807 ;;		_vfpfcnvrt
  8808 ;; This function uses a non-reentrant model
  8809 ;;
  8810                           
  8811                           	psect	text34
  8812  0031FC                     __ptext34:
  8813                           	callstack 0
  8814  0031FC                     _atoi:
  8815                           	callstack 25
  8816  0031FC  0E00               	movlw	0
  8817  0031FE  6E11               	movwf	(atoi@n+1)^0,c
  8818  003200  0E00               	movlw	0
  8819  003202  6E10               	movwf	atoi@n^0,c
  8820  003204  0E00               	movlw	0
  8821  003206  6E0F               	movwf	(atoi@neg+1)^0,c
  8822  003208  0E00               	movlw	0
  8823  00320A  6E0E               	movwf	atoi@neg^0,c
  8824  00320C  EF0A  F019         	goto	l4178
  8825  003210                     l4174:
  8826  003210  4A08               	infsnz	atoi@s^0,f,c
  8827  003212  2A09               	incf	(atoi@s+1)^0,f,c
  8828  003214                     l4178:
  8829  003214  C008  FFF6         	movff	atoi@s,tblptrl
  8830  003218  C009  FFF7         	movff	atoi@s+1,tblptrh
  8831  00321C                     	if	0	;tblptru may be non-zero
  8832  00321C                     	endif
  8833  00321C                     	if	0	;tblptru may be non-zero
  8834  00321C                     	endif
  8835  00321C  0008               	tblrd		*
  8836  00321E  50F5               	movf	tablat,w,c
  8837  003220  0A20               	xorlw	32
  8838  003222  B4D8               	btfsc	status,2,c
  8839  003224  EF16  F019         	goto	u5091
  8840  003228  EF18  F019         	goto	u5090
  8841  00322C                     u5091:
  8842  00322C  EF08  F019         	goto	l4174
  8843  003230                     u5090:
  8844  003230  0EF7               	movlw	247
  8845  003232  6E0A               	movwf	??_atoi^0,c
  8846  003234  0EFF               	movlw	255
  8847  003236  6E0B               	movwf	(??_atoi+1)^0,c
  8848  003238  C008  FFF6         	movff	atoi@s,tblptrl
  8849  00323C  C009  FFF7         	movff	atoi@s+1,tblptrh
  8850  003240                     	if	0	;tblptru may be non-zero
  8851  003240                     	endif
  8852  003240                     	if	0	;tblptru may be non-zero
  8853  003240                     	endif
  8854  003240  0008               	tblrd		*
  8855  003242  50F5               	movf	tablat,w,c
  8856  003244  6E0C               	movwf	(??_atoi+2)^0,c
  8857  003246  6A0D               	clrf	(??_atoi+3)^0,c
  8858  003248  500A               	movf	??_atoi^0,w,c
  8859  00324A  260C               	addwf	(??_atoi+2)^0,f,c
  8860  00324C  500B               	movf	(??_atoi+1)^0,w,c
  8861  00324E  220D               	addwfc	(??_atoi+3)^0,f,c
  8862  003250  500D               	movf	(??_atoi+3)^0,w,c
  8863  003252  E109               	bnz	u5100
  8864  003254  0E05               	movlw	5
  8865  003256  5C0C               	subwf	(??_atoi+2)^0,w,c
  8866  003258  A0D8               	btfss	status,0,c
  8867  00325A  EF31  F019         	goto	u5101
  8868  00325E  EF33  F019         	goto	u5100
  8869  003262                     u5101:
  8870  003262  EF08  F019         	goto	l4174
  8871  003266                     u5100:
  8872  003266  EF3D  F019         	goto	l4186
  8873  00326A                     l4182:
  8874  00326A  0E00               	movlw	0
  8875  00326C  6E0F               	movwf	(atoi@neg+1)^0,c
  8876  00326E  0E01               	movlw	1
  8877  003270  6E0E               	movwf	atoi@neg^0,c
  8878  003272                     l4184:
  8879  003272  4A08               	infsnz	atoi@s^0,f,c
  8880  003274  2A09               	incf	(atoi@s+1)^0,f,c
  8881  003276  EF72  F019         	goto	l4194
  8882  00327A                     l4186:
  8883  00327A  C008  FFF6         	movff	atoi@s,tblptrl
  8884  00327E  C009  FFF7         	movff	atoi@s+1,tblptrh
  8885  003282                     	if	0	;tblptru may be non-zero
  8886  003282                     	endif
  8887  003282                     	if	0	;tblptru may be non-zero
  8888  003282                     	endif
  8889  003282  0008               	tblrd		*
  8890  003284  50F5               	movf	tablat,w,c
  8891  003286  6E0A               	movwf	??_atoi^0,c
  8892  003288  6A0B               	clrf	(??_atoi+1)^0,c
  8893                           
  8894                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8895                           ; Switch size 1, requested type "simple"
  8896                           ; Number of cases is 1, Range of values is 0 to 0
  8897                           ; switch strategies available:
  8898                           ; Name         Instructions Cycles
  8899                           ; simple_byte            4     3 (average)
  8900                           ;	Chosen strategy is simple_byte
  8901  00328A  500B               	movf	(??_atoi+1)^0,w,c
  8902  00328C  0A00               	xorlw	0	; case 0
  8903  00328E  B4D8               	btfsc	status,2,c
  8904  003290  EF4C  F019         	goto	l4694
  8905  003294  EF72  F019         	goto	l4194
  8906  003298                     l4694:
  8907                           
  8908                           ; Switch size 1, requested type "simple"
  8909                           ; Number of cases is 2, Range of values is 43 to 45
  8910                           ; switch strategies available:
  8911                           ; Name         Instructions Cycles
  8912                           ; simple_byte            7     4 (average)
  8913                           ;	Chosen strategy is simple_byte
  8914  003298  500A               	movf	??_atoi^0,w,c
  8915  00329A  0A2B               	xorlw	43	; case 43
  8916  00329C  B4D8               	btfsc	status,2,c
  8917  00329E  EF39  F019         	goto	l4184
  8918  0032A2  0A06               	xorlw	6	; case 45
  8919  0032A4  B4D8               	btfsc	status,2,c
  8920  0032A6  EF35  F019         	goto	l4182
  8921  0032AA  EF72  F019         	goto	l4194
  8922  0032AE                     l4188:
  8923  0032AE  C010  F001         	movff	atoi@n,___wmul@multiplier
  8924  0032B2  C011  F002         	movff	atoi@n+1,___wmul@multiplier+1
  8925  0032B6  0E00               	movlw	0
  8926  0032B8  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8927  0032BA  0E0A               	movlw	10
  8928  0032BC  6E03               	movwf	___wmul@multiplicand^0,c
  8929  0032BE  EC70  F021         	call	___wmul	;wreg free
  8930  0032C2  C008  FFF6         	movff	atoi@s,tblptrl
  8931  0032C6  C009  FFF7         	movff	atoi@s+1,tblptrh
  8932  0032CA                     	if	0	;tblptru may be non-zero
  8933  0032CA                     	endif
  8934  0032CA                     	if	0	;tblptru may be non-zero
  8935  0032CA                     	endif
  8936  0032CA  0008               	tblrd		*
  8937  0032CC  50F5               	movf	tablat,w,c
  8938  0032CE  5E01               	subwf	?___wmul^0,f,c
  8939  0032D0  0E00               	movlw	0
  8940  0032D2  5A02               	subwfb	(?___wmul+1)^0,f,c
  8941  0032D4  0E30               	movlw	48
  8942  0032D6  2401               	addwf	?___wmul^0,w,c
  8943  0032D8  6E10               	movwf	atoi@n^0,c
  8944  0032DA  0E00               	movlw	0
  8945  0032DC  2002               	addwfc	(?___wmul+1)^0,w,c
  8946  0032DE  6E11               	movwf	(atoi@n+1)^0,c
  8947  0032E0  EF39  F019         	goto	l4184
  8948  0032E4                     l4194:
  8949  0032E4  0ED0               	movlw	208
  8950  0032E6  6E0A               	movwf	??_atoi^0,c
  8951  0032E8  0EFF               	movlw	255
  8952  0032EA  6E0B               	movwf	(??_atoi+1)^0,c
  8953  0032EC  C008  FFF6         	movff	atoi@s,tblptrl
  8954  0032F0  C009  FFF7         	movff	atoi@s+1,tblptrh
  8955  0032F4                     	if	0	;tblptru may be non-zero
  8956  0032F4                     	endif
  8957  0032F4                     	if	0	;tblptru may be non-zero
  8958  0032F4                     	endif
  8959  0032F4  0008               	tblrd		*
  8960  0032F6  50F5               	movf	tablat,w,c
  8961  0032F8  6E0C               	movwf	(??_atoi+2)^0,c
  8962  0032FA  6A0D               	clrf	(??_atoi+3)^0,c
  8963  0032FC  500A               	movf	??_atoi^0,w,c
  8964  0032FE  260C               	addwf	(??_atoi+2)^0,f,c
  8965  003300  500B               	movf	(??_atoi+1)^0,w,c
  8966  003302  220D               	addwfc	(??_atoi+3)^0,f,c
  8967  003304  500D               	movf	(??_atoi+3)^0,w,c
  8968  003306  E109               	bnz	u5110
  8969  003308  0E0A               	movlw	10
  8970  00330A  5C0C               	subwf	(??_atoi+2)^0,w,c
  8971  00330C  A0D8               	btfss	status,0,c
  8972  00330E  EF8B  F019         	goto	u5111
  8973  003312  EF8D  F019         	goto	u5110
  8974  003316                     u5111:
  8975  003316  EF57  F019         	goto	l4188
  8976  00331A                     u5110:
  8977  00331A  500E               	movf	atoi@neg^0,w,c
  8978  00331C  100F               	iorwf	(atoi@neg+1)^0,w,c
  8979  00331E  A4D8               	btfss	status,2,c
  8980  003320  EF94  F019         	goto	u5121
  8981  003324  EF96  F019         	goto	u5120
  8982  003328                     u5121:
  8983  003328  EFA4  F019         	goto	l1079
  8984  00332C                     u5120:
  8985  00332C  C010  F00A         	movff	atoi@n,??_atoi
  8986  003330  C011  F00B         	movff	atoi@n+1,??_atoi+1
  8987  003334  1E0A               	comf	??_atoi^0,f,c
  8988  003336  1E0B               	comf	(??_atoi+1)^0,f,c
  8989  003338  4A0A               	infsnz	??_atoi^0,f,c
  8990  00333A  2A0B               	incf	(??_atoi+1)^0,f,c
  8991  00333C  C00A  F008         	movff	??_atoi,?_atoi
  8992  003340  C00B  F009         	movff	??_atoi+1,?_atoi+1
  8993  003344  EFA8  F019         	goto	l1082
  8994  003348                     l1079:
  8995  003348  C010  F008         	movff	atoi@n,?_atoi
  8996  00334C  C011  F009         	movff	atoi@n+1,?_atoi+1
  8997  003350                     l1082:
  8998  003350  0012               	return		;funcret
  8999  003352                     __end_of_atoi:
  9000                           	callstack 0
  9001                           
  9002 ;; *************** function _isspace *****************
  9003 ;; Defined at:
  9004 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isspace.c"
  9005 ;; Parameters:    Size  Location     Type
  9006 ;;  c               2    0[COMRAM] int 
  9007 ;; Auto vars:     Size  Location     Type
  9008 ;;		None
  9009 ;; Return value:  Size  Location     Type
  9010 ;;                  2    0[COMRAM] int 
  9011 ;; Registers used:
  9012 ;;		wreg, status,2, status,0
  9013 ;; Tracked objects:
  9014 ;;		On entry : 0/0
  9015 ;;		On exit  : 0/0
  9016 ;;		Unchanged: 0/0
  9017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9018 ;;      Params:         2       0       0       0       0       0       0
  9019 ;;      Locals:         1       0       0       0       0       0       0
  9020 ;;      Temps:          4       0       0       0       0       0       0
  9021 ;;      Totals:         7       0       0       0       0       0       0
  9022 ;;Total ram usage:        7 bytes
  9023 ;; Hardware stack levels used: 1
  9024 ;; This function calls:
  9025 ;;		Nothing
  9026 ;; This function is called by:
  9027 ;;		_atoi
  9028 ;; This function uses a non-reentrant model
  9029 ;;
  9030                           
  9031                           	psect	text35
  9032  004016                     __ptext35:
  9033                           	callstack 0
  9034  004016                     _isspace:
  9035                           	callstack 25
  9036  004016  0E01               	movlw	1
  9037  004018  6E07               	movwf	_isspace$1251^0,c
  9038  00401A  0E20               	movlw	32
  9039  00401C  1801               	xorwf	isspace@c^0,w,c
  9040  00401E  1002               	iorwf	(isspace@c+1)^0,w,c
  9041  004020  B4D8               	btfsc	status,2,c
  9042  004022  EF15  F020         	goto	u4431
  9043  004026  EF17  F020         	goto	u4430
  9044  00402A                     u4431:
  9045  00402A  EF30  F020         	goto	l3788
  9046  00402E                     u4430:
  9047  00402E  0EF7               	movlw	247
  9048  004030  6E03               	movwf	??_isspace^0,c
  9049  004032  0EFF               	movlw	255
  9050  004034  6E04               	movwf	(??_isspace+1)^0,c
  9051  004036  C001  F005         	movff	isspace@c,??_isspace+2
  9052  00403A  C002  F006         	movff	isspace@c+1,??_isspace+3
  9053  00403E  5003               	movf	??_isspace^0,w,c
  9054  004040  2605               	addwf	(??_isspace+2)^0,f,c
  9055  004042  5004               	movf	(??_isspace+1)^0,w,c
  9056  004044  2206               	addwfc	(??_isspace+3)^0,f,c
  9057  004046  5006               	movf	(??_isspace+3)^0,w,c
  9058  004048  E109               	bnz	u4440
  9059  00404A  0E05               	movlw	5
  9060  00404C  5C05               	subwf	(??_isspace+2)^0,w,c
  9061  00404E  A0D8               	btfss	status,0,c
  9062  004050  EF2C  F020         	goto	u4441
  9063  004054  EF2E  F020         	goto	u4440
  9064  004058                     u4441:
  9065  004058  EF30  F020         	goto	l3788
  9066  00405C                     u4440:
  9067  00405C  0E00               	movlw	0
  9068  00405E  6E07               	movwf	_isspace$1251^0,c
  9069  004060                     l3788:
  9070  004060  C007  F001         	movff	_isspace$1251,?_isspace
  9071  004064  6A02               	clrf	(?_isspace+1)^0,c
  9072  004066  0012               	return		;funcret
  9073  004068                     __end_of_isspace:
  9074                           	callstack 0
  9075                           
  9076 ;; *************** function _isdigit *****************
  9077 ;; Defined at:
  9078 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isdigit.c"
  9079 ;; Parameters:    Size  Location     Type
  9080 ;;  c               2    0[COMRAM] int 
  9081 ;; Auto vars:     Size  Location     Type
  9082 ;;		None
  9083 ;; Return value:  Size  Location     Type
  9084 ;;                  2    0[COMRAM] int 
  9085 ;; Registers used:
  9086 ;;		wreg, status,2, status,0
  9087 ;; Tracked objects:
  9088 ;;		On entry : 0/0
  9089 ;;		On exit  : 0/0
  9090 ;;		Unchanged: 0/0
  9091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9092 ;;      Params:         2       0       0       0       0       0       0
  9093 ;;      Locals:         0       0       0       0       0       0       0
  9094 ;;      Temps:          4       0       0       0       0       0       0
  9095 ;;      Totals:         6       0       0       0       0       0       0
  9096 ;;Total ram usage:        6 bytes
  9097 ;; Hardware stack levels used: 1
  9098 ;; This function calls:
  9099 ;;		Nothing
  9100 ;; This function is called by:
  9101 ;;		_vfpfcnvrt
  9102 ;;		_atoi
  9103 ;; This function uses a non-reentrant model
  9104 ;;
  9105                           
  9106                           	psect	text36
  9107  004226                     __ptext36:
  9108                           	callstack 0
  9109  004226                     _isdigit:
  9110                           	callstack 26
  9111  004226  0ED0               	movlw	208
  9112  004228  6E03               	movwf	??_isdigit^0,c
  9113  00422A  0EFF               	movlw	255
  9114  00422C  6E04               	movwf	(??_isdigit+1)^0,c
  9115  00422E  C001  F005         	movff	isdigit@c,??_isdigit+2
  9116  004232  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  9117  004236  5003               	movf	??_isdigit^0,w,c
  9118  004238  2605               	addwf	(??_isdigit+2)^0,f,c
  9119  00423A  5004               	movf	(??_isdigit+1)^0,w,c
  9120  00423C  2206               	addwfc	(??_isdigit+3)^0,f,c
  9121  00423E  5006               	movf	(??_isdigit+3)^0,w,c
  9122  004240  E10A               	bnz	u4410
  9123  004242  0E0A               	movlw	10
  9124  004244  5C05               	subwf	(??_isdigit+2)^0,w,c
  9125  004246  A0D8               	btfss	status,0,c
  9126  004248  EF28  F021         	goto	u4411
  9127  00424C  EF2B  F021         	goto	u4410
  9128  004250                     u4411:
  9129  004250  0E01               	movlw	1
  9130  004252  EF2C  F021         	goto	u4420
  9131  004256                     u4410:
  9132  004256  0E00               	movlw	0
  9133  004258                     u4420:
  9134  004258  6E01               	movwf	?_isdigit^0,c
  9135  00425A  6A02               	clrf	(?_isdigit+1)^0,c
  9136  00425C  0012               	return		;funcret
  9137  00425E                     __end_of_isdigit:
  9138                           	callstack 0
  9139                           
  9140 ;; *************** function ___wmul *****************
  9141 ;; Defined at:
  9142 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
  9143 ;; Parameters:    Size  Location     Type
  9144 ;;  multiplier      2    0[COMRAM] unsigned int 
  9145 ;;  multiplicand    2    2[COMRAM] unsigned int 
  9146 ;; Auto vars:     Size  Location     Type
  9147 ;;  product         2    4[COMRAM] unsigned int 
  9148 ;; Return value:  Size  Location     Type
  9149 ;;                  2    0[COMRAM] unsigned int 
  9150 ;; Registers used:
  9151 ;;		wreg, status,2, status,0, prodl, prodh
  9152 ;; Tracked objects:
  9153 ;;		On entry : 0/0
  9154 ;;		On exit  : 0/0
  9155 ;;		Unchanged: 0/0
  9156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9157 ;;      Params:         4       0       0       0       0       0       0
  9158 ;;      Locals:         2       0       0       0       0       0       0
  9159 ;;      Temps:          0       0       0       0       0       0       0
  9160 ;;      Totals:         6       0       0       0       0       0       0
  9161 ;;Total ram usage:        6 bytes
  9162 ;; Hardware stack levels used: 1
  9163 ;; This function calls:
  9164 ;;		Nothing
  9165 ;; This function is called by:
  9166 ;;		_atoi
  9167 ;; This function uses a non-reentrant model
  9168 ;;
  9169                           
  9170                           	psect	text37
  9171  0042E0                     __ptext37:
  9172                           	callstack 0
  9173  0042E0                     ___wmul:
  9174                           	callstack 25
  9175  0042E0  5001               	movf	___wmul@multiplier^0,w,c
  9176  0042E2  0203               	mulwf	___wmul@multiplicand^0,c
  9177  0042E4  CFF3 F005          	movff	prodl,___wmul@product
  9178  0042E8  CFF4 F006          	movff	prodh,___wmul@product+1
  9179  0042EC  5001               	movf	___wmul@multiplier^0,w,c
  9180  0042EE  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  9181  0042F0  50F3               	movf	243,w,c
  9182  0042F2  2606               	addwf	(___wmul@product+1)^0,f,c
  9183  0042F4  5002               	movf	(___wmul@multiplier+1)^0,w,c
  9184  0042F6  0203               	mulwf	___wmul@multiplicand^0,c
  9185  0042F8  50F3               	movf	243,w,c
  9186  0042FA  2606               	addwf	(___wmul@product+1)^0,f,c
  9187  0042FC  C005  F001         	movff	___wmul@product,?___wmul
  9188  004300  C006  F002         	movff	___wmul@product+1,?___wmul+1
  9189  004304  0012               	return		;funcret
  9190  004306                     __end_of___wmul:
  9191                           	callstack 0
  9192                           
  9193 ;; *************** function _lcd_write *****************
  9194 ;; Defined at:
  9195 ;;		line 77 in file "LCD4b_EXSTO.c"
  9196 ;; Parameters:    Size  Location     Type
  9197 ;;  lin             1    wreg     unsigned char 
  9198 ;;  col             1    6[COMRAM] unsigned char 
  9199 ;;  str             2    7[COMRAM] PTR unsigned char 
  9200 ;;		 -> STR_14(16), STR_13(16), STR_12(8), STR_11(7), 
  9201 ;;		 -> STR_10(8), STR_9(7), Buffer_D4(8), Buffer_D3(8), 
  9202 ;;		 -> Buffer_D2(8), Buffer_D1(8), STR_4(9), STR_3(8), 
  9203 ;;		 -> VoltageBuffer(16), VdigBuffer(16), 
  9204 ;; Auto vars:     Size  Location     Type
  9205 ;;  lin             1   10[COMRAM] unsigned char 
  9206 ;;  end             1    9[COMRAM] unsigned char 
  9207 ;; Return value:  Size  Location     Type
  9208 ;;                  1    wreg      void 
  9209 ;; Registers used:
  9210 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9211 ;; Tracked objects:
  9212 ;;		On entry : 0/0
  9213 ;;		On exit  : 0/0
  9214 ;;		Unchanged: 0/0
  9215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9216 ;;      Params:         3       0       0       0       0       0       0
  9217 ;;      Locals:         2       0       0       0       0       0       0
  9218 ;;      Temps:          0       0       0       0       0       0       0
  9219 ;;      Totals:         5       0       0       0       0       0       0
  9220 ;;Total ram usage:        5 bytes
  9221 ;; Hardware stack levels used: 1
  9222 ;; Hardware stack levels required when called: 3
  9223 ;; This function calls:
  9224 ;;		_lcd_send_byte
  9225 ;; This function is called by:
  9226 ;;		_lcd_SENSOR
  9227 ;;		_lcd_LEDS
  9228 ;;		_lcd_clear
  9229 ;; This function uses a non-reentrant model
  9230 ;;
  9231                           
  9232                           	psect	text38
  9233  003CC8                     __ptext38:
  9234                           	callstack 0
  9235  003CC8                     _lcd_write:
  9236                           	callstack 26
  9237                           
  9238                           ;incstack = 0
  9239                           ;lcd_write@lin stored from wreg
  9240  003CC8  6E0B               	movwf	lcd_write@lin^0,c
  9241  003CCA                     
  9242                           ;LCD4b_EXSTO.c: 77: void lcd_write(char lin, char col, char *str);LCD4b_EXSTO.c: 78: {;L
      +                          CD4b_EXSTO.c: 79:     char end;;LCD4b_EXSTO.c: 81:     if(lin == 1)
  9243  003CCA  040B               	decf	lcd_write@lin^0,w,c
  9244  003CCC  A4D8               	btfss	status,2,c
  9245  003CCE  EF6B  F01E         	goto	u5371
  9246  003CD2  EF6D  F01E         	goto	u5370
  9247  003CD6                     u5371:
  9248  003CD6  EF72  F01E         	goto	l4432
  9249  003CDA                     u5370:
  9250  003CDA                     
  9251                           ;LCD4b_EXSTO.c: 82:     {;LCD4b_EXSTO.c: 83:         end = col + 0X80 - 1;
  9252  003CDA  5007               	movf	lcd_write@col^0,w,c
  9253  003CDC  0F7F               	addlw	127
  9254  003CDE  6E0A               	movwf	lcd_write@end^0,c
  9255                           
  9256                           ;LCD4b_EXSTO.c: 84:     }
  9257  003CE0  EF7E  F01E         	goto	l4436
  9258  003CE4                     l4432:
  9259  003CE4  0E02               	movlw	2
  9260  003CE6  180B               	xorwf	lcd_write@lin^0,w,c
  9261  003CE8  A4D8               	btfss	status,2,c
  9262  003CEA  EF79  F01E         	goto	u5381
  9263  003CEE  EF7B  F01E         	goto	u5380
  9264  003CF2                     u5381:
  9265  003CF2  EF7E  F01E         	goto	l4436
  9266  003CF6                     u5380:
  9267  003CF6                     
  9268                           ;LCD4b_EXSTO.c: 86:     {;LCD4b_EXSTO.c: 87:         end = col + 0xC0 - 1;
  9269  003CF6  5007               	movf	lcd_write@col^0,w,c
  9270  003CF8  0FBF               	addlw	191
  9271  003CFA  6E0A               	movwf	lcd_write@end^0,c
  9272  003CFC                     l4436:
  9273                           
  9274                           ;LCD4b_EXSTO.c: 89:     lcd_send_byte(0,end);
  9275  003CFC  C00A  F005         	movff	lcd_write@end,lcd_send_byte@data
  9276  003D00  0E00               	movlw	0
  9277  003D02  EC93  F021         	call	_lcd_send_byte
  9278                           
  9279                           ;LCD4b_EXSTO.c: 91:     while(*str)
  9280  003D06  EF9B  F01E         	goto	l4442
  9281  003D0A                     l4438:
  9282                           
  9283                           ;LCD4b_EXSTO.c: 92:     {;LCD4b_EXSTO.c: 93:         lcd_send_byte(1,*str);
  9284  003D0A  C008  FFF6         	movff	lcd_write@str,tblptrl
  9285  003D0E  C009  FFF7         	movff	lcd_write@str+1,tblptrh
  9286  003D12  6AF8               	clrf	tblptru,c
  9287  003D14  0E05               	movlw	(high __ramtop+-1)
  9288  003D16  64F7               	cpfsgt	tblptrh,c
  9289  003D18  D003               	bra	u5397
  9290  003D1A  0008               	tblrd		*
  9291  003D1C  50F5               	movf	tablat,w,c
  9292  003D1E  D005               	bra	u5390
  9293  003D20                     u5397:
  9294  003D20  CFF6 FFE1          	movff	tblptrl,fsr1l
  9295  003D24  CFF7 FFE2          	movff	tblptrh,fsr1h
  9296  003D28  50E7               	movf	indf1,w,c
  9297  003D2A                     u5390:
  9298  003D2A  6E05               	movwf	lcd_send_byte@data^0,c
  9299  003D2C  0E01               	movlw	1
  9300  003D2E  EC93  F021         	call	_lcd_send_byte
  9301  003D32                     
  9302                           ;LCD4b_EXSTO.c: 94:         str++;
  9303  003D32  4A08               	infsnz	lcd_write@str^0,f,c
  9304  003D34  2A09               	incf	(lcd_write@str+1)^0,f,c
  9305  003D36                     l4442:
  9306                           
  9307                           ;LCD4b_EXSTO.c: 91:     while(*str)
  9308  003D36  C008  FFF6         	movff	lcd_write@str,tblptrl
  9309  003D3A  C009  FFF7         	movff	lcd_write@str+1,tblptrh
  9310  003D3E  6AF8               	clrf	tblptru,c
  9311  003D40  0E05               	movlw	(high __ramtop+-1)
  9312  003D42  64F7               	cpfsgt	tblptrh,c
  9313  003D44  D003               	bra	u5407
  9314  003D46  0008               	tblrd		*
  9315  003D48  50F5               	movf	tablat,w,c
  9316  003D4A  D005               	bra	u5400
  9317  003D4C                     u5407:
  9318  003D4C  CFF6 FFE1          	movff	tblptrl,fsr1l
  9319  003D50  CFF7 FFE2          	movff	tblptrh,fsr1h
  9320  003D54  50E7               	movf	indf1,w,c
  9321  003D56                     u5400:
  9322  003D56  0900               	iorlw	0
  9323  003D58  A4D8               	btfss	status,2,c
  9324  003D5A  EFB1  F01E         	goto	u5411
  9325  003D5E  EFB3  F01E         	goto	u5410
  9326  003D62                     u5411:
  9327  003D62  EF85  F01E         	goto	l4438
  9328  003D66                     u5410:
  9329  003D66  0012               	return		;funcret
  9330  003D68                     __end_of_lcd_write:
  9331                           	callstack 0
  9332                           
  9333 ;; *************** function _lcd_send_byte *****************
  9334 ;; Defined at:
  9335 ;;		line 63 in file "LCD4b_EXSTO.c"
  9336 ;; Parameters:    Size  Location     Type
  9337 ;;  level           1    wreg     unsigned char 
  9338 ;;  data            1    4[COMRAM] unsigned char 
  9339 ;; Auto vars:     Size  Location     Type
  9340 ;;  level           1    5[COMRAM] unsigned char 
  9341 ;; Return value:  Size  Location     Type
  9342 ;;                  1    wreg      void 
  9343 ;; Registers used:
  9344 ;;		wreg, status,2, status,0, cstack
  9345 ;; Tracked objects:
  9346 ;;		On entry : 0/0
  9347 ;;		On exit  : 0/0
  9348 ;;		Unchanged: 0/0
  9349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9350 ;;      Params:         1       0       0       0       0       0       0
  9351 ;;      Locals:         1       0       0       0       0       0       0
  9352 ;;      Temps:          0       0       0       0       0       0       0
  9353 ;;      Totals:         2       0       0       0       0       0       0
  9354 ;;Total ram usage:        2 bytes
  9355 ;; Hardware stack levels used: 1
  9356 ;; Hardware stack levels required when called: 2
  9357 ;; This function calls:
  9358 ;;		_lcd_cmd
  9359 ;; This function is called by:
  9360 ;;		_lcd_write
  9361 ;; This function uses a non-reentrant model
  9362 ;;
  9363                           
  9364                           	psect	text39
  9365  004326                     __ptext39:
  9366                           	callstack 0
  9367  004326                     _lcd_send_byte:
  9368                           	callstack 26
  9369                           
  9370                           ;incstack = 0
  9371                           ;lcd_send_byte@level stored from wreg
  9372  004326  6E06               	movwf	lcd_send_byte@level^0,c
  9373  004328                     
  9374                           ;LCD4b_EXSTO.c: 63: void lcd_send_byte(char level, char data);LCD4b_EXSTO.c: 64: {;LCD4b
      +                          _EXSTO.c: 65:     PORTEbits.RE0 = level;
  9375  004328  B006               	btfsc	lcd_send_byte@level^0,0,c
  9376  00432A  D002               	bra	u5355
  9377  00432C  9084               	bcf	132,0,c	;volatile
  9378  00432E  D001               	bra	u5356
  9379  004330                     u5355:
  9380  004330  8084               	bsf	132,0,c	;volatile
  9381  004332                     u5356:
  9382  004332                     
  9383                           ;LCD4b_EXSTO.c: 66:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  9384  004332  0E42               	movlw	66
  9385  004334                     u5787:
  9386  004334  2EE8               	decfsz	wreg,f,c
  9387  004336  D7FE               	bra	u5787
  9388  004338  D000               	nop2	
  9389  00433A                     
  9390                           ;LCD4b_EXSTO.c: 67:     PORTEbits.RE2 = 0;
  9391  00433A  9484               	bcf	132,2,c	;volatile
  9392  00433C                     
  9393                           ;LCD4b_EXSTO.c: 68:     lcd_cmd(data);
  9394  00433C  5005               	movf	lcd_send_byte@data^0,w,c
  9395  00433E  ECB2  F01B         	call	_lcd_cmd
  9396  004342  0012               	return		;funcret
  9397  004344                     __end_of_lcd_send_byte:
  9398                           	callstack 0
  9399                           
  9400 ;; *************** function _lcd_cmd *****************
  9401 ;; Defined at:
  9402 ;;		line 42 in file "LCD4b_EXSTO.c"
  9403 ;; Parameters:    Size  Location     Type
  9404 ;;  cmd             1    wreg     unsigned char 
  9405 ;; Auto vars:     Size  Location     Type
  9406 ;;  cmd             1    3[COMRAM] unsigned char 
  9407 ;; Return value:  Size  Location     Type
  9408 ;;                  1    wreg      void 
  9409 ;; Registers used:
  9410 ;;		wreg, status,2, status,0, cstack
  9411 ;; Tracked objects:
  9412 ;;		On entry : 0/0
  9413 ;;		On exit  : 0/0
  9414 ;;		Unchanged: 0/0
  9415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9416 ;;      Params:         0       0       0       0       0       0       0
  9417 ;;      Locals:         1       0       0       0       0       0       0
  9418 ;;      Temps:          1       0       0       0       0       0       0
  9419 ;;      Totals:         2       0       0       0       0       0       0
  9420 ;;Total ram usage:        2 bytes
  9421 ;; Hardware stack levels used: 1
  9422 ;; Hardware stack levels required when called: 1
  9423 ;; This function calls:
  9424 ;;		_set_bit
  9425 ;; This function is called by:
  9426 ;;		_lcd_init
  9427 ;;		_lcd_send_byte
  9428 ;; This function uses a non-reentrant model
  9429 ;;
  9430                           
  9431                           	psect	text40
  9432  003764                     __ptext40:
  9433                           	callstack 0
  9434  003764                     _lcd_cmd:
  9435                           	callstack 28
  9436                           
  9437                           ;incstack = 0
  9438                           ;lcd_cmd@cmd stored from wreg
  9439  003764  6E04               	movwf	lcd_cmd@cmd^0,c
  9440  003766                     
  9441                           ;LCD4b_EXSTO.c: 42: void lcd_cmd(char cmd);LCD4b_EXSTO.c: 43: {;LCD4b_EXSTO.c: 44:     P
      +                          ORTDbits.RD4 = set_bit(cmd, 0b00010000);
  9442  003766  0E10               	movlw	16
  9443  003768  6E01               	movwf	set_bit@comp^0,c
  9444  00376A  5004               	movf	lcd_cmd@cmd^0,w,c
  9445  00376C  EC83  F021         	call	_set_bit
  9446  003770  6E03               	movwf	??_lcd_cmd^0,c
  9447  003772  3A03               	swapf	??_lcd_cmd^0,f,c
  9448  003774  5083               	movf	131,w,c	;volatile
  9449  003776  1803               	xorwf	??_lcd_cmd^0,w,c
  9450  003778  0BEF               	andlw	-17
  9451  00377A  1803               	xorwf	??_lcd_cmd^0,w,c
  9452  00377C  6E83               	movwf	131,c	;volatile
  9453                           
  9454                           ;LCD4b_EXSTO.c: 45:     PORTDbits.RD5 = set_bit(cmd, 0b00100000);
  9455  00377E  0E20               	movlw	32
  9456  003780  6E01               	movwf	set_bit@comp^0,c
  9457  003782  5004               	movf	lcd_cmd@cmd^0,w,c
  9458  003784  EC83  F021         	call	_set_bit
  9459  003788  6E03               	movwf	??_lcd_cmd^0,c
  9460  00378A  3A03               	swapf	??_lcd_cmd^0,f,c
  9461  00378C  4603               	rlncf	??_lcd_cmd^0,f,c
  9462  00378E  5083               	movf	131,w,c	;volatile
  9463  003790  1803               	xorwf	??_lcd_cmd^0,w,c
  9464  003792  0BDF               	andlw	-33
  9465  003794  1803               	xorwf	??_lcd_cmd^0,w,c
  9466  003796  6E83               	movwf	131,c	;volatile
  9467                           
  9468                           ;LCD4b_EXSTO.c: 46:     PORTDbits.RD6 = set_bit(cmd, 0b01000000);
  9469  003798  0E40               	movlw	64
  9470  00379A  6E01               	movwf	set_bit@comp^0,c
  9471  00379C  5004               	movf	lcd_cmd@cmd^0,w,c
  9472  00379E  EC83  F021         	call	_set_bit
  9473  0037A2  6E03               	movwf	??_lcd_cmd^0,c
  9474  0037A4  3A03               	swapf	??_lcd_cmd^0,f,c
  9475  0037A6  4603               	rlncf	??_lcd_cmd^0,f,c
  9476  0037A8  4603               	rlncf	??_lcd_cmd^0,f,c
  9477  0037AA  5083               	movf	131,w,c	;volatile
  9478  0037AC  1803               	xorwf	??_lcd_cmd^0,w,c
  9479  0037AE  0BBF               	andlw	-65
  9480  0037B0  1803               	xorwf	??_lcd_cmd^0,w,c
  9481  0037B2  6E83               	movwf	131,c	;volatile
  9482                           
  9483                           ;LCD4b_EXSTO.c: 47:     PORTDbits.RD7 = set_bit(cmd, 0b10000000);
  9484  0037B4  0E80               	movlw	128
  9485  0037B6  6E01               	movwf	set_bit@comp^0,c
  9486  0037B8  5004               	movf	lcd_cmd@cmd^0,w,c
  9487  0037BA  EC83  F021         	call	_set_bit
  9488  0037BE  6E03               	movwf	??_lcd_cmd^0,c
  9489  0037C0  3203               	rrcf	??_lcd_cmd^0,f,c
  9490  0037C2  3203               	rrcf	??_lcd_cmd^0,f,c
  9491  0037C4  5083               	movf	131,w,c	;volatile
  9492  0037C6  1803               	xorwf	??_lcd_cmd^0,w,c
  9493  0037C8  0B7F               	andlw	-129
  9494  0037CA  1803               	xorwf	??_lcd_cmd^0,w,c
  9495  0037CC  6E83               	movwf	131,c	;volatile
  9496  0037CE                     
  9497                           ;LCD4b_EXSTO.c: 49:     PORTEbits.RE2 = 1;
  9498  0037CE  8484               	bsf	132,2,c	;volatile
  9499  0037D0                     
  9500                           ;LCD4b_EXSTO.c: 50:     PORTEbits.RE2 = 0;
  9501  0037D0  9484               	bcf	132,2,c	;volatile
  9502  0037D2                     
  9503                           ;LCD4b_EXSTO.c: 52:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  9504  0037D2  0E42               	movlw	66
  9505  0037D4                     u5797:
  9506  0037D4  2EE8               	decfsz	wreg,f,c
  9507  0037D6  D7FE               	bra	u5797
  9508  0037D8  D000               	nop2	
  9509  0037DA                     
  9510                           ;LCD4b_EXSTO.c: 54:     PORTDbits.RD4 = set_bit(cmd, 0b00000001);
  9511  0037DA  0E01               	movlw	1
  9512  0037DC  6E01               	movwf	set_bit@comp^0,c
  9513  0037DE  5004               	movf	lcd_cmd@cmd^0,w,c
  9514  0037E0  EC83  F021         	call	_set_bit
  9515  0037E4  6E03               	movwf	??_lcd_cmd^0,c
  9516  0037E6  3A03               	swapf	??_lcd_cmd^0,f,c
  9517  0037E8  5083               	movf	131,w,c	;volatile
  9518  0037EA  1803               	xorwf	??_lcd_cmd^0,w,c
  9519  0037EC  0BEF               	andlw	-17
  9520  0037EE  1803               	xorwf	??_lcd_cmd^0,w,c
  9521  0037F0  6E83               	movwf	131,c	;volatile
  9522  0037F2                     
  9523                           ;LCD4b_EXSTO.c: 55:     PORTDbits.RD5 = set_bit(cmd, 0b00000010);
  9524  0037F2  0E02               	movlw	2
  9525  0037F4  6E01               	movwf	set_bit@comp^0,c
  9526  0037F6  5004               	movf	lcd_cmd@cmd^0,w,c
  9527  0037F8  EC83  F021         	call	_set_bit
  9528  0037FC  6E03               	movwf	??_lcd_cmd^0,c
  9529  0037FE  3A03               	swapf	??_lcd_cmd^0,f,c
  9530  003800  4603               	rlncf	??_lcd_cmd^0,f,c
  9531  003802  5083               	movf	131,w,c	;volatile
  9532  003804  1803               	xorwf	??_lcd_cmd^0,w,c
  9533  003806  0BDF               	andlw	-33
  9534  003808  1803               	xorwf	??_lcd_cmd^0,w,c
  9535  00380A  6E83               	movwf	131,c	;volatile
  9536  00380C                     
  9537                           ;LCD4b_EXSTO.c: 56:     PORTDbits.RD6 = set_bit(cmd, 0b00000100);
  9538  00380C  0E04               	movlw	4
  9539  00380E  6E01               	movwf	set_bit@comp^0,c
  9540  003810  5004               	movf	lcd_cmd@cmd^0,w,c
  9541  003812  EC83  F021         	call	_set_bit
  9542  003816  6E03               	movwf	??_lcd_cmd^0,c
  9543  003818  3A03               	swapf	??_lcd_cmd^0,f,c
  9544  00381A  4603               	rlncf	??_lcd_cmd^0,f,c
  9545  00381C  4603               	rlncf	??_lcd_cmd^0,f,c
  9546  00381E  5083               	movf	131,w,c	;volatile
  9547  003820  1803               	xorwf	??_lcd_cmd^0,w,c
  9548  003822  0BBF               	andlw	-65
  9549  003824  1803               	xorwf	??_lcd_cmd^0,w,c
  9550  003826  6E83               	movwf	131,c	;volatile
  9551  003828                     
  9552                           ;LCD4b_EXSTO.c: 57:     PORTDbits.RD7 = set_bit(cmd, 0b00001000);
  9553  003828  0E08               	movlw	8
  9554  00382A  6E01               	movwf	set_bit@comp^0,c
  9555  00382C  5004               	movf	lcd_cmd@cmd^0,w,c
  9556  00382E  EC83  F021         	call	_set_bit
  9557  003832  6E03               	movwf	??_lcd_cmd^0,c
  9558  003834  3203               	rrcf	??_lcd_cmd^0,f,c
  9559  003836  3203               	rrcf	??_lcd_cmd^0,f,c
  9560  003838  5083               	movf	131,w,c	;volatile
  9561  00383A  1803               	xorwf	??_lcd_cmd^0,w,c
  9562  00383C  0B7F               	andlw	-129
  9563  00383E  1803               	xorwf	??_lcd_cmd^0,w,c
  9564  003840  6E83               	movwf	131,c	;volatile
  9565  003842                     
  9566                           ;LCD4b_EXSTO.c: 59:     PORTEbits.RE2 = 1;
  9567  003842  8484               	bsf	132,2,c	;volatile
  9568  003844                     
  9569                           ;LCD4b_EXSTO.c: 60:     PORTEbits.RE2 = 0;
  9570  003844  9484               	bcf	132,2,c	;volatile
  9571  003846  0012               	return		;funcret
  9572  003848                     __end_of_lcd_cmd:
  9573                           	callstack 0
  9574                           
  9575 ;; *************** function _set_bit *****************
  9576 ;; Defined at:
  9577 ;;		line 36 in file "LCD4b_EXSTO.c"
  9578 ;; Parameters:    Size  Location     Type
  9579 ;;  cmd             1    wreg     unsigned char 
  9580 ;;  comp            1    0[COMRAM] unsigned char 
  9581 ;; Auto vars:     Size  Location     Type
  9582 ;;  cmd             1    1[COMRAM] unsigned char 
  9583 ;; Return value:  Size  Location     Type
  9584 ;;                  1    wreg      unsigned char 
  9585 ;; Registers used:
  9586 ;;		wreg, status,2, status,0
  9587 ;; Tracked objects:
  9588 ;;		On entry : 0/0
  9589 ;;		On exit  : 0/0
  9590 ;;		Unchanged: 0/0
  9591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9592 ;;      Params:         1       0       0       0       0       0       0
  9593 ;;      Locals:         1       0       0       0       0       0       0
  9594 ;;      Temps:          0       0       0       0       0       0       0
  9595 ;;      Totals:         2       0       0       0       0       0       0
  9596 ;;Total ram usage:        2 bytes
  9597 ;; Hardware stack levels used: 1
  9598 ;; This function calls:
  9599 ;;		Nothing
  9600 ;; This function is called by:
  9601 ;;		_lcd_cmd
  9602 ;; This function uses a non-reentrant model
  9603 ;;
  9604                           
  9605                           	psect	text41
  9606  004306                     __ptext41:
  9607                           	callstack 0
  9608  004306                     _set_bit:
  9609                           	callstack 28
  9610                           
  9611                           ;incstack = 0
  9612                           ;set_bit@cmd stored from wreg
  9613  004306  6E02               	movwf	set_bit@cmd^0,c
  9614  004308                     
  9615                           ;LCD4b_EXSTO.c: 36: char set_bit(char cmd, char comp);LCD4b_EXSTO.c: 37: {;LCD4b_EXSTO.c
      +                          : 38:     if((cmd & comp) >= 1) return 1;
  9616  004308  5002               	movf	set_bit@cmd^0,w,c
  9617  00430A  1401               	andwf	set_bit@comp^0,w,c
  9618  00430C  0900               	iorlw	0
  9619  00430E  B4D8               	btfsc	status,2,c
  9620  004310  EF8C  F021         	goto	u4451
  9621  004314  EF8E  F021         	goto	u4450
  9622  004318                     u4451:
  9623  004318  EF91  F021         	goto	l3800
  9624  00431C                     u4450:
  9625  00431C  0E01               	movlw	1
  9626  00431E  EF92  F021         	goto	l128
  9627  004322                     l3800:
  9628  004322  0E00               	movlw	0
  9629  004324                     l128:
  9630  004324  0012               	return		;funcret
  9631  004326                     __end_of_set_bit:
  9632                           	callstack 0
  9633                           
  9634 ;; *************** function _conv_AN0 *****************
  9635 ;; Defined at:
  9636 ;;		line 106 in file "Main_program_meter.c"
  9637 ;; Parameters:    Size  Location     Type
  9638 ;;		None
  9639 ;; Auto vars:     Size  Location     Type
  9640 ;;		None
  9641 ;; Return value:  Size  Location     Type
  9642 ;;                  1    wreg      void 
  9643 ;; Registers used:
  9644 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9645 ;; Tracked objects:
  9646 ;;		On entry : 0/0
  9647 ;;		On exit  : 0/0
  9648 ;;		Unchanged: 0/0
  9649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9650 ;;      Params:         0       0       0       0       0       0       0
  9651 ;;      Locals:         0       0       0       0       0       0       0
  9652 ;;      Temps:          2       0       0       0       0       0       0
  9653 ;;      Totals:         2       0       0       0       0       0       0
  9654 ;;Total ram usage:        2 bytes
  9655 ;; Hardware stack levels used: 1
  9656 ;; Hardware stack levels required when called: 1
  9657 ;; This function calls:
  9658 ;;		___flmul
  9659 ;;		___xxtofl
  9660 ;; This function is called by:
  9661 ;;		_main
  9662 ;; This function uses a non-reentrant model
  9663 ;;
  9664                           
  9665                           	psect	text42
  9666  003E94                     __ptext42:
  9667                           	callstack 0
  9668  003E94                     _conv_AN0:
  9669                           	callstack 29
  9670  003E94                     
  9671                           ;Main_program_meter.c: 108:     _delay((unsigned long)((30)*(8000000/4000000.0)));
  9672  003E94  0E14               	movlw	20
  9673  003E96                     u5807:
  9674  003E96  2EE8               	decfsz	wreg,f,c
  9675  003E98  D7FE               	bra	u5807
  9676  003E9A                     
  9677                           ;Main_program_meter.c: 109:     ADCON0bits.GO = 1;
  9678  003E9A  82C2               	bsf	194,1,c	;volatile
  9679  003E9C                     l72:
  9680  003E9C  B2C2               	btfsc	194,1,c	;volatile
  9681  003E9E  EF53  F01F         	goto	u5521
  9682  003EA2  EF55  F01F         	goto	u5520
  9683  003EA6                     u5521:
  9684  003EA6  EF4E  F01F         	goto	l72
  9685  003EAA                     u5520:
  9686  003EAA                     
  9687                           ;Main_program_meter.c: 111:     VdigADC_AN0 = ADRESH;
  9688  003EAA  CFC4 F09A          	movff	4036,_VdigADC_AN0	;volatile
  9689  003EAE  0100               	movlb	0	; () banked
  9690  003EB0  6B9B               	clrf	(_VdigADC_AN0+1)& (0+255),b
  9691  003EB2                     
  9692                           ; BSR set to: 0
  9693                           ;Main_program_meter.c: 112:     VdigADC_AN0 = (VdigADC_AN0 << 8) + ADRESL;
  9694  003EB2  519A               	movf	_VdigADC_AN0& (0+255),w,b
  9695  003EB4  6E28               	movwf	??_conv_AN0^0,c
  9696  003EB6  50C3               	movf	195,w,c	;volatile
  9697  003EB8  6F9A               	movwf	_VdigADC_AN0& (0+255),b
  9698  003EBA  C028  F09B         	movff	??_conv_AN0,_VdigADC_AN0+1
  9699  003EBE                     
  9700                           ; BSR set to: 0
  9701                           ;Main_program_meter.c: 113:     Voltage_AN0 = VdigADC_AN0 * 4.89e-3;
  9702  003EBE  C09A  F001         	movff	_VdigADC_AN0,___xxtofl@val
  9703  003EC2  C09B  F002         	movff	_VdigADC_AN0+1,___xxtofl@val+1
  9704  003EC6  6A03               	clrf	(___xxtofl@val+2)^0,c
  9705  003EC8  6A04               	clrf	(___xxtofl@val+3)^0,c
  9706  003ECA  0E00               	movlw	0
  9707  003ECC  ECAE  F016         	call	___xxtofl
  9708  003ED0  C001  F00F         	movff	?___xxtofl,___flmul@b
  9709  003ED4  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  9710  003ED8  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  9711  003EDC  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  9712  003EE0  0E4B               	movlw	75
  9713  003EE2  6E13               	movwf	___flmul@a^0,c
  9714  003EE4  0E3C               	movlw	60
  9715  003EE6  6E14               	movwf	(___flmul@a+1)^0,c
  9716  003EE8  0EA0               	movlw	160
  9717  003EEA  6E15               	movwf	(___flmul@a+2)^0,c
  9718  003EEC  0E3B               	movlw	59
  9719  003EEE  6E16               	movwf	(___flmul@a+3)^0,c
  9720  003EF0  ECDD  F00E         	call	___flmul	;wreg free
  9721  003EF4  C00F  F088         	movff	?___flmul,_Voltage_AN0
  9722  003EF8  C010  F089         	movff	?___flmul+1,_Voltage_AN0+1
  9723  003EFC  C011  F08A         	movff	?___flmul+2,_Voltage_AN0+2
  9724  003F00  C012  F08B         	movff	?___flmul+3,_Voltage_AN0+3
  9725  003F04  0012               	return		;funcret
  9726  003F06                     __end_of_conv_AN0:
  9727                           	callstack 0
  9728                           
  9729 ;; *************** function ___xxtofl *****************
  9730 ;; Defined at:
  9731 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\xxtofl.c"
  9732 ;; Parameters:    Size  Location     Type
  9733 ;;  sign            1    wreg     unsigned char 
  9734 ;;  val             4    0[COMRAM] long 
  9735 ;; Auto vars:     Size  Location     Type
  9736 ;;  sign            1    8[COMRAM] unsigned char 
  9737 ;;  arg             4   10[COMRAM] unsigned long 
  9738 ;;  exp             1    9[COMRAM] unsigned char 
  9739 ;; Return value:  Size  Location     Type
  9740 ;;                  4    0[COMRAM] unsigned char 
  9741 ;; Registers used:
  9742 ;;		wreg, status,2, status,0
  9743 ;; Tracked objects:
  9744 ;;		On entry : 0/0
  9745 ;;		On exit  : 0/0
  9746 ;;		Unchanged: 0/0
  9747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9748 ;;      Params:         4       0       0       0       0       0       0
  9749 ;;      Locals:         6       0       0       0       0       0       0
  9750 ;;      Temps:          4       0       0       0       0       0       0
  9751 ;;      Totals:        14       0       0       0       0       0       0
  9752 ;;Total ram usage:       14 bytes
  9753 ;; Hardware stack levels used: 1
  9754 ;; This function calls:
  9755 ;;		Nothing
  9756 ;; This function is called by:
  9757 ;;		_conv_AN0
  9758 ;; This function uses a non-reentrant model
  9759 ;;
  9760                           
  9761                           	psect	text43
  9762  002D5C                     __ptext43:
  9763                           	callstack 0
  9764  002D5C                     ___xxtofl:
  9765                           	callstack 29
  9766                           
  9767                           ;incstack = 0
  9768                           ;___xxtofl@sign stored from wreg
  9769  002D5C  6E09               	movwf	___xxtofl@sign^0,c
  9770  002D5E  5009               	movf	___xxtofl@sign^0,w,c
  9771  002D60  B4D8               	btfsc	status,2,c
  9772  002D62  EFB5  F016         	goto	u5421
  9773  002D66  EFB7  F016         	goto	u5420
  9774  002D6A                     u5421:
  9775  002D6A  EFD9  F016         	goto	l805
  9776  002D6E                     u5420:
  9777  002D6E  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  9778  002D70  EFBE  F016         	goto	u5430
  9779  002D74  EFBC  F016         	goto	u5431
  9780  002D78                     u5431:
  9781  002D78  EFD9  F016         	goto	l805
  9782  002D7C                     u5430:
  9783  002D7C  C001  F005         	movff	___xxtofl@val,??___xxtofl
  9784  002D80  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  9785  002D84  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  9786  002D88  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  9787  002D8C  1E05               	comf	??___xxtofl^0,f,c
  9788  002D8E  1E06               	comf	(??___xxtofl+1)^0,f,c
  9789  002D90  1E07               	comf	(??___xxtofl+2)^0,f,c
  9790  002D92  1E08               	comf	(??___xxtofl+3)^0,f,c
  9791  002D94  2A05               	incf	??___xxtofl^0,f,c
  9792  002D96  0E00               	movlw	0
  9793  002D98  2206               	addwfc	(??___xxtofl+1)^0,f,c
  9794  002D9A  2207               	addwfc	(??___xxtofl+2)^0,f,c
  9795  002D9C  2208               	addwfc	(??___xxtofl+3)^0,f,c
  9796  002D9E  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  9797  002DA2  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  9798  002DA6  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  9799  002DAA  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  9800  002DAE  EFE1  F016         	goto	l4450
  9801  002DB2                     l805:
  9802  002DB2  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  9803  002DB6  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  9804  002DBA  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  9805  002DBE  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  9806  002DC2                     l4450:
  9807  002DC2  5001               	movf	___xxtofl@val^0,w,c
  9808  002DC4  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  9809  002DC6  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  9810  002DC8  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  9811  002DCA  A4D8               	btfss	status,2,c
  9812  002DCC  EFEA  F016         	goto	u5441
  9813  002DD0  EFEC  F016         	goto	u5440
  9814  002DD4                     u5441:
  9815  002DD4  EFF6  F016         	goto	l4456
  9816  002DD8                     u5440:
  9817  002DD8  0E00               	movlw	0
  9818  002DDA  6E01               	movwf	?___xxtofl^0,c
  9819  002DDC  0E00               	movlw	0
  9820  002DDE  6E02               	movwf	(?___xxtofl+1)^0,c
  9821  002DE0  0E00               	movlw	0
  9822  002DE2  6E03               	movwf	(?___xxtofl+2)^0,c
  9823  002DE4  0E00               	movlw	0
  9824  002DE6  6E04               	movwf	(?___xxtofl+3)^0,c
  9825  002DE8  EF87  F017         	goto	l808
  9826  002DEC                     l4456:
  9827  002DEC  0E96               	movlw	150
  9828  002DEE  6E0A               	movwf	___xxtofl@exp^0,c
  9829  002DF0  EF00  F017         	goto	l4460
  9830  002DF4                     l4458:
  9831  002DF4  2A0A               	incf	___xxtofl@exp^0,f,c
  9832  002DF6  90D8               	bcf	status,0,c
  9833  002DF8  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  9834  002DFA  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  9835  002DFC  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  9836  002DFE  320B               	rrcf	___xxtofl@arg^0,f,c
  9837  002E00                     l4460:
  9838  002E00  0E00               	movlw	0
  9839  002E02  140B               	andwf	___xxtofl@arg^0,w,c
  9840  002E04  6E05               	movwf	??___xxtofl^0,c
  9841  002E06  0E00               	movlw	0
  9842  002E08  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  9843  002E0A  6E06               	movwf	(??___xxtofl+1)^0,c
  9844  002E0C  0E00               	movlw	0
  9845  002E0E  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  9846  002E10  6E07               	movwf	(??___xxtofl+2)^0,c
  9847  002E12  0EFE               	movlw	254
  9848  002E14  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  9849  002E16  6E08               	movwf	(??___xxtofl+3)^0,c
  9850  002E18  5005               	movf	??___xxtofl^0,w,c
  9851  002E1A  1006               	iorwf	(??___xxtofl+1)^0,w,c
  9852  002E1C  1007               	iorwf	(??___xxtofl+2)^0,w,c
  9853  002E1E  1008               	iorwf	(??___xxtofl+3)^0,w,c
  9854  002E20  A4D8               	btfss	status,2,c
  9855  002E22  EF15  F017         	goto	u5451
  9856  002E26  EF17  F017         	goto	u5450
  9857  002E2A                     u5451:
  9858  002E2A  EFFA  F016         	goto	l4458
  9859  002E2E                     u5450:
  9860  002E2E  EF25  F017         	goto	l812
  9861  002E32                     l4462:
  9862  002E32  2A0A               	incf	___xxtofl@exp^0,f,c
  9863  002E34  0E01               	movlw	1
  9864  002E36  260B               	addwf	___xxtofl@arg^0,f,c
  9865  002E38  0E00               	movlw	0
  9866  002E3A  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  9867  002E3C  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  9868  002E3E  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  9869  002E40  90D8               	bcf	status,0,c
  9870  002E42  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  9871  002E44  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  9872  002E46  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  9873  002E48  320B               	rrcf	___xxtofl@arg^0,f,c
  9874  002E4A                     l812:
  9875  002E4A  0E00               	movlw	0
  9876  002E4C  140B               	andwf	___xxtofl@arg^0,w,c
  9877  002E4E  6E05               	movwf	??___xxtofl^0,c
  9878  002E50  0E00               	movlw	0
  9879  002E52  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  9880  002E54  6E06               	movwf	(??___xxtofl+1)^0,c
  9881  002E56  0E00               	movlw	0
  9882  002E58  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  9883  002E5A  6E07               	movwf	(??___xxtofl+2)^0,c
  9884  002E5C  0EFF               	movlw	255
  9885  002E5E  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  9886  002E60  6E08               	movwf	(??___xxtofl+3)^0,c
  9887  002E62  5005               	movf	??___xxtofl^0,w,c
  9888  002E64  1006               	iorwf	(??___xxtofl+1)^0,w,c
  9889  002E66  1007               	iorwf	(??___xxtofl+2)^0,w,c
  9890  002E68  1008               	iorwf	(??___xxtofl+3)^0,w,c
  9891  002E6A  A4D8               	btfss	status,2,c
  9892  002E6C  EF3A  F017         	goto	u5461
  9893  002E70  EF3C  F017         	goto	u5460
  9894  002E74                     u5461:
  9895  002E74  EF19  F017         	goto	l4462
  9896  002E78                     u5460:
  9897  002E78  EF44  F017         	goto	l4470
  9898  002E7C                     l4468:
  9899  002E7C  060A               	decf	___xxtofl@exp^0,f,c
  9900  002E7E  90D8               	bcf	status,0,c
  9901  002E80  360B               	rlcf	___xxtofl@arg^0,f,c
  9902  002E82  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  9903  002E84  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  9904  002E86  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  9905  002E88                     l4470:
  9906  002E88  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  9907  002E8A  EF49  F017         	goto	u5471
  9908  002E8E  EF4B  F017         	goto	u5470
  9909  002E92                     u5471:
  9910  002E92  EF53  F017         	goto	l819
  9911  002E96                     u5470:
  9912  002E96  0E02               	movlw	2
  9913  002E98  600A               	cpfslt	___xxtofl@exp^0,c
  9914  002E9A  EF51  F017         	goto	u5481
  9915  002E9E  EF53  F017         	goto	u5480
  9916  002EA2                     u5481:
  9917  002EA2  EF3E  F017         	goto	l4468
  9918  002EA6                     u5480:
  9919  002EA6                     l819:
  9920  002EA6  B00A               	btfsc	___xxtofl@exp^0,0,c
  9921  002EA8  EF58  F017         	goto	u5491
  9922  002EAC  EF5A  F017         	goto	u5490
  9923  002EB0                     u5491:
  9924  002EB0  EF5B  F017         	goto	l4476
  9925  002EB4                     u5490:
  9926  002EB4  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  9927  002EB6                     l4476:
  9928  002EB6  90D8               	bcf	status,0,c
  9929  002EB8  320A               	rrcf	___xxtofl@exp^0,f,c
  9930  002EBA  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  9931  002EBE  6A06               	clrf	(??___xxtofl+1)^0,c
  9932  002EC0  6A07               	clrf	(??___xxtofl+2)^0,c
  9933  002EC2  6A08               	clrf	(??___xxtofl+3)^0,c
  9934  002EC4  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  9935  002EC8  6A07               	clrf	(??___xxtofl+2)^0,c
  9936  002ECA  6A06               	clrf	(??___xxtofl+1)^0,c
  9937  002ECC  6A05               	clrf	??___xxtofl^0,c
  9938  002ECE  5005               	movf	??___xxtofl^0,w,c
  9939  002ED0  120B               	iorwf	___xxtofl@arg^0,f,c
  9940  002ED2  5006               	movf	(??___xxtofl+1)^0,w,c
  9941  002ED4  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  9942  002ED6  5007               	movf	(??___xxtofl+2)^0,w,c
  9943  002ED8  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  9944  002EDA  5008               	movf	(??___xxtofl+3)^0,w,c
  9945  002EDC  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  9946  002EDE  5009               	movf	___xxtofl@sign^0,w,c
  9947  002EE0  B4D8               	btfsc	status,2,c
  9948  002EE2  EF75  F017         	goto	u5501
  9949  002EE6  EF77  F017         	goto	u5500
  9950  002EEA                     u5501:
  9951  002EEA  EF7F  F017         	goto	l4486
  9952  002EEE                     u5500:
  9953  002EEE  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  9954  002EF0  EF7E  F017         	goto	u5510
  9955  002EF4  EF7C  F017         	goto	u5511
  9956  002EF8                     u5511:
  9957  002EF8  EF7F  F017         	goto	l4486
  9958  002EFC                     u5510:
  9959  002EFC  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  9960  002EFE                     l4486:
  9961  002EFE  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  9962  002F02  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  9963  002F06  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  9964  002F0A  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  9965  002F0E                     l808:
  9966  002F0E  0012               	return		;funcret
  9967  002F10                     __end_of___xxtofl:
  9968                           	callstack 0
  9969                           
  9970 ;; *************** function ___flmul *****************
  9971 ;; Defined at:
  9972 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcmul.c"
  9973 ;; Parameters:    Size  Location     Type
  9974 ;;  b               4   14[COMRAM] unsigned char 
  9975 ;;  a               4   18[COMRAM] unsigned char 
  9976 ;; Auto vars:     Size  Location     Type
  9977 ;;  prod            4   33[COMRAM] struct .
  9978 ;;  grs             4   27[COMRAM] unsigned long 
  9979 ;;  temp            2   37[COMRAM] struct .
  9980 ;;  bexp            1   32[COMRAM] unsigned char 
  9981 ;;  aexp            1   31[COMRAM] unsigned char 
  9982 ;;  sign            1   26[COMRAM] unsigned char 
  9983 ;; Return value:  Size  Location     Type
  9984 ;;                  4   14[COMRAM] unsigned char 
  9985 ;; Registers used:
  9986 ;;		wreg, status,2, status,0, prodl, prodh
  9987 ;; Tracked objects:
  9988 ;;		On entry : 0/0
  9989 ;;		On exit  : 0/0
  9990 ;;		Unchanged: 0/0
  9991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9992 ;;      Params:         8       0       0       0       0       0       0
  9993 ;;      Locals:        13       0       0       0       0       0       0
  9994 ;;      Temps:          4       0       0       0       0       0       0
  9995 ;;      Totals:        25       0       0       0       0       0       0
  9996 ;;Total ram usage:       25 bytes
  9997 ;; Hardware stack levels used: 1
  9998 ;; This function calls:
  9999 ;;		Nothing
 10000 ;; This function is called by:
 10001 ;;		_conv_AN0
 10002 ;;		_efgtoa
 10003 ;; This function uses a non-reentrant model
 10004 ;;
 10005                           
 10006                           	psect	text44
 10007  001DBA                     __ptext44:
 10008                           	callstack 0
 10009  001DBA                     ___flmul:
 10010                           	callstack 25
 10011  001DBA  5012               	movf	(___flmul@b+3)^0,w,c
 10012  001DBC  0B80               	andlw	128
 10013  001DBE  6E1B               	movwf	___flmul@sign^0,c
 10014  001DC0  5012               	movf	(___flmul@b+3)^0,w,c
 10015  001DC2  2412               	addwf	(___flmul@b+3)^0,w,c
 10016  001DC4  6E21               	movwf	___flmul@bexp^0,c
 10017  001DC6  AE11               	btfss	(___flmul@b+2)^0,7,c
 10018  001DC8  EFE8  F00E         	goto	u3691
 10019  001DCC  EFEA  F00E         	goto	u3690
 10020  001DD0                     u3691:
 10021  001DD0  EFEB  F00E         	goto	l3386
 10022  001DD4                     u3690:
 10023  001DD4  8021               	bsf	___flmul@bexp^0,0,c
 10024  001DD6                     l3386:
 10025  001DD6  5021               	movf	___flmul@bexp^0,w,c
 10026  001DD8  B4D8               	btfsc	status,2,c
 10027  001DDA  EFF1  F00E         	goto	u3701
 10028  001DDE  EFF3  F00E         	goto	u3700
 10029  001DE2                     u3701:
 10030  001DE2  EF06  F00F         	goto	l3394
 10031  001DE6                     u3700:
 10032  001DE6  2821               	incf	___flmul@bexp^0,w,c
 10033  001DE8  A4D8               	btfss	status,2,c
 10034  001DEA  EFF9  F00E         	goto	u3711
 10035  001DEE  EFFB  F00E         	goto	u3710
 10036  001DF2                     u3711:
 10037  001DF2  EF03  F00F         	goto	l3392
 10038  001DF6                     u3710:
 10039  001DF6  0E00               	movlw	0
 10040  001DF8  6E0F               	movwf	___flmul@b^0,c
 10041  001DFA  0E00               	movlw	0
 10042  001DFC  6E10               	movwf	(___flmul@b+1)^0,c
 10043  001DFE  0E00               	movlw	0
 10044  001E00  6E11               	movwf	(___flmul@b+2)^0,c
 10045  001E02  0E00               	movlw	0
 10046  001E04  6E12               	movwf	(___flmul@b+3)^0,c
 10047  001E06                     l3392:
 10048  001E06  8E11               	bsf	(___flmul@b+2)^0,7,c
 10049  001E08  EF0E  F00F         	goto	l3396
 10050  001E0C                     l3394:
 10051  001E0C  0E00               	movlw	0
 10052  001E0E  6E0F               	movwf	___flmul@b^0,c
 10053  001E10  0E00               	movlw	0
 10054  001E12  6E10               	movwf	(___flmul@b+1)^0,c
 10055  001E14  0E00               	movlw	0
 10056  001E16  6E11               	movwf	(___flmul@b+2)^0,c
 10057  001E18  0E00               	movlw	0
 10058  001E1A  6E12               	movwf	(___flmul@b+3)^0,c
 10059  001E1C                     l3396:
 10060  001E1C  5016               	movf	(___flmul@a+3)^0,w,c
 10061  001E1E  0B80               	andlw	128
 10062  001E20  1A1B               	xorwf	___flmul@sign^0,f,c
 10063  001E22  5016               	movf	(___flmul@a+3)^0,w,c
 10064  001E24  2416               	addwf	(___flmul@a+3)^0,w,c
 10065  001E26  6E20               	movwf	___flmul@aexp^0,c
 10066  001E28  AE15               	btfss	(___flmul@a+2)^0,7,c
 10067  001E2A  EF19  F00F         	goto	u3721
 10068  001E2E  EF1B  F00F         	goto	u3720
 10069  001E32                     u3721:
 10070  001E32  EF1C  F00F         	goto	l3404
 10071  001E36                     u3720:
 10072  001E36  8020               	bsf	___flmul@aexp^0,0,c
 10073  001E38                     l3404:
 10074  001E38  5020               	movf	___flmul@aexp^0,w,c
 10075  001E3A  B4D8               	btfsc	status,2,c
 10076  001E3C  EF22  F00F         	goto	u3731
 10077  001E40  EF24  F00F         	goto	u3730
 10078  001E44                     u3731:
 10079  001E44  EF37  F00F         	goto	l3412
 10080  001E48                     u3730:
 10081  001E48  2820               	incf	___flmul@aexp^0,w,c
 10082  001E4A  A4D8               	btfss	status,2,c
 10083  001E4C  EF2A  F00F         	goto	u3741
 10084  001E50  EF2C  F00F         	goto	u3740
 10085  001E54                     u3741:
 10086  001E54  EF34  F00F         	goto	l3410
 10087  001E58                     u3740:
 10088  001E58  0E00               	movlw	0
 10089  001E5A  6E13               	movwf	___flmul@a^0,c
 10090  001E5C  0E00               	movlw	0
 10091  001E5E  6E14               	movwf	(___flmul@a+1)^0,c
 10092  001E60  0E00               	movlw	0
 10093  001E62  6E15               	movwf	(___flmul@a+2)^0,c
 10094  001E64  0E00               	movlw	0
 10095  001E66  6E16               	movwf	(___flmul@a+3)^0,c
 10096  001E68                     l3410:
 10097  001E68  8E15               	bsf	(___flmul@a+2)^0,7,c
 10098  001E6A  EF3F  F00F         	goto	l764
 10099  001E6E                     l3412:
 10100  001E6E  0E00               	movlw	0
 10101  001E70  6E13               	movwf	___flmul@a^0,c
 10102  001E72  0E00               	movlw	0
 10103  001E74  6E14               	movwf	(___flmul@a+1)^0,c
 10104  001E76  0E00               	movlw	0
 10105  001E78  6E15               	movwf	(___flmul@a+2)^0,c
 10106  001E7A  0E00               	movlw	0
 10107  001E7C  6E16               	movwf	(___flmul@a+3)^0,c
 10108  001E7E                     l764:
 10109  001E7E  5020               	movf	___flmul@aexp^0,w,c
 10110  001E80  B4D8               	btfsc	status,2,c
 10111  001E82  EF45  F00F         	goto	u3751
 10112  001E86  EF47  F00F         	goto	u3750
 10113  001E8A                     u3751:
 10114  001E8A  EF4F  F00F         	goto	l3416
 10115  001E8E                     u3750:
 10116  001E8E  5021               	movf	___flmul@bexp^0,w,c
 10117  001E90  A4D8               	btfss	status,2,c
 10118  001E92  EF4D  F00F         	goto	u3761
 10119  001E96  EF4F  F00F         	goto	u3760
 10120  001E9A                     u3761:
 10121  001E9A  EF59  F00F         	goto	l3420
 10122  001E9E                     u3760:
 10123  001E9E                     l3416:
 10124  001E9E  0E00               	movlw	0
 10125  001EA0  6E0F               	movwf	?___flmul^0,c
 10126  001EA2  0E00               	movlw	0
 10127  001EA4  6E10               	movwf	(?___flmul+1)^0,c
 10128  001EA6  0E00               	movlw	0
 10129  001EA8  6E11               	movwf	(?___flmul+2)^0,c
 10130  001EAA  0E00               	movlw	0
 10131  001EAC  6E12               	movwf	(?___flmul+3)^0,c
 10132  001EAE  EFF1  F010         	goto	l768
 10133  001EB2                     l3420:
 10134  001EB2  5015               	movf	(___flmul@a+2)^0,w,c
 10135  001EB4  020F               	mulwf	___flmul@b^0,c
 10136  001EB6  CFF3 F026          	movff	prodl,___flmul@temp
 10137  001EBA  CFF4 F027          	movff	prodh,___flmul@temp+1
 10138  001EBE  5026               	movf	___flmul@temp^0,w,c
 10139  001EC0  6E1C               	movwf	___flmul@grs^0,c
 10140  001EC2  6A1D               	clrf	(___flmul@grs+1)^0,c
 10141  001EC4  6A1E               	clrf	(___flmul@grs+2)^0,c
 10142  001EC6  6A1F               	clrf	(___flmul@grs+3)^0,c
 10143  001EC8  5027               	movf	(___flmul@temp+1)^0,w,c
 10144  001ECA  6E22               	movwf	___flmul@prod^0,c
 10145  001ECC  6A23               	clrf	(___flmul@prod+1)^0,c
 10146  001ECE  6A24               	clrf	(___flmul@prod+2)^0,c
 10147  001ED0  6A25               	clrf	(___flmul@prod+3)^0,c
 10148  001ED2  5014               	movf	(___flmul@a+1)^0,w,c
 10149  001ED4  0210               	mulwf	(___flmul@b+1)^0,c
 10150  001ED6  CFF3 F026          	movff	prodl,___flmul@temp
 10151  001EDA  CFF4 F027          	movff	prodh,___flmul@temp+1
 10152  001EDE  5026               	movf	___flmul@temp^0,w,c
 10153  001EE0  261C               	addwf	___flmul@grs^0,f,c
 10154  001EE2  0E00               	movlw	0
 10155  001EE4  221D               	addwfc	(___flmul@grs+1)^0,f,c
 10156  001EE6  221E               	addwfc	(___flmul@grs+2)^0,f,c
 10157  001EE8  221F               	addwfc	(___flmul@grs+3)^0,f,c
 10158  001EEA  5027               	movf	(___flmul@temp+1)^0,w,c
 10159  001EEC  2622               	addwf	___flmul@prod^0,f,c
 10160  001EEE  0E00               	movlw	0
 10161  001EF0  2223               	addwfc	(___flmul@prod+1)^0,f,c
 10162  001EF2  2224               	addwfc	(___flmul@prod+2)^0,f,c
 10163  001EF4  2225               	addwfc	(___flmul@prod+3)^0,f,c
 10164  001EF6  5013               	movf	___flmul@a^0,w,c
 10165  001EF8  0211               	mulwf	(___flmul@b+2)^0,c
 10166  001EFA  CFF3 F026          	movff	prodl,___flmul@temp
 10167  001EFE  CFF4 F027          	movff	prodh,___flmul@temp+1
 10168  001F02  5026               	movf	___flmul@temp^0,w,c
 10169  001F04  261C               	addwf	___flmul@grs^0,f,c
 10170  001F06  0E00               	movlw	0
 10171  001F08  221D               	addwfc	(___flmul@grs+1)^0,f,c
 10172  001F0A  221E               	addwfc	(___flmul@grs+2)^0,f,c
 10173  001F0C  221F               	addwfc	(___flmul@grs+3)^0,f,c
 10174  001F0E  5027               	movf	(___flmul@temp+1)^0,w,c
 10175  001F10  2622               	addwf	___flmul@prod^0,f,c
 10176  001F12  0E00               	movlw	0
 10177  001F14  2223               	addwfc	(___flmul@prod+1)^0,f,c
 10178  001F16  2224               	addwfc	(___flmul@prod+2)^0,f,c
 10179  001F18  2225               	addwfc	(___flmul@prod+3)^0,f,c
 10180  001F1A  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
 10181  001F1E  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
 10182  001F22  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
 10183  001F26  6A1C               	clrf	___flmul@grs^0,c
 10184  001F28  5013               	movf	___flmul@a^0,w,c
 10185  001F2A  0210               	mulwf	(___flmul@b+1)^0,c
 10186  001F2C  CFF3 F026          	movff	prodl,___flmul@temp
 10187  001F30  CFF4 F027          	movff	prodh,___flmul@temp+1
 10188  001F34  5026               	movf	___flmul@temp^0,w,c
 10189  001F36  261C               	addwf	___flmul@grs^0,f,c
 10190  001F38  5027               	movf	(___flmul@temp+1)^0,w,c
 10191  001F3A  221D               	addwfc	(___flmul@grs+1)^0,f,c
 10192  001F3C  0E00               	movlw	0
 10193  001F3E  221E               	addwfc	(___flmul@grs+2)^0,f,c
 10194  001F40  0E00               	movlw	0
 10195  001F42  221F               	addwfc	(___flmul@grs+3)^0,f,c
 10196  001F44  5014               	movf	(___flmul@a+1)^0,w,c
 10197  001F46  020F               	mulwf	___flmul@b^0,c
 10198  001F48  CFF3 F026          	movff	prodl,___flmul@temp
 10199  001F4C  CFF4 F027          	movff	prodh,___flmul@temp+1
 10200  001F50  5026               	movf	___flmul@temp^0,w,c
 10201  001F52  261C               	addwf	___flmul@grs^0,f,c
 10202  001F54  5027               	movf	(___flmul@temp+1)^0,w,c
 10203  001F56  221D               	addwfc	(___flmul@grs+1)^0,f,c
 10204  001F58  0E00               	movlw	0
 10205  001F5A  221E               	addwfc	(___flmul@grs+2)^0,f,c
 10206  001F5C  0E00               	movlw	0
 10207  001F5E  221F               	addwfc	(___flmul@grs+3)^0,f,c
 10208  001F60  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
 10209  001F64  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
 10210  001F68  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
 10211  001F6C  6A1C               	clrf	___flmul@grs^0,c
 10212  001F6E  5013               	movf	___flmul@a^0,w,c
 10213  001F70  020F               	mulwf	___flmul@b^0,c
 10214  001F72  CFF3 F026          	movff	prodl,___flmul@temp
 10215  001F76  CFF4 F027          	movff	prodh,___flmul@temp+1
 10216  001F7A  5026               	movf	___flmul@temp^0,w,c
 10217  001F7C  261C               	addwf	___flmul@grs^0,f,c
 10218  001F7E  5027               	movf	(___flmul@temp+1)^0,w,c
 10219  001F80  221D               	addwfc	(___flmul@grs+1)^0,f,c
 10220  001F82  0E00               	movlw	0
 10221  001F84  221E               	addwfc	(___flmul@grs+2)^0,f,c
 10222  001F86  0E00               	movlw	0
 10223  001F88  221F               	addwfc	(___flmul@grs+3)^0,f,c
 10224  001F8A  5015               	movf	(___flmul@a+2)^0,w,c
 10225  001F8C  0210               	mulwf	(___flmul@b+1)^0,c
 10226  001F8E  CFF3 F026          	movff	prodl,___flmul@temp
 10227  001F92  CFF4 F027          	movff	prodh,___flmul@temp+1
 10228  001F96  5026               	movf	___flmul@temp^0,w,c
 10229  001F98  2622               	addwf	___flmul@prod^0,f,c
 10230  001F9A  5027               	movf	(___flmul@temp+1)^0,w,c
 10231  001F9C  2223               	addwfc	(___flmul@prod+1)^0,f,c
 10232  001F9E  0E00               	movlw	0
 10233  001FA0  2224               	addwfc	(___flmul@prod+2)^0,f,c
 10234  001FA2  0E00               	movlw	0
 10235  001FA4  2225               	addwfc	(___flmul@prod+3)^0,f,c
 10236  001FA6  5014               	movf	(___flmul@a+1)^0,w,c
 10237  001FA8  0211               	mulwf	(___flmul@b+2)^0,c
 10238  001FAA  CFF3 F026          	movff	prodl,___flmul@temp
 10239  001FAE  CFF4 F027          	movff	prodh,___flmul@temp+1
 10240  001FB2  5026               	movf	___flmul@temp^0,w,c
 10241  001FB4  2622               	addwf	___flmul@prod^0,f,c
 10242  001FB6  5027               	movf	(___flmul@temp+1)^0,w,c
 10243  001FB8  2223               	addwfc	(___flmul@prod+1)^0,f,c
 10244  001FBA  0E00               	movlw	0
 10245  001FBC  2224               	addwfc	(___flmul@prod+2)^0,f,c
 10246  001FBE  0E00               	movlw	0
 10247  001FC0  2225               	addwfc	(___flmul@prod+3)^0,f,c
 10248  001FC2  5015               	movf	(___flmul@a+2)^0,w,c
 10249  001FC4  0211               	mulwf	(___flmul@b+2)^0,c
 10250  001FC6  CFF3 F026          	movff	prodl,___flmul@temp
 10251  001FCA  CFF4 F027          	movff	prodh,___flmul@temp+1
 10252  001FCE  5026               	movf	___flmul@temp^0,w,c
 10253  001FD0  6E17               	movwf	??___flmul^0,c
 10254  001FD2  5027               	movf	(___flmul@temp+1)^0,w,c
 10255  001FD4  6E18               	movwf	(??___flmul+1)^0,c
 10256  001FD6  6A19               	clrf	(??___flmul+2)^0,c
 10257  001FD8  6A1A               	clrf	(??___flmul+3)^0,c
 10258  001FDA  C019  F01A         	movff	??___flmul+2,??___flmul+3
 10259  001FDE  C018  F019         	movff	??___flmul+1,??___flmul+2
 10260  001FE2  C017  F018         	movff	??___flmul,??___flmul+1
 10261  001FE6  6A17               	clrf	??___flmul^0,c
 10262  001FE8  5017               	movf	??___flmul^0,w,c
 10263  001FEA  2622               	addwf	___flmul@prod^0,f,c
 10264  001FEC  5018               	movf	(??___flmul+1)^0,w,c
 10265  001FEE  2223               	addwfc	(___flmul@prod+1)^0,f,c
 10266  001FF0  5019               	movf	(??___flmul+2)^0,w,c
 10267  001FF2  2224               	addwfc	(___flmul@prod+2)^0,f,c
 10268  001FF4  501A               	movf	(??___flmul+3)^0,w,c
 10269  001FF6  2225               	addwfc	(___flmul@prod+3)^0,f,c
 10270  001FF8  C01C  F017         	movff	___flmul@grs,??___flmul
 10271  001FFC  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
 10272  002000  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
 10273  002004  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
 10274  002008  0E19               	movlw	25
 10275  00200A  EF0C  F010         	goto	u3770
 10276  00200E                     u3775:
 10277  00200E  90D8               	bcf	status,0,c
 10278  002010  321A               	rrcf	(??___flmul+3)^0,f,c
 10279  002012  3219               	rrcf	(??___flmul+2)^0,f,c
 10280  002014  3218               	rrcf	(??___flmul+1)^0,f,c
 10281  002016  3217               	rrcf	??___flmul^0,f,c
 10282  002018                     u3770:
 10283  002018  2EE8               	decfsz	wreg,f,c
 10284  00201A  EF07  F010         	goto	u3775
 10285  00201E  5017               	movf	??___flmul^0,w,c
 10286  002020  2622               	addwf	___flmul@prod^0,f,c
 10287  002022  5018               	movf	(??___flmul+1)^0,w,c
 10288  002024  2223               	addwfc	(___flmul@prod+1)^0,f,c
 10289  002026  5019               	movf	(??___flmul+2)^0,w,c
 10290  002028  2224               	addwfc	(___flmul@prod+2)^0,f,c
 10291  00202A  501A               	movf	(??___flmul+3)^0,w,c
 10292  00202C  2225               	addwfc	(___flmul@prod+3)^0,f,c
 10293  00202E  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
 10294  002032  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
 10295  002036  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
 10296  00203A  6A1C               	clrf	___flmul@grs^0,c
 10297  00203C  5020               	movf	___flmul@aexp^0,w,c
 10298  00203E  C021  F017         	movff	___flmul@bexp,??___flmul
 10299  002042  6A18               	clrf	(??___flmul+1)^0,c
 10300  002044  2617               	addwf	??___flmul^0,f,c
 10301  002046  0E00               	movlw	0
 10302  002048  2218               	addwfc	(??___flmul+1)^0,f,c
 10303  00204A  0E82               	movlw	130
 10304  00204C  2417               	addwf	??___flmul^0,w,c
 10305  00204E  6E26               	movwf	___flmul@temp^0,c
 10306  002050  0EFF               	movlw	255
 10307  002052  2018               	addwfc	(??___flmul+1)^0,w,c
 10308  002054  6E27               	movwf	(___flmul@temp+1)^0,c
 10309  002056  EF42  F010         	goto	l3468
 10310  00205A                     l3462:
 10311  00205A  90D8               	bcf	status,0,c
 10312  00205C  3622               	rlcf	___flmul@prod^0,f,c
 10313  00205E  3623               	rlcf	(___flmul@prod+1)^0,f,c
 10314  002060  3624               	rlcf	(___flmul@prod+2)^0,f,c
 10315  002062  3625               	rlcf	(___flmul@prod+3)^0,f,c
 10316  002064  AE1F               	btfss	(___flmul@grs+3)^0,7,c
 10317  002066  EF37  F010         	goto	u3781
 10318  00206A  EF39  F010         	goto	u3780
 10319  00206E                     u3781:
 10320  00206E  EF3A  F010         	goto	l771
 10321  002072                     u3780:
 10322  002072  8022               	bsf	___flmul@prod^0,0,c
 10323  002074                     l771:
 10324  002074  90D8               	bcf	status,0,c
 10325  002076  361C               	rlcf	___flmul@grs^0,f,c
 10326  002078  361D               	rlcf	(___flmul@grs+1)^0,f,c
 10327  00207A  361E               	rlcf	(___flmul@grs+2)^0,f,c
 10328  00207C  361F               	rlcf	(___flmul@grs+3)^0,f,c
 10329  00207E  0626               	decf	___flmul@temp^0,f,c
 10330  002080  A0D8               	btfss	status,0,c
 10331  002082  0627               	decf	(___flmul@temp+1)^0,f,c
 10332  002084                     l3468:
 10333  002084  AE24               	btfss	(___flmul@prod+2)^0,7,c
 10334  002086  EF47  F010         	goto	u3791
 10335  00208A  EF49  F010         	goto	u3790
 10336  00208E                     u3791:
 10337  00208E  EF2D  F010         	goto	l3462
 10338  002092                     u3790:
 10339  002092  0E00               	movlw	0
 10340  002094  6E20               	movwf	___flmul@aexp^0,c
 10341  002096  AE1F               	btfss	(___flmul@grs+3)^0,7,c
 10342  002098  EF50  F010         	goto	u3801
 10343  00209C  EF52  F010         	goto	u3800
 10344  0020A0                     u3801:
 10345  0020A0  EF76  F010         	goto	l773
 10346  0020A4                     u3800:
 10347  0020A4  0EFF               	movlw	255
 10348  0020A6  141C               	andwf	___flmul@grs^0,w,c
 10349  0020A8  6E17               	movwf	??___flmul^0,c
 10350  0020AA  0EFF               	movlw	255
 10351  0020AC  141D               	andwf	(___flmul@grs+1)^0,w,c
 10352  0020AE  6E18               	movwf	(??___flmul+1)^0,c
 10353  0020B0  0EFF               	movlw	255
 10354  0020B2  141E               	andwf	(___flmul@grs+2)^0,w,c
 10355  0020B4  6E19               	movwf	(??___flmul+2)^0,c
 10356  0020B6  0E7F               	movlw	127
 10357  0020B8  141F               	andwf	(___flmul@grs+3)^0,w,c
 10358  0020BA  6E1A               	movwf	(??___flmul+3)^0,c
 10359  0020BC  5017               	movf	??___flmul^0,w,c
 10360  0020BE  1018               	iorwf	(??___flmul+1)^0,w,c
 10361  0020C0  1019               	iorwf	(??___flmul+2)^0,w,c
 10362  0020C2  101A               	iorwf	(??___flmul+3)^0,w,c
 10363  0020C4  B4D8               	btfsc	status,2,c
 10364  0020C6  EF67  F010         	goto	u3811
 10365  0020CA  EF69  F010         	goto	u3810
 10366  0020CE                     u3811:
 10367  0020CE  EF6D  F010         	goto	l774
 10368  0020D2                     u3810:
 10369  0020D2                     l3476:
 10370  0020D2  0E01               	movlw	1
 10371  0020D4  6E20               	movwf	___flmul@aexp^0,c
 10372  0020D6  EF76  F010         	goto	l773
 10373  0020DA                     l774:
 10374  0020DA  A022               	btfss	___flmul@prod^0,0,c
 10375  0020DC  EF72  F010         	goto	u3821
 10376  0020E0  EF74  F010         	goto	u3820
 10377  0020E4                     u3821:
 10378  0020E4  EF76  F010         	goto	l773
 10379  0020E8                     u3820:
 10380  0020E8  EF69  F010         	goto	l3476
 10381  0020EC                     l773:
 10382  0020EC  5020               	movf	___flmul@aexp^0,w,c
 10383  0020EE  B4D8               	btfsc	status,2,c
 10384  0020F0  EF7C  F010         	goto	u3831
 10385  0020F4  EF7E  F010         	goto	u3830
 10386  0020F8                     u3831:
 10387  0020F8  EFA2  F010         	goto	l3488
 10388  0020FC                     u3830:
 10389  0020FC  0E01               	movlw	1
 10390  0020FE  2622               	addwf	___flmul@prod^0,f,c
 10391  002100  0E00               	movlw	0
 10392  002102  2223               	addwfc	(___flmul@prod+1)^0,f,c
 10393  002104  2224               	addwfc	(___flmul@prod+2)^0,f,c
 10394  002106  2225               	addwfc	(___flmul@prod+3)^0,f,c
 10395  002108  A025               	btfss	(___flmul@prod+3)^0,0,c
 10396  00210A  EF89  F010         	goto	u3841
 10397  00210E  EF8B  F010         	goto	u3840
 10398  002112                     u3841:
 10399  002112  EFA2  F010         	goto	l3488
 10400  002116                     u3840:
 10401  002116  C022  F017         	movff	___flmul@prod,??___flmul
 10402  00211A  C023  F018         	movff	___flmul@prod+1,??___flmul+1
 10403  00211E  C024  F019         	movff	___flmul@prod+2,??___flmul+2
 10404  002122  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
 10405  002126  341A               	rlcf	(??___flmul+3)^0,w,c
 10406  002128  321A               	rrcf	(??___flmul+3)^0,f,c
 10407  00212A  3219               	rrcf	(??___flmul+2)^0,f,c
 10408  00212C  3218               	rrcf	(??___flmul+1)^0,f,c
 10409  00212E  3217               	rrcf	??___flmul^0,f,c
 10410  002130  C017  F022         	movff	??___flmul,___flmul@prod
 10411  002134  C018  F023         	movff	??___flmul+1,___flmul@prod+1
 10412  002138  C019  F024         	movff	??___flmul+2,___flmul@prod+2
 10413  00213C  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
 10414  002140  4A26               	infsnz	___flmul@temp^0,f,c
 10415  002142  2A27               	incf	(___flmul@temp+1)^0,f,c
 10416  002144                     l3488:
 10417  002144  BE27               	btfsc	(___flmul@temp+1)^0,7,c
 10418  002146  EFAD  F010         	goto	u3851
 10419  00214A  5027               	movf	(___flmul@temp+1)^0,w,c
 10420  00214C  E108               	bnz	u3850
 10421  00214E  2826               	incf	___flmul@temp^0,w,c
 10422  002150  A0D8               	btfss	status,0,c
 10423  002152  EFAD  F010         	goto	u3851
 10424  002156  EFAF  F010         	goto	u3850
 10425  00215A                     u3851:
 10426  00215A  EFB9  F010         	goto	l3492
 10427  00215E                     u3850:
 10428  00215E  0E00               	movlw	0
 10429  002160  6E22               	movwf	___flmul@prod^0,c
 10430  002162  0E00               	movlw	0
 10431  002164  6E23               	movwf	(___flmul@prod+1)^0,c
 10432  002166  0E80               	movlw	128
 10433  002168  6E24               	movwf	(___flmul@prod+2)^0,c
 10434  00216A  0E7F               	movlw	127
 10435  00216C  6E25               	movwf	(___flmul@prod+3)^0,c
 10436  00216E  EFE7  F010         	goto	l3504
 10437  002172                     l3492:
 10438  002172  BE27               	btfsc	(___flmul@temp+1)^0,7,c
 10439  002174  EFC6  F010         	goto	u3860
 10440  002178  5027               	movf	(___flmul@temp+1)^0,w,c
 10441  00217A  E106               	bnz	u3861
 10442  00217C  0426               	decf	___flmul@temp^0,w,c
 10443  00217E  B0D8               	btfsc	status,0,c
 10444  002180  EFC4  F010         	goto	u3861
 10445  002184  EFC6  F010         	goto	u3860
 10446  002188                     u3861:
 10447  002188  EFD2  F010         	goto	l781
 10448  00218C                     u3860:
 10449  00218C  0E00               	movlw	0
 10450  00218E  6E22               	movwf	___flmul@prod^0,c
 10451  002190  0E00               	movlw	0
 10452  002192  6E23               	movwf	(___flmul@prod+1)^0,c
 10453  002194  0E00               	movlw	0
 10454  002196  6E24               	movwf	(___flmul@prod+2)^0,c
 10455  002198  0E00               	movlw	0
 10456  00219A  6E25               	movwf	(___flmul@prod+3)^0,c
 10457  00219C  0E00               	movlw	0
 10458  00219E  6E1B               	movwf	___flmul@sign^0,c
 10459  0021A0  EFE7  F010         	goto	l3504
 10460  0021A4                     l781:
 10461  0021A4  C026  F021         	movff	___flmul@temp,___flmul@bexp
 10462  0021A8  0EFF               	movlw	255
 10463  0021AA  1622               	andwf	___flmul@prod^0,f,c
 10464  0021AC  0EFF               	movlw	255
 10465  0021AE  1623               	andwf	(___flmul@prod+1)^0,f,c
 10466  0021B0  0E7F               	movlw	127
 10467  0021B2  1624               	andwf	(___flmul@prod+2)^0,f,c
 10468  0021B4  0E00               	movlw	0
 10469  0021B6  1625               	andwf	(___flmul@prod+3)^0,f,c
 10470  0021B8  A021               	btfss	___flmul@bexp^0,0,c
 10471  0021BA  EFE1  F010         	goto	u3871
 10472  0021BE  EFE3  F010         	goto	u3870
 10473  0021C2                     u3871:
 10474  0021C2  EFE4  F010         	goto	l3502
 10475  0021C6                     u3870:
 10476  0021C6  8E24               	bsf	(___flmul@prod+2)^0,7,c
 10477  0021C8                     l3502:
 10478  0021C8  90D8               	bcf	status,0,c
 10479  0021CA  3021               	rrcf	___flmul@bexp^0,w,c
 10480  0021CC  6E25               	movwf	(___flmul@prod+3)^0,c
 10481  0021CE                     l3504:
 10482  0021CE  501B               	movf	___flmul@sign^0,w,c
 10483  0021D0  1225               	iorwf	(___flmul@prod+3)^0,f,c
 10484  0021D2  C022  F00F         	movff	___flmul@prod,?___flmul
 10485  0021D6  C023  F010         	movff	___flmul@prod+1,?___flmul+1
 10486  0021DA  C024  F011         	movff	___flmul@prod+2,?___flmul+2
 10487  0021DE  C025  F012         	movff	___flmul@prod+3,?___flmul+3
 10488  0021E2                     l768:
 10489  0021E2  0012               	return		;funcret
 10490  0021E4                     __end_of___flmul:
 10491                           	callstack 0
 10492                           
 10493 ;; *************** function _config_IO *****************
 10494 ;; Defined at:
 10495 ;;		line 92 in file "Main_program_meter.c"
 10496 ;; Parameters:    Size  Location     Type
 10497 ;;		None
 10498 ;; Auto vars:     Size  Location     Type
 10499 ;;		None
 10500 ;; Return value:  Size  Location     Type
 10501 ;;                  1    wreg      void 
 10502 ;; Registers used:
 10503 ;;		wreg, status,2
 10504 ;; Tracked objects:
 10505 ;;		On entry : 0/0
 10506 ;;		On exit  : 0/0
 10507 ;;		Unchanged: 0/0
 10508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10509 ;;      Params:         0       0       0       0       0       0       0
 10510 ;;      Locals:         0       0       0       0       0       0       0
 10511 ;;      Temps:          0       0       0       0       0       0       0
 10512 ;;      Totals:         0       0       0       0       0       0       0
 10513 ;;Total ram usage:        0 bytes
 10514 ;; Hardware stack levels used: 1
 10515 ;; This function calls:
 10516 ;;		Nothing
 10517 ;; This function is called by:
 10518 ;;		_main
 10519 ;; This function uses a non-reentrant model
 10520 ;;
 10521                           
 10522                           	psect	text45
 10523  004352                     __ptext45:
 10524                           	callstack 0
 10525  004352                     _config_IO:
 10526                           	callstack 30
 10527  004352                     
 10528                           ;Main_program_meter.c: 94:     TRISB = 0X01;
 10529  004352  0E01               	movlw	1
 10530  004354  6E93               	movwf	147,c	;volatile
 10531                           
 10532                           ;Main_program_meter.c: 95:     TRISC = 0X00;
 10533  004356  0E00               	movlw	0
 10534  004358  6E94               	movwf	148,c	;volatile
 10535  00435A                     
 10536                           ;Main_program_meter.c: 96:     PORTC = 0XFF;
 10537  00435A  6882               	setf	130,c	;volatile
 10538  00435C  0012               	return		;funcret
 10539  00435E                     __end_of_config_IO:
 10540                           	callstack 0
 10541                           
 10542 ;; *************** function _config_FOSC *****************
 10543 ;; Defined at:
 10544 ;;		line 86 in file "Main_program_meter.c"
 10545 ;; Parameters:    Size  Location     Type
 10546 ;;		None
 10547 ;; Auto vars:     Size  Location     Type
 10548 ;;		None
 10549 ;; Return value:  Size  Location     Type
 10550 ;;                  1    wreg      void 
 10551 ;; Registers used:
 10552 ;;		wreg, status,2
 10553 ;; Tracked objects:
 10554 ;;		On entry : 0/0
 10555 ;;		On exit  : 0/0
 10556 ;;		Unchanged: 0/0
 10557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10558 ;;      Params:         0       0       0       0       0       0       0
 10559 ;;      Locals:         0       0       0       0       0       0       0
 10560 ;;      Temps:          0       0       0       0       0       0       0
 10561 ;;      Totals:         0       0       0       0       0       0       0
 10562 ;;Total ram usage:        0 bytes
 10563 ;; Hardware stack levels used: 1
 10564 ;; This function calls:
 10565 ;;		Nothing
 10566 ;; This function is called by:
 10567 ;;		_main
 10568 ;; This function uses a non-reentrant model
 10569 ;;
 10570                           
 10571                           	psect	text46
 10572  00435E                     __ptext46:
 10573                           	callstack 0
 10574  00435E                     _config_FOSC:
 10575                           	callstack 30
 10576  00435E                     
 10577                           ;Main_program_meter.c: 88:     OSCCON = 0X00;
 10578  00435E  0E00               	movlw	0
 10579  004360  6ED3               	movwf	211,c	;volatile
 10580                           
 10581                           ;Main_program_meter.c: 89:     OSCTUNE = 0X00;
 10582  004362  0E00               	movlw	0
 10583  004364  6E9B               	movwf	155,c	;volatile
 10584  004366  0012               	return		;funcret
 10585  004368                     __end_of_config_FOSC:
 10586                           	callstack 0
 10587                           
 10588 ;; *************** function _config_ADC *****************
 10589 ;; Defined at:
 10590 ;;		line 99 in file "Main_program_meter.c"
 10591 ;; Parameters:    Size  Location     Type
 10592 ;;		None
 10593 ;; Auto vars:     Size  Location     Type
 10594 ;;		None
 10595 ;; Return value:  Size  Location     Type
 10596 ;;                  1    wreg      void 
 10597 ;; Registers used:
 10598 ;;		wreg, status,2
 10599 ;; Tracked objects:
 10600 ;;		On entry : 0/0
 10601 ;;		On exit  : 0/0
 10602 ;;		Unchanged: 0/0
 10603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10604 ;;      Params:         0       0       0       0       0       0       0
 10605 ;;      Locals:         0       0       0       0       0       0       0
 10606 ;;      Temps:          0       0       0       0       0       0       0
 10607 ;;      Totals:         0       0       0       0       0       0       0
 10608 ;;Total ram usage:        0 bytes
 10609 ;; Hardware stack levels used: 1
 10610 ;; This function calls:
 10611 ;;		Nothing
 10612 ;; This function is called by:
 10613 ;;		_main
 10614 ;; This function uses a non-reentrant model
 10615 ;;
 10616                           
 10617                           	psect	text47
 10618  004344                     __ptext47:
 10619                           	callstack 0
 10620  004344                     _config_ADC:
 10621                           	callstack 30
 10622  004344                     
 10623                           ;Main_program_meter.c: 101:     ADCON0 = 0X01;
 10624  004344  0E01               	movlw	1
 10625  004346  6EC2               	movwf	194,c	;volatile
 10626                           
 10627                           ;Main_program_meter.c: 102:     ADCON1 = 0X0E;
 10628  004348  0E0E               	movlw	14
 10629  00434A  6EC1               	movwf	193,c	;volatile
 10630                           
 10631                           ;Main_program_meter.c: 103:     ADCON2 = 0X87;
 10632  00434C  0E87               	movlw	135
 10633  00434E  6EC0               	movwf	192,c	;volatile
 10634  004350  0012               	return		;funcret
 10635  004352                     __end_of_config_ADC:
 10636                           	callstack 0
 10637                           
 10638                           	psect	rparam
 10639  0000                     
 10640                           	psect	idloc
 10641                           
 10642                           ;Config register IDLOC0 @ 0x200000
 10643                           ;	unspecified, using default values
 10644  200000                     	org	2097152
 10645  200000  FF                 	db	255
 10646                           
 10647                           ;Config register IDLOC1 @ 0x200001
 10648                           ;	unspecified, using default values
 10649  200001                     	org	2097153
 10650  200001  FF                 	db	255
 10651                           
 10652                           ;Config register IDLOC2 @ 0x200002
 10653                           ;	unspecified, using default values
 10654  200002                     	org	2097154
 10655  200002  FF                 	db	255
 10656                           
 10657                           ;Config register IDLOC3 @ 0x200003
 10658                           ;	unspecified, using default values
 10659  200003                     	org	2097155
 10660  200003  FF                 	db	255
 10661                           
 10662                           ;Config register IDLOC4 @ 0x200004
 10663                           ;	unspecified, using default values
 10664  200004                     	org	2097156
 10665  200004  FF                 	db	255
 10666                           
 10667                           ;Config register IDLOC5 @ 0x200005
 10668                           ;	unspecified, using default values
 10669  200005                     	org	2097157
 10670  200005  FF                 	db	255
 10671                           
 10672                           ;Config register IDLOC6 @ 0x200006
 10673                           ;	unspecified, using default values
 10674  200006                     	org	2097158
 10675  200006  FF                 	db	255
 10676                           
 10677                           ;Config register IDLOC7 @ 0x200007
 10678                           ;	unspecified, using default values
 10679  200007                     	org	2097159
 10680  200007  FF                 	db	255
 10681                           
 10682                           	psect	config
 10683                           
 10684                           ; Padding undefined space
 10685  300000                     	org	3145728
 10686  300000  FF                 	db	255
 10687                           
 10688                           ;Config register CONFIG1H @ 0x300001
 10689                           ;	Oscillator Selection bits
 10690                           ;	OSC = HS, HS oscillator
 10691                           ;	Fail-Safe Clock Monitor Enable bit
 10692                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 10693                           ;	Internal/External Oscillator Switchover bit
 10694                           ;	IESO = OFF, Oscillator Switchover mode disabled
 10695  300001                     	org	3145729
 10696  300001  02                 	db	2
 10697                           
 10698                           ;Config register CONFIG2L @ 0x300002
 10699                           ;	Power-up Timer Enable bit
 10700                           ;	PWRT = OFF, PWRT disabled
 10701                           ;	Brown-out Reset Enable bits
 10702                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
 10703                           ;	Brown Out Reset Voltage bits
 10704                           ;	BORV = 3, Minimum setting
 10705  300002                     	org	3145730
 10706  300002  19                 	db	25
 10707                           
 10708                           ;Config register CONFIG2H @ 0x300003
 10709                           ;	Watchdog Timer Enable bit
 10710                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 10711                           ;	Watchdog Timer Postscale Select bits
 10712                           ;	WDTPS = 32768, 1:32768
 10713  300003                     	org	3145731
 10714  300003  1E                 	db	30
 10715                           
 10716                           ; Padding undefined space
 10717  300004                     	org	3145732
 10718  300004  FF                 	db	255
 10719                           
 10720                           ;Config register CONFIG3H @ 0x300005
 10721                           ;	CCP2 MUX bit
 10722                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
 10723                           ;	PORTB A/D Enable bit
 10724                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
 10725                           ;	Low-Power Timer1 Oscillator Enable bit
 10726                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 10727                           ;	MCLR Pin Enable bit
 10728                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 10729  300005                     	org	3145733
 10730  300005  83                 	db	131
 10731                           
 10732                           ;Config register CONFIG4L @ 0x300006
 10733                           ;	Stack Full/Underflow Reset Enable bit
 10734                           ;	STVREN = ON, Stack full/underflow will cause Reset
 10735                           ;	Single-Supply ICSP Enable bit
 10736                           ;	LVP = OFF, Single-Supply ICSP disabled
 10737                           ;	Extended Instruction Set Enable bit
 10738                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 10739                           ;	Background Debugger Enable bit
 10740                           ;	DEBUG = 0x1, unprogrammed default
 10741  300006                     	org	3145734
 10742  300006  81                 	db	129
 10743                           
 10744                           ; Padding undefined space
 10745  300007                     	org	3145735
 10746  300007  FF                 	db	255
 10747                           
 10748                           ;Config register CONFIG5L @ 0x300008
 10749                           ;	Code Protection bit
 10750                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
 10751                           ;	Code Protection bit
 10752                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
 10753                           ;	Code Protection bit
 10754                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
 10755                           ;	Code Protection bit
 10756                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
 10757  300008                     	org	3145736
 10758  300008  0F                 	db	15
 10759                           
 10760                           ;Config register CONFIG5H @ 0x300009
 10761                           ;	Boot Block Code Protection bit
 10762                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 10763                           ;	Data EEPROM Code Protection bit
 10764                           ;	CPD = OFF, Data EEPROM not code-protected
 10765  300009                     	org	3145737
 10766  300009  C0                 	db	192
 10767                           
 10768                           ;Config register CONFIG6L @ 0x30000A
 10769                           ;	Write Protection bit
 10770                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
 10771                           ;	Write Protection bit
 10772                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
 10773                           ;	Write Protection bit
 10774                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
 10775                           ;	Write Protection bit
 10776                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
 10777  30000A                     	org	3145738
 10778  30000A  0F                 	db	15
 10779                           
 10780                           ;Config register CONFIG6H @ 0x30000B
 10781                           ;	Configuration Register Write Protection bit
 10782                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 10783                           ;	Boot Block Write Protection bit
 10784                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
 10785                           ;	Data EEPROM Write Protection bit
 10786                           ;	WRTD = OFF, Data EEPROM not write-protected
 10787  30000B                     	org	3145739
 10788  30000B  E0                 	db	224
 10789                           
 10790                           ;Config register CONFIG7L @ 0x30000C
 10791                           ;	Table Read Protection bit
 10792                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
 10793                           ;	Table Read Protection bit
 10794                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
 10795                           ;	Table Read Protection bit
 10796                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
 10797                           ;	Table Read Protection bit
 10798                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
 10799  30000C                     	org	3145740
 10800  30000C  0F                 	db	15
 10801                           
 10802                           ;Config register CONFIG7H @ 0x30000D
 10803                           ;	Boot Block Table Read Protection bit
 10804                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 10805  30000D                     	org	3145741
 10806  30000D  40                 	db	64
 10807                           tosu	equ	0xFFF
 10808                           tosh	equ	0xFFE
 10809                           tosl	equ	0xFFD
 10810                           stkptr	equ	0xFFC
 10811                           pclatu	equ	0xFFB
 10812                           pclath	equ	0xFFA
 10813                           pcl	equ	0xFF9
 10814                           tblptru	equ	0xFF8
 10815                           tblptrh	equ	0xFF7
 10816                           tblptrl	equ	0xFF6
 10817                           tablat	equ	0xFF5
 10818                           prodh	equ	0xFF4
 10819                           prodl	equ	0xFF3
 10820                           indf0	equ	0xFEF
 10821                           postinc0	equ	0xFEE
 10822                           postdec0	equ	0xFED
 10823                           preinc0	equ	0xFEC
 10824                           plusw0	equ	0xFEB
 10825                           fsr0h	equ	0xFEA
 10826                           fsr0l	equ	0xFE9
 10827                           wreg	equ	0xFE8
 10828                           indf1	equ	0xFE7
 10829                           postinc1	equ	0xFE6
 10830                           postdec1	equ	0xFE5
 10831                           preinc1	equ	0xFE4
 10832                           plusw1	equ	0xFE3
 10833                           fsr1h	equ	0xFE2
 10834                           fsr1l	equ	0xFE1
 10835                           bsr	equ	0xFE0
 10836                           indf2	equ	0xFDF
 10837                           postinc2	equ	0xFDE
 10838                           postdec2	equ	0xFDD
 10839                           preinc2	equ	0xFDC
 10840                           plusw2	equ	0xFDB
 10841                           fsr2h	equ	0xFDA
 10842                           fsr2l	equ	0xFD9
 10843                           status	equ	0xFD8

Data Sizes:
    Strings     117
    Constant    0
    Data        0
    BSS         174
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    125     127
    BANK0           128     45     121
    BANK1           256      0      96
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_25(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_25(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_20(CODE[4]), STR_19(CODE[4]), STR_16(CODE[4]), STR_15(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_20(CODE[4]), STR_19(CODE[4]), STR_16(CODE[4]), STR_15(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_8(CODE[5]), STR_7(CODE[5]), STR_6(CODE[5]), STR_5(CODE[5]), 
		 -> STR_2(CODE[15]), STR_1(CODE[15]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_8(CODE[5]), STR_7(CODE[5]), STR_6(CODE[5]), STR_5(CODE[5]), 
		 -> STR_2(CODE[15]), STR_1(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 15
		 -> STR_8(CODE[5]), STR_7(CODE[5]), STR_6(CODE[5]), STR_5(CODE[5]), 
		 -> STR_2(CODE[15]), STR_1(CODE[15]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_8(CODE[5]), STR_7(CODE[5]), STR_6(CODE[5]), STR_5(CODE[5]), 
		 -> STR_2(CODE[15]), STR_1(CODE[15]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> Buffer_D4(BANK0[8]), Buffer_D3(BANK0[8]), Buffer_D2(BANK0[8]), Buffer_D1(BANK0[8]), 
		 -> VoltageBuffer(BANK1[16]), VdigBuffer(BANK0[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1013$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1013$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    lcd_write@str	PTR unsigned char  size(2) Largest target is 16
		 -> STR_14(CODE[16]), STR_13(CODE[16]), STR_12(CODE[8]), STR_11(CODE[7]), 
		 -> STR_10(CODE[8]), STR_9(CODE[7]), Buffer_D4(BANK0[8]), Buffer_D3(BANK0[8]), 
		 -> Buffer_D2(BANK0[8]), Buffer_D1(BANK0[8]), STR_4(CODE[9]), STR_3(CODE[8]), 
		 -> VoltageBuffer(BANK1[16]), VdigBuffer(BANK0[16]), 


Critical Paths under _main in COMRAM

    _logic_CONTROL->___flge
    _lcd_init->_lcd_cmd
    _lcd_clear->_lcd_write
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _lcd_write->_lcd_send_byte
    _lcd_send_byte->_lcd_cmd
    _lcd_cmd->_set_bit
    _conv_AN0->___flmul
    ___flmul->___xxtofl

Critical Paths under _main in BANK0

    _lcd_SENSOR->_sprintf
    _lcd_LEDS->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   88787
                         _config_ADC
                        _config_FOSC
                          _config_IO
                           _conv_AN0
                           _lcd_LEDS
                         _lcd_SENSOR
                          _lcd_clear
                           _lcd_init
                      _logic_CONTROL
 ---------------------------------------------------------------------------------
 (1) _logic_CONTROL                                        1     1      0    2652
                                             51 COMRAM     1     1      0
                             ___fleq
                             ___flge
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0     874
                                              4 COMRAM     2     2      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_clear                                            0     0      0    3309
                          _lcd_write
 ---------------------------------------------------------------------------------
 (1) _lcd_SENSOR                                           0     0      0   39373
                          _lcd_write
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _lcd_LEDS                                             0     0      0   39373
                          _lcd_write
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             23    15      8   36064
                                             24 BANK0     21    13      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   34943
                                            123 COMRAM     2     2      0
                                             18 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           44    38      6   34548
                                            113 COMRAM    10     4      6
                                              0 BANK0     18    18      0
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              62    55      7   23588
                                             51 COMRAM    62    55      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              6     4      2     920
                                              6 COMRAM     6     4      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     490
                                             25 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    2889
                                             39 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    1854
                                             39 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     798
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2007
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    5042
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3393
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _atoi                                                10     8      2    1324
                                              7 COMRAM    10     8      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     403
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _lcd_write                                            5     2      3    3309
                                              6 COMRAM     5     2      3
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (3) _lcd_send_byte                                        2     1      1    1024
                                              4 COMRAM     2     1      1
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              2     2      0     828
                                              2 COMRAM     2     2      0
                            _set_bit
 ---------------------------------------------------------------------------------
 (3) _set_bit                                              2     1      1     652
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _conv_AN0                                             2     2      0    3206
                                             39 COMRAM     2     2      0
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    2808
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _config_IO                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_FOSC                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_ADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _config_ADC
   _config_FOSC
   _config_IO
   _conv_AN0
     ___flmul
       ___xxtofl (ARG)
     ___xxtofl
   _lcd_LEDS
     _lcd_write
       _lcd_send_byte
         _lcd_cmd
           _set_bit
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
             _strcpy
             _tolower
               _isupper
           _fputc
           _isdigit
           _isupper
           _strncmp
           _tolower
   _lcd_SENSOR
     _lcd_write
     _sprintf
   _lcd_clear
     _lcd_write
   _lcd_init
     _lcd_cmd
   _logic_CONTROL
     ___fleq
     ___flge

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      23        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      60       7       37.5%
BITBANK0            80      0       0       4        0.0%
BANK0               80     2D      79       5       94.5%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     7D      7F       1      100.0%
BITBIGSFRh          2C      0       0      16        0.0%
BITBIGSFRlhl        24      0       0      18        0.0%
BITBIGSFRlhhh        E      0       0      17        0.0%
BITBIGSFRlllh        E      0       0      20        0.0%
BITBIGSFRllh         4      0       0      19        0.0%
BITBIGSFRllll        1      0       0      21        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     158      22        0.0%
DATA                 0      0     158       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sun May 29 22:11:35 2022

           ___fldiv@aexp 0019             ___fldiv@bexp 0018             ___fldiv@sign 0011  
                     _D1 0098                       _D2 0096                       _D3 0094  
                     _D4 0092                       l63 4366                       l72 3E9C  
                     l66 435C                       l74 3EAA                       l90 2868  
                     l75 3F04                       l84 27CC                       l69 4350  
                     l93 345A                       l78 3E92           ?_lcd_send_byte 0005  
           ___awdiv@sign 0006      ___wmul@multiplicand 0003                      l132 3846  
                    l124 3E04                      l150 4304                      l135 4342  
                    l128 4324                      l138 42DE                      l147 3D66  
                    l420 3664                      l415 361E                      l264 3096  
                    l424 4224                      l409 3CC6                      l277 31FA  
                    l381 3AAA                      l447 3560                      l704 1CD2  
                    l720 40F2                      l705 1CC0                      l394 3C1C  
                    l812 2E4A                      l732 257C                      l805 2DB2  
                    l902 2B48                      l734 23DC                      l743 2422  
                    l808 2F0E                      l680 1A9C                      l745 249A  
                    l737 23A0                      l746 2488                      l771 2074  
                    l819 2EA6                      l764 1E7E                      l828 4014  
                    l781 21A4                      l773 20EC                      l774 20DA  
                    l678 1AE8                      l934 0A20                      l918 1260  
                    l871 3AF0                      l695 1C02                      l687 1DB8  
                    l679 1AD6                      l768 21E2                      l874 3B32  
                    l882 290A                      l962 0E56                      l876 3B6C  
                    l884 2912                      _abs 4138                      _pad 3AAC  
           ___awmod@sign 0006                      wreg 000FE8             ___flmul@aexp 0020  
           ___flmul@bexp 0021             ___flmul@sign 001B             ___flmul@temp 0026  
           ___flmul@prod 0022             ___fltol@exp1 000A                     l1003 1354  
                   l1112 41EC                     l1032 1842                     l1106 4066  
                   l1026 18F8                     ?_abs 0013                     l1054 416E  
                   l1150 4292                     l1038 3F5E                     l1127 39E6  
                   l1135 4136                     l1039 3F66                     l3000 1A26  
                   l1144 3FC2                     l1057 4176                     l1049 3762  
                   l1082 3350                     l1138 4368                     l3002 1A2A  
                   l3010 1A3A                     l1154 391C                     l1091 2C9E  
                   l3020 1AAA                     l3012 1A3E                     l3004 1A2E  
                   l1164 40A4                     l3102 1CE2                     l3110 1D38  
                   l3030 1AD4                     l3022 1AB6                     l3014 1A68  
                   l3006 1A32                     l1079 3348                     l1167 40AC  
                   l3200 3056                     l3120 1D8A                     l3112 1D48  
                   l3104 1CEE                     l3040 1B2A                     l3032 1AF6  
                   l3024 1ABA                     l3016 1A84                     l3008 1A36  
                   l1088 2D5A                     l4000 0B40                     l1098 425C  
                   l3202 3076                     l3210 30AA                     l3130 1DA8  
                   l3122 1D90                     l3114 1D58                     l3106 1CFC  
                   l3050 1B64                     l3042 1B38                     l3034 1B06  
                   l3026 1AC8                     l3018 1A94                     l4010 0C28  
                   l4002 0B48                     l3220 311A                     l3212 30CA  
                   l3140 4116                     l3300 231A                     l3124 1D92  
                   l3116 1D78                     l3108 1D36                     l3060 1BD0  
                   l3052 1B66                     l3044 1B46                     l3028 1ACA  
                   l4100 1082                     l4020 0CE4                     l4012 0C5C  
                   l4004 0B58                     l3230 3192                     l3222 3122  
                   l3214 30CE                     l3206 3098                     l3134 40F4  
                   l3142 425E                     l3310 236C                     l3302 2334  
                   l3126 1D98                     l3118 1D7C                     l3070 1C28  
                   l3062 1BD2                     l3054 1B70                     l3046 1B52  
                   l3038 1B1A                     l4110 10C6                     l4102 1094  
                   l4030 0D7C                     l4022 0CF8                     l4006 0B6C  
                   l4014 0C60                     l3400 1E28                     l3232 31A4  
                   l3224 3136                     l3216 30DC                     l3208 309C  
                   l3136 4100                     l3144 426A                     l3320 23C8  
                   l3312 237C                     l3304 2344                     l3128 1DA6  
                   l3080 1C56                     l3064 1BE2                     l3048 1B56  
                   l3056 1B76                     l3152 41B6                     l4120 1106  
                   l4112 10D8                     l4104 10A2                     l4032 0DD2  
                   l4040 0E20                     l4024 0D2A                     l4016 0C7E  
                   l4008 0BD0                     l3410 1E68                     l3402 1E36  
                   l3170 2F46                     l3162 2F10                     l3226 3144  
                   l3234 31AA                     l3218 30FC                     l3138 4112  
                   l3146 426E                     l3330 2408                     l3322 23CA  
                   l3314 2390                     l3306 2354                     l3250 2210  
                   l3242 21E4                     l3082 1C64                     l3074 1C3C  
                   l3090 1C82                     l3058 1B9C                     l3066 1BF2  
                   l4130 114E                     l4122 110E                     l4114 10E0  
                   l4106 10B2                     l4050 0ED6                     l4042 0E30  
                   l4034 0DD6                     l4026 0D38                     l4018 0CB2  
                   l4210 387E                     l3500 21C6                     l3420 1EB2  
                   l3412 1E6E                     l3404 1E38                     l3156 42E0  
                   l3180 2FA2                     l3172 2F54                     l3164 2F14  
                   l3236 31BA                     l3228 3172                     l3148 4286  
                   l3340 2444                     l3332 2412                     l3324 23DA  
                   l3316 239E                     l3308 2364                     l3260 224A  
                   l3252 2220                     l3244 21F0                     l3084 1C6C  
                   l3076 1C46                     l3068 1C18                     l3092 1C90  
                   l4140 11A2                     l4132 116A                     l4124 1116  
                   l4116 10F0                     l4108 10B6                     l4052 0EE4  
                   l4060 0F1E                     l4044 0E42                     l4036 0E0A  
                   l4028 0D48                     l4220 38FA                     l4212 388C  
                   l4204 3848                     l4300 1446                     l3502 21C8  
                   l3430 1F02                     l3422 1EBE                     l3414 1E8E  
                   l3406 1E48                     l4230 37D2                     l3158 42FC  
                   l3190 300C                     l3182 2FAA                     l3174 2F74  
                   l3166 2F22                     l3238 31DA                     l3350 24B6  
                   l3342 2452                     l3334 2420                     l3326 23EC  
                   l3318 23AA                     l3270 2276                     l3262 2250  
                   l3254 2230                     l3246 21FE                     l3094 1C94  
                   l3086 1C70                     l3078 1C54                     l3510 40AE  
                   l4150 11DE                     l4142 11A8                     l4134 1170  
                   l4126 1122                     l4118 10F8                     l4070 0F58  
                   l4062 0F30                     l4054 0EF6                     l4046 0E4E  
                   l4038 0E1C                     l4214 38A4                     l4206 3872  
                   l4310 14E0                     l4302 146A                     l3504 21CE  
                   l3440 1F44                     l3432 1F0E                     l3424 1EC8  
                   l3416 1E9E                     l3408 1E58                     l4240 3842  
                   l4232 37DA                     l4224 3766                     l4400 4328  
                   l3192 302C                     l3184 2FBE                     l3176 2F78  
                   l3168 2F42                     l3520 39FA                     l3360 2522  
                   l3352 24C4                     l3344 2480                     l3328 2402  
                   l3336 2432                     l3280 22B0                     l3272 2286  
                   l3264 2256                     l3256 2232                     l3248 2200  
                   l3600 3C5C                     l3096 1CA2                     l3088 1C80  
                   l3512 40BE                     l4160 1222                     l4152 11E4  
                   l4144 11BA                     l4128 1128                     l4136 1176  
                   l4072 0F64                     l4064 0F3E                     l4080 0F84  
                   l4056 0F08                     l4048 0E72                     l4216 38C0  
                   l4320 156E                     l4312 1500                     l4304 1474  
                   l3506 21D2                     l3450 1FA6                     l3442 1F50  
                   l3434 1F1A                     l3426 1EDE                     l4242 3844  
                   l4234 37F2                     l4226 37CE                     l4402 4332  
                   l3194 302E                     l3186 2FCC                     l3178 2F84  
                   l3530 3A20                     l3522 3A02                     l3370 2570  
                   l3362 253C                     l3354 24EE                     l3338 2440  
                   l3282 22C6                     l3274 2296                     l3266 2264  
                   l3258 223A                     l3602 3C8A                     l3098 1CB8  
                   l4162 122A                     l4146 11C6                     l4138 1188  
                   l4090 100A                     l4082 0F96                     l4074 0F74  
                   l4066 0F4E                     l4058 0F16                     l4218 38D2  
                   l4330 1616                     l4322 157E                     l4306 1482  
                   l4250 12A6                     l4410 3F0E                     l2740 4352  
                   l3460 203C                     l3452 1FB2                     l3444 1F60  
                   l3436 1F28                     l3428 1EEA                     l3380 1DBA  
                   l4236 380C                     l4228 37D0                     l4404 433A  
                   l4180 3230                     l4172 31FC                     l3196 3040  
                   l3188 2FDE                     l3700 3B14                     l3540 3A58  
                   l3532 3A28                     l3524 3A06                     l3516 39E8  
                   l3372 2572                     l3364 2558                     l3348 24AA  
                   l3356 24F2                     l3284 22D6                     l3292 22F6  
                   l3276 2298                     l3268 2266                     l3604 3C9A  
                   l3620 35DE                     l3612 3562                     l4164 123A  
                   l4156 11EA                     l4148 11CE                     l4092 103E  
                   l4084 0FA8                     l4076 0F78                     l4068 0F52  
                   l4340 16CC                     l4332 163A                     l4324 15B0  
                   l4316 150E                     l4308 14A6                     l4252 12AA  
                   l4244 1262                     l4412 3F1C                     l4420 3FDE  
                   l4500 3E4A                     l2742 435A                     l3470 2092  
                   l3462 205A                     l3454 1FCE                     l3446 1F7A  
                   l3438 1F34                     l3390 1DF6                     l3382 1DC6  
                   l4238 3828                     l4406 433C                     l4430 3CDA  
                   l4182 326A                     l4174 3210                     l3198 3046  
                   l3710 4152                     l3702 3B40                     l3550 3A84  
                   l3542 3A5E                     l3534 3A3A                     l3526 3A14  
                   l3518 39EC                     l3366 255C                     l3358 250C  
                   l3294 2306                     l3286 22DE                     l3278 22A0  
                   l3606 3CBE                     l3630 3662                     l3622 35EC  
                   l3614 3590                     l4166 1240                     l4158 1216  
                   l4094 1044                     l4086 0FAC                     l4078 0F7E  
                   l4342 16E2                     l4350 174C                     l4334 1682  
                   l4326 15C0                     l4318 154C                     l4270 12DC  
                   l4262 12D0                     l4254 12B6                     l4246 1286  
                   l4414 3F42                     l4422 3FE6                     l4502 3E5C  
                   l4510 25B0                     l2744 4344                     l3480 20FC  
                   l3472 2096                     l3464 2064                     l3456 1FF8  
                   l3448 1F8A                     l3392 1E06                     l3384 1DD4  
                   l3800 4322                     l4440 3D32                     l4432 3CE4  
                   l4184 3272                     l2920 3930                     l3704 3B54  
                   l3544 3A74                     l3536 3A42                     l3552 3A8A  
                   l3528 3A1C                     l3560 3B6E                     l3368 256A  
                   l3296 2306                     l3288 22E2                     l3608 3CC4  
                   l3624 35FE                     l3616 35A0                     l3720 36F8  
                   l3712 3666                     l4088 0FB2                     l4096 1048  
                   l4360 1812                     l4352 177A                     l4344 16F0  
                   l4328 15F2                     l4256 12B8                     l4280 1342  
                   l4248 1294                     l4408 3F06                     l4424 4002  
                   l4416 3FC4                     l4504 3E6E                     l4600 3DEE  
                   l4520 2692                     l4512 25D6                     l2738 435E  
                   l3490 215E                     l3482 2108                     l3474 20A4  
                   l3466 2072                     l3458 202E                     l3394 1E0C  
                   l3386 1DD6                     l4450 2DC2                     l4442 3D36  
                   l4434 3CF6                     l4194 32E4                     l4186 327A  
                   l4178 3214                     l2922 3942                     l3810 28D2  
                   l3554 3A9A                     l3546 3A7C                     l3538 3A4A  
                   l3570 3B9A                     l3562 3B72                     l3626 360C  
                   l3618 35CE                     l3634 41EE                     l3650 34B0  
                   l3642 345C                     l3730 375A                     l3714 3686  
                   l4098 1066                     l4370 1888                     l4346 1720  
                   l4338 16BA                     l4290 13CC                     l4282 1362  
                   l4274 12E2                     l4266 12D6                     l4258 12CA  
                   l4418 3FD6                     l4506 3E80                     l4602 3DF6  
                   l4530 2774                     l4522 26C4                     l4514 2608  
                   l4610 4188                     l3492 2172                     l3484 2116  
                   l3476 20D2                     l3468 2084                     l3396 1E1C  
                   l3388 1DE6                     l4460 2E00                     l4452 2DD8  
                   l4444 2D5E                     l4436 3CFC                     l4428 3CCA  
                   l4196 331A                     l4188 32AE                     l3708 4138  
                   l2924 394C                     l3820 292C                     l3812 28E2  
                   l3804 286A                     l3556 3AA2                     l3548 3A7E  
                   l3580 3BD2                     l3572 3BA2                     l3564 3B80  
                   l3628 365C                     l3636 4204                     l2940 1926  
                   l2932 18FA                     l3652 34B2                     l3644 3472  
                   l3716 36C4                     l3724 3704                     l4372 189C  
                   l4356 17A0                     l4292 13DA                     l4284 1364  
                   l4604 42BA                     l4540 283E                     l4532 27A6  
                   l4524 26EA                     l4516 263A                     l4508 257E  
                   l4620 41AA                     l4612 418C                     l3494 218C  
                   l3486 2140                     l3398 1E22                     l4470 2E88  
                   l4462 2E32                     l4446 2D6E                     l4438 3D0A  
                   l4198 332C                     l2926 396A                     l2918 391E  
                   l3830 2958                     l3822 293A                     l3814 28E4  
                   l3806 288A                     l3590 3C0C                     l3582 3BE8  
                   l3574 3BB4                     l3566 3B88                     l3638 4214  
                   l2950 1960                     l2942 1936                     l2934 1906  
                   l3654 34C2                     l3726 3716                     l3718 36EC  
                   l3750 2B6A                     l3734 3F68                     l3742 4068  
                   l3910 07BC                     l3902 0754                     l4358 17DE  
                   l4366 1856                     l4294 13FA                     l4286 1388  
                   l4278 12EE                     l4382 18C2                     l4550 3400  
                   l4542 3352                     l4526 271C                     l4518 2660  
                   l4534 27CC                     l4614 4190                     l4606 4178  
                   ?_pad 0011                     l3496 21A8                     l3488 2144  
                   l4480 2EDE                     l4472 2E96                     l4464 2E34  
                   l4456 2DEC                     l4448 2D7C                     l2928 39A0  
                   l3840 2A64                     l3832 29DA                     l3824 2940  
                   l3816 28FE                     l3808 28B2                     l3592 3C14  
                   l3584 3BF0                     l3576 3BBC                     l3568 3B8C  
                   l2960 198E                     l2952 1966                     l2944 1946  
                   l2936 1914                     l3680 3540                     l3664 34EC  
                   l3656 34C6                     l3648 3486                     l3760 2C52  
                   l3752 2BC0                     l3736 3F78                     l3744 4096  
                   l3920 080A                     l3904 0780                     l4384 18E6  
                   l4368 187A                     l4376 18A8                     l4288 13BE  
                   l4552 3412                     l4544 33CA                     l4560 3D68  
                   l4536 27F0                     l4528 274E                     l4616 419E  
                   l4608 4184                     l3498 21B8                     l4482 2EEE  
                   l4474 2EB4                     l4466 2E40                     l4458 2DF4  
                   l4490 3E94                     l3690 3ACE                     l3850 2AD6  
                   l3842 2A82                     l3834 29E0                     l3826 2948  
                   l3818 291A                     l3586 3BF6                     l3578 3BC4  
                   l2970 19C2                     l2962 1990                     l2954 1978  
                   l2946 1948                     l2938 1916                     l3682 3550  
                   l3674 3514                     l3666 34F6                     l3658 34D4  
                   l3770 2D3A                     l3762 2C8E                     l3754 2BD4  
                   l3738 4068                     l3922 0836                     l3906 079C  
                   l3914 07E4                     l4378 18B6                     l4298 1408  
                   l4554 3424                     l4546 33DC                     l4570 3D78  
                   l4562 3D6C                     l4538 2816                     l4618 41A6  
                   l4484 2EFC                     l4476 2EB6                     l4468 2E7C  
                   l4492 3E9A                     l3780 4016                     l3692 3ADC  
                   l3860 2B10                     l3852 2AE4                     l3844 2A9C  
                   l3836 29E6                     l3828 2952                     l3588 3BFC  
                   l3596 3C1E                     l2980 19FE                     l2964 19A0  
                   l2972 19CA                     l2956 197A                     l2948 1950  
                   l3676 3520                     l3668 3500                     l3772 2D4A  
                   l3756 2BE2                     l3764 2CC2                     l3748 2B4A  
                   l3940 08F0                     l3924 0852                     l3932 086E  
                   l3908 07B4                     l4556 3436                     l4548 33EE  
                   l4572 3D7A                     l4564 3D6E                     l4486 2EFE  
                   l4478 2EBA                     l4494 3EB2                     l3782 401A  
                   l3694 3AE8                     l3686 3AAC                     l3854 2AEA  
                   l3862 2B20                     l3846 2AB6                     l3838 2A4A  
                   l3598 3C4C                     l2990 1A12                     l2982 1A02  
                   l2974 19DA                     l2966 19B0                     l2958 1980  
                   l3678 3530                     l3766 2CFE                     l3942 08F4  
                   l3950 09BA                     l3934 0886                     l3870 0690  
                   l4558 3448                     l4590 3DB6                     l4582 3D90  
                   l4574 3D7C                     l4566 3D70                     l4496 3EBE  
                   l3792 4308                     l3776 4226                     l3784 402E  
                   l3696 3AFC                     l3688 3ABA                     l3856 2AFC  
                   l3848 2AC4                     l2992 1A16                     l2984 1A06  
                   l2976 19EC                     l2968 19C0                     l3768 2D12  
                   l3960 09FA                     l3952 09C8                     l3944 094E  
                   l3880 06DA                     l3872 069E                     l4592 3DBC  
                   l4584 3D96                     l4576 3D8C                     l4568 3D76  
                   l3794 431C                     l3786 405C                     l3698 3B10  
                   l3858 2B08                     l2994 1A1A                     l2986 1A0A  
                   l2978 19FA                     l3970 0A40                     l3962 0A14  
                   l3954 09CC                     l3946 0982                     l3938 08BC  
                   l3890 0720                     l3882 06EC                     l3874 06A6  
                   l3866 0678                     l4498 3E06                     l4594 3DC4  
                   l4586 3DA4                     l3788 4060                     l2996 1A1E  
                   l2988 1A0E                     l3972 0A52                     l3980 0AB0  
                   l3956 09DE                     l3964 0A2C                     l3948 0988  
                   l3892 0724                     l3884 06FA                     l3876 06CA  
                   l3868 0680                     l4692 1314                     l4596 3DD2  
                   l4588 3DA6                     l4694 3298                     l2998 1A22  
                   l3990 0AEE                     l3982 0AB8                     l3974 0A6E  
                   l3958 09F2                     l3894 0728                     l3886 070C  
                   l3878 06D2                     l4598 3DD8                     l3992 0B00  
                   l3984 0ACA                     l3976 0AA4                     l3888 0718  
                   l3896 072E                     l3994 0B0E                     l3986 0ADC  
                   l3978 0AAC                     l3996 0B26                     l3988 0AEA  
                   l3998 0B38                     STR_1 0620                     STR_2 0611  
                   STR_3 0638                     STR_4 062F                     STR_5 065E  
                   STR_6 065E                     STR_7 065E                     STR_8 065E  
                   STR_9 0650                     u3000 1A80                     u3001 1A7A  
                   u3010 1A82                     u3100 1B9C                     u3020 1AAA  
                   u3101 1B98                     u3021 1AA6                     u3110 1BE2  
                   u3030 1AC8                     u3111 1BDE                     u3031 1AC4  
                   u4000 3C4C                     u3200 1CCE                     u3120 1C18  
                   u3040 1AE8                     u4001 3C48                     u3201 1CCA  
                   u3121 1C14                     u3041 1AE4                     u4010 3C8A  
                   u3210 1CE2                     u3130 1C28                     u3050 1AF6  
                   u4011 3C86                     u3211 1CDE                     u3131 1C24  
                   u3051 1AF2                     u3300 4286                     u4020 3CBE  
                   u3220 1CFC                     u3140 1C54                     u3060 1B06  
                   u4100 34A6                     u3301 4282                     u4021 3CBA  
                   u3221 1CF8                     u3141 1C50                     u3061 1B02  
                   u4030 3590                     u3230 1D36                     u3150 1C64  
                   u3070 1B38                     u4110 34D4                     u3310 41E6  
                   u4031 358C                     u3231 1D32                     u3151 1C60  
                   u3071 1B34                     u4111 34D0                     u3311 41E0  
                   u3400 30AA                     u4200 4152                     u4040 35CE  
                   u3240 1D48                     u3160 1C80                     u3080 1B46  
                   u4120 34E8                     u3320 41E8                     u5000 1082  
                   u3401 30A6                     u4201 414E                     u4041 35CA  
                   u3241 1D44                     u3161 1C7C                     u3081 1B42  
                   u4121 34E4                     u4105 349C                     u5001 107E  
                   u3330 2F22                     u3410 30DC                     u4050 35EC  
                   u3250 1D58                     u3170 1C90                     u3090 1B64  
                   u4130 3510                     u4210 36A6                     u5010 1094  
                   u3331 2F1E                     u3411 30D8                     u4051 35E8  
                   u3251 1D54                     u3171 1C8C                     u3091 1B60  
                   u4131 350C                     u5011 1090                     u5100 3266  
                   u3340 2F54                     u3420 311A                     u3500 2276  
                   u4060 360C                     u3260 1D78                     u3180 1CA2  
                   u4140 3530                     u4220 36C4                     u4300 4096  
                   u5020 10A2                     u5101 3262                     u3341 2F50  
                   u3421 3116                     u3501 2272                     u4061 3608  
                   u3261 1D74                     u3181 1C9E                     u4141 352C  
                   u4221 36C0                     u4301 4092                     u5021 109E  
                   u5110 331A                     u3430 3144                     u3510 2286  
                   u4070 365C                     u3270 1D8A                     u3190 1CB8  
                   u4150 3540                     u4230 36EC                     u4310 2B92  
                   u5030 10D8                     u5111 3316                     u3351 2F7E  
                   u3431 3140                     u3511 2282                     u4071 3658  
                   u3271 1D86                     u3191 1CB4                     u4151 353C  
                   u4231 36E8                     u4215 369C                     u5031 10D4  
                   u5120 332C                     u3360 2FA2                     u3440 3172  
                   u4160 3ABA                     u3600 2440                     u3520 22C6  
                   u4080 4204                     u3280 1DA6                     u4240 3716  
                   u4400 2D3A                     u4320 2BC0                     u5040 1106  
                   u5200 1362                     u5121 3328                     u3361 2F9E  
                   u3441 316E                     u4161 3AB6                     u3601 243C  
                   u3521 22C2                     u4081 4200                     u3281 1DA2  
                   u4241 3712                     u4401 2D36                     u4321 2BBC  
                   u5041 1102                     u5201 135E                     u4410 4256  
                   u3370 2FCC                     u3450 31BA                     u3290 4136  
                   u4170 3ADC                     u3610 2452                     u3530 2306  
                   u4090 3472                     u4330 2BE2                     u5050 1188  
                   u5130 3872                     u5210 1388                     u4411 4250  
                   u3371 2FC8                     u3451 31B6                     u3291 4132  
                   u4171 3AD8                     u3611 244E                     u3531 2302  
                   u4091 346E                     u4331 2BDE                     u4315 2B88  
                   u5051 1184                     u5131 386E                     u5211 1384  
                   u3700 1DE6                     u4420 4258                     u3380 300C  
                   u4180 3B32                     u4500 28FE                     u3620 2480  
                   u3540 237C                     u3460 21FE                     u2900 1914  
                   u4260 3750                     u5060 11A2                     u5140 38A4  
                   u5300 163A                     u5220 13CC                     u3701 1DE2  
                   u3381 3008                     u4181 3B2E                     u4501 28FA  
                   u3621 247C                     u3541 2378                     u3461 21FA  
                   u2901 1910                     u4261 374A                     u5061 119E  
                   u5141 38A0                     u5301 1636                     u5221 13C8  
                   u3710 1DF6                     u4430 402E                     u3390 3056  
                   u4190 3B40                     u4510 292C                     u3630 2496  
                   u3550 239E                     u3470 2210                     u2910 1926  
                   u4270 3752                     u4350 2C4E                     u5070 11BA  
                   u5150 38C0                     u5310 16CC                     u5230 1446  
                   u3711 1DF2                     u4431 402A                     u3391 3052  
                   u4191 3B3C                     u4511 2928                     u3631 2492  
                   u3551 239A                     u3471 220C                     u2911 1922  
                   u4255 3728                     u4351 2C4A                     u5071 11B6  
                   u5151 38BC                     u5311 16C8                     u5231 1442  
                   u3800 20A4                     u3720 1E36                     u5400 3D56  
                   u4440 405C                     u4600 2AFC                     u4520 293A  
                   u3640 24AA                     u3560 23C8                     u3480 2220  
                   u2920 1936                     u4360 2C72                     u4280 3FB0  
                   u5080 1216                     u5160 38D2                     u5320 177A  
                   u5240 146A                     u3801 20A0                     u3721 1E32  
                   u4441 4058                     u4601 2AF8                     u4521 2936  
                   u3641 24A6                     u3561 23C4                     u3481 221C  
                   u2921 1932                     u4345 2BF6                     u5081 1212  
                   u5161 38CE                     u5321 1776                     u5241 1466  
                   u3810 20D2                     u3730 1E48                     u4450 431C  
                   u5410 3D66                     u5090 3230                     u4530 2A64  
                   u3650 24C4                     u3570 23EC                     u3490 2264  
                   u2930 1978                     u4370 2C8E                     u4346 2C00  
                   u4290 3FC2                     u4610 069E                     u5170 38FA  
                   u5330 17DE                     u5250 14A6                     u3811 20CE  
                   u3731 1E44                     u4451 4318                     u5411 3D62  
                   u5091 322C                     u4531 2A60                     u3651 24C0  
                   u3571 23E8                     u3491 2260                     u2931 1974  
                   u4371 2C8A                     u4347 2C10                     u4291 3FBE  
                   u4611 069A                     u5171 38F6                     u5331 17DA  
                   u5251 14A2                     u3820 20E8                     u3740 1E58  
                   u5500 2EEE                     u5420 2D6E                     u2860 3930  
                   u4540 2A82                     u4460 289A                     u3900 3A3A  
                   u3660 250C                     u3580 2402                     u2940 198E  
                   u4380 2CE2                     u4700 094A                     u4620 06EC  
                   u5340 187A                     u5260 154C                     u5180 1286  
                   u3821 20E4                     u3741 1E54                     u5501 2EEA  
                   u5421 2D6A                     u2861 392C                     u4541 2A7E  
                   u4461 2894                     u3901 3A36                     u3661 2508  
                   u3581 23FE                     u2941 198A                     u4365 2C68  
                   u4701 0946                     u4621 06E8                     u5341 1876  
                   u5261 1548                     u5181 1282                     u3830 20FC  
                   u3750 1E8E                     u5510 2EFC                     u5430 2D7C  
                   u2870 3942                     u4550 2A9C                     u4470 289C  
                   u3910 3A58                     u3670 253C                     u3590 2420  
                   u2950 19A0                     u4390 2CFE                     u4710 09BA  
                   u4630 06FA                     u5270 157E                     u5190 1354  
                   u3831 20F8                     u3751 1E8A                     u5511 2EF8  
                   u5431 2D78                     u5407 3D4C                     u2871 393E  
                   u4551 2A98                     u3911 3A54                     u3671 2538  
                   u3591 241C                     u2951 199C                     u4391 2CFA  
                   u4287 3FA6                     u4711 09B6                     u4631 06F6  
                   u5271 157A                     u5191 1350                     u3840 2116  
                   u3760 1E9E                     u5440 2DD8                     u5520 3EAA  
                   u2880 396A                     u4560 2AB6                     u4480 28B2  
                   u3920 3A74                     u3680 256A                     u2960 19B0  
                   u4800 0ADC                     u4720 09DE                     u4640 070C  
                   u5280 15C0                     u5360 3F5E                     u5600 27A6  
                   u3841 2112                     u3761 1E9A                     u5441 2DD4  
                   u5521 3EA6                     u2881 3966                     u4561 2AB2  
                   u4481 28AE                     u3921 3A70                     u3681 2566  
                   u2961 19AC                     u4385 2CD8                     u4801 0AD8  
                   u4721 09DA                     u4641 0708                     u5281 15BC  
                   u5361 3F5A                     u5601 27A2                     u3850 215E  
                   u3770 2018                     u3690 1DD4                     u5450 2E2E  
                   u5370 3CDA                     u2890 39A0                     u4570 2AC4  
                   u4490 28E2                     u3930 3A9A                     u2970 19EC  
                   u4810 0AEA                     u4730 09F2                     u4650 0754  
                   u5290 1616                     u5610 27E4                     u5530 25B0  
                   u3851 215A                     u3691 1DD0                     u5451 2E2A  
                   u5355 4330                     u5371 3CD6                     u2891 399C  
                   u4571 2AC0                     u4491 28DE                     u3931 3A96  
                   u2971 19E8                     u4811 0AE6                     u4731 09EE  
                   u4651 0750                     u5291 1612                     u5611 27DC  
                   u5531 25AC                     u3860 218C                     u3780 2072  
                   u5460 2E78                     u5356 4332                     u5380 3CF6  
                   u4580 2AD6                     u3940 3B80                     u2980 19FA  
                   u4900 0E1C                     u4820 0B00                     u4740 0A14  
                   u4660 0780                     u5540 2608                     u5700 419E  
                   u3861 2188                     u3781 206E                     u5461 2E74  
                   u5381 3CF2                     u4581 2AD2                     u3941 3B7C  
                   u2981 19F6                     u4901 0E18                     u4821 0AFC  
                   u4741 0A10                     u4661 077C                     u5541 2604  
                   u5701 419A                     u3870 21C6                     u3790 2092  
                   u5470 2E96                     u5390 3D2A                     u4590 2AE4  
                   u3950 3B9A                     u2990 1A68                     u4910 0E42  
                   u4830 0B0E                     u4750 0A3C                     u4670 080A  
                   u5630 2808                     u5550 263A                     u3871 21C2  
                   u3791 208E                     u3775 200E                     u5471 2E92  
                   u4591 2AE0                     u3951 3B96                     u2991 1A64  
                   u4911 0E3E                     u4831 0B0A                     u4751 0A38  
                   u4671 0806                     u5631 2800                     u5551 2636  
                   u5480 2EA6                     u3880 39FA                     u3960 3BB4  
                   u4920 0EE4                     u4840 0B38                     u4760 0A52  
                   u4680 0836                     u5560 2692                     u5481 2EA2  
                   u3881 39F6                     u3961 3BB0                     u4921 0EE0  
                   u4841 0B34                     u4761 0A4E                     u4681 0832  
                   u5561 268E                     u5490 2EB4                     u3890 3A14  
                   u3970 3BD2                     u4930 0EF6                     u4850 0C7E  
                   u4770 0A6E                     u4690 08B8                     u5650 282E  
                   u5570 26C4                     u5491 2EB0                     u3891 3A10  
                   u3971 3BCE                     u4931 0EF2                     u4851 0C7A  
                   u4771 0A6A                     u4691 08B4                     u5651 2826  
                   u5571 26C0                     u3980 3BE8                     u4940 0F08  
                   u4860 0CE4                     u4780 0AA4                     u5628 27E6  
                   u5580 271C                     u5397 3D20                     u3981 3BE4  
                   u4941 0F04                     u4861 0CE0                     u4781 0AA0  
                   u5717 3D82                     u5581 2718                     u3990 3C0C  
                   u4950 0F16                     u4870 0D2A                     u4790 0ACA  
                   u5670 2856                     u5590 274E                     u5807 3E96  
                   u3991 3C08                     u4951 0F12                     u4871 0D26  
                   u4791 0AC6                     u5727 3D9C                     u5671 284E  
                   u5591 274A                     u4960 0F30                     u4880 0D38  
                   u5648 280A                     u4961 0F2C                     u4881 0D34  
                   u5737 3DBE                     u4970 0F3E                     u4890 0DD2  
                   u5690 3DB6                     u4971 0F3A                     u4891 0DCE  
                   u5747 3DCC                     u5691 3DB2                     u4980 0F96  
                   u5668 2830                     u4981 0F92                     u5757 3DDE  
                   u4990 1066                     u4991 1062                     u5767 3DF0  
                   u5688 2858                     u5777 3DFE                     u5787 4334  
                   u5797 37D4                     abs@a 0013                     _dbuf 0100  
                   _atoi 31FC                     _main 4178                     _dtoa 286A  
                   _prec 0090                     _nout 008C                     pad@i 0018  
                   pad@p 0015                     fsr1h 000FE2                     fsr2h 000FDA  
                   indf1 000FE7                     indf2 000FDF                     fsr1l 000FE1  
                   pad@w 001A                     fsr2l 000FD9            ___fpclassifyf 3666  
                   prodh 000FF4                     prodl 000FF3                     start 0000  
        ___fldiv@new_exp 0012             ___param_bank 000000                    ??_abs 0015  
                  ??_pad 0017            _VoltageBuffer 0150            ___fltol@sign1 0009  
        __end_of___aodiv 3098                    ?_atoi 0008          __end_of___fladd 1DBA  
                  ?_main 0001                    ?_dtoa 001C          __end_of___aomod 31FC  
        __end_of___fldiv 257E          __end_of___awdiv 3AAC          __end_of___flneg 4226  
                  STR_10 0640                    STR_11 0657                    STR_20 066F  
                  STR_12 0648                    STR_13 0601                    STR_14 0601  
                  STR_23 0673                    STR_15 0663                    STR_16 066B  
                  STR_25 0673                    STR_19 0667          __end_of___awmod 3C1E  
        __end_of___flmul 21E4          __end_of___flsub 40F4          __end_of___fltol 3562  
        ___awdiv@divisor 0003          ___awdiv@counter 0005             vfpfcnvrt@fmt 0074  
                  _PORTC 000F82                    _PORTD 000F83                    _TRISB 000F93  
                  _TRISC 000F94                    _TRISD 000F95          __end_of_lcd_cmd 3848  
                  _flags 007E                    _fputc 391E                    _fputs 40F4  
        __end_of_isdigit 425E                    atoi@n 0010                    pad@fp 0011  
                  atoi@s 0008                    _width 008E                    _putch 4368  
                  dtoa@d 001E                    dtoa@i 003E                    dtoa@n 0036  
                  dtoa@p 0030                    dtoa@s 0034                    dtoa@w 0032  
        __end_of_isspace 4068          __end_of_set_bit 4326          __end_of_isupper 41EE  
                  tablat 000FF5                    status 000FD8          __end_of_sprintf 4016  
         ?___fpclassifyf 0001          __end_of_tolower 40AE          __end_of_strncmp 391E  
           lcd_write@end 000A             lcd_write@col 0007             lcd_write@lin 000B  
           lcd_write@str 0008          __initialization 4294             __end_of_atoi 3352  
           __end_of_main 41B6             __end_of_dtoa 2B4A          ??_lcd_send_byte 0006  
                 ??_atoi 000A                   ??_main 007E                   ??_dtoa 0026  
          __activetblptr 000002                   _ADCON0 000FC2                   _ADCON1 000FC1  
                 _ADCON2 000FC0                   ?_fputc 0001                   ?_fputs 000A  
                 _ADRESH 000FC4                   _ADRESL 000FC3         ___awdiv@dividend 0001  
                 ?_putch 0001                   _OSCCON 000FD3               _VdigBuffer 009C  
          vfpfcnvrt@done 00D4         __end_of___xxtofl 2F10         __end_of_lcd_LEDS 345C  
       __end_of_conv_AN0 3F06             vfprintf@cfmt 007C         __end_of_lcd_init 3E06  
                 ___flge 3562                   ___fleq 3C1E                ??___aodiv 0011  
              ??___fladd 0009                ??___aomod 0011                   ___wmul 42E0  
              ??___fldiv 0009                ??___awdiv 0005                ??___flneg 0005  
              ??___awmod 0005                ??___flmul 0017                ??___flsub 0030  
              ??___fltol 0005                   _efgtoa 0678                   _floorf 2B4A  
                 clear_0 429A                   clear_1 42A6         ___awdiv@quotient 0007  
        ___awmod@divisor 0003                   isa$std 000001          ___awmod@counter 0005  
                 pad@buf 0013                ??_lcd_cmd 0003                   dtoa@fp 001C  
                 _strcpy 3F68                   _strlen 425E                   fputc@c 0001  
                 fputs@c 000E                   fputs@i 000F                   fputs@s 000A  
              ??_isdigit 0003          ___fpclassifyf@e 0009          ___fpclassifyf@u 000B  
        ___fpclassifyf@x 0001             __mediumconst 0000                ??_isspace 0003  
              ??_set_bit 0002                   tblptrh 000FF7                ??_isupper 0003  
                 tblptrl 000FF6                   tblptru 000FF8                   putch@c 0001  
       __end_of_vfprintf 3F68                ??_sprintf 007E                ??_tolower 0009  
              ??_strncmp 0007               ___flge@ff1 0028               ___flge@ff2 002C  
        ??___fpclassifyf 0005             ___xxtofl@arg 000B             ___xxtofl@exp 000A  
           ___xxtofl@val 0001               ___fleq@ff1 0001               ___fleq@ff2 0005  
             __accesstop 0080  __end_of__initialization 42B0               ___flneg@f1 0001  
          ___rparam_used 000001               ___fltol@f1 0001           __pcstackCOMRAM 0001  
          __end_of_fputc 39E8            __end_of_fputs 4138            __end_of_putch 436A  
                ??_fputc 0005                  ??_fputs 000E                  ??_putch 0001  
             __pbssBANK0 0080               __pbssBANK1 0100              _VdigADC_AN0 009A  
                ?___flge 0028                  ?___fleq 0001               _lcd_SENSOR 3E06  
                ?___wmul 0001                  ?_efgtoa 0034            _logic_CONTROL 257E  
                ?_floorf 001A                  ?_strcpy 0001                  ?_strlen 0001  
             _config_ADC 4344                ?___xxtofl 0001                ?_lcd_LEDS 0001  
     lcd_send_byte@level 0006                  _OSCTUNE 000F9B                ?_conv_AN0 0001  
              ?_lcd_init 0001                  __Hparam 0000                  __Lparam 0000  
      __end_of_lcd_clear 42E0        __end_of_config_IO 435E                  ___aodiv 2F10  
                ___fladd 18FA           ?_logic_CONTROL 0001                  ___aomod 3098  
                ___fldiv 21E4                  ___awdiv 39E8                  ___flneg 41EE  
                ___awmod 3B6E                  ___flmul 1DBA                  ___flsub 40AE  
                ___fltol 345C        __end_of_lcd_write 3D68                ?_vfprintf 00DE  
            set_bit@comp 0001             __psmallconst 0600                  __pcinit 4294  
                __ramtop 0600                  __ptext0 4178                  __ptext1 257E  
                __ptext2 3D68                  __ptext3 42BA                  __ptext4 3E06  
                __ptext5 3352                  __ptext6 3FC4                  __ptext7 3F06  
                __ptext8 1262                  __ptext9 3848                  _lcd_cmd 3764  
                _isdigit 4226               ??___xxtofl 0005         ___awmod@dividend 0001  
                _isspace 4016               ??_lcd_LEDS 007E                  _set_bit 4306  
                _isupper 41B6                  efgtoa@c 003A                  efgtoa@d 0052  
                efgtoa@e 006A                  efgtoa@f 0036                  efgtoa@g 0066  
                efgtoa@h 005C                  efgtoa@i 0064                  efgtoa@l 0060  
                efgtoa@m 004C                  efgtoa@n 006C                  efgtoa@p 0056  
                efgtoa@t 0046                  efgtoa@u 006E                  efgtoa@w 0058  
                atoi@neg 000E               ??_conv_AN0 0028                  _sprintf 3FC4  
                _tolower 4068               ??_lcd_init 0005                  _strncmp 3848  
   end_of_initialization 42B0                  floorf@e 0028                  floorf@m 0024  
                floorf@u 002A                  floorf@x 001A                  fputc@fp 0003  
          __Lmediumconst 0000                  fputs@fp 000C        __end_of_vfpfcnvrt 18FA  
             efgtoa@mode 005B               efgtoa@sign 0054              ?_lcd_SENSOR 0001  
                postdec2 000FDD                  postinc0 000FEE                  postinc1 000FE6  
                postinc2 000FDE               ??_vfprintf 007C    __end_of_lcd_send_byte 4344  
                strcpy@d 0009                  strlen@a 0003                  strcpy@s 0007  
                strlen@s 0001                _PORTBbits 000F81                _PORTCbits 000F82  
              _PORTDbits 000F83                _PORTEbits 000F84              ___fladd@grs 0010  
            ?_config_ADC 0001            ___xxtofl@sign 0009                _TRISEbits 000F96  
             lcd_cmd@cmd 0004              ___fldiv@grs 0014              ___fldiv@rem 000D  
            ___flmul@grs 001C              _Voltage_AN0 0088            ??_config_FOSC 0001  
        ??_logic_CONTROL 0034           __end_of___flge 3666           __end_of___fleq 3CC8  
              _Buffer_D1 00C4                _Buffer_D2 00BC                _Buffer_D3 00B4  
              _Buffer_D4 00AC              vfpfcnvrt@ap 0076              vfpfcnvrt@ct 00DA  
            vfpfcnvrt@fp 0072              vfpfcnvrt@ll 00CC           __end_of___wmul 4306  
         __end_of_efgtoa 1262           __end_of_floorf 2D5C               floorf@F526 0080  
         __end_of_strcpy 3FC4           __end_of_strlen 4294      start_initialization 4294  
            __end_of_abs 4178              __end_of_pad 3B6E    __end_of___fpclassifyf 3764  
            vfprintf@fmt 00E0                 ??___flge 0030                 ??___fleq 0009  
    __end_of_config_FOSC 4368                 ??___wmul 0005                 ??_efgtoa 003B  
               ??_floorf 001E                 ??_strcpy 0005                 ??_strlen 0003  
              ___fladd@a 0005                ___fladd@b 0001                ___fldiv@a 0005  
              ___fldiv@b 0001                ___flmul@a 0013                ___flmul@b 000F  
            __pbssCOMRAM 007E                ___flsub@a 002C                ___flsub@b 0028  
          __pcstackBANK0 00CC         ___aodiv@dividend 0001              _efgtoa$1170 0044  
            _efgtoa$1162 0040              _efgtoa$1169 0042                _dtoa$1138 002E  
               ?___aodiv 0001                 ?___fladd 0001                 ?___aomod 0001  
               ?___fldiv 0001                 ?___awdiv 0001         ___aodiv@quotient 0013  
               ?___flneg 0001                 ?___awmod 0001                 ?___flmul 000F  
               ?___flsub 0028                 ?___fltol 0001                _lcd_clear 42BA  
              _config_IO 4352        lcd_send_byte@data 0005                 ?_lcd_cmd 0001  
              _lcd_write 3CC8              __smallconst 0600                 ?_isdigit 0001  
               ?_isspace 0001                 ?_set_bit 0001                 ?_isupper 0001  
             set_bit@cmd 0002                 ?_sprintf 00E4                 ?_tolower 0007  
               ?_strncmp 0001           ___wmul@product 0005              _config_FOSC 435E  
           ??_lcd_SENSOR 007E               ?_lcd_clear 0001                _vfpfcnvrt 1262  
             ?_config_IO 0001               _ADCON0bits 000FC2               ?_lcd_write 0007  
      ___wmul@multiplier 0001                lcd_init@i 0006             ??_config_ADC 0001  
           _isspace$1251 0007               vfpfcnvrt@c 00DD               vfpfcnvrt@f 00D6  
     __end_of_lcd_SENSOR 3E94                 __Hrparam 0000               vfprintf@ap 00E2  
               __Lrparam 0000               vfprintf@fp 00DE       __end_of_config_ADC 4352  
             ?_vfpfcnvrt 0072          ___aodiv@divisor 0009          ___aodiv@counter 0011  
     ___fpclassifyf@F465 0084               sprintf@fmt 00E6                 ___xxtofl 2D5C  
               _lcd_LEDS 3352                 __ptext10 0678                 __ptext11 4068  
               __ptext20 3562                 __ptext12 41B6                 __ptext21 3C1E  
               __ptext13 3F68                 __ptext30 4368                 __ptext22 21E4  
               __ptext14 2B4A                 __ptext31 4138                 __ptext23 3B6E  
               __ptext15 3666                 __ptext40 3764                 __ptext32 3098  
               __ptext24 39E8                 __ptext16 345C                 __ptext41 4306  
               __ptext33 2F10                 __ptext25 286A                 __ptext17 40AE  
               __ptext42 3E94                 __ptext34 31FC                 __ptext26 3AAC  
               __ptext18 18FA                 __ptext43 2D5C                 __ptext35 4016  
               __ptext27 425E                 __ptext19 41EE                 __ptext44 1DBA  
               __ptext36 4226                 __ptext28 40F4                 __ptext45 4352  
               __ptext37 42E0                 __ptext29 391E                 __ptext46 435E  
               __ptext38 3CC8                 __ptext47 4344                 __ptext39 4326  
               _conv_AN0 3E94                 _lcd_init 3D68               strcpy@dest 0001  
               efgtoa@fp 0034                 efgtoa@ne 004A                 efgtoa@pp 0048  
               efgtoa@ou 004E                 isa$xinst 000000    __end_of_logic_CONTROL 286A  
               _vfprintf 3F06              ??_lcd_clear 000C              ??_config_IO 0001  
            ??_lcd_write 000A         ___aomod@dividend 0001                 isdigit@c 0001  
              sprintf@ap 00EC                 isspace@c 0001                strcpy@src 0003  
               isupper@c 0001                strncmp@_l 0001                strncmp@_r 0003  
            efgtoa@nmode 005A          ___aomod@divisor 0009              ??_vfpfcnvrt 0078  
        ___aomod@counter 0011            _lcd_send_byte 4326                 sprintf@f 00EE  
               tolower@c 0007                 sprintf@s 00E4                 strncmp@l 0008  
               strncmp@n 0005                 strncmp@r 000A            ___fladd@signs 000D  
           ___aodiv@sign 0012             ___fladd@aexp 000E             ___fladd@bexp 000F  
           ?_config_FOSC 0001             ___aomod@sign 0012  
